{"id":"iLPJ","dependencies":[{"name":"C:\\Users\\Shadthepro\\Desktop\\my-demo-app\\node_modules\\@inrupt\\solid-client-authn-core\\dist\\sessionInfo\\ISessionInfo.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Shadthepro\\Desktop\\my-demo-app\\node_modules\\@inrupt\\solid-client-authn-core\\src\\sessionInfo\\ISessionInfo.ts","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Shadthepro\\Desktop\\my-demo-app\\package.json","includedInParent":true,"mtime":1632614243327},{"name":"C:\\Users\\Shadthepro\\Desktop\\my-demo-app\\node_modules\\@inrupt\\solid-client-authn-core\\package.json","includedInParent":true,"mtime":1632612132798}],"generated":{"js":"\"use strict\";function e(e){return\"string\"==typeof e&&[\"DPoP\",\"Bearer\"].includes(e)}Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.isSupportedTokenType=void 0,exports.isSupportedTokenType=e;"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/sessionInfo/ISessionInfo.ts","name":null,"original":{"line":95,"column":0},"generated":{"line":1,"column":13}},{"source":"../../src/sessionInfo/ISessionInfo.ts","name":null,"original":{"line":95,"column":16},"generated":{"line":1,"column":22}},{"source":"../../src/sessionInfo/ISessionInfo.ts","name":null,"original":{"line":96,"column":2},"generated":{"line":1,"column":24}},{"source":"../../src/sessionInfo/ISessionInfo.ts","name":null,"original":{"line":98,"column":2},"generated":{"line":1,"column":27}},{"source":"../../src/sessionInfo/ISessionInfo.ts","name":null,"original":{"line":98,"column":26},"generated":{"line":1,"column":33}},{"source":"../../src/sessionInfo/ISessionInfo.ts","name":null,"original":{"line":98,"column":16},"generated":{"line":1,"column":50}},{"source":"../../src/sessionInfo/ISessionInfo.ts","name":null,"original":{"line":98,"column":38},"generated":{"line":1,"column":53}},{"source":"../../src/sessionInfo/ISessionInfo.ts","name":null,"original":{"line":98,"column":39},"generated":{"line":1,"column":54}},{"source":"../../src/sessionInfo/ISessionInfo.ts","name":null,"original":{"line":98,"column":47},"generated":{"line":1,"column":61}},{"source":"../../src/sessionInfo/ISessionInfo.ts","name":null,"original":{"line":98,"column":57},"generated":{"line":1,"column":71}},{"source":"../../src/sessionInfo/ISessionInfo.ts","name":null,"original":{"line":98,"column":66},"generated":{"line":1,"column":80}},{"source":"../../src/sessionInfo/ISessionInfo.ts","name":null,"original":{"line":95,"column":0},"generated":{"line":1,"column":174}},{"source":"../../src/sessionInfo/ISessionInfo.ts","name":null,"original":{"line":95,"column":0},"generated":{"line":1,"column":182}},{"source":"../../src/sessionInfo/ISessionInfo.ts","name":null,"original":{"line":95,"column":0},"generated":{"line":1,"column":203}}],"sources":{"../../src/sessionInfo/ISessionInfo.ts":"/*\n * Copyright 2021 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Defines the data that should be persisted for each session. This interface\n * is exposed as part of our public API.\n */\nexport interface ISessionInfo {\n  /**\n   * 'true' if the session is currently logged into an associated identity\n   * provider.\n   */\n  isLoggedIn: boolean;\n\n  /**\n   * The WebID if the user is logged into the session, and undefined if not.\n   */\n  webId?: string;\n\n  /**\n   * The WebID of the app, or a \"Public app\" WebID if the app does not provide its own.\n   * undefined until the session is logged in and the app WebID has been verified.\n   */\n  clientAppId?: string;\n\n  /**\n   * A unique identifier for the session.\n   */\n  sessionId: string;\n\n  /**\n   * UNIX timestamp (number of milliseconds since Jan 1st 1970) representing the\n   * time until which this session is valid.\n   */\n  expirationDate?: number;\n}\n\n/**\n * Captures information about sessions that is persisted in storage, but that\n * should not be exposed as part of our public API, and is only used for\n * internal purposes. It is complementary to ISessionInfo when retrieving all\n * information about a stored session, both public and internal.\n */\nexport interface ISessionInternalInfo {\n  /**\n   * The ID token associated with the session (if any).\n   */\n  idToken?: string;\n\n  /**\n   * The refresh token associated with the session (if any).\n   */\n  refreshToken?: string;\n\n  /**\n   * The OIDC issuer that issued the tokens authenticating the session.\n   */\n  issuer?: string;\n\n  /**\n   * The redirect URL registered when initially logging the session in.\n   */\n  redirectUrl?: string;\n\n  /**\n   * For public clients, and Solid Identity Providers that do not support Client\n   * WebIDs, the client secret is still required at the token endpoint.\n   */\n  clientAppSecret?: string;\n\n  /**\n   * The token type used by the session\n   */\n  tokenType?: \"DPoP\" | \"Bearer\";\n}\n\nexport function isSupportedTokenType(\n  token: string | \"DPoP\" | \"Bearer\"\n): token is \"DPoP\" | \"Bearer\" {\n  return typeof token === \"string\" && [\"DPoP\", \"Bearer\"].includes(token);\n}\n"},"lineCount":null}},"error":null,"hash":"a9958b0a0aee4096a58bbcf21a282b23","cacheData":{"env":{}}}