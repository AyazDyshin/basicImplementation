{"id":"Erc6","dependencies":[{"name":"C:\\Users\\Shadthepro\\Desktop\\my-demo-app\\node_modules\\@inrupt\\solid-client-authn-browser\\dist\\login\\oidc\\refresh\\TokenRefresher.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Shadthepro\\Desktop\\my-demo-app\\node_modules\\@inrupt\\solid-client-authn-browser\\src\\login\\oidc\\refresh\\TokenRefresher.ts","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Shadthepro\\Desktop\\my-demo-app\\package.json","includedInParent":true,"mtime":1632614243327},{"name":"C:\\Users\\Shadthepro\\Desktop\\my-demo-app\\node_modules\\@inrupt\\solid-client-authn-browser\\package.json","includedInParent":true,"mtime":1632612132843},{"name":"@inrupt/solid-client-authn-core","loc":{"line":3,"column":42},"parent":"C:\\Users\\Shadthepro\\Desktop\\my-demo-app\\node_modules\\@inrupt\\solid-client-authn-browser\\dist\\login\\oidc\\refresh\\TokenRefresher.js","resolved":"C:\\Users\\Shadthepro\\Desktop\\my-demo-app\\node_modules\\@inrupt\\solid-client-authn-core\\dist\\index.js"},{"name":"@inrupt/oidc-client-ext","loc":{"line":4,"column":34},"parent":"C:\\Users\\Shadthepro\\Desktop\\my-demo-app\\node_modules\\@inrupt\\solid-client-authn-browser\\dist\\login\\oidc\\refresh\\TokenRefresher.js","resolved":"C:\\Users\\Shadthepro\\Desktop\\my-demo-app\\node_modules\\@inrupt\\oidc-client-ext\\dist\\index.es.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0});const e=require(\"@inrupt/solid-client-authn-core\"),t=require(\"@inrupt/oidc-client-ext\");class s{constructor(e,t,s){this.storageUtility=e,this.issuerConfigFetcher=t,this.clientRegistrar=s}async refresh(s,r,i,o){const n=await e.loadOidcContextFromStorage(s,this.storageUtility,this.issuerConfigFetcher),a=await this.clientRegistrar.getClient({sessionId:s},n.issuerConfig);if(void 0===r)throw new Error(`Session [${s}] has no refresh token to allow it to refresh its access token.`);if(n.dpop&&void 0===i)throw new Error(`For session [${s}], the key bound to the DPoP access token must be provided to refresh said access token.`);const c=await t.refresh(r,n.issuerConfig,a,i);return void 0!==c.refreshToken&&(null==o||o.emit(e.EVENTS.NEW_REFRESH_TOKEN,c.refreshToken),await this.storageUtility.setForUser(s,{refreshToken:c.refreshToken})),c}}exports.default=s;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":27,"column":0},"generated":{"line":1,"column":68}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":27,"column":0},"generated":{"line":1,"column":74}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":27,"column":0},"generated":{"line":1,"column":76}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":27,"column":0},"generated":{"line":1,"column":84}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":38,"column":0},"generated":{"line":1,"column":119}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":38,"column":0},"generated":{"line":1,"column":121}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":38,"column":0},"generated":{"line":1,"column":129}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":48,"column":0},"generated":{"line":1,"column":156}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":48,"column":21},"generated":{"line":1,"column":162}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":49,"column":2},"generated":{"line":1,"column":164}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":50,"column":12},"generated":{"line":1,"column":176}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":51,"column":12},"generated":{"line":1,"column":178}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":52,"column":12},"generated":{"line":1,"column":180}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":50,"column":12},"generated":{"line":1,"column":183}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":50,"column":12},"generated":{"line":1,"column":188}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":50,"column":12},"generated":{"line":1,"column":203}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":51,"column":12},"generated":{"line":1,"column":205}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":51,"column":12},"generated":{"line":1,"column":210}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":51,"column":12},"generated":{"line":1,"column":230}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":52,"column":12},"generated":{"line":1,"column":232}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":52,"column":12},"generated":{"line":1,"column":237}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":52,"column":12},"generated":{"line":1,"column":253}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":55,"column":2},"generated":{"line":1,"column":255}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":56,"column":4},"generated":{"line":1,"column":269}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":57,"column":4},"generated":{"line":1,"column":271}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":58,"column":4},"generated":{"line":1,"column":273}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":59,"column":4},"generated":{"line":1,"column":275}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":61,"column":4},"generated":{"line":1,"column":278}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":61,"column":10},"generated":{"line":1,"column":284}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":61,"column":30},"generated":{"line":1,"column":292}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":61,"column":30},"generated":{"line":1,"column":294}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":62,"column":6},"generated":{"line":1,"column":321}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":63,"column":6},"generated":{"line":1,"column":323}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":63,"column":11},"generated":{"line":1,"column":328}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":64,"column":6},"generated":{"line":1,"column":343}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":64,"column":11},"generated":{"line":1,"column":348}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":67,"column":10},"generated":{"line":1,"column":369}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":67,"column":38},"generated":{"line":1,"column":377}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":67,"column":43},"generated":{"line":1,"column":382}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":67,"column":59},"generated":{"line":1,"column":398}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":68,"column":6},"generated":{"line":1,"column":408}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":68,"column":8},"generated":{"line":1,"column":409}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":68,"column":8},"generated":{"line":1,"column":419}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":69,"column":6},"generated":{"line":1,"column":422}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":69,"column":18},"generated":{"line":1,"column":424}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":72,"column":4},"generated":{"line":1,"column":438}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":72,"column":25},"generated":{"line":1,"column":446}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":72,"column":8},"generated":{"line":1,"column":450}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":74,"column":6},"generated":{"line":1,"column":452}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":74,"column":12},"generated":{"line":1,"column":458}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":74,"column":16},"generated":{"line":1,"column":462}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":75,"column":20},"generated":{"line":1,"column":480}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":79,"column":4},"generated":{"line":1,"column":548}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":79,"column":8},"generated":{"line":1,"column":551}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":79,"column":20},"generated":{"line":1,"column":553}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":79,"column":40},"generated":{"line":1,"column":564}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":79,"column":28},"generated":{"line":1,"column":568}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":80,"column":6},"generated":{"line":1,"column":570}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":80,"column":12},"generated":{"line":1,"column":576}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":80,"column":16},"generated":{"line":1,"column":580}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":81,"column":24},"generated":{"line":1,"column":602}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":85,"column":4},"generated":{"line":1,"column":695}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":85,"column":10},"generated":{"line":1,"column":701}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":85,"column":27},"generated":{"line":1,"column":709}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":85,"column":27},"generated":{"line":1,"column":711}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":86,"column":6},"generated":{"line":1,"column":719}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":87,"column":6},"generated":{"line":1,"column":721}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":87,"column":18},"generated":{"line":1,"column":723}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":88,"column":6},"generated":{"line":1,"column":736}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":89,"column":6},"generated":{"line":1,"column":738}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":98,"column":4},"generated":{"line":1,"column":741}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":92,"column":34},"generated":{"line":1,"column":753}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":92,"column":8},"generated":{"line":1,"column":757}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":92,"column":17},"generated":{"line":1,"column":759}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":93,"column":6},"generated":{"line":1,"column":774}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":93,"column":6},"generated":{"line":1,"column":780}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":93,"column":6},"generated":{"line":1,"column":783}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":93,"column":20},"generated":{"line":1,"column":785}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":93,"column":25},"generated":{"line":1,"column":790}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":93,"column":25},"generated":{"line":1,"column":792}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":93,"column":32},"generated":{"line":1,"column":799}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":93,"column":51},"generated":{"line":1,"column":817}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":93,"column":60},"generated":{"line":1,"column":819}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":94,"column":12},"generated":{"line":1,"column":839}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":94,"column":17},"generated":{"line":1,"column":844}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":94,"column":32},"generated":{"line":1,"column":859}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":94,"column":43},"generated":{"line":1,"column":870}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":94,"column":54},"generated":{"line":1,"column":872}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":95,"column":8},"generated":{"line":1,"column":873}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":95,"column":22},"generated":{"line":1,"column":886}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":95,"column":31},"generated":{"line":1,"column":888}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":98,"column":11},"generated":{"line":1,"column":904}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":48,"column":0},"generated":{"line":1,"column":907}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":48,"column":0},"generated":{"line":1,"column":915}},{"source":"../../../../src/login/oidc/refresh/TokenRefresher.ts","name":null,"original":{"line":48,"column":0},"generated":{"line":1,"column":923}}],"sources":{"../../../../src/login/oidc/refresh/TokenRefresher.ts":"/*\n * Copyright 2021 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * @hidden\n * @packageDocumentation\n */\n\nimport {\n  IClient,\n  IClientRegistrar,\n  IIssuerConfigFetcher,\n  IStorageUtility,\n  loadOidcContextFromStorage,\n  KeyPair,\n  ITokenRefresher,\n  TokenEndpointResponse,\n  EVENTS,\n} from \"@inrupt/solid-client-authn-core\";\nimport { refresh } from \"@inrupt/oidc-client-ext\";\nimport { EventEmitter } from \"events\";\n\n// Some identifiers are not in camelcase on purpose, as they are named using the\n// official names from the OIDC/OAuth2 specifications.\n/* eslint-disable camelcase */\n\n/**\n * @hidden\n */\nexport default class TokenRefresher implements ITokenRefresher {\n  constructor(\n    private storageUtility: IStorageUtility,\n    private issuerConfigFetcher: IIssuerConfigFetcher,\n    private clientRegistrar: IClientRegistrar\n  ) {}\n\n  async refresh(\n    sessionId: string,\n    refreshToken?: string,\n    dpopKey?: KeyPair,\n    eventEmitter?: EventEmitter\n  ): Promise<TokenEndpointResponse> {\n    const oidcContext = await loadOidcContextFromStorage(\n      sessionId,\n      this.storageUtility,\n      this.issuerConfigFetcher\n    );\n    // This should also retrieve the client from storage\n    const clientInfo: IClient = await this.clientRegistrar.getClient(\n      { sessionId },\n      oidcContext.issuerConfig\n    );\n\n    if (refreshToken === undefined) {\n      // TODO: in a next PR, look up storage for a refresh token\n      throw new Error(\n        `Session [${sessionId}] has no refresh token to allow it to refresh its access token.`\n      );\n    }\n\n    if (oidcContext.dpop && dpopKey === undefined) {\n      throw new Error(\n        `For session [${sessionId}], the key bound to the DPoP access token must be provided to refresh said access token.`\n      );\n    }\n\n    const tokenSet = await refresh(\n      refreshToken,\n      oidcContext.issuerConfig,\n      clientInfo,\n      dpopKey\n    );\n\n    if (tokenSet.refreshToken !== undefined) {\n      eventEmitter?.emit(EVENTS.NEW_REFRESH_TOKEN, tokenSet.refreshToken);\n      await this.storageUtility.setForUser(sessionId, {\n        refreshToken: tokenSet.refreshToken,\n      });\n    }\n    return tokenSet;\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"1f38126cb046b3ef6c1e2a222ceb5811","cacheData":{"env":{}}}