{"id":"VA78","dependencies":[{"name":"C:\\Users\\Shadthepro\\Desktop\\my-demo-app\\node_modules\\@inrupt\\solid-client-authn-core\\dist\\storage\\InMemoryStorage.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Shadthepro\\Desktop\\my-demo-app\\node_modules\\@inrupt\\solid-client-authn-core\\src\\storage\\InMemoryStorage.ts","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Shadthepro\\Desktop\\my-demo-app\\package.json","includedInParent":true,"mtime":1632614243327},{"name":"C:\\Users\\Shadthepro\\Desktop\\my-demo-app\\node_modules\\@inrupt\\solid-client-authn-core\\package.json","includedInParent":true,"mtime":1632612132798}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0});class e{constructor(){this.map={}}async get(e){return this.map[e]||void 0}async set(e,t){this.map[e]=t}async delete(e){delete this.map[e]}}exports.default=e;"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/storage/InMemoryStorage.ts","name":null,"original":{"line":32,"column":0},"generated":{"line":1,"column":68}},{"source":"../../src/storage/InMemoryStorage.ts","name":null,"original":{"line":32,"column":21},"generated":{"line":1,"column":74}},{"source":"../../src/storage/InMemoryStorage.ts","name":null,"original":{"line":32,"column":0},"generated":{"line":1,"column":76}},{"source":"../../src/storage/InMemoryStorage.ts","name":null,"original":{"line":33,"column":10},"generated":{"line":1,"column":90}},{"source":"../../src/storage/InMemoryStorage.ts","name":null,"original":{"line":33,"column":10},"generated":{"line":1,"column":95}},{"source":"../../src/storage/InMemoryStorage.ts","name":null,"original":{"line":33,"column":40},"generated":{"line":1,"column":99}},{"source":"../../src/storage/InMemoryStorage.ts","name":null,"original":{"line":35,"column":2},"generated":{"line":1,"column":102}},{"source":"../../src/storage/InMemoryStorage.ts","name":null,"original":{"line":35,"column":12},"generated":{"line":1,"column":112}},{"source":"../../src/storage/InMemoryStorage.ts","name":null,"original":{"line":36,"column":4},"generated":{"line":1,"column":115}},{"source":"../../src/storage/InMemoryStorage.ts","name":null,"original":{"line":36,"column":11},"generated":{"line":1,"column":122}},{"source":"../../src/storage/InMemoryStorage.ts","name":null,"original":{"line":36,"column":16},"generated":{"line":1,"column":127}},{"source":"../../src/storage/InMemoryStorage.ts","name":null,"original":{"line":36,"column":20},"generated":{"line":1,"column":131}},{"source":"../../src/storage/InMemoryStorage.ts","name":null,"original":{"line":36,"column":28},"generated":{"line":1,"column":140}},{"source":"../../src/storage/InMemoryStorage.ts","name":null,"original":{"line":39,"column":2},"generated":{"line":1,"column":142}},{"source":"../../src/storage/InMemoryStorage.ts","name":null,"original":{"line":39,"column":12},"generated":{"line":1,"column":152}},{"source":"../../src/storage/InMemoryStorage.ts","name":null,"original":{"line":39,"column":25},"generated":{"line":1,"column":154}},{"source":"../../src/storage/InMemoryStorage.ts","name":null,"original":{"line":40,"column":4},"generated":{"line":1,"column":157}},{"source":"../../src/storage/InMemoryStorage.ts","name":null,"original":{"line":40,"column":9},"generated":{"line":1,"column":162}},{"source":"../../src/storage/InMemoryStorage.ts","name":null,"original":{"line":40,"column":13},"generated":{"line":1,"column":166}},{"source":"../../src/storage/InMemoryStorage.ts","name":null,"original":{"line":40,"column":20},"generated":{"line":1,"column":169}},{"source":"../../src/storage/InMemoryStorage.ts","name":null,"original":{"line":43,"column":2},"generated":{"line":1,"column":171}},{"source":"../../src/storage/InMemoryStorage.ts","name":null,"original":{"line":43,"column":15},"generated":{"line":1,"column":184}},{"source":"../../src/storage/InMemoryStorage.ts","name":null,"original":{"line":44,"column":11},"generated":{"line":1,"column":194}},{"source":"../../src/storage/InMemoryStorage.ts","name":null,"original":{"line":44,"column":16},"generated":{"line":1,"column":199}},{"source":"../../src/storage/InMemoryStorage.ts","name":null,"original":{"line":44,"column":20},"generated":{"line":1,"column":203}},{"source":"../../src/storage/InMemoryStorage.ts","name":null,"original":{"line":32,"column":0},"generated":{"line":1,"column":207}},{"source":"../../src/storage/InMemoryStorage.ts","name":null,"original":{"line":32,"column":0},"generated":{"line":1,"column":215}},{"source":"../../src/storage/InMemoryStorage.ts","name":null,"original":{"line":32,"column":0},"generated":{"line":1,"column":223}}],"sources":{"../../src/storage/InMemoryStorage.ts":"/*\n * Copyright 2021 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * @hidden\n * @packageDocumentation\n */\n\nimport IStorage from \"./IStorage\";\n\n/**\n * @hidden\n */\nexport default class InMemoryStorage implements IStorage {\n  private map: Record<string, string> = {};\n\n  async get(key: string): Promise<string | undefined> {\n    return this.map[key] || undefined;\n  }\n\n  async set(key: string, value: string): Promise<void> {\n    this.map[key] = value;\n  }\n\n  async delete(key: string): Promise<void> {\n    delete this.map[key];\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"8e49c0c4e9a046f4c89afdc88cb85af3","cacheData":{"env":{}}}