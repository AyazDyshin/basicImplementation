{"version":3,"sources":["node_modules/base64-js/index.js","node_modules/ieee754/index.js","node_modules/isarray/index.js","node_modules/buffer/index.js","node_modules/http-link-header/lib/link.js","node_modules/@rdfjs/data-model/lib/BlankNode.js","node_modules/@rdfjs/data-model/lib/DefaultGraph.js","node_modules/@rdfjs/data-model/lib/fromTerm.js","node_modules/@rdfjs/data-model/lib/NamedNode.js","node_modules/@rdfjs/data-model/lib/Literal.js","node_modules/@rdfjs/data-model/lib/Quad.js","node_modules/@rdfjs/data-model/lib/Variable.js","node_modules/@rdfjs/data-model/lib/DataFactory.js","node_modules/@rdfjs/data-model/index.js","node_modules/@rdfjs/dataset/DatasetCore.js","node_modules/@rdfjs/dataset/index.js","node_modules/rdf-canonize/lib/IdentifierIssuer.js","node_modules/process/browser.js","node_modules/setimmediate/setImmediate.js","node_modules/rdf-canonize/lib/MessageDigest-browser.js","node_modules/rdf-canonize/lib/Permuter.js","node_modules/rdf-canonize/lib/NQuads.js","node_modules/rdf-canonize/lib/URDNA2015.js","node_modules/rdf-canonize/lib/URGNA2012.js","node_modules/rdf-canonize/lib/URDNA2015Sync.js","node_modules/rdf-canonize/lib/URGNA2012Sync.js","node_modules/rdf-canonize/lib/index.js","node_modules/rdf-canonize/index.js","node_modules/jsonld/lib/types.js","node_modules/jsonld/lib/graphTypes.js","node_modules/jsonld/lib/JsonLdError.js","node_modules/jsonld/lib/util.js","node_modules/jsonld/lib/constants.js","node_modules/jsonld/lib/RequestQueue.js","node_modules/jsonld/lib/url.js","node_modules/jsonld/lib/documentLoaders/xhr.js","node_modules/jsonld/lib/platform-browser.js","node_modules/yallist/iterator.js","node_modules/yallist/yallist.js","node_modules/lru-cache/index.js","node_modules/jsonld/lib/ResolvedContext.js","node_modules/jsonld/lib/ContextResolver.js","node_modules/jsonld/lib/NQuads.js","node_modules/jsonld/lib/context.js","node_modules/jsonld/lib/expand.js","node_modules/jsonld/lib/nodeMap.js","node_modules/jsonld/lib/flatten.js","node_modules/jsonld/lib/fromRdf.js","node_modules/canonicalize/lib/canonicalize.js","node_modules/jsonld/lib/toRdf.js","node_modules/jsonld/lib/frame.js","node_modules/jsonld/lib/compact.js","node_modules/jsonld/lib/JsonLdProcessor.js","node_modules/jsonld/lib/jsonld.js","node_modules/cross-fetch/dist/browser-ponyfill.js","node_modules/parcel-bundler/src/builtins/bundle-url.js","node_modules/parcel-bundler/src/builtins/bundle-loader.js","node_modules/@inrupt/solid-client/dist/index.es.js","node_modules/events/events.js","../src/constant.ts","../../src/errors/InruptError.ts","../../../src/util/handlerPattern/AggregateHandler.ts","node_modules/@inrupt/jose-legacy-modules/dist/index.browser.js","../../../../src/login/oidc/redirectHandler/IRedirectHandler.ts","../../src/sessionInfo/ISessionInfo.ts","../../src/sessionInfo/ISessionInfoManager.ts","../../../src/login/oidc/IClientRegistrar.ts","../../src/storage/StorageUtility.ts","../../src/storage/InMemoryStorage.ts","../../src/errors/ConfigurationError.ts","../../src/errors/NotImplementedError.ts","../../src/errors/InvalidResponseError.ts","../../src/errors/OidcProviderError.ts","node_modules/uuid/dist/esm-browser/rng.js","node_modules/uuid/dist/esm-browser/regex.js","node_modules/uuid/dist/esm-browser/validate.js","node_modules/uuid/dist/esm-browser/stringify.js","node_modules/uuid/dist/esm-browser/v1.js","node_modules/uuid/dist/esm-browser/parse.js","node_modules/uuid/dist/esm-browser/v35.js","node_modules/uuid/dist/esm-browser/md5.js","node_modules/uuid/dist/esm-browser/v3.js","node_modules/uuid/dist/esm-browser/v4.js","node_modules/uuid/dist/esm-browser/sha1.js","node_modules/uuid/dist/esm-browser/v5.js","node_modules/uuid/dist/esm-browser/nil.js","node_modules/uuid/dist/esm-browser/version.js","node_modules/uuid/dist/esm-browser/index.js","../../src/authenticatedFetch/dpopUtils.ts","../../src/authenticatedFetch/fetchFactory.ts","../../../src/storage/__mocks__/StorageUtility.ts","../src/index.ts","node_modules/oidc-client/lib/oidc-client.min.js","node_modules/form-urlencoded/form-urlencoded.js","node_modules/@inrupt/oidc-client-ext/dist/index.es.js","../src/ClientAuthentication.ts","../../../src/login/oidc/OidcLoginHandler.ts","../../../../src/login/oidc/oidcHandlers/AuthorizationCodeWithPkceOidcHandler.ts","../../src/util/urlPath.ts","../../../src/login/oidc/IssuerConfigFetcher.ts","../../src/sessionInfo/SessionInfoManager.ts","../../../../src/login/oidc/redirectHandler/FallbackRedirectHandler.ts","../../src/logout/GeneralLogoutHandler.ts","../../../../src/login/oidc/redirectHandler/AuthCodeRedirectHandler.ts","../../../../src/login/oidc/redirectHandler/AggregateRedirectHandler.ts","../../src/storage/BrowserStorage.ts","../src/iframe.ts","../../../src/login/oidc/Redirector.ts","../../../src/login/oidc/ClientRegistrar.ts","../../../../src/login/oidc/redirectHandler/ErrorOidcHandler.ts","../../../../src/login/oidc/refresh/TokenRefresher.ts","../src/dependencies.ts","../src/Session.ts","../src/defaultSession.ts","index.js","node_modules/parcel-bundler/src/builtins/loaders/browser/js-loader.js"],"names":["COMPATIBLE_ENCODING_PATTERN","WS_TRIM_PATTERN","WS_CHAR_PATTERN","WS_FOLD_PATTERN","DELIMITER_PATTERN","WS_DELIMITER_PATTERN","TOKEN_PATTERN","STATE","IDLE","URI","ATTR","trim","value","replace","hasWhitespace","test","skipWhitespace","offset","needsQuotes","Link","constructor","refs","parse","rel","links","type","toLowerCase","i","length","push","get","attr","set","link","has","slice","state","ref","Error","end","expandRelations","indexOf","uri","attrValue","isSingleOccurenceAttr","parseExtendedValue","Array","isArray","toString","Object","keys","reduce","formatAttribute","join","isCompatibleEncoding","isTokenAttr","escapeQuotes","rels","split","map","assign","parts","exec","language","encoding","decodeURIComponent","formatExtendedAttribute","data","toUpperCase","Buffer","isBuffer","encodeURIComponent","item","module","exports","IdentifierIssuer","prefix","existing","Map","counter","_existing","clone","getId","old","identifier","hasId","getOldIds","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","e","call","runClearTimeout","marker","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","concat","drainQueue","timeout","len","run","Item","array","noop","nextTick","args","arguments","prototype","apply","title","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","require","crypto","self","msCrypto","algorithm","subtle","_content","update","msg","digest","TextEncoder","encode","buffer","Uint8Array","hex","padStart","list","current","sort","done","hasNext","next","rval","k","pos","element","left","swap","TERMS","RDF","RDF_LANGSTRING","XSD_STRING","TYPE_NAMED_NODE","TYPE_BLANK_NODE","TYPE_LITERAL","TYPE_DEFAULT_GRAPH","REGEX","_compareTriples","t1","t2","subject","termType","object","predicate","datatype","eoln","empty","RegExp","quad","NQuads","input","dataset","graphs","lines","lineNumber","line","match","graph","undefined","_unescape","unique","quads","q","serialize","legacyDatasetToQuads","serializeQuad","s","p","o","g","nquad","_escape","termTypeMap","IRI","literal","graphName","forEach","triple","componentName","oldComponent","newComponent","startsWith","_escapeRegex","_unescapeRegex","code","u","U","String","fromCharCode","parseInt","MessageDigest","Permuter","_stringHashCompare","a","b","hash","blankNodeInfo","canonicalIssuer","hashAlgorithm","main","_addBlankNodeQuadInfo","component","hashToBlankNodes","nonNormalized","id","_yield","_hashAndTrackBlankNode","hashes","nonUnique","idList","hashPathList","issuer","result","hashNDegreeQuads","oldIds","normalized","_useCanonicalId","hashFirstDegreeQuads","nquads","info","copy","modifyFirstDegreeComponent","md","hashRelatedBlankNode","related","position","getRelatedPredicate","hashToRelated","createHashToRelated","chosenPath","chosenIssuer","permuter","permutation","issuerCopy","path","recursionList","nextPermutation","Promise","all","_addRelatedBlankNodeHash","add","Set","entries","resolve","setImmediate","URDNA2015","key","URDNA2015Sync","URGNA2012","URGNA2012Sync","rdfCanonizeNative","api","_rdfCanonizeNative","canonize","options","useNative","reject","err","canonical","_canonizeSync","canonizeSync","isBoolean","v","isDouble","isNumber","Math","abs","isEmptyObject","isObject","isNumeric","isNaN","parseFloat","isFinite","isString","isUndefined","types","isSubject","keyCount","isSubjectReference","isValue","isList","isGraph","filter","isSimpleGraph","isBlankNode","message","details","graphTypes","JsonLdError","REGEX_LINK_HEADERS","REGEX_LINK_HEADER","REGEX_LINK_HEADER_PARAMS","DEFAULTS","headers","accept","_labelBlankNodes","ki","asArray","buildHeaders","hasAccept","some","h","RangeError","Accept","parseLinkHeader","header","target","params","hasOwnProperty","validateTypeValue","isFrame","every","vv","hasProperty","property","hasValue","val","compareValues","addValue","propertyIsArray","valueIsArray","allowDuplicate","prependValue","unshift","getValues","removeProperty","removeValue","values","relabelBlankNodes","v1","v2","compareShortestLeast","XSD","LINK_HEADER_REL","LINK_HEADER_CONTEXT","RDF_LIST","RDF_FIRST","RDF_REST","RDF_NIL","RDF_TYPE","RDF_PLAIN_LITERAL","RDF_XML_LITERAL","RDF_JSON_LITERAL","RDF_OBJECT","XSD_BOOLEAN","XSD_DOUBLE","XSD_INTEGER","_requests","wrapLoader","loader","_loader","url","promise","parsers","simple","regex","full","str","parser","parsed","m","scheme","port","href","authority","normalizedPath","removeDotSegments","prependBase","base","iri","isAbsolute","transform","protocol","query","substr","lastIndexOf","fragment","removeBase","root","baseSegments","iriSegments","last","shift","pop","output","isAbsoluteRegex","isRelative","RequestQueue","_get","xhr","req","XMLHttpRequest","onload","onerror","open","setRequestHeader","send","secure","cause","status","statusText","httpStatusCode","doc","contextUrl","documentUrl","document","response","alternate","contentType","getResponseHeader","linkHeader","getAllResponseHeaders","linkHeaders","linkedContext","xhrLoader","setupDocumentLoaders","jsonld","documentLoaders","useDocumentLoader","setupGlobals","globalThis","JsonLdProcessor","defineProperty","writable","enumerable","configurable","Yallist","MAX","Symbol","LENGTH","LENGTH_CALCULATOR","ALLOW_STALE","MAX_AGE","DISPOSE","NO_DISPOSE_ON_SET","LRU_LIST","CACHE","UPDATE_AGE_ON_GET","naiveLength","LRUCache","max","TypeError","Infinity","lc","stale","maxAge","dispose","noDisposeOnSet","updateAgeOnGet","reset","mL","allowStale","mA","lengthCalculator","lC","hit","itemCount","rforEach","fn","thisp","walker","tail","prev","forEachStep","head","toArray","dump","isStale","now","dumpLru","Date","del","node","Entry","peek","load","arr","l","expiresAt","prune","doUse","unshiftNode","diff","delete","removeNode","LRU","MAX_ACTIVE_CONTEXTS","cache","getProcessed","activeCtx","setProcessed","processedCtx","_isArray","_isObject","_isString","_asArray","ResolvedContext","MAX_CONTEXT_URLS","_throwInvalidLocalContext","ctx","context","_resolveContextUrls","term","sharedCache","perOpCache","documentLoader","cycles","allResolved","resolved","_resolveRemoteContext","JSON","stringify","_cacheResolvedContext","tag","tagMap","remoteDoc","_fetchContext","size","processingMode","util","_isUndefined","_isAbsoluteIri","_isRelativeIri","_compareShortestLeast","INITIAL_CONTEXT_CACHE","INITIAL_CONTEXT_CACHE_MAX_SIZE","KEYWORD_PATTERN","_expandIri","relativeTo","localCtx","defined","isKeyword","createTermDefinition","vocab","mapping","mappings","colon","suffix","_prefix","_deepCompare","x1","x2","x1Array","k1s","k2s","k1","propagate","overrideProtected","ctxs","contextResolver","previousContext","resolvedContext","protected","protectedMode","console","warn","processed","oldActiveCtx","getInitialContext","_protected","resolvedImport","processedImport","importCtx","keyCtx","validKeys","includes","previousMapping","simpleTerm","reverse","kw","_termHasColon","termIri","container","validContainers","isValid","hasSet","c","direction","nest","expandIri","cached","initialContext","inverse","getInverse","_createInverseContext","fastCurieMap","irisToTerms","defaultLanguage","defaultDirection","terms","ids","entry","fastCurieEntry","_addPreferredTerm","_buildIriMap","_cloneActiveContext","child","revertToPreviousContext","_revertToPreviousContext","clear","iriMap","idx","letter","typeOrLanguageValue","getContextValue","_isEmptyObject","_isList","_isValue","_isGraph","_isSubject","_getContextValue","_isKeyword","_processContext","_processingMode","_addValue","_getValues","_validateTypeValue","REGEX_BCP47","_expandObject","activeProperty","expandedActiveProperty","expandedParent","insideList","typeKey","typeScopedContext","expansionMap","nests","unexpandedValue","isJsonType","expandedValue","expandedProperty","unmappedProperty","parent","keyword","fromEntries","includedResult","expand","lang","reverseMap","items","ii","termCtx","_expandLanguageMap","asGraph","indexKey","propertyIndex","_expandIndexMap","nextActiveProperty","unmappedValue","nestedValues","nv","_expandValue","languageMap","expandedKey","isTypeIndex","insideIndex","mapped","index","propertyScopedCtx","mustRevert","count","validCount","t","keepFreeFloatingNodes","createMergedNodeMap","createNodeMap","mergeNodeMaps","_list","subjects","properties","referencedNode","reverseProperty","itemName","objects","mergeNodeMapGraphs","merged","mergedNode","defaultGraph","graphNames","nodeMap","_isSubjectReference","_createMergedNodeMap","flatten","flattened","_RDFToObject","useNativeTypes","rdfDirection","endsWith","toFixed","fromRDF","useRdfType","graphMap","referencedOnce","objectIsNode","usages","graphObject","nil","usage","listNodes","nodeKeyCount","listNode","graphSubjects","graphSubject","jsonCanonicalize","_graphToRDF","graphTerm","produceGeneralizedRdf","_objectToRDF","_listToRDF","first","rest","toExponential","toRDF","_createNodeMap","_mergeNodeMapGraphs","_createImplicitFrame","flags","frame","_createsCircularReference","subjectToEmbed","subjectStack","_getFrameFlag","flag","_validateFrame","_filterSubjects","_filterSubject","wildcard","matchesSome","matchThis","nodeValues","isEmpty","requireAll","tt","thisFrame","hasDefault","listValue","nodeListValues","lv","_valueMatch","_nodeMatch","_removeEmbed","embeds","uniqueEmbeds","embed","useArray","removeDependents","_cleanupPreserve","prop","bnodesToClear","_addFrameOutput","pattern","nodeObject","l1","l2","frameMergedOrDefault","embedded","bnodeMap","framed","pruneBlankNodeIdentifiers","explicit","matches","is11","recurse","subframe","src","oo","preserve","reverseProp","cleanupNull","noNulls","_isSimpleGraph","_removeBase","_prependBase","_selectTerm","containers","typeOrLanguage","prefs","compactIri","langDir","find","el","containerMap","typeOrLanguageValueMap","pref","_checkNestProperty","nestProperty","compact","compactionMap","compacted","compactArrays","linked","expanded","compactValue","insideReverse","inputCtx","from","typeContext","compactedType","alias","itemActiveProperty","nestResult","expandedItem","inner","compactedItem","mapObject","containerKey","others","idKey","compactedValue","compactedProperty","expandedIri","isPropertyTermScoped","inverseCtx","commonLanguage","commonType","itemLanguage","itemType","choice","partialMatches","maxPartialLength","curie","td","preserveIndex","isValueOnlyKey","hasDefaultLanguage","isValueString","hasNullMapping","platform","ContextResolver","_expand","_flatten","_fromRDF","_toRDF","_frameMergedOrDefault","_cleanupNull","_getInitialContext","_compact","_compactIri","_mergeNodeMaps","wrapper","_rdfParsers","_resolvedContextCache","_setDefaults","defaults","compactToRelative","skipExpansion","processContext","tmp","hasContext","graphAlias","toResolve","contextsToProcess","expandContext","defaultBase","remoteContext","omitDefault","frameContext","omitGraph","opts","expandedFrame","frameKeys","framing","normalize","inputFormat","parsedInput","format","rdfParser","parsedDataset","merge","docs","mergeNodes","_graphs","_nodeMap","_documentLoader","registerRDFParser","unregisterRDFParser","promises","factory","bundleURL","getBundleURLCached","getBundleURL","stack","getBaseURL","loadBundlesLazy","bundles","LazyPromise","loadBundles","then","loadBundle","bundleLoaders","registerBundleLoader","register","bundle","substring","bundleLoader","catch","executor","onSuccess","onError","hasResourceInfo","resource","internal_resourceInfo","hasServerResourceInfo","potentialResourceInfo","linkedResources","hasChangelog","potentialChangeLog","internal_changeLog","additions","deletions","SolidClientError","internal_toIriString","fetch","init","window","default","internal_parseResourceInfo","_a","_b","_c","contentTypeParts","isSolidDataset","resourceInfo","sourceIri","isRawData","parsedLinks","LinkHeader","aclLinks","aclUrl","URL","wacAllowHeader","permissions","parseWacAllowHeader","parsePermissionStatement","permissionStatement","writePermission","read","append","write","control","getStatementFor","scope","relevantEntries","rawEntry","relevantStatement","charAt","user","public","internal_cloneResource","clonedResource","internal_isUnsuccessfulResponse","ok","acl","Authorization","AuthenticatedAgent","accessTo","agent","agentGroup","agentClass","defaultForNew","mode","origin","rdf","ldp","BasicContainer","Container","Resource","contains","foaf","Agent","acp","AccessControlResource","Policy","AccessControl","Read","Append","Write","Rule","Matcher","accessControl","applyMembers","allow","deny","allOf","anyOf","noneOf","access","accessMembers","group","client","PublicAgent","CreatorAgent","solid","PublicOidcClient","security","publicKey","pim","storage","internal_defaultFetchOptions","getResourceInfo","config","responseToResourceInfo","method","FetchError","isContainer","containerUrl","getSourceUrl","getContentType$1","getSourceIri","getPodOwner","podOwners","getLinkedResourceUrlAll","isPodOwner","webId","podOwner","getEffectiveAccess","_d","_e","_f","_g","linkedResourceUrls","errorResponse","statusCode","defaultGetFileOptions","RESERVED_HEADERS","containsReserved","reserved","getFile","blob","fileWithResourceInfo","deleteFile","file","saveFileInContainer","folderUrl","folderUrlString","writeFile","locationHeader","fileIri","blobClone","getContentType","overwriteFile","fileUrl","fileUrlString","isHeadersArray","hasHeadersObjectForEach","flattenHeaders","headersToFlatten","flatHeaders","targetUrl","slug","targetUrlString","body","contentTypeOverride","fileType","rdfJsDatasetModule","localNodeSkolemPrefix","freeze","isLocalNodeIri","getLocalNodeName","localNodeIri","getLocalNodeIri","localNodeName","isBlankNodeId","getBlankNodeValue","blankNodeId","getBlankNodeId","blankNode","xmlSchemaTypes","boolean","dateTime","date","time","decimal","integer","string","langString","serializeBoolean","deserializeBoolean","serializeTime","millisecondString","timezoneString","millisecond","timezoneHourOffset","timezoneFormatted","timezoneMinuteOffset","hour","minute","second","deserializeTime","literalString","timeString","splitTimeFromTimezone","hourString","minuteString","timeRest","utcHours","Number","utcMinutes","secondString","optionalMillisecondString","utcSeconds","utcMilliseconds","deserializedTime","hourOffset","minuteOffset","getTimezoneOffsets","serializeDatetime","toISOString","deserializeDatetime","signedDateString","yearMultiplier","dateString","yearString","monthString","dayString","utcFullYear","utcMonth","utcDate","UTC","setUTCFullYear","getUTCFullYear","serializeDate","year","getFullYear","month","getMonth","day","getDate","_","timezone","deserializeDate","dayAndTimezoneString","splitOnPlus","splitOnMinus","multiplier","serializeDecimal","deserializeDecimal","deserialized","serializeInteger","deserializeInteger","normalizeLocale","locale","isNamedNode","isTerm","isLiteral","equals","isLocalNode","internal_isValidUrl","iriString","resolveIriForLocalNode","localNode","resourceIri","DataFactory","namedNode","resolveLocalIri","thingIri","RdfJsDataFactory","addRdfJsQuadToDataset","quadParseOptions","graphId","addRdfJsQuadToGraph","subjectIri","predicates","addRdfJsQuadToSubject","addRdfJsQuadToPredicates","predicateIri","addRdfJsQuadToObjects","_h","namedNodes","thisLocaleStrings","langStrings","thisTypeValues","literals","blankNodePredicates","getPredicatesForBlankNode","blankNodes","chainBlankNodes","chainBlankNode","quadsWithNodeAsSubject","otherQuads","predicatesAcc","blankNodeObjectQuads","getChainBlankNodes","blankNodeSubjects","blankNodeObjects","cycleBlankNodes","blankNodeObject","getCycleBlankNodes","cycleBlankNode","subjectsWithThisNodeAsObject","everyNodeTheSame","nodes","otherNode","anotherNode","toRdfJsQuads","dataFactory","graphIri","graphNode","subjectNode","subjectToRdfJsQuads","predicateNode","typeIri","typeNode","literalNode","langStringNode","namedNodeIri","blankNodeIdOrPredicates","blankNodeObjectQuad","blankNodeSubjectQuads","currentNode","traversedBlankNodes","traversedBlankNode","nextTraversedNodes","cycleBlankNodeArrays","nextNode","allCycleBlankNodes","getJsonLdParser","onQuadCallbacks","onCompleteCallbacks","onErrorCallbacks","onQuad","callback","onComplete","source","fixQuads","error","plainQuads","fixedQuads","plainQuad","getTurtleParser","getParser","_prefixes","baseIri","loadN3","Parser","baseIRI","triplesToTurtle","n3","writer","Writer","triples","addQuads","writePromise","rawTurtle","n3Module","internal_getReadableValue","valueOf","toUTCString","internal_throwIfNotThing","thing","isThing","ThingExpectedError","internal_addAdditionsToChangeLog","solidDataset","changeLog","newAdditions","newDeletions","addition","containsBlankNode","additionsAcc","deletionsAcc","deletion","internal_addDeletionsToChangeLog","internal_withChangeLog","newSolidDataset","getPropertyAll","getTerm","getUrl","ValidPropertyUrlExpectedError","predicateUrl","firstUrl","getIri","getUrlAll","getIriAll","getBoolean","getLiteralOfType","getBooleanAll","literalStrings","getLiteralAllOfType","possibleBoolean","getDatetime","getDatetimeAll","potentialDatetime","getDateAll","potentialDate","getTime","getTimeAll","potentialTime","getDecimal","getDecimalAll","potentialDecimal","getInteger","getIntegerAll","potentialInteger","getStringWithLocale","matchingLocale","existingLocale","getStringWithLocaleAll","getStringByLocaleAll","stringsByLocale","getStringNoLocale","getStringNoLocaleAll","getNamedNode","getNamedNodeAll","iriStrings","getLiteral","locales","nonEmptyLocale","otherLiterals","dataTypes","nonEmptyDataType","dataType","getLiteralAll","stringsInLocale","localeLiterals","dataTypeLiterals","blankNodeValue","getTermAll","rawBlankNode","blankNodeName","literalType","getThing","thingUrl","ValidThingUrlExpectedError","thingsByIri","getThingAll","setThing","isThingLocal","updatedDefaultGraph","updatedGraphs","deletedThingPredicates","removeThing","asIri","createThing","generateName","asUrl","baseUrl","thingAsMarkdown","predicateIris","receivedValue","receivedProperty","ValidValueUrlExpectedError","random","normalizeServerSideIri","iriObj","createSolidDataset","responseToSolidDataset","parseOptions","mimeType","text","parsingPromise","quadsWithBlankNodes","allQuads","maxBlankNodesToDetectChainsFor","quadsWithoutChainBlankNodeSubjects","datasetAcc","solidDatasetWithResourceInfo","getSolidDataset","parserContentTypes","acceptedContentTypes","prepareSolidDatasetUpdate","getNamedNodesForLocalNodes","prepareSolidDatasetCreation","saveSolidDatasetAt","datasetWithChangelog","requestInit","isUpdate","diagnostics","changeLogAsMarkdown","solidDatasetAsMarkdown","storedDatasetWithResolvedIris","resolveLocalIrisInSolidDataset","deleteSolidDataset","createContainerAt","internal_NSS_CREATE_CONTAINER_SPEC_NONCOMPLIANCE_DETECTION_ERROR_MESSAGE_TO_WORKAROUND_THEIR_ISSUE_1465","createContainerWithNssWorkaroundAt","containerDataset","existingContainer","dummyUrl","createResponse","containerInfoResponse","isSourceIriEqualTo","saveSolidDatasetInContainer","slugSuggestion","resourceWithResolvedIris","createContainerInContainer","resourceWithResourceInfo","deleteContainer","getContainedResourceUrlAll","readableSolidDataset","things","getReadableChangeLogSummary","readableChangeLog","changeLogsByThingAndProperty","sortChangeLogByThingAndProperty","changeLogByProperty","propertyUrl","deleted","added","deletedValue","addedValue","nrOfAdditions","nrOfDeletions","getNamedNodeFromLocalNode","graphAcc","resolvedThing","resolveLocalIrisInThing","resolvedThingIri","updatedGraph","updatedPredicates","updatedNamedNodes","updatedPredicate","getWellKnownSolid","urlString","rootResources","rootResource","Response","crossFetch","mockSolidDatasetFrom","mockContainerFrom","mockFileFrom","Blob","mockFetchError","fetchedUrl","failedResponse","addUrl","existingPredicate","existingNamedNodes","iriToAdd","updatedThing","addIri","addBoolean","addLiteralOfType","addDatetime","addDate","addTime","addDecimal","addInteger","addStringWithLocale","normalizedLocale","existingLangStrings","existingStringsInLocale","updatedStringsInLocale","updatedLangStrings","addStringNoLocale","addNamedNode","addLiteral","addTerm","existingBlankNodes","updatedBlankNodes","existingLiterals","existingValuesOfType","updatedValuesOfType","updatedLiterals","removeAll","newPredicates","removeUrl","iriToRemove","removeIri","removeBoolean","removeLiteralMatching","foundBoolean","removeDatetime","foundDatetime","removeDate","foundDate","deserializedDate","removeTime","foundTime","removeDecimal","foundDecimal","removeInteger","foundInteger","removeStringWithLocale","existingString","removeStringNoLocale","foundString","removeNamedNode","removeLiteral","existingPredicateValues","updatedValues","existingValue","matcher","setUrl","setIri","setBoolean","setDatetime","setDate","setTime","setDecimal","setInteger","setStringWithLocale","setStringNoLocale","setNamedNode","setLiteral","setTerm","buildThing","getAdder","adder","builder","getSetter","setter","getRemover","remover","build","mockThingFrom","isAcr","linkedAccessResource","relTypeLinks","internal_fetchAcl","hasAccessibleAcl","resourceAcl","fallbackAcl","internal_fetchResourceAcl","internal_fetchFallbackAcl","AclIsAcrError","aclSolidDataset","internal_accessTo","resourceUrl","resourcePath","pathname","containerPath","internal_getContainerPath","containerIri","containerInfo","containerAcl","resourcePathWithoutTrailingSlash","internal_getAclRules","aclDataset","isAclRule","internal_getResourceAclRulesForResource","aclRules","rule","appliesToResource","aclRule","internal_getDefaultAclRulesForResource","isDefaultForResource","internal_getAccess","ruleAccessModes","writeAccess","internal_accessModeIriStrings","internal_combineAccessModes","modes","accumulator","internal_removeEmptyAclRules","updatedAclDataset","isEmptyAclRule","isAclQuad","internal_getAclRulesForIri","targetIri","targetType","internal_getAccessByIri","targetIriAccess","ruleTargetIri","internal_initialiseAclRule","newRule","internal_duplicateAclRule","sourceRule","targetRule","copyIris","inputRule","outputRule","iriTarget","internal_setAcl","internal_acl","supportedActorPredicates","internal_removeActorFromRule","actor","actorPredicate","ruleType","ruleWithoutActor","ruleForOtherTargets","internal_setActorAccess$2","accessType","filteredAcl","filteredRule","remainingRule","internal_setResourceAcl","internal_getResourceAcl","sourceResource","aclResource","hasAcl","hasResourceAcl","getSolidDatasetWithAcl","getFileWithAcl","getResourceInfoWithAcl","getResourceAcl","hasFallbackAcl","getFallbackAcl","createAcl","targetResource","emptyResourceAcl","createAclFromFallbackAcl","initialisedResourceAcl","saveAclFor","savedDataset","savedAclDataset","deleteAclFor","storedResource","getAgentAccess$3","getAgentResourceAccess","getAgentDefaultAccess","getAgentAccessAll$3","getAgentResourceAccessAll","getAgentDefaultAccessAll","getAgentAclRulesForAgent","getAccessByAgent","getAgentAclRules","setAgentResourceAccess$1","setAgentDefaultAccess","isAgentAclRule","getGroupAccess$2","getGroupResourceAccess","getGroupDefaultAccess","getGroupAccessAll$2","getGroupResourceAccessAll","getGroupDefaultAccessAll","getGroupAclRuleForGroup","getAccessByGroup","rules","setGroupResourceAccess$1","setGroupDefaultAccess","getPublicAccess$3","getPublicResourceAccess","getPublicDefaultAccess","getClassAclRulesForClass","setPublicResourceAccess$1","setPublicDefaultAccess","appliesToClass","setMockAclUrl","resourceWithAclUrl","addMockResourceAclTo","resourceWithResourceAcl","addMockFallbackAclTo","resourceWithFallbackAcl","rdfJsDataset","fromRdfJsDataset","toRdfJsDataset","datasetFactory","getProfileFromProfileDoc","profileDataset","profile","setProfileJwks","profileDocument","jwksIri","getProfileJwksIri","isJwks","jwksDocument","addJwkToJwks","jwk","jwksResponse","json","addPublicKeyToProfileJwks","updatedJwks","internal_getAcr","hasAccessibleAcr","internal_acp","acr","internal_setAcr","internal_createControl","internal_getControl","withAccessControlResource","foundThing","internal_getControlAll","foundThings","internal_setControl","updatedResource","internal_addPolicyUrl","policyUrl","internal_getPolicyUrlAll","internal_removePolicyUrl","internal_removePolicyUrlAll","internal_addMemberPolicyUrl","internal_getMemberPolicyUrlAll","internal_removeMemberPolicyUrl","internal_removeMemberPolicyUrlAll","internal_getInitialisedControl","resourceWithAcr","allControls","hasLinkedAcr","addAcrPolicyUrl","acrUrl","acrThing","addMemberAcrPolicyUrl","getAcrPolicyUrlAll","getMemberAcrPolicyUrlAll","removeAcrPolicyUrl","removeMemberAcrPolicyUrl","removeAcrPolicyUrlAll","removeMemberAcrPolicyUrlAll","addPolicyUrl","addMemberPolicyUrl","getPolicyUrlAll","controls","policyUrlsByControl","uniquePolicyUrls","policyUrls","getMemberPolicyUrlAll","memberPolicyUrlsByControl","removePolicyUrl","removeMemberPolicyUrl","removePolicyUrlAll","removeMemberPolicyUrlAll","acrAsMarkdown","markdown","memberPolicyUrls","acrPolicyUrls","memberAcrPolicyUrls","getSolidDatasetWithAcr","fetchAcr","getFileWithAcr","getResourceInfoWithAcr","getSolidDatasetWithAccessDatasets","getFileWithAccessDatasets","getResourceInfoWithAccessDatasets","saveAcrFor","aclResourceInfo","acpInfo","getReferencedPolicyUrlAll","withAcr","uniqueUrls","isRule","addAllOfRuleUrl","policy","removeAllOfRuleUrl","setAllOfRuleUrl","getAllOfRuleUrlAll","addAnyOfRuleUrl","removeAnyOfRuleUrl","setAnyOfRuleUrl","getAnyOfRuleUrlAll","addNoneOfRuleUrl","removeNoneOfRuleUrl","setNoneOfRuleUrl","getNoneOfRuleUrlAll","createRule","ruleThing","createResourceRuleFor","getRule","ruleResource","getResourceRule","getRuleAll","getResourceRuleAll","removeRule","removeResourceRule","ruleToRemove","ruleUrl","matchingRule","setRule","setResourceRule","getAgentAll$1","setAgent$1","isPublic","hasPublic$1","isAuthenticated","hasAuthenticated$1","isCreator","hasCreator$1","setPublic$1","setAuthenticated$1","setCreator$1","addAgent$1","removeAgent$1","getGroupAll","setGroup","addGroup","removeGroup","removePublic$1","removeAuthenticated$1","removeCreator$1","getClientAll$1","setClient$1","anyClientEnabled","hasAnyClient$1","setAnyClient$1","addClient$1","removeClient$1","removeAnyClient$1","ruleAsMarkdown","targetEnumeration","targetAgents","targetGroups","targetClients","isPolicy","createPolicy","policyThing","getPolicy","policyResource","getPolicyAll","foundPolicies","removePolicy","setPolicy","setAllowModesV2","newPolicy","setAllowModesV1","getAllowModesV2","allowedModes","getAllowModesV1","setDenyModesV2","setDenyModesV1","getDenyModesV2","deniedModes","getDenyModesV1","createResourcePolicyFor","getResourcePolicy","getResourceAcrPolicy","getResourcePolicyAll","getResourceAcrPolicyAll","removeResourcePolicy","policyToRemove","policyUrlString","removeResourceAcrPolicy","setResourcePolicy","setResourceAcrPolicy","policyAsMarkdown","getStatus","allowModes","denyModes","allOfRules","anyOfRules","noneOfRules","mockAcrFor","addMockAcrTo","accessControlResource","aprs","v2AcpFunctions","v2ControlFunctions","v2PolicyFunctions","getAllowModes","getDenyModes","setAllowModes","setDenyModes","v2RuleFunctions","addAgent","addForbiddenRuleUrl","addOptionalRuleUrl","addRequiredRuleUrl","getAgentAll","getForbiddenRuleUrlAll","getOptionalRuleUrlAll","getRequiredRuleUrlAll","hasAuthenticated","hasCreator","hasPublic","removeAgent","removeForbiddenRuleUrl","removeOptionalRuleUrl","removeRequiredRuleUrl","setAgent","setForbiddenRuleUrl","setOptionalRuleUrl","setRequiredRuleUrl","v2MockFunctions","previousSetPublicSignature","enable","previousSetAuthenticatedSignature","previousSetCreatorSignature","deprecatedFunctions$1","getForbiddenRuleurlAll","setPublic","setAuthenticated","setCreator","acp_v2","v1AcpFunctions","v1PolicyFunctions","v1RuleFunctions","v1MockFunctions","v1ControlFunctions","deprecatedFunctions","createControl","getControl","getAllControl","getControlAll","setControl","removeControl","acp_v1","v3AcpFunctions","v3ControlFunctions","v3PolicyFunctions","v3RuleFunctions","addClient","getClientAll","hasAnyClient","removeClient","setAnyClient","setClient","removeAnyClient","removeAuthenticated","removeCreator","removePublic","v3MockFunctions","acp_v3","isMatcher","addAllOfMatcherUrl","removeAllOfMatcherUrl","setAllOfMatcherUrl","getAllOfMatcherUrlAll","addAnyOfMatcherUrl","removeAnyOfMatcherUrl","setAnyOfMatcherUrl","getAnyOfMatcherUrlAll","addNoneOfMatcherUrl","removeNoneOfMatcherUrl","setNoneOfMatcherUrl","getNoneOfMatcherUrlAll","createMatcher","matcherThing","createResourceMatcherFor","getMatcher","matcherResource","getResourceMatcher","getMatcherAll","getResourceMatcherAll","removeMatcher","removeResourceMatcher","matcherToRemove","matcherUrl","matchingMatcher","setMatcher","setResourceMatcher","matcherAsMarkdown","v4AcpFunctions","v4ControlFunctions","v4PolicyFunctions","v4MatcherFunctions","v4MockFunctions","acp_v4","knownActorRelations$1","internal_getActorAccess$1","acpData","actorRelation","inaccessibleUrls","applicableAcrPolicies","acrPolicies","policyAppliesTo$1","applicablePolicies","policies","allowedAcrAccess","acc","allAllowedAccess","controlRead","controlWrite","withAllowedAccess","withAcrDeniedAccess","allDeniedAccess","withDeniedAccess","internal_getAgentAccess$1","internal_getPublicAccess$1","allOfMatchers","matchers","anyOfMatchers","noneOfMatchers","matcherAppliesTo","policyConflictsWith$1","otherAccess","internal_findActorAll$1","actors","internal_getActorAccessAll$1","internal_getAgentAccessAll$1","internal_setActorAccess$1","existingAccess","conflictingAcrPolicies","conflictingPolicies","otherActorAcrPolicies","acrPolicy","policyHasOtherActors$1","otherActorPolicies","remainingAccess","policyCopy","matcherCopies","copyPolicyExcludingActor$1","newMatcherName","newMatcher","newControlReadAccess","newControlWriteAccess","acrPoliciesToUnapply","newAcrPolicyName","newAcrPolicy","newReadAccess","newAppendAccess","newWriteAccess","policiesToUnapply","newPolicyName","previouslyApplicableAcrPolicy","previouslyApplicablePolicy","internal_setAgentAccess$1","internal_setPublicAccess$1","allOfMatchersHaveOtherActors","matcherHasOtherActors","anyOfMatchersHaveOtherActors","noneOfMatchersHaveOtherActors","otherActors","knownActorRelation","otherActorsWithThisRelation","applicableActor","inputPolicy","actorRelationToExclude","actorToExclude","newIriSuffix","newAllOfMatchers","copyMatchersExcludingActor","newAnyOfMatchers","newNoneOfMatchers","encodeURI","allowMode","denyMode","matcherIris","iriSuffix","matcherIri","listsOtherActors","targetActor","isNotNull$1","internal_getPoliciesAndMatchers","allPolicyResourceUrls","getResourceUrls$1","policyResources","getResources$1","getThingsFromResources$1","matcherUrlSet","getReferencedMatcherUrls","matcherUrls","unfetchedMatcherResourceUrls","getResourceUrl$1","matcherResourceUrl","matcherResources","allResources","thingUrlObject","thingUrls","resourceUrls","uniqueResourceUrls","resources","universalAccessToAcl","newAccess","previousAccess","aclAccessToUniversal","getActorAccess","accessEvaluationCallback","wacAccess","getActorClassAccess","getActorAccessAll","wacAgentAccess","getAgentAccess$2","getGroupAccess$1","getPublicAccess$2","getAgentAccessAll$2","getGroupAccessAll$1","prepareResourceAcl","resourceWithAcl","saveUpdatedAcl","savedAcl","setActorClassAccess","getAccess","setAccess","resourceWithOldAcl","updatedResourceAcl","setActorAccess","currentAccess","setAgentResourceAccess","setGroupResourceAccess","setPublicResourceAccess","knownActorRelations","internal_getActorAccess","policyAppliesTo","internal_getAgentAccess","internal_getGroupAccess","groupUrl","internal_getPublicAccess","ruleAppliesTo","policyConflictsWith","internal_findActorAll","internal_getActorAccessAll","internal_getGroupAccessAll","internal_getAgentAccessAll","internal_setActorAccess","policyHasOtherActors","ruleCopies","copyPolicyExcludingActor","newRuleName","internal_setAgentAccess","internal_setGroupAccess","internal_setPublicAccess","allOfRulesHaveOtherActors","ruleHasOtherActors","anyOfRulesHaveOtherActors","noneOfRulesHaveOtherActors","newAllOfRules","copyRulesExcludingActor","newAnyOfRules","newNoneOfRules","ruleIris","ruleIri","isNotNull","internal_getPoliciesAndRules","getResourceUrls","getResources","getThingsFromResources","ruleUrlSet","getReferencedRuleUrls","ruleUrls","unfetchedRuleResourceUrls","getResourceUrl","ruleResourceUrl","ruleResources","getAgentAccess$1","setAgentAccess$1","getAgentAccessAll$1","getGroupAccess","getGroupAccessAll","setGroupAccess","getPublicAccess$1","setPublicAccess$1","universal_v1","__proto__","getAgentAccess","setAgentAccess","getAgentAccessAll","getPublicAccess","setPublicAccess","getAccessFor","getAccessForAll","setAccessFor","universal","actorType","universal_v2","ReflectOwnKeys","R","Reflect","ReflectApply","receiver","Function","ProcessEmitWarning","warning","ownKeys","getOwnPropertySymbols","getOwnPropertyNames","NumberIsNaN","EventEmitter","_events","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","listener","_getMaxListeners","that","_addListener","prepend","events","create","newListener","warned","w","emitter","onceWrapper","fired","wrapFn","_onceWrap","wrapped","bind","_listeners","unwrap","evlistener","unwrapListeners","arrayClone","listenerCount","n","spliceOne","ret","errorListener","resolver","eventTargetAgnosticAddListener","addErrorHandlerIfEventEmitter","handler","addEventListener","wrapListener","arg","removeEventListener","getPrototypeOf","setMaxListeners","getMaxListeners","doError","er","originalListener","rawListeners","eventNames","getRandomValues","rnds8","rng","validate","uuid","byteToHex","_nodeId","_clockseq","_lastMSecs","_lastNSecs","buf","clockseq","seedBytes","msecs","nsecs","dt","tl","tmh","stringToBytes","unescape","bytes","charCodeAt","DNS","hashfunc","generateUUID","namespace","md5","md5ToHexEncodedArray","wordsToMd5","bytesToWords","length32","x","getOutputLength","inputLength8","d","olda","oldb","oldc","oldd","md5ff","md5gg","md5hh","md5ii","safeAdd","length8","Uint32Array","y","lsw","msw","bitRotateLeft","num","cnt","md5cmn","v3","v4","rnds","sha1","f","z","ROTL","K","H","N","ceil","M","_i","j","pow","floor","_i2","W","_t","_t2","T","v5","processErrorResponse","responseBody","redirectUrl","error_description","validateRegistrationResponse","client_id","redirect_uris","registerClient","issuerConfig","registrationEndpoint","idTokenSigningAlgValuesSupported","signingAlg","PREFERRED_SIGNING_ALG","client_name","clientName","application_type","subject_type","token_endpoint_auth_method","id_token_signed_response_alg","grant_types","registrationAccessToken","registerResponse","clientId","clientSecret","client_secret","idTokenSignedResponseAlg","clientType","hasError","hasErrorDescription","hasErrorUri","error_uri","hasAccessToken","access_token","hasIdToken","id_token","hasRefreshToken","refresh_token","hasTokenType","token_type","hasExpiresIn","expires_in","validatePreconditions","grantType","grantTypesSupported","tokenEndpoint","validateTokenEndpointResponse","tokenResponse","dpop","OidcProviderError","InvalidResponseError","getTokens","dpopKey","DPoP","btoa","tokenRequestInit","grant_type","redirect_uri","code_verifier","codeVerifier","rawTokenResponse","jwksUri","accessToken","idToken","refreshToken","expiresIn","getBearerToken","signinResponse","OidcClient","response_mode","loadUserInfo","processSigninResponse","settings","metadata","jwks_uri","getDpopToken","refresh","requestBody","dpopHeader","authHeader","rawResponse","validatedResponse","removeOidcQueryParam","cleanedUrl","searchParams","clearOidcPersistentStorage","clearStaleState","WebStorageStateStore","myStorage","localStorage","itemsToRemove","removeItem","SOLID_IDENTITY_PROVIDER","getElementById","innerHTML","session","Session","buttonLogin","writeForm","readForm","deleteForm","login","isLoggedIn","oidcIssuer","location","handleRedirectAfterLogin","handleIncomingRedirect","setAttribute","createNote","noteTitle","textContent","webID","profileDocumentUrl","currentUser","loc","host","fileName","finalPath","readProfile","finalUrl","fileBlob","delFile","toDel","toDelUpd","onclick","event","preventDefault","script","createElement","async","charset","getElementsByTagName","appendChild"],"mappings":"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AAA,KAAA,GAAA,EAAA,UAAA,UAAA,SAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,KAAA,IAAA,EAAA,EAAA,EAAA,GAAA,KAAA,GAAA,EAAA,EAAA,KAAA,IAAA,KAAA,EAAA,EAAA,GAAA,EAAA,EAAA,KAAA,GAAA,EAAA,UAAA,SAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,KAAA,GAAA,EAAA,KAAA,GAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,KAAA,MAAA,EAAA,KAAA,IAAA,EAAA,KAAA,GAAA,EAAA,KAAA,GAAA,IAAA,EAAA,KAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,GAAA,KAAA,IAAA,EAAA,EAAA,GAAA,KAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,SAAA,EAAA,UAAA,SAAA,SAAA,EAAA,GAAA,EAAA,EAAA,KAAA,EAAA,IAAA,EAAA,KAAA,MAAA,EAAA,KAAA,IAAA,GAAA,GAAA,KAAA,EAAA,EAAA,EAAA,MAAA,CAAA,IAAA,EAAA,EAAA,KAAA,GAAA,EAAA,KAAA,GAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,KAAA,IAAA,EAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,KAAA,IAAA,EAAA,EAAA,EAAA,EAAA,KAAA,KAAA,GAAA,IAAA,EAAA,EAAA,EAAA,GAAA,KAAA,IAAA,EAAA,EAAA,IAAA,EAAA,KAAA,EAAA,EAAA,KAAA,KAAA,EAAA,IAAA,GAAA,EAAA,EAAA,KAAA,EAAA,EAAA,EAAA,UAAA,EAAA,UAAA,MAAA,SAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,IAAA,EAAA,EAAA,KAAA,GAAA,EAAA,GAAA,GAAA,KAAA,GAAA,EAAA,GAAA,EAAA,KAAA,EAAA,KAAA,GAAA,IAAA,KAAA,GAAA,GAAA,EAAA,EAAA,KAAA,EAAA,CAAA,IAAA,GAAA,EAAA,EAAA,E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","file":"my-demo-app.5d920042.js","sourceRoot":"..","sourcesContent":["'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","'use strict'\n\nvar COMPATIBLE_ENCODING_PATTERN = /^utf-?8|ascii|utf-?16-?le|ucs-?2|base-?64|latin-?1$/i\nvar WS_TRIM_PATTERN = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g\nvar WS_CHAR_PATTERN = /\\s|\\uFEFF|\\xA0/\nvar WS_FOLD_PATTERN = /\\r?\\n[\\x20\\x09]+/g\nvar DELIMITER_PATTERN = /[;,\"]/\nvar WS_DELIMITER_PATTERN = /[;,\"]|\\s/\n\n/**\n * Token character pattern\n * @type {RegExp}\n * @see https://tools.ietf.org/html/rfc7230#section-3.2.6\n */\nvar TOKEN_PATTERN = /^[!#$%&'*+\\-\\.^_`|~\\da-zA-Z]+$/\n\nvar STATE = {\n  IDLE: 1 << 0,\n  URI: 1 << 1,\n  ATTR: 1 << 2,\n}\n\nfunction trim( value ) {\n  return value.replace( WS_TRIM_PATTERN, '' )\n}\n\nfunction hasWhitespace( value ) {\n  return WS_CHAR_PATTERN.test( value )\n}\n\nfunction skipWhitespace( value, offset ) {\n  while( hasWhitespace( value[offset] ) ) {\n    offset++\n  }\n  return offset\n}\n\nfunction needsQuotes( value ) {\n  return WS_DELIMITER_PATTERN.test( value ) ||\n    !TOKEN_PATTERN.test( value )\n}\n\nclass Link {\n\n  /**\n   * Link\n   * @constructor\n   * @param {String} [value]\n   * @returns {Link}\n   */\n  constructor( value ) {\n\n    /** @type {Array} URI references */\n    this.refs = []\n\n    if( value ) {\n      this.parse( value )\n    }\n\n  }\n\n  /**\n   * Get refs with given relation type\n   * @param {String} value\n   * @returns {Array<Object>}\n   */\n  rel( value ) {\n\n    var links = []\n    var type = value.toLowerCase()\n\n    for( var i = 0; i < this.refs.length; i++ ) {\n      if( this.refs[ i ].rel.toLowerCase() === type ) {\n        links.push( this.refs[ i ] )\n      }\n    }\n\n    return links\n\n  }\n\n  /**\n   * Get refs where given attribute has a given value\n   * @param {String} attr\n   * @param {String} value\n   * @returns {Array<Object>}\n   */\n  get( attr, value ) {\n\n    attr = attr.toLowerCase()\n\n    var links = []\n\n    for( var i = 0; i < this.refs.length; i++ ) {\n      if( this.refs[ i ][ attr ] === value ) {\n        links.push( this.refs[ i ] )\n      }\n    }\n\n    return links\n\n  }\n\n  set( link ) {\n    this.refs.push( link )\n    return this\n  }\n\n  has( attr, value ) {\n\n    attr = attr.toLowerCase()\n\n    for( var i = 0; i < this.refs.length; i++ ) {\n      if( this.refs[ i ][ attr ] === value ) {\n        return true\n      }\n    }\n\n    return false\n\n  }\n\n  parse( value, offset ) {\n\n    offset = offset || 0\n    value = offset ? value.slice( offset ) : value\n\n    // Trim & unfold folded lines\n    value = trim( value ).replace( WS_FOLD_PATTERN, '' )\n\n    var state = STATE.IDLE\n    var length = value.length\n    var offset = 0\n    var ref = null\n\n    while( offset < length ) {\n      if( state === STATE.IDLE ) {\n        if( hasWhitespace( value[offset] ) ) {\n          offset++\n          continue\n        } else if( value[offset] === '<' ) {\n          if( ref != null ) {\n            ref.rel != null ?\n              this.refs.push( ...Link.expandRelations( ref ) ) :\n              this.refs.push( ref )\n          }\n          var end = value.indexOf( '>', offset )\n          if( end === -1 ) throw new Error( 'Expected end of URI delimiter at offset ' + offset )\n          ref = { uri: value.slice( offset + 1, end ) }\n          // this.refs.push( ref )\n          offset = end\n          state = STATE.URI\n        } else {\n          throw new Error( 'Unexpected character \"' + value[offset] + '\" at offset ' + offset )\n        }\n        offset++\n      } else if( state === STATE.URI ) {\n        if( hasWhitespace( value[offset] ) ) {\n          offset++\n          continue\n        } else if( value[offset] === ';' ) {\n          state = STATE.ATTR\n          offset++\n        } else if( value[offset] === ',' ) {\n          state = STATE.IDLE\n          offset++\n        } else {\n          throw new Error( 'Unexpected character \"' + value[offset] + '\" at offset ' + offset )\n        }\n      } else if( state === STATE.ATTR ) {\n        if( value[offset] ===';' || hasWhitespace( value[offset] ) ) {\n          offset++\n          continue\n        }\n        var end = value.indexOf( '=', offset )\n        if( end === -1 ) throw new Error( 'Expected attribute delimiter at offset ' + offset )\n        var attr = trim( value.slice( offset, end ) ).toLowerCase()\n        var attrValue = ''\n        offset = end + 1\n        offset = skipWhitespace( value, offset )\n        if( value[offset] === '\"' ) {\n          offset++\n          while( offset < length ) {\n            if( value[offset] === '\"' ) {\n              offset++; break\n            }\n            if( value[offset] === '\\\\' ) {\n              offset++\n            }\n            attrValue += value[offset]\n            offset++\n          }\n        } else {\n          var end = offset + 1\n          while( !DELIMITER_PATTERN.test( value[end] ) && end < length ) {\n            end++\n          }\n          attrValue = value.slice( offset, end )\n          offset = end\n        }\n        if( ref[ attr ] && Link.isSingleOccurenceAttr( attr ) ) {\n          // Ignore multiples of attributes which may only appear once\n        } else if( attr[ attr.length - 1 ] === '*' ) {\n          ref[ attr ] = Link.parseExtendedValue( attrValue )\n        } else {\n          attrValue = attr === 'type' ?\n            attrValue.toLowerCase() : attrValue\n          if( ref[ attr ] != null ) {\n            if( Array.isArray( ref[ attr ] ) ) {\n              ref[ attr ].push( attrValue )\n            } else {\n              ref[ attr ] = [ ref[ attr ], attrValue ]\n            }\n          } else {\n            ref[ attr ] = attrValue\n          }\n        }\n        switch( value[offset] ) {\n          case ',': state = STATE.IDLE; break\n          case ';': state = STATE.ATTR; break\n        }\n        offset++\n      } else {\n        throw new Error( 'Unknown parser state \"' + state + '\"' )\n      }\n    }\n\n    if( ref != null ) {\n      ref.rel != null ?\n        this.refs.push( ...Link.expandRelations( ref ) ) :\n        this.refs.push( ref )\n    }\n\n    ref = null\n\n    return this\n\n  }\n\n  toString() {\n\n    var refs = []\n    var link = ''\n    var ref = null\n\n    for( var i = 0; i < this.refs.length; i++ ) {\n      ref = this.refs[i]\n      link = Object.keys( this.refs[i] ).reduce( function( link, attr ) {\n        if( attr === 'uri' ) return link\n        return link + '; ' + Link.formatAttribute( attr, ref[ attr ] )\n      }, '<' + ref.uri + '>' )\n      refs.push( link )\n    }\n\n    return refs.join( ', ' )\n\n  }\n\n}\n\n/**\n * Determines whether an encoding can be\n * natively handled with a `Buffer`\n * @param {String} value\n * @returns {Boolean}\n */\nLink.isCompatibleEncoding = function( value ) {\n  return COMPATIBLE_ENCODING_PATTERN.test( value )\n}\n\nLink.parse = function( value, offset ) {\n  return new Link().parse( value, offset )\n}\n\nLink.isSingleOccurenceAttr = function( attr ) {\n  return attr === 'rel' || attr === 'type' || attr === 'media' ||\n    attr === 'title' || attr === 'title*'\n}\n\nLink.isTokenAttr = function( attr ) {\n  return attr === 'rel' || attr === 'type' || attr === 'anchor'\n}\n\nLink.escapeQuotes = function( value ) {\n  return value.replace( /\"/g, '\\\\\"' )\n}\n\nLink.expandRelations = function( ref ) {\n  var rels = ref.rel.split( ' ' )\n  return rels.map( function( rel ) {\n    var value = Object.assign( {}, ref )\n    value.rel = rel\n    return value\n  })\n}\n\n/**\n * Parses an extended value and attempts to decode it\n * @internal\n * @param {String} value\n * @return {Object}\n */\nLink.parseExtendedValue = function( value ) {\n  var parts = /([^']+)?(?:'([^']+)')?(.+)/.exec( value )\n  return {\n    language: parts[2].toLowerCase(),\n    encoding: Link.isCompatibleEncoding( parts[1] ) ?\n      null : parts[1].toLowerCase(),\n    value: Link.isCompatibleEncoding( parts[1] ) ?\n      decodeURIComponent( parts[3] ) : parts[3]\n  }\n}\n\n/**\n * Format a given extended attribute and it's value\n * @param {String} attr\n * @param {Object} data\n * @return {String}\n */\nLink.formatExtendedAttribute = function( attr, data ) {\n\n  var encoding = ( data.encoding || 'utf-8' ).toUpperCase()\n  var language = data.language || 'en'\n\n  var encodedValue = ''\n\n  if( Buffer.isBuffer( data.value ) && Link.isCompatibleEncoding( encoding ) ) {\n    encodedValue = data.value.toString( encoding )\n  } else if( Buffer.isBuffer( data.value ) ) {\n    encodedValue = data.value.toString( 'hex' )\n      .replace( /[0-9a-f]{2}/gi, '%$1' )\n  } else {\n    encodedValue = encodeURIComponent( data.value )\n  }\n\n  return attr + '=' + encoding + '\\'' +\n    language + '\\'' + encodedValue\n\n}\n\n/**\n * Format a given attribute and it's value\n * @param {String} attr\n * @param {String|Object} value\n * @return {String}\n */\nLink.formatAttribute = function( attr, value ) {\n\n  if( Array.isArray( value ) ) {\n    return value.map(( item ) => {\n      return Link.formatAttribute( attr, item )\n    }).join( '; ' )\n  }\n\n  if( attr[ attr.length - 1 ] === '*' || typeof value !== 'string' ) {\n    return Link.formatExtendedAttribute( attr, value )\n  }\n\n  if( Link.isTokenAttr( attr ) ) {\n    value = needsQuotes( value ) ?\n      '\"' + Link.escapeQuotes( value ) + '\"' :\n      Link.escapeQuotes( value )\n  } else if( needsQuotes( value ) ) {\n    value = encodeURIComponent( value )\n    // We don't need to escape <SP> <,> <;> within quotes\n    value = value\n      .replace( /%20/g, ' ' )\n      .replace( /%2C/g, ',' )\n      .replace( /%3B/g, ';' )\n\n    value = '\"' + value + '\"'\n  }\n\n  return attr + '=' + value\n\n}\n\nmodule.exports = Link\n","class BlankNode {\n  constructor (id) {\n    this.value = id || ('b' + (++BlankNode.nextId))\n  }\n\n  equals (other) {\n    return !!other && other.termType === this.termType && other.value === this.value\n  }\n}\n\nBlankNode.prototype.termType = 'BlankNode'\n\nBlankNode.nextId = 0\n\nmodule.exports = BlankNode\n","class DefaultGraph {\n  equals (other) {\n    return !!other && other.termType === this.termType\n  }\n}\n\nDefaultGraph.prototype.termType = 'DefaultGraph'\nDefaultGraph.prototype.value = ''\n\nmodule.exports = DefaultGraph\n","function fromTerm (original) {\n  if (!original) {\n    return null\n  }\n\n  if (original.termType === 'BlankNode') {\n    return this.blankNode(original.value)\n  }\n\n  if (original.termType === 'DefaultGraph') {\n    return this.defaultGraph()\n  }\n\n  if (original.termType === 'Literal') {\n    return this.literal(original.value, original.language || this.namedNode(original.datatype.value))\n  }\n\n  if (original.termType === 'NamedNode') {\n    return this.namedNode(original.value)\n  }\n\n  if (original.termType === 'Quad') {\n    const subject = this.fromTerm(original.subject)\n    const predicate = this.fromTerm(original.predicate)\n    const object = this.fromTerm(original.object)\n    const graph = this.fromTerm(original.graph)\n\n    return this.quad(subject, predicate, object, graph)\n  }\n\n  if (original.termType === 'Variable') {\n    return this.variable(original.value)\n  }\n\n  throw new Error(`unknown termType ${original.termType}`)\n}\n\nmodule.exports = fromTerm\n","class NamedNode {\n  constructor (iri) {\n    this.value = iri\n  }\n\n  equals (other) {\n    return !!other && other.termType === this.termType && other.value === this.value\n  }\n}\n\nNamedNode.prototype.termType = 'NamedNode'\n\nmodule.exports = NamedNode\n","const NamedNode = require('./NamedNode.js')\n\nclass Literal {\n  constructor (value, language, datatype) {\n    this.value = value\n    this.datatype = Literal.stringDatatype\n    this.language = ''\n\n    if (language) {\n      this.language = language\n      this.datatype = Literal.langStringDatatype\n    } else if (datatype) {\n      this.datatype = datatype\n    }\n  }\n\n  equals (other) {\n    return !!other && other.termType === this.termType && other.value === this.value &&\n      other.language === this.language && other.datatype.equals(this.datatype)\n  }\n}\n\nLiteral.prototype.termType = 'Literal'\n\nLiteral.langStringDatatype = new NamedNode('http://www.w3.org/1999/02/22-rdf-syntax-ns#langString')\nLiteral.stringDatatype = new NamedNode('http://www.w3.org/2001/XMLSchema#string')\n\nmodule.exports = Literal\n","const DefaultGraph = require('./DefaultGraph.js')\n\nclass Quad {\n  constructor (subject, predicate, object, graph) {\n    this.subject = subject\n    this.predicate = predicate\n    this.object = object\n\n    if (graph) {\n      this.graph = graph\n    } else {\n      this.graph = new DefaultGraph()\n    }\n  }\n\n  equals (other) {\n    // `|| !other.termType` is for backwards-compatibility with old factories without RDF* support.\n    return !!other && (other.termType === 'Quad' || !other.termType) &&\n      other.subject.equals(this.subject) && other.predicate.equals(this.predicate) &&\n      other.object.equals(this.object) && other.graph.equals(this.graph)\n  }\n}\n\nQuad.prototype.termType = 'Quad'\nQuad.prototype.value = ''\n\nmodule.exports = Quad\n","class Variable {\n  constructor (name) {\n    this.value = name\n  }\n\n  equals (other) {\n    return !!other && other.termType === this.termType && other.value === this.value\n  }\n}\n\nVariable.prototype.termType = 'Variable'\n\nmodule.exports = Variable\n","const BlankNode = require('./BlankNode.js')\nconst DefaultGraph = require('./DefaultGraph.js')\nconst fromTermRaw = require('./fromTerm.js')\nconst Literal = require('./Literal.js')\nconst NamedNode = require('./NamedNode.js')\nconst Quad = require('./Quad.js')\nconst Variable = require('./Variable.js')\n\nfunction namedNode (value) {\n  return new NamedNode(value)\n}\n\nfunction blankNode (value) {\n  return new BlankNode(value)\n}\n\nfunction literal (value, languageOrDatatype) {\n  if (typeof languageOrDatatype === 'string') {\n    if (languageOrDatatype.indexOf(':') === -1) {\n      return new Literal(value, languageOrDatatype)\n    }\n\n    return new Literal(value, null, DataFactory.namedNode(languageOrDatatype))\n  }\n\n  return new Literal(value, null, languageOrDatatype)\n}\n\nfunction variable (value) {\n  return new Variable(value)\n}\n\nfunction defaultGraph () {\n  return DataFactory.defaultGraphInstance\n}\n\nfunction triple (subject, predicate, object) {\n  return DataFactory.quad(subject, predicate, object)\n}\n\nfunction quad (subject, predicate, object, graph) {\n  return new Quad(subject, predicate, object, graph || DataFactory.defaultGraphInstance)\n}\n\nfunction fromTerm (original) {\n  return fromTermRaw.call(DataFactory, original)\n}\n\nfunction fromQuad (original) {\n  return fromTermRaw.call(DataFactory, original)\n}\n\nconst DataFactory = {\n  namedNode,\n  blankNode,\n  literal,\n  variable,\n  defaultGraph,\n  triple,\n  quad,\n  fromTerm,\n  fromQuad,\n  defaultGraphInstance: new DefaultGraph()\n}\n\nmodule.exports = DataFactory\n","const DataFactory = require('./lib/DataFactory.js')\n\nmodule.exports = DataFactory\n","function isString (s) {\n  return typeof s === 'string' || s instanceof String\n}\n\nconst xsdString = 'http://www.w3.org/2001/XMLSchema#string'\n\nfunction termToId (term) {\n  if (typeof term === 'string') {\n    return term\n  }\n\n  if (!term) {\n    return ''\n  }\n\n  if (typeof term.id !== 'undefined' && term.termType !== 'Quad') {\n    return term.id\n  }\n\n  let subject, predicate, object, graph\n\n  // Term instantiated with another library\n  switch (term.termType) {\n    case 'NamedNode':\n      return term.value\n\n    case 'BlankNode':\n      return `_:${term.value}`\n\n    case 'Variable':\n      return `?${term.value}`\n\n    case 'DefaultGraph':\n      return ''\n\n    case 'Literal':\n      if (term.language) {\n        return `\"${term.value}\"@${term.language}`\n      }\n\n      return `\"${term.value}\"${term.datatype && term.datatype.value !== xsdString ? `^^${term.datatype.value}` : ''}`\n\n    case 'Quad':\n      // To identify RDF* quad components, we escape quotes by doubling them.\n      // This avoids the overhead of backslash parsing of Turtle-like syntaxes.\n      subject = escapeQuotes(termToId(term.subject))\n      predicate = escapeQuotes(termToId(term.predicate))\n      object = escapeQuotes(termToId(term.object))\n      graph = term.graph.termType === 'DefaultGraph' ? '' : ` ${termToId(term.graph)}`\n\n      return `<<${subject} ${predicate} ${object}${graph}>>`\n\n    default:\n      throw new Error(`Unexpected termType: ${term.termType}`)\n  }\n}\n\nconst escapedLiteral = /^\"(.*\".*)(?=\"[^\"]*$)/\n\nfunction escapeQuotes (id) {\n  return id.replace(escapedLiteral, (_, quoted) => `\"${quoted.replace(/\"/g, '\"\"')}`)\n}\n\nclass DatasetCore {\n  constructor (quads) {\n    // The number of quads is initially zero\n    this._size = 0\n    // `_graphs` contains subject, predicate, and object indexes per graph\n    this._graphs = Object.create(null)\n    // `_ids` maps entities such as `http://xmlns.com/foaf/0.1/name` to numbers,\n    // saving memory by using only numbers as keys in `_graphs`\n    this._id = 0\n    this._ids = Object.create(null)\n    this._ids['><'] = 0 // dummy entry, so the first actual key is non-zero\n    this._entities = Object.create(null) // inverse of `_ids`\n\n    this._quads = new Map()\n\n    // Add quads if passed\n    if (quads) {\n      for (const quad of quads) {\n        this.add(quad)\n      }\n    }\n  }\n\n  get size () {\n    // Return the quad count if if was cached\n    let size = this._size\n\n    if (size !== null) {\n      return size\n    }\n\n    // Calculate the number of quads by counting to the deepest level\n    size = 0\n    const graphs = this._graphs\n    let subjects, subject\n\n    for (const graphKey in graphs) {\n      for (const subjectKey in (subjects = graphs[graphKey].subjects)) {\n        for (const predicateKey in (subject = subjects[subjectKey])) {\n          size += Object.keys(subject[predicateKey]).length\n        }\n      }\n    }\n\n    this._size = size\n\n    return this._size\n  }\n\n  add (quad) {\n    // Convert terms to internal string representation\n    let subject = termToId(quad.subject)\n    let predicate = termToId(quad.predicate)\n    let object = termToId(quad.object)\n    const graph = termToId(quad.graph)\n\n    // Find the graph that will contain the triple\n    let graphItem = this._graphs[graph]\n    // Create the graph if it doesn't exist yet\n    if (!graphItem) {\n      graphItem = this._graphs[graph] = { subjects: {}, predicates: {}, objects: {} }\n      // Freezing a graph helps subsequent `add` performance,\n      // and properties will never be modified anyway\n      Object.freeze(graphItem)\n    }\n\n    // Since entities can often be long IRIs, we avoid storing them in every index.\n    // Instead, we have a separate index that maps entities to numbers,\n    // which are then used as keys in the other indexes.\n    const ids = this._ids\n    const entities = this._entities\n    subject = ids[subject] || (ids[entities[++this._id] = subject] = this._id)\n    predicate = ids[predicate] || (ids[entities[++this._id] = predicate] = this._id)\n    object = ids[object] || (ids[entities[++this._id] = object] = this._id)\n\n    this._addToIndex(graphItem.subjects, subject, predicate, object)\n    this._addToIndex(graphItem.predicates, predicate, object, subject)\n    this._addToIndex(graphItem.objects, object, subject, predicate)\n\n    this._setQuad(subject, predicate, object, graph, quad)\n\n    // The cached quad count is now invalid\n    this._size = null\n\n    return this\n  }\n\n  delete (quad) {\n    // Convert terms to internal string representation\n    let subject = termToId(quad.subject)\n    let predicate = termToId(quad.predicate)\n    let object = termToId(quad.object)\n    const graph = termToId(quad.graph)\n\n    // Find internal identifiers for all components\n    // and verify the quad exists.\n    const ids = this._ids\n    const graphs = this._graphs\n    let graphItem, subjects, predicates\n\n    if (!(subject = ids[subject]) || !(predicate = ids[predicate]) ||\n      !(object = ids[object]) || !(graphItem = graphs[graph]) ||\n      !(subjects = graphItem.subjects[subject]) ||\n      !(predicates = subjects[predicate]) ||\n      !(object in predicates)\n    ) {\n      return this\n    }\n\n    // Remove it from all indexes\n    this._removeFromIndex(graphItem.subjects, subject, predicate, object)\n    this._removeFromIndex(graphItem.predicates, predicate, object, subject)\n    this._removeFromIndex(graphItem.objects, object, subject, predicate)\n\n    if (this._size !== null) {\n      this._size--\n    }\n\n    this._deleteQuad(subject, predicate, object, graph)\n\n    // Remove the graph if it is empty\n    for (subject in graphItem.subjects) { // eslint-disable-line no-unreachable-loop\n      return this\n    }\n\n    delete graphs[graph]\n\n    return this\n  }\n\n  has (quad) {\n    // Convert terms to internal string representation\n    const subject = termToId(quad.subject)\n    const predicate = termToId(quad.predicate)\n    const object = termToId(quad.object)\n    const graph = termToId(quad.graph)\n\n    const graphItem = this._graphs[graph]\n\n    if (!graphItem) {\n      return false\n    }\n\n    const ids = this._ids\n    let subjectId, predicateId, objectId\n\n    // Translate IRIs to internal index keys.\n    if (\n      (isString(subject) && !(subjectId = ids[subject])) ||\n      (isString(predicate) && !(predicateId = ids[predicate])) ||\n      (isString(object) && !(objectId = ids[object]))\n    ) {\n      return false\n    }\n\n    return this._countInIndex(graphItem.objects, objectId, subjectId, predicateId) === 1\n  }\n\n  match (subject, predicate, object, graph) {\n    return this._createDataset(this._match(subject, predicate, object, graph))\n  }\n\n  [Symbol.iterator] () {\n    return this._match()[Symbol.iterator]()\n  }\n\n  // ## Private methods\n\n  // ### `_addToIndex` adds a quad to a three-layered index.\n  // Returns if the index has changed, if the entry did not already exist.\n  _addToIndex (index0, key0, key1, key2) {\n    // Create layers as necessary\n    const index1 = index0[key0] || (index0[key0] = {})\n    const index2 = index1[key1] || (index1[key1] = {})\n    // Setting the key to _any_ value signals the presence of the quad\n    const existed = key2 in index2\n\n    if (!existed) {\n      index2[key2] = null\n    }\n\n    return !existed\n  }\n\n  // ### `_removeFromIndex` removes a quad from a three-layered index\n  _removeFromIndex (index0, key0, key1, key2) {\n    // Remove the quad from the index\n    const index1 = index0[key0]\n    const index2 = index1[key1]\n    delete index2[key2]\n\n    // Remove intermediary index layers if they are empty\n    for (const key in index2) { // eslint-disable-line no-unreachable-loop\n      return\n    }\n\n    delete index1[key1]\n\n    for (const key in index1) { // eslint-disable-line no-unreachable-loop\n      return\n    }\n\n    delete index0[key0]\n  }\n\n  // ### `_findInIndex` finds a set of quads in a three-layered index.\n  // The index base is `index0` and the keys at each level are `key0`, `key1`, and `key2`.\n  // Any of these keys can be undefined, which is interpreted as a wildcard.\n  // `name0`, `name1`, and `name2` are the names of the keys at each level,\n  // used when reconstructing the resulting quad\n  // (for instance: _subject_, _predicate_, and _object_).\n  // Finally, `graph` will be the graph of the created quads.\n  // If `callback` is given, each result is passed through it\n  // and iteration halts when it returns truthy for any quad.\n  // If instead `array` is given, each result is added to the array.\n  _findInIndex (index0, key0, key1, key2, name0, name1, name2, graph, callback, array) {\n    let tmp, index1, index2\n\n    // If a key is specified, use only that part of index 0.\n    if (key0) {\n      (tmp = index0, index0 = {})[key0] = tmp[key0]\n    }\n\n    for (const value0 in index0) {\n      index1 = index0[value0]\n\n      if (index1) {\n        // If a key is specified, use only that part of index 1.\n        if (key1) {\n          (tmp = index1, index1 = {})[key1] = tmp[key1]\n        }\n\n        for (const value1 in index1) {\n          index2 = index1[value1]\n\n          if (index2) {\n            // If a key is specified, use only that part of index 2, if it exists.\n            const values = key2 ? (key2 in index2 ? [key2] : []) : Object.keys(index2)\n            // Create quads for all items found in index 2.\n            for (let l = 0; l < values.length; l++) {\n              const parts = {\n                [name0]: value0,\n                [name1]: value1,\n                [name2]: values[l]\n              }\n\n              const quad = this._getQuad(parts.subject, parts.predicate, parts.object, graph)\n\n              if (array) {\n                array.push(quad)\n              } else if (callback(quad)) {\n                return true\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return array\n  }\n\n  // ### `_countInIndex` counts matching quads in a three-layered index.\n  // The index base is `index0` and the keys at each level are `key0`, `key1`, and `key2`.\n  // Any of these keys can be undefined, which is interpreted as a wildcard.\n  _countInIndex (index0, key0, key1, key2) {\n    let count = 0\n    let tmp, index1, index2\n\n    // If a key is specified, count only that part of index 0\n    if (key0) {\n      (tmp = index0, index0 = {})[key0] = tmp[key0]\n    }\n\n    for (const value0 in index0) {\n      index1 = index0[value0]\n\n      if (index1) {\n        // If a key is specified, count only that part of index 1\n        if (key1) {\n          (tmp = index1, index1 = {})[key1] = tmp[key1]\n        }\n\n        for (const value1 in index1) {\n          index2 = index1[value1]\n\n          if (index2) {\n            if (key2) {\n              // If a key is specified, count the quad if it exists\n              (key2 in index2) && count++\n            } else {\n              // Otherwise, count all quads\n              count += Object.keys(index2).length\n            }\n          }\n        }\n      }\n    }\n\n    return count\n  }\n\n  // ### `_getGraphs` returns an array with the given graph,\n  // or all graphs if the argument is null or undefined.\n  _getGraphs (graph) {\n    if (!isString(graph)) {\n      return this._graphs\n    }\n\n    return {\n      [graph]: this._graphs[graph]\n    }\n  }\n\n  _match (subject, predicate, object, graph) {\n    // Convert terms to internal string representation\n    subject = subject && termToId(subject)\n    predicate = predicate && termToId(predicate)\n    object = object && termToId(object)\n    graph = graph && termToId(graph)\n\n    const quads = []\n    const graphs = this._getGraphs(graph)\n    const ids = this._ids\n    let content, subjectId, predicateId, objectId\n\n    // Translate IRIs to internal index keys.\n    if (\n      (isString(subject) && !(subjectId = ids[subject])) ||\n      (isString(predicate) && !(predicateId = ids[predicate])) ||\n      (isString(object) && !(objectId = ids[object]))\n    ) {\n      return quads\n    }\n\n    for (const graphId in graphs) {\n      content = graphs[graphId]\n\n      // Only if the specified graph contains triples, there can be results\n      if (content) {\n        // Choose the optimal index, based on what fields are present\n        if (subjectId) {\n          if (objectId) {\n            // If subject and object are given, the object index will be the fastest\n            this._findInIndex(content.objects, objectId, subjectId, predicateId, 'object', 'subject', 'predicate', graphId, null, quads)\n          } else {\n            // If only subject and possibly predicate are given, the subject index will be the fastest\n            this._findInIndex(content.subjects, subjectId, predicateId, null, 'subject', 'predicate', 'object', graphId, null, quads)\n          }\n        } else if (predicateId) {\n          // if only predicate and possibly object are given, the predicate index will be the fastest\n          this._findInIndex(content.predicates, predicateId, objectId, null, 'predicate', 'object', 'subject', graphId, null, quads)\n        } else if (objectId) {\n          // If only object is given, the object index will be the fastest\n          this._findInIndex(content.objects, objectId, null, null, 'object', 'subject', 'predicate', graphId, null, quads)\n        } else {\n          // If nothing is given, iterate subjects and predicates first\n          this._findInIndex(content.subjects, null, null, null, 'subject', 'predicate', 'object', graphId, null, quads)\n        }\n      }\n    }\n\n    return quads\n  }\n\n  _getQuad (subjectId, predicateId, objectId, graphId) {\n    return this._quads.get(this._toId(subjectId, predicateId, objectId, graphId))\n  }\n\n  _setQuad (subjectId, predicateId, objectId, graphId, quad) {\n    this._quads.set(this._toId(subjectId, predicateId, objectId, graphId), quad)\n  }\n\n  _deleteQuad (subjectId, predicateId, objectId, graphId) {\n    this._quads.delete(this._toId(subjectId, predicateId, objectId, graphId))\n  }\n\n  _createDataset (quads) {\n    return new this.constructor(quads)\n  }\n\n  _toId (subjectId, predicateId, objectId, graphId) {\n    return `${subjectId}:${predicateId}:${objectId}:${graphId}`\n  }\n}\n\nmodule.exports = DatasetCore\n","const rdf = require('@rdfjs/data-model')\nconst DatasetCore = require('./DatasetCore')\n\nfunction dataset (quads) {\n  return new DatasetCore(quads)\n}\n\nmodule.exports = Object.assign({ dataset }, rdf)\n","/*\n * Copyright (c) 2016-2021 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nmodule.exports = class IdentifierIssuer {\n  /**\n   * Creates a new IdentifierIssuer. A IdentifierIssuer issues unique\n   * identifiers, keeping track of any previously issued identifiers.\n   *\n   * @param prefix the prefix to use ('<prefix><counter>').\n   * @param existing an existing Map to use.\n   * @param counter the counter to use.\n   */\n  constructor(prefix, existing = new Map(), counter = 0) {\n    this.prefix = prefix;\n    this._existing = existing;\n    this.counter = counter;\n  }\n\n  /**\n   * Copies this IdentifierIssuer.\n   *\n   * @return a copy of this IdentifierIssuer.\n   */\n  clone() {\n    const {prefix, _existing, counter} = this;\n    return new IdentifierIssuer(prefix, new Map(_existing), counter);\n  }\n\n  /**\n   * Gets the new identifier for the given old identifier, where if no old\n   * identifier is given a new identifier will be generated.\n   *\n   * @param [old] the old identifier to get the new identifier for.\n   *\n   * @return the new identifier.\n   */\n  getId(old) {\n    // return existing old identifier\n    const existing = old && this._existing.get(old);\n    if(existing) {\n      return existing;\n    }\n\n    // get next identifier\n    const identifier = this.prefix + this.counter;\n    this.counter++;\n\n    // save mapping\n    if(old) {\n      this._existing.set(old, identifier);\n    }\n\n    return identifier;\n  }\n\n  /**\n   * Returns true if the given old identifer has already been assigned a new\n   * identifier.\n   *\n   * @param old the old identifier to check.\n   *\n   * @return true if the old identifier has been assigned a new identifier,\n   *   false if not.\n   */\n  hasId(old) {\n    return this._existing.has(old);\n  }\n\n  /**\n   * Returns all of the IDs that have been issued new IDs in the order in\n   * which they were issued new IDs.\n   *\n   * @return the list of old IDs that has been issued new IDs in order.\n   */\n  getOldIds() {\n    return [...this._existing.keys()];\n  }\n};\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n","/*\n * Copyright (c) 2016-2021 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nrequire('setimmediate');\n\nconst crypto = self.crypto || self.msCrypto;\n\n// TODO: synchronous version no longer supported in browser\n\nmodule.exports = class MessageDigest {\n  /**\n   * Creates a new MessageDigest.\n   *\n   * @param algorithm the algorithm to use.\n   */\n  constructor(algorithm) {\n    // check if crypto.subtle is available\n    // check is here rather than top-level to only fail if class is used\n    if(!(crypto && crypto.subtle)) {\n      throw new Error('crypto.subtle not found.');\n    }\n    if(algorithm === 'sha256') {\n      this.algorithm = {name: 'SHA-256'};\n    } else if(algorithm === 'sha1') {\n      this.algorithm = {name: 'SHA-1'};\n    } else {\n      throw new Error(`Unsupport algorithm \"${algorithm}\".`);\n    }\n    this._content = '';\n  }\n\n  update(msg) {\n    this._content += msg;\n  }\n\n  async digest() {\n    const data = new TextEncoder().encode(this._content);\n    const buffer = new Uint8Array(\n      await crypto.subtle.digest(this.algorithm, data));\n    // return digest in hex\n    let hex = '';\n    for(let i = 0; i < buffer.length; ++i) {\n      hex += buffer[i].toString(16).padStart(2, '0');\n    }\n    return hex;\n  }\n};\n","/*\n * Copyright (c) 2016-2021 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\n// TODO: convert to ES6 iterable?\n\nmodule.exports = class Permuter {\n  /**\n   * A Permuter iterates over all possible permutations of the given array\n   * of elements.\n   *\n   * @param list the array of elements to iterate over.\n   */\n  constructor(list) {\n    // original array\n    this.current = list.sort();\n    // indicates whether there are more permutations\n    this.done = false;\n    // directional info for permutation algorithm\n    this.dir = new Map();\n    for(let i = 0; i < list.length; ++i) {\n      this.dir.set(list[i], true);\n    }\n  }\n\n  /**\n   * Returns true if there is another permutation.\n   *\n   * @return true if there is another permutation, false if not.\n   */\n  hasNext() {\n    return !this.done;\n  }\n\n  /**\n   * Gets the next permutation. Call hasNext() to ensure there is another one\n   * first.\n   *\n   * @return the next permutation.\n   */\n  next() {\n    // copy current permutation to return it\n    const {current, dir} = this;\n    const rval = current.slice();\n\n    /* Calculate the next permutation using the Steinhaus-Johnson-Trotter\n     permutation algorithm. */\n\n    // get largest mobile element k\n    // (mobile: element is greater than the one it is looking at)\n    let k = null;\n    let pos = 0;\n    const length = current.length;\n    for(let i = 0; i < length; ++i) {\n      const element = current[i];\n      const left = dir.get(element);\n      if((k === null || element > k) &&\n        ((left && i > 0 && element > current[i - 1]) ||\n        (!left && i < (length - 1) && element > current[i + 1]))) {\n        k = element;\n        pos = i;\n      }\n    }\n\n    // no more permutations\n    if(k === null) {\n      this.done = true;\n    } else {\n      // swap k and the element it is looking at\n      const swap = dir.get(k) ? pos - 1 : pos + 1;\n      current[pos] = current[swap];\n      current[swap] = k;\n\n      // reverse the direction of all elements larger than k\n      for(const element of current) {\n        if(element > k) {\n          dir.set(element, !dir.get(element));\n        }\n      }\n    }\n\n    return rval;\n  }\n};\n","/*\n * Copyright (c) 2016-2021 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\n// eslint-disable-next-line no-unused-vars\nconst TERMS = ['subject', 'predicate', 'object', 'graph'];\nconst RDF = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#';\nconst RDF_LANGSTRING = RDF + 'langString';\nconst XSD_STRING = 'http://www.w3.org/2001/XMLSchema#string';\n\nconst TYPE_NAMED_NODE = 'NamedNode';\nconst TYPE_BLANK_NODE = 'BlankNode';\nconst TYPE_LITERAL = 'Literal';\nconst TYPE_DEFAULT_GRAPH = 'DefaultGraph';\n\n// build regexes\nconst REGEX = {};\n(() => {\n  const iri = '(?:<([^:]+:[^>]*)>)';\n  // https://www.w3.org/TR/turtle/#grammar-production-BLANK_NODE_LABEL\n  const PN_CHARS_BASE =\n    'A-Z' + 'a-z' +\n    '\\u00C0-\\u00D6' +\n    '\\u00D8-\\u00F6' +\n    '\\u00F8-\\u02FF' +\n    '\\u0370-\\u037D' +\n    '\\u037F-\\u1FFF' +\n    '\\u200C-\\u200D' +\n    '\\u2070-\\u218F' +\n    '\\u2C00-\\u2FEF' +\n    '\\u3001-\\uD7FF' +\n    '\\uF900-\\uFDCF' +\n    '\\uFDF0-\\uFFFD';\n    // TODO:\n    //'\\u10000-\\uEFFFF';\n  const PN_CHARS_U =\n    PN_CHARS_BASE +\n    '_';\n  const PN_CHARS =\n    PN_CHARS_U +\n    '0-9' +\n    '-' +\n    '\\u00B7' +\n    '\\u0300-\\u036F' +\n    '\\u203F-\\u2040';\n  const BLANK_NODE_LABEL =\n    '(_:' +\n      '(?:[' + PN_CHARS_U + '0-9])' +\n      '(?:(?:[' + PN_CHARS + '.])*(?:[' + PN_CHARS + ']))?' +\n    ')';\n  const bnode = BLANK_NODE_LABEL;\n  const plain = '\"([^\"\\\\\\\\]*(?:\\\\\\\\.[^\"\\\\\\\\]*)*)\"';\n  const datatype = '(?:\\\\^\\\\^' + iri + ')';\n  const language = '(?:@([a-zA-Z]+(?:-[a-zA-Z0-9]+)*))';\n  const literal = '(?:' + plain + '(?:' + datatype + '|' + language + ')?)';\n  const ws = '[ \\\\t]+';\n  const wso = '[ \\\\t]*';\n\n  // define quad part regexes\n  const subject = '(?:' + iri + '|' + bnode + ')' + ws;\n  const property = iri + ws;\n  const object = '(?:' + iri + '|' + bnode + '|' + literal + ')' + wso;\n  const graphName = '(?:\\\\.|(?:(?:' + iri + '|' + bnode + ')' + wso + '\\\\.))';\n\n  // end of line and empty regexes\n  REGEX.eoln = /(?:\\r\\n)|(?:\\n)|(?:\\r)/g;\n  REGEX.empty = new RegExp('^' + wso + '$');\n\n  // full quad regex\n  REGEX.quad = new RegExp(\n    '^' + wso + subject + property + object + graphName + wso + '$');\n})();\n\nmodule.exports = class NQuads {\n  /**\n   * Parses RDF in the form of N-Quads.\n   *\n   * @param input the N-Quads input to parse.\n   *\n   * @return an RDF dataset (an array of quads per http://rdf.js.org/).\n   */\n  static parse(input) {\n    // build RDF dataset\n    const dataset = [];\n\n    const graphs = {};\n\n    // split N-Quad input into lines\n    const lines = input.split(REGEX.eoln);\n    let lineNumber = 0;\n    for(const line of lines) {\n      lineNumber++;\n\n      // skip empty lines\n      if(REGEX.empty.test(line)) {\n        continue;\n      }\n\n      // parse quad\n      const match = line.match(REGEX.quad);\n      if(match === null) {\n        throw new Error('N-Quads parse error on line ' + lineNumber + '.');\n      }\n\n      // create RDF quad\n      const quad = {subject: null, predicate: null, object: null, graph: null};\n\n      // get subject\n      if(match[1] !== undefined) {\n        quad.subject = {termType: TYPE_NAMED_NODE, value: match[1]};\n      } else {\n        quad.subject = {termType: TYPE_BLANK_NODE, value: match[2]};\n      }\n\n      // get predicate\n      quad.predicate = {termType: TYPE_NAMED_NODE, value: match[3]};\n\n      // get object\n      if(match[4] !== undefined) {\n        quad.object = {termType: TYPE_NAMED_NODE, value: match[4]};\n      } else if(match[5] !== undefined) {\n        quad.object = {termType: TYPE_BLANK_NODE, value: match[5]};\n      } else {\n        quad.object = {\n          termType: TYPE_LITERAL,\n          value: undefined,\n          datatype: {\n            termType: TYPE_NAMED_NODE\n          }\n        };\n        if(match[7] !== undefined) {\n          quad.object.datatype.value = match[7];\n        } else if(match[8] !== undefined) {\n          quad.object.datatype.value = RDF_LANGSTRING;\n          quad.object.language = match[8];\n        } else {\n          quad.object.datatype.value = XSD_STRING;\n        }\n        quad.object.value = _unescape(match[6]);\n      }\n\n      // get graph\n      if(match[9] !== undefined) {\n        quad.graph = {\n          termType: TYPE_NAMED_NODE,\n          value: match[9]\n        };\n      } else if(match[10] !== undefined) {\n        quad.graph = {\n          termType: TYPE_BLANK_NODE,\n          value: match[10]\n        };\n      } else {\n        quad.graph = {\n          termType: TYPE_DEFAULT_GRAPH,\n          value: ''\n        };\n      }\n\n      // only add quad if it is unique in its graph\n      if(!(quad.graph.value in graphs)) {\n        graphs[quad.graph.value] = [quad];\n        dataset.push(quad);\n      } else {\n        let unique = true;\n        const quads = graphs[quad.graph.value];\n        for(const q of quads) {\n          if(_compareTriples(q, quad)) {\n            unique = false;\n            break;\n          }\n        }\n        if(unique) {\n          quads.push(quad);\n          dataset.push(quad);\n        }\n      }\n    }\n\n    return dataset;\n  }\n\n  /**\n   * Converts an RDF dataset to N-Quads.\n   *\n   * @param dataset (array of quads) the RDF dataset to convert.\n   *\n   * @return the N-Quads string.\n   */\n  static serialize(dataset) {\n    if(!Array.isArray(dataset)) {\n      dataset = NQuads.legacyDatasetToQuads(dataset);\n    }\n    const quads = [];\n    for(const quad of dataset) {\n      quads.push(NQuads.serializeQuad(quad));\n    }\n    return quads.sort().join('');\n  }\n\n  /**\n   * Converts an RDF quad to an N-Quad string (a single quad).\n   *\n   * @param quad the RDF quad convert.\n   *\n   * @return the N-Quad string.\n   */\n  static serializeQuad(quad) {\n    const s = quad.subject;\n    const p = quad.predicate;\n    const o = quad.object;\n    const g = quad.graph;\n\n    let nquad = '';\n\n    // subject can only be NamedNode or BlankNode\n    if(s.termType === TYPE_NAMED_NODE) {\n      nquad += `<${s.value}>`;\n    } else {\n      nquad += `${s.value}`;\n    }\n\n    // predicate can only be NamedNode\n    nquad += ` <${p.value}> `;\n\n    // object is NamedNode, BlankNode, or Literal\n    if(o.termType === TYPE_NAMED_NODE) {\n      nquad += `<${o.value}>`;\n    } else if(o.termType === TYPE_BLANK_NODE) {\n      nquad += o.value;\n    } else {\n      nquad += `\"${_escape(o.value)}\"`;\n      if(o.datatype.value === RDF_LANGSTRING) {\n        if(o.language) {\n          nquad += `@${o.language}`;\n        }\n      } else if(o.datatype.value !== XSD_STRING) {\n        nquad += `^^<${o.datatype.value}>`;\n      }\n    }\n\n    // graph can only be NamedNode or BlankNode (or DefaultGraph, but that\n    // does not add to `nquad`)\n    if(g.termType === TYPE_NAMED_NODE) {\n      nquad += ` <${g.value}>`;\n    } else if(g.termType === TYPE_BLANK_NODE) {\n      nquad += ` ${g.value}`;\n    }\n\n    nquad += ' .\\n';\n    return nquad;\n  }\n\n  /**\n   * Converts a legacy-formatted dataset to an array of quads dataset per\n   * http://rdf.js.org/.\n   *\n   * @param dataset the legacy dataset to convert.\n   *\n   * @return the array of quads dataset.\n   */\n  static legacyDatasetToQuads(dataset) {\n    const quads = [];\n\n    const termTypeMap = {\n      'blank node': TYPE_BLANK_NODE,\n      IRI: TYPE_NAMED_NODE,\n      literal: TYPE_LITERAL\n    };\n\n    for(const graphName in dataset) {\n      const triples = dataset[graphName];\n      triples.forEach(triple => {\n        const quad = {};\n        for(const componentName in triple) {\n          const oldComponent = triple[componentName];\n          const newComponent = {\n            termType: termTypeMap[oldComponent.type],\n            value: oldComponent.value\n          };\n          if(newComponent.termType === TYPE_LITERAL) {\n            newComponent.datatype = {\n              termType: TYPE_NAMED_NODE\n            };\n            if('datatype' in oldComponent) {\n              newComponent.datatype.value = oldComponent.datatype;\n            }\n            if('language' in oldComponent) {\n              if(!('datatype' in oldComponent)) {\n                newComponent.datatype.value = RDF_LANGSTRING;\n              }\n              newComponent.language = oldComponent.language;\n            } else if(!('datatype' in oldComponent)) {\n              newComponent.datatype.value = XSD_STRING;\n            }\n          }\n          quad[componentName] = newComponent;\n        }\n        if(graphName === '@default') {\n          quad.graph = {\n            termType: TYPE_DEFAULT_GRAPH,\n            value: ''\n          };\n        } else {\n          quad.graph = {\n            termType: graphName.startsWith('_:') ?\n              TYPE_BLANK_NODE : TYPE_NAMED_NODE,\n            value: graphName\n          };\n        }\n        quads.push(quad);\n      });\n    }\n\n    return quads;\n  }\n};\n\n/**\n * Compares two RDF triples for equality.\n *\n * @param t1 the first triple.\n * @param t2 the second triple.\n *\n * @return true if the triples are the same, false if not.\n */\nfunction _compareTriples(t1, t2) {\n  // compare subject and object types first as it is the quickest check\n  if(!(t1.subject.termType === t2.subject.termType &&\n    t1.object.termType === t2.object.termType)) {\n    return false;\n  }\n  // compare values\n  if(!(t1.subject.value === t2.subject.value &&\n    t1.predicate.value === t2.predicate.value &&\n    t1.object.value === t2.object.value)) {\n    return false;\n  }\n  if(t1.object.termType !== TYPE_LITERAL) {\n    // no `datatype` or `language` to check\n    return true;\n  }\n  return (\n    (t1.object.datatype.termType === t2.object.datatype.termType) &&\n    (t1.object.language === t2.object.language) &&\n    (t1.object.datatype.value === t2.object.datatype.value)\n  );\n}\n\nconst _escapeRegex = /[\"\\\\\\n\\r]/g;\n/**\n * Escape string to N-Quads literal\n */\nfunction _escape(s) {\n  return s.replace(_escapeRegex, function(match) {\n    switch(match) {\n      case '\"': return '\\\\\"';\n      case '\\\\': return '\\\\\\\\';\n      case '\\n': return '\\\\n';\n      case '\\r': return '\\\\r';\n    }\n  });\n}\n\nconst _unescapeRegex =\n  /(?:\\\\([tbnrf\"'\\\\]))|(?:\\\\u([0-9A-Fa-f]{4}))|(?:\\\\U([0-9A-Fa-f]{8}))/g;\n/**\n * Unescape N-Quads literal to string\n */\nfunction _unescape(s) {\n  return s.replace(_unescapeRegex, function(match, code, u, U) {\n    if(code) {\n      switch(code) {\n        case 't': return '\\t';\n        case 'b': return '\\b';\n        case 'n': return '\\n';\n        case 'r': return '\\r';\n        case 'f': return '\\f';\n        case '\"': return '\"';\n        case '\\'': return '\\'';\n        case '\\\\': return '\\\\';\n      }\n    }\n    if(u) {\n      return String.fromCharCode(parseInt(u, 16));\n    }\n    if(U) {\n      // FIXME: support larger values\n      throw new Error('Unsupported U escape');\n    }\n  });\n}\n","/*\n * Copyright (c) 2016-2021 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst IdentifierIssuer = require('./IdentifierIssuer');\nconst MessageDigest = require('./MessageDigest');\nconst Permuter = require('./Permuter');\nconst NQuads = require('./NQuads');\n\nmodule.exports = class URDNA2015 {\n  constructor() {\n    this.name = 'URDNA2015';\n    this.blankNodeInfo = new Map();\n    this.canonicalIssuer = new IdentifierIssuer('_:c14n');\n    this.hashAlgorithm = 'sha256';\n    this.quads = null;\n  }\n\n  // 4.4) Normalization Algorithm\n  async main(dataset) {\n    this.quads = dataset;\n\n    // 1) Create the normalization state.\n    // 2) For every quad in input dataset:\n    for(const quad of dataset) {\n      // 2.1) For each blank node that occurs in the quad, add a reference\n      // to the quad using the blank node identifier in the blank node to\n      // quads map, creating a new entry if necessary.\n      this._addBlankNodeQuadInfo({quad, component: quad.subject});\n      this._addBlankNodeQuadInfo({quad, component: quad.object});\n      this._addBlankNodeQuadInfo({quad, component: quad.graph});\n    }\n\n    // 3) Create a list of non-normalized blank node identifiers\n    // non-normalized identifiers and populate it using the keys from the\n    // blank node to quads map.\n    // Note: We use a map here and it was generated during step 2.\n\n    // 4) `simple` flag is skipped -- loop is optimized away. This optimization\n    // is permitted because there was a typo in the hash first degree quads\n    // algorithm in the URDNA2015 spec that was implemented widely making it\n    // such that it could not be fixed; the result was that the loop only\n    // needs to be run once and the first degree quad hashes will never change.\n    // 5.1-5.2 are skipped; first degree quad hashes are generated just once\n    // for all non-normalized blank nodes.\n\n    // 5.3) For each blank node identifier identifier in non-normalized\n    // identifiers:\n    const hashToBlankNodes = new Map();\n    const nonNormalized = [...this.blankNodeInfo.keys()];\n    let i = 0;\n    for(const id of nonNormalized) {\n      // Note: batch hashing first degree quads 100 at a time\n      if(++i % 100 === 0) {\n        await this._yield();\n      }\n      // steps 5.3.1 and 5.3.2:\n      await this._hashAndTrackBlankNode({id, hashToBlankNodes});\n    }\n\n    // 5.4) For each hash to identifier list mapping in hash to blank\n    // nodes map, lexicographically-sorted by hash:\n    const hashes = [...hashToBlankNodes.keys()].sort();\n    // optimize away second sort, gather non-unique hashes in order as we go\n    const nonUnique = [];\n    for(const hash of hashes) {\n      // 5.4.1) If the length of identifier list is greater than 1,\n      // continue to the next mapping.\n      const idList = hashToBlankNodes.get(hash);\n      if(idList.length > 1) {\n        nonUnique.push(idList);\n        continue;\n      }\n\n      // 5.4.2) Use the Issue Identifier algorithm, passing canonical\n      // issuer and the single blank node identifier in identifier\n      // list, identifier, to issue a canonical replacement identifier\n      // for identifier.\n      const id = idList[0];\n      this.canonicalIssuer.getId(id);\n\n      // Note: These steps are skipped, optimized away since the loop\n      // only needs to be run once.\n      // 5.4.3) Remove identifier from non-normalized identifiers.\n      // 5.4.4) Remove hash from the hash to blank nodes map.\n      // 5.4.5) Set simple to true.\n    }\n\n    // 6) For each hash to identifier list mapping in hash to blank nodes map,\n    // lexicographically-sorted by hash:\n    // Note: sort optimized away, use `nonUnique`.\n    for(const idList of nonUnique) {\n      // 6.1) Create hash path list where each item will be a result of\n      // running the Hash N-Degree Quads algorithm.\n      const hashPathList = [];\n\n      // 6.2) For each blank node identifier identifier in identifier list:\n      for(const id of idList) {\n        // 6.2.1) If a canonical identifier has already been issued for\n        // identifier, continue to the next identifier.\n        if(this.canonicalIssuer.hasId(id)) {\n          continue;\n        }\n\n        // 6.2.2) Create temporary issuer, an identifier issuer\n        // initialized with the prefix _:b.\n        const issuer = new IdentifierIssuer('_:b');\n\n        // 6.2.3) Use the Issue Identifier algorithm, passing temporary\n        // issuer and identifier, to issue a new temporary blank node\n        // identifier for identifier.\n        issuer.getId(id);\n\n        // 6.2.4) Run the Hash N-Degree Quads algorithm, passing\n        // temporary issuer, and append the result to the hash path list.\n        const result = await this.hashNDegreeQuads(id, issuer);\n        hashPathList.push(result);\n      }\n\n      // 6.3) For each result in the hash path list,\n      // lexicographically-sorted by the hash in result:\n      hashPathList.sort(_stringHashCompare);\n      for(const result of hashPathList) {\n        // 6.3.1) For each blank node identifier, existing identifier,\n        // that was issued a temporary identifier by identifier issuer\n        // in result, issue a canonical identifier, in the same order,\n        // using the Issue Identifier algorithm, passing canonical\n        // issuer and existing identifier.\n        const oldIds = result.issuer.getOldIds();\n        for(const id of oldIds) {\n          this.canonicalIssuer.getId(id);\n        }\n      }\n    }\n\n    /* Note: At this point all blank nodes in the set of RDF quads have been\n    assigned canonical identifiers, which have been stored in the canonical\n    issuer. Here each quad is updated by assigning each of its blank nodes\n    its new identifier. */\n\n    // 7) For each quad, quad, in input dataset:\n    const normalized = [];\n    for(const quad of this.quads) {\n      // 7.1) Create a copy, quad copy, of quad and replace any existing\n      // blank node identifiers using the canonical identifiers\n      // previously issued by canonical issuer.\n      // Note: We optimize with shallow copies here.\n      const q = {...quad};\n      q.subject = this._useCanonicalId({component: q.subject});\n      q.object = this._useCanonicalId({component: q.object});\n      q.graph = this._useCanonicalId({component: q.graph});\n      // 7.2) Add quad copy to the normalized dataset.\n      normalized.push(NQuads.serializeQuad(q));\n    }\n\n    // sort normalized output\n    normalized.sort();\n\n    // 8) Return the normalized dataset.\n    return normalized.join('');\n  }\n\n  // 4.6) Hash First Degree Quads\n  async hashFirstDegreeQuads(id) {\n    // 1) Initialize nquads to an empty list. It will be used to store quads in\n    // N-Quads format.\n    const nquads = [];\n\n    // 2) Get the list of quads `quads` associated with the reference blank node\n    // identifier in the blank node to quads map.\n    const info = this.blankNodeInfo.get(id);\n    const quads = info.quads;\n\n    // 3) For each quad `quad` in `quads`:\n    for(const quad of quads) {\n      // 3.1) Serialize the quad in N-Quads format with the following special\n      // rule:\n\n      // 3.1.1) If any component in quad is an blank node, then serialize it\n      // using a special identifier as follows:\n      const copy = {\n        subject: null, predicate: quad.predicate, object: null, graph: null\n      };\n      // 3.1.2) If the blank node's existing blank node identifier matches\n      // the reference blank node identifier then use the blank node\n      // identifier _:a, otherwise, use the blank node identifier _:z.\n      copy.subject = this.modifyFirstDegreeComponent(\n        id, quad.subject, 'subject');\n      copy.object = this.modifyFirstDegreeComponent(\n        id, quad.object, 'object');\n      copy.graph = this.modifyFirstDegreeComponent(\n        id, quad.graph, 'graph');\n      nquads.push(NQuads.serializeQuad(copy));\n    }\n\n    // 4) Sort nquads in lexicographical order.\n    nquads.sort();\n\n    // 5) Return the hash that results from passing the sorted, joined nquads\n    // through the hash algorithm.\n    const md = new MessageDigest(this.hashAlgorithm);\n    for(const nquad of nquads) {\n      md.update(nquad);\n    }\n    info.hash = await md.digest();\n    return info.hash;\n  }\n\n  // 4.7) Hash Related Blank Node\n  async hashRelatedBlankNode(related, quad, issuer, position) {\n    // 1) Set the identifier to use for related, preferring first the canonical\n    // identifier for related if issued, second the identifier issued by issuer\n    // if issued, and last, if necessary, the result of the Hash First Degree\n    // Quads algorithm, passing related.\n    let id;\n    if(this.canonicalIssuer.hasId(related)) {\n      id = this.canonicalIssuer.getId(related);\n    } else if(issuer.hasId(related)) {\n      id = issuer.getId(related);\n    } else {\n      id = this.blankNodeInfo.get(related).hash;\n    }\n\n    // 2) Initialize a string input to the value of position.\n    // Note: We use a hash object instead.\n    const md = new MessageDigest(this.hashAlgorithm);\n    md.update(position);\n\n    // 3) If position is not g, append <, the value of the predicate in quad,\n    // and > to input.\n    if(position !== 'g') {\n      md.update(this.getRelatedPredicate(quad));\n    }\n\n    // 4) Append identifier to input.\n    md.update(id);\n\n    // 5) Return the hash that results from passing input through the hash\n    // algorithm.\n    return md.digest();\n  }\n\n  // 4.8) Hash N-Degree Quads\n  async hashNDegreeQuads(id, issuer) {\n    // 1) Create a hash to related blank nodes map for storing hashes that\n    // identify related blank nodes.\n    // Note: 2) and 3) handled within `createHashToRelated`\n    const md = new MessageDigest(this.hashAlgorithm);\n    const hashToRelated = await this.createHashToRelated(id, issuer);\n\n    // 4) Create an empty string, data to hash.\n    // Note: We created a hash object `md` above instead.\n\n    // 5) For each related hash to blank node list mapping in hash to related\n    // blank nodes map, sorted lexicographically by related hash:\n    const hashes = [...hashToRelated.keys()].sort();\n    for(const hash of hashes) {\n      // 5.1) Append the related hash to the data to hash.\n      md.update(hash);\n\n      // 5.2) Create a string chosen path.\n      let chosenPath = '';\n\n      // 5.3) Create an unset chosen issuer variable.\n      let chosenIssuer;\n\n      // 5.4) For each permutation of blank node list:\n      const permuter = new Permuter(hashToRelated.get(hash));\n      let i = 0;\n      while(permuter.hasNext()) {\n        const permutation = permuter.next();\n        // Note: batch permutations 3 at a time\n        if(++i % 3 === 0) {\n          await this._yield();\n        }\n\n        // 5.4.1) Create a copy of issuer, issuer copy.\n        let issuerCopy = issuer.clone();\n\n        // 5.4.2) Create a string path.\n        let path = '';\n\n        // 5.4.3) Create a recursion list, to store blank node identifiers\n        // that must be recursively processed by this algorithm.\n        const recursionList = [];\n\n        // 5.4.4) For each related in permutation:\n        let nextPermutation = false;\n        for(const related of permutation) {\n          // 5.4.4.1) If a canonical identifier has been issued for\n          // related, append it to path.\n          if(this.canonicalIssuer.hasId(related)) {\n            path += this.canonicalIssuer.getId(related);\n          } else {\n            // 5.4.4.2) Otherwise:\n            // 5.4.4.2.1) If issuer copy has not issued an identifier for\n            // related, append related to recursion list.\n            if(!issuerCopy.hasId(related)) {\n              recursionList.push(related);\n            }\n            // 5.4.4.2.2) Use the Issue Identifier algorithm, passing\n            // issuer copy and related and append the result to path.\n            path += issuerCopy.getId(related);\n          }\n\n          // 5.4.4.3) If chosen path is not empty and the length of path\n          // is greater than or equal to the length of chosen path and\n          // path is lexicographically greater than chosen path, then\n          // skip to the next permutation.\n          // Note: Comparing path length to chosen path length can be optimized\n          // away; only compare lexicographically.\n          if(chosenPath.length !== 0 && path > chosenPath) {\n            nextPermutation = true;\n            break;\n          }\n        }\n\n        if(nextPermutation) {\n          continue;\n        }\n\n        // 5.4.5) For each related in recursion list:\n        for(const related of recursionList) {\n          // 5.4.5.1) Set result to the result of recursively executing\n          // the Hash N-Degree Quads algorithm, passing related for\n          // identifier and issuer copy for path identifier issuer.\n          const result = await this.hashNDegreeQuads(related, issuerCopy);\n\n          // 5.4.5.2) Use the Issue Identifier algorithm, passing issuer\n          // copy and related and append the result to path.\n          path += issuerCopy.getId(related);\n\n          // 5.4.5.3) Append <, the hash in result, and > to path.\n          path += `<${result.hash}>`;\n\n          // 5.4.5.4) Set issuer copy to the identifier issuer in\n          // result.\n          issuerCopy = result.issuer;\n\n          // 5.4.5.5) If chosen path is not empty and the length of path\n          // is greater than or equal to the length of chosen path and\n          // path is lexicographically greater than chosen path, then\n          // skip to the next permutation.\n          // Note: Comparing path length to chosen path length can be optimized\n          // away; only compare lexicographically.\n          if(chosenPath.length !== 0 && path > chosenPath) {\n            nextPermutation = true;\n            break;\n          }\n        }\n\n        if(nextPermutation) {\n          continue;\n        }\n\n        // 5.4.6) If chosen path is empty or path is lexicographically\n        // less than chosen path, set chosen path to path and chosen\n        // issuer to issuer copy.\n        if(chosenPath.length === 0 || path < chosenPath) {\n          chosenPath = path;\n          chosenIssuer = issuerCopy;\n        }\n      }\n\n      // 5.5) Append chosen path to data to hash.\n      md.update(chosenPath);\n\n      // 5.6) Replace issuer, by reference, with chosen issuer.\n      issuer = chosenIssuer;\n    }\n\n    // 6) Return issuer and the hash that results from passing data to hash\n    // through the hash algorithm.\n    return {hash: await md.digest(), issuer};\n  }\n\n  // helper for modifying component during Hash First Degree Quads\n  modifyFirstDegreeComponent(id, component) {\n    if(component.termType !== 'BlankNode') {\n      return component;\n    }\n    /* Note: A mistake in the URDNA2015 spec that made its way into\n    implementations (and therefore must stay to avoid interop breakage)\n    resulted in an assigned canonical ID, if available for\n    `component.value`, not being used in place of `_:a`/`_:z`, so\n    we don't use it here. */\n    return {\n      termType: 'BlankNode',\n      value: component.value === id ? '_:a' : '_:z'\n    };\n  }\n\n  // helper for getting a related predicate\n  getRelatedPredicate(quad) {\n    return `<${quad.predicate.value}>`;\n  }\n\n  // helper for creating hash to related blank nodes map\n  async createHashToRelated(id, issuer) {\n    // 1) Create a hash to related blank nodes map for storing hashes that\n    // identify related blank nodes.\n    const hashToRelated = new Map();\n\n    // 2) Get a reference, quads, to the list of quads in the blank node to\n    // quads map for the key identifier.\n    const quads = this.blankNodeInfo.get(id).quads;\n\n    // 3) For each quad in quads:\n    let i = 0;\n    for(const quad of quads) {\n      // Note: batch hashing related blank node quads 100 at a time\n      if(++i % 100 === 0) {\n        await this._yield();\n      }\n      // 3.1) For each component in quad, if component is the subject, object,\n      // and graph name and it is a blank node that is not identified by\n      // identifier:\n      // steps 3.1.1 and 3.1.2 occur in helpers:\n      await Promise.all([\n        this._addRelatedBlankNodeHash({\n          quad, component: quad.subject, position: 's',\n          id, issuer, hashToRelated\n        }),\n        this._addRelatedBlankNodeHash({\n          quad, component: quad.object, position: 'o',\n          id, issuer, hashToRelated\n        }),\n        this._addRelatedBlankNodeHash({\n          quad, component: quad.graph, position: 'g',\n          id, issuer, hashToRelated\n        })\n      ]);\n    }\n\n    return hashToRelated;\n  }\n\n  async _hashAndTrackBlankNode({id, hashToBlankNodes}) {\n    // 5.3.1) Create a hash, hash, according to the Hash First Degree\n    // Quads algorithm.\n    const hash = await this.hashFirstDegreeQuads(id);\n\n    // 5.3.2) Add hash and identifier to hash to blank nodes map,\n    // creating a new entry if necessary.\n    const idList = hashToBlankNodes.get(hash);\n    if(!idList) {\n      hashToBlankNodes.set(hash, [id]);\n    } else {\n      idList.push(id);\n    }\n  }\n\n  _addBlankNodeQuadInfo({quad, component}) {\n    if(component.termType !== 'BlankNode') {\n      return;\n    }\n    const id = component.value;\n    const info = this.blankNodeInfo.get(id);\n    if(info) {\n      info.quads.add(quad);\n    } else {\n      this.blankNodeInfo.set(id, {quads: new Set([quad]), hash: null});\n    }\n  }\n\n  async _addRelatedBlankNodeHash(\n    {quad, component, position, id, issuer, hashToRelated}) {\n    if(!(component.termType === 'BlankNode' && component.value !== id)) {\n      return;\n    }\n    // 3.1.1) Set hash to the result of the Hash Related Blank Node\n    // algorithm, passing the blank node identifier for component as\n    // related, quad, path identifier issuer as issuer, and position as\n    // either s, o, or g based on whether component is a subject, object,\n    // graph name, respectively.\n    const related = component.value;\n    const hash = await this.hashRelatedBlankNode(\n      related, quad, issuer, position);\n\n    // 3.1.2) Add a mapping of hash to the blank node identifier for\n    // component to hash to related blank nodes map, adding an entry as\n    // necessary.\n    const entries = hashToRelated.get(hash);\n    if(entries) {\n      entries.push(related);\n    } else {\n      hashToRelated.set(hash, [related]);\n    }\n  }\n\n  _useCanonicalId({component}) {\n    if(component.termType === 'BlankNode' &&\n      !component.value.startsWith(this.canonicalIssuer.prefix)) {\n      return {\n        termType: 'BlankNode',\n        value: this.canonicalIssuer.getId(component.value)\n      };\n    }\n    return component;\n  }\n\n  async _yield() {\n    return new Promise(resolve => setImmediate(resolve));\n  }\n};\n\nfunction _stringHashCompare(a, b) {\n  return a.hash < b.hash ? -1 : a.hash > b.hash ? 1 : 0;\n}\n","/*\n * Copyright (c) 2016-2021 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst URDNA2015 = require('./URDNA2015');\n\nmodule.exports = class URDNA2012 extends URDNA2015 {\n  constructor() {\n    super();\n    this.name = 'URGNA2012';\n    this.hashAlgorithm = 'sha1';\n  }\n\n  // helper for modifying component during Hash First Degree Quads\n  modifyFirstDegreeComponent(id, component, key) {\n    if(component.termType !== 'BlankNode') {\n      return component;\n    }\n    if(key === 'graph') {\n      return {\n        termType: 'BlankNode',\n        value: '_:g'\n      };\n    }\n    return {\n      termType: 'BlankNode',\n      value: (component.value === id ? '_:a' : '_:z')\n    };\n  }\n\n  // helper for getting a related predicate\n  getRelatedPredicate(quad) {\n    return quad.predicate.value;\n  }\n\n  // helper for creating hash to related blank nodes map\n  async createHashToRelated(id, issuer) {\n    // 1) Create a hash to related blank nodes map for storing hashes that\n    // identify related blank nodes.\n    const hashToRelated = new Map();\n\n    // 2) Get a reference, quads, to the list of quads in the blank node to\n    // quads map for the key identifier.\n    const quads = this.blankNodeInfo.get(id).quads;\n\n    // 3) For each quad in quads:\n    let i = 0;\n    for(const quad of quads) {\n      // 3.1) If the quad's subject is a blank node that does not match\n      // identifier, set hash to the result of the Hash Related Blank Node\n      // algorithm, passing the blank node identifier for subject as related,\n      // quad, path identifier issuer as issuer, and p as position.\n      let position;\n      let related;\n      if(quad.subject.termType === 'BlankNode' && quad.subject.value !== id) {\n        related = quad.subject.value;\n        position = 'p';\n      } else if(\n        quad.object.termType === 'BlankNode' && quad.object.value !== id) {\n        // 3.2) Otherwise, if quad's object is a blank node that does not match\n        // identifier, to the result of the Hash Related Blank Node algorithm,\n        // passing the blank node identifier for object as related, quad, path\n        // identifier issuer as issuer, and r as position.\n        related = quad.object.value;\n        position = 'r';\n      } else {\n        // 3.3) Otherwise, continue to the next quad.\n        continue;\n      }\n      // Note: batch hashing related blank nodes 100 at a time\n      if(++i % 100 === 0) {\n        await this._yield();\n      }\n      // 3.4) Add a mapping of hash to the blank node identifier for the\n      // component that matched (subject or object) to hash to related blank\n      // nodes map, adding an entry as necessary.\n      const hash = await this.hashRelatedBlankNode(\n        related, quad, issuer, position);\n      const entries = hashToRelated.get(hash);\n      if(entries) {\n        entries.push(related);\n      } else {\n        hashToRelated.set(hash, [related]);\n      }\n    }\n\n    return hashToRelated;\n  }\n};\n","/*\n * Copyright (c) 2016-2021 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst IdentifierIssuer = require('./IdentifierIssuer');\nconst MessageDigest = require('./MessageDigest');\nconst Permuter = require('./Permuter');\nconst NQuads = require('./NQuads');\n\nmodule.exports = class URDNA2015Sync {\n  constructor() {\n    this.name = 'URDNA2015';\n    this.blankNodeInfo = new Map();\n    this.canonicalIssuer = new IdentifierIssuer('_:c14n');\n    this.hashAlgorithm = 'sha256';\n    this.quads = null;\n  }\n\n  // 4.4) Normalization Algorithm\n  main(dataset) {\n    this.quads = dataset;\n\n    // 1) Create the normalization state.\n    // 2) For every quad in input dataset:\n    for(const quad of dataset) {\n      // 2.1) For each blank node that occurs in the quad, add a reference\n      // to the quad using the blank node identifier in the blank node to\n      // quads map, creating a new entry if necessary.\n      this._addBlankNodeQuadInfo({quad, component: quad.subject});\n      this._addBlankNodeQuadInfo({quad, component: quad.object});\n      this._addBlankNodeQuadInfo({quad, component: quad.graph});\n    }\n\n    // 3) Create a list of non-normalized blank node identifiers\n    // non-normalized identifiers and populate it using the keys from the\n    // blank node to quads map.\n    // Note: We use a map here and it was generated during step 2.\n\n    // 4) `simple` flag is skipped -- loop is optimized away. This optimization\n    // is permitted because there was a typo in the hash first degree quads\n    // algorithm in the URDNA2015 spec that was implemented widely making it\n    // such that it could not be fixed; the result was that the loop only\n    // needs to be run once and the first degree quad hashes will never change.\n    // 5.1-5.2 are skipped; first degree quad hashes are generated just once\n    // for all non-normalized blank nodes.\n\n    // 5.3) For each blank node identifier identifier in non-normalized\n    // identifiers:\n    const hashToBlankNodes = new Map();\n    const nonNormalized = [...this.blankNodeInfo.keys()];\n    for(const id of nonNormalized) {\n      // steps 5.3.1 and 5.3.2:\n      this._hashAndTrackBlankNode({id, hashToBlankNodes});\n    }\n\n    // 5.4) For each hash to identifier list mapping in hash to blank\n    // nodes map, lexicographically-sorted by hash:\n    const hashes = [...hashToBlankNodes.keys()].sort();\n    // optimize away second sort, gather non-unique hashes in order as we go\n    const nonUnique = [];\n    for(const hash of hashes) {\n      // 5.4.1) If the length of identifier list is greater than 1,\n      // continue to the next mapping.\n      const idList = hashToBlankNodes.get(hash);\n      if(idList.length > 1) {\n        nonUnique.push(idList);\n        continue;\n      }\n\n      // 5.4.2) Use the Issue Identifier algorithm, passing canonical\n      // issuer and the single blank node identifier in identifier\n      // list, identifier, to issue a canonical replacement identifier\n      // for identifier.\n      const id = idList[0];\n      this.canonicalIssuer.getId(id);\n\n      // Note: These steps are skipped, optimized away since the loop\n      // only needs to be run once.\n      // 5.4.3) Remove identifier from non-normalized identifiers.\n      // 5.4.4) Remove hash from the hash to blank nodes map.\n      // 5.4.5) Set simple to true.\n    }\n\n    // 6) For each hash to identifier list mapping in hash to blank nodes map,\n    // lexicographically-sorted by hash:\n    // Note: sort optimized away, use `nonUnique`.\n    for(const idList of nonUnique) {\n      // 6.1) Create hash path list where each item will be a result of\n      // running the Hash N-Degree Quads algorithm.\n      const hashPathList = [];\n\n      // 6.2) For each blank node identifier identifier in identifier list:\n      for(const id of idList) {\n        // 6.2.1) If a canonical identifier has already been issued for\n        // identifier, continue to the next identifier.\n        if(this.canonicalIssuer.hasId(id)) {\n          continue;\n        }\n\n        // 6.2.2) Create temporary issuer, an identifier issuer\n        // initialized with the prefix _:b.\n        const issuer = new IdentifierIssuer('_:b');\n\n        // 6.2.3) Use the Issue Identifier algorithm, passing temporary\n        // issuer and identifier, to issue a new temporary blank node\n        // identifier for identifier.\n        issuer.getId(id);\n\n        // 6.2.4) Run the Hash N-Degree Quads algorithm, passing\n        // temporary issuer, and append the result to the hash path list.\n        const result = this.hashNDegreeQuads(id, issuer);\n        hashPathList.push(result);\n      }\n\n      // 6.3) For each result in the hash path list,\n      // lexicographically-sorted by the hash in result:\n      hashPathList.sort(_stringHashCompare);\n      for(const result of hashPathList) {\n        // 6.3.1) For each blank node identifier, existing identifier,\n        // that was issued a temporary identifier by identifier issuer\n        // in result, issue a canonical identifier, in the same order,\n        // using the Issue Identifier algorithm, passing canonical\n        // issuer and existing identifier.\n        const oldIds = result.issuer.getOldIds();\n        for(const id of oldIds) {\n          this.canonicalIssuer.getId(id);\n        }\n      }\n    }\n\n    /* Note: At this point all blank nodes in the set of RDF quads have been\n    assigned canonical identifiers, which have been stored in the canonical\n    issuer. Here each quad is updated by assigning each of its blank nodes\n    its new identifier. */\n\n    // 7) For each quad, quad, in input dataset:\n    const normalized = [];\n    for(const quad of this.quads) {\n      // 7.1) Create a copy, quad copy, of quad and replace any existing\n      // blank node identifiers using the canonical identifiers\n      // previously issued by canonical issuer.\n      // Note: We optimize with shallow copies here.\n      const q = {...quad};\n      q.subject = this._useCanonicalId({component: q.subject});\n      q.object = this._useCanonicalId({component: q.object});\n      q.graph = this._useCanonicalId({component: q.graph});\n      // 7.2) Add quad copy to the normalized dataset.\n      normalized.push(NQuads.serializeQuad(q));\n    }\n\n    // sort normalized output\n    normalized.sort();\n\n    // 8) Return the normalized dataset.\n    return normalized.join('');\n  }\n\n  // 4.6) Hash First Degree Quads\n  hashFirstDegreeQuads(id) {\n    // 1) Initialize nquads to an empty list. It will be used to store quads in\n    // N-Quads format.\n    const nquads = [];\n\n    // 2) Get the list of quads `quads` associated with the reference blank node\n    // identifier in the blank node to quads map.\n    const info = this.blankNodeInfo.get(id);\n    const quads = info.quads;\n\n    // 3) For each quad `quad` in `quads`:\n    for(const quad of quads) {\n      // 3.1) Serialize the quad in N-Quads format with the following special\n      // rule:\n\n      // 3.1.1) If any component in quad is an blank node, then serialize it\n      // using a special identifier as follows:\n      const copy = {\n        subject: null, predicate: quad.predicate, object: null, graph: null\n      };\n      // 3.1.2) If the blank node's existing blank node identifier matches\n      // the reference blank node identifier then use the blank node\n      // identifier _:a, otherwise, use the blank node identifier _:z.\n      copy.subject = this.modifyFirstDegreeComponent(\n        id, quad.subject, 'subject');\n      copy.object = this.modifyFirstDegreeComponent(\n        id, quad.object, 'object');\n      copy.graph = this.modifyFirstDegreeComponent(\n        id, quad.graph, 'graph');\n      nquads.push(NQuads.serializeQuad(copy));\n    }\n\n    // 4) Sort nquads in lexicographical order.\n    nquads.sort();\n\n    // 5) Return the hash that results from passing the sorted, joined nquads\n    // through the hash algorithm.\n    const md = new MessageDigest(this.hashAlgorithm);\n    for(const nquad of nquads) {\n      md.update(nquad);\n    }\n    info.hash = md.digest();\n    return info.hash;\n  }\n\n  // 4.7) Hash Related Blank Node\n  hashRelatedBlankNode(related, quad, issuer, position) {\n    // 1) Set the identifier to use for related, preferring first the canonical\n    // identifier for related if issued, second the identifier issued by issuer\n    // if issued, and last, if necessary, the result of the Hash First Degree\n    // Quads algorithm, passing related.\n    let id;\n    if(this.canonicalIssuer.hasId(related)) {\n      id = this.canonicalIssuer.getId(related);\n    } else if(issuer.hasId(related)) {\n      id = issuer.getId(related);\n    } else {\n      id = this.blankNodeInfo.get(related).hash;\n    }\n\n    // 2) Initialize a string input to the value of position.\n    // Note: We use a hash object instead.\n    const md = new MessageDigest(this.hashAlgorithm);\n    md.update(position);\n\n    // 3) If position is not g, append <, the value of the predicate in quad,\n    // and > to input.\n    if(position !== 'g') {\n      md.update(this.getRelatedPredicate(quad));\n    }\n\n    // 4) Append identifier to input.\n    md.update(id);\n\n    // 5) Return the hash that results from passing input through the hash\n    // algorithm.\n    return md.digest();\n  }\n\n  // 4.8) Hash N-Degree Quads\n  hashNDegreeQuads(id, issuer) {\n    // 1) Create a hash to related blank nodes map for storing hashes that\n    // identify related blank nodes.\n    // Note: 2) and 3) handled within `createHashToRelated`\n    const md = new MessageDigest(this.hashAlgorithm);\n    const hashToRelated = this.createHashToRelated(id, issuer);\n\n    // 4) Create an empty string, data to hash.\n    // Note: We created a hash object `md` above instead.\n\n    // 5) For each related hash to blank node list mapping in hash to related\n    // blank nodes map, sorted lexicographically by related hash:\n    const hashes = [...hashToRelated.keys()].sort();\n    for(const hash of hashes) {\n      // 5.1) Append the related hash to the data to hash.\n      md.update(hash);\n\n      // 5.2) Create a string chosen path.\n      let chosenPath = '';\n\n      // 5.3) Create an unset chosen issuer variable.\n      let chosenIssuer;\n\n      // 5.4) For each permutation of blank node list:\n      const permuter = new Permuter(hashToRelated.get(hash));\n      while(permuter.hasNext()) {\n        const permutation = permuter.next();\n\n        // 5.4.1) Create a copy of issuer, issuer copy.\n        let issuerCopy = issuer.clone();\n\n        // 5.4.2) Create a string path.\n        let path = '';\n\n        // 5.4.3) Create a recursion list, to store blank node identifiers\n        // that must be recursively processed by this algorithm.\n        const recursionList = [];\n\n        // 5.4.4) For each related in permutation:\n        let nextPermutation = false;\n        for(const related of permutation) {\n          // 5.4.4.1) If a canonical identifier has been issued for\n          // related, append it to path.\n          if(this.canonicalIssuer.hasId(related)) {\n            path += this.canonicalIssuer.getId(related);\n          } else {\n            // 5.4.4.2) Otherwise:\n            // 5.4.4.2.1) If issuer copy has not issued an identifier for\n            // related, append related to recursion list.\n            if(!issuerCopy.hasId(related)) {\n              recursionList.push(related);\n            }\n            // 5.4.4.2.2) Use the Issue Identifier algorithm, passing\n            // issuer copy and related and append the result to path.\n            path += issuerCopy.getId(related);\n          }\n\n          // 5.4.4.3) If chosen path is not empty and the length of path\n          // is greater than or equal to the length of chosen path and\n          // path is lexicographically greater than chosen path, then\n          // skip to the next permutation.\n          // Note: Comparing path length to chosen path length can be optimized\n          // away; only compare lexicographically.\n          if(chosenPath.length !== 0 && path > chosenPath) {\n            nextPermutation = true;\n            break;\n          }\n        }\n\n        if(nextPermutation) {\n          continue;\n        }\n\n        // 5.4.5) For each related in recursion list:\n        for(const related of recursionList) {\n          // 5.4.5.1) Set result to the result of recursively executing\n          // the Hash N-Degree Quads algorithm, passing related for\n          // identifier and issuer copy for path identifier issuer.\n          const result = this.hashNDegreeQuads(related, issuerCopy);\n\n          // 5.4.5.2) Use the Issue Identifier algorithm, passing issuer\n          // copy and related and append the result to path.\n          path += issuerCopy.getId(related);\n\n          // 5.4.5.3) Append <, the hash in result, and > to path.\n          path += `<${result.hash}>`;\n\n          // 5.4.5.4) Set issuer copy to the identifier issuer in\n          // result.\n          issuerCopy = result.issuer;\n\n          // 5.4.5.5) If chosen path is not empty and the length of path\n          // is greater than or equal to the length of chosen path and\n          // path is lexicographically greater than chosen path, then\n          // skip to the next permutation.\n          // Note: Comparing path length to chosen path length can be optimized\n          // away; only compare lexicographically.\n          if(chosenPath.length !== 0 && path > chosenPath) {\n            nextPermutation = true;\n            break;\n          }\n        }\n\n        if(nextPermutation) {\n          continue;\n        }\n\n        // 5.4.6) If chosen path is empty or path is lexicographically\n        // less than chosen path, set chosen path to path and chosen\n        // issuer to issuer copy.\n        if(chosenPath.length === 0 || path < chosenPath) {\n          chosenPath = path;\n          chosenIssuer = issuerCopy;\n        }\n      }\n\n      // 5.5) Append chosen path to data to hash.\n      md.update(chosenPath);\n\n      // 5.6) Replace issuer, by reference, with chosen issuer.\n      issuer = chosenIssuer;\n    }\n\n    // 6) Return issuer and the hash that results from passing data to hash\n    // through the hash algorithm.\n    return {hash: md.digest(), issuer};\n  }\n\n  // helper for modifying component during Hash First Degree Quads\n  modifyFirstDegreeComponent(id, component) {\n    if(component.termType !== 'BlankNode') {\n      return component;\n    }\n    /* Note: A mistake in the URDNA2015 spec that made its way into\n    implementations (and therefore must stay to avoid interop breakage)\n    resulted in an assigned canonical ID, if available for\n    `component.value`, not being used in place of `_:a`/`_:z`, so\n    we don't use it here. */\n    return {\n      termType: 'BlankNode',\n      value: component.value === id ? '_:a' : '_:z'\n    };\n  }\n\n  // helper for getting a related predicate\n  getRelatedPredicate(quad) {\n    return `<${quad.predicate.value}>`;\n  }\n\n  // helper for creating hash to related blank nodes map\n  createHashToRelated(id, issuer) {\n    // 1) Create a hash to related blank nodes map for storing hashes that\n    // identify related blank nodes.\n    const hashToRelated = new Map();\n\n    // 2) Get a reference, quads, to the list of quads in the blank node to\n    // quads map for the key identifier.\n    const quads = this.blankNodeInfo.get(id).quads;\n\n    // 3) For each quad in quads:\n    for(const quad of quads) {\n      // 3.1) For each component in quad, if component is the subject, object,\n      // or graph name and it is a blank node that is not identified by\n      // identifier:\n      // steps 3.1.1 and 3.1.2 occur in helpers:\n      this._addRelatedBlankNodeHash({\n        quad, component: quad.subject, position: 's',\n        id, issuer, hashToRelated\n      });\n      this._addRelatedBlankNodeHash({\n        quad, component: quad.object, position: 'o',\n        id, issuer, hashToRelated\n      });\n      this._addRelatedBlankNodeHash({\n        quad, component: quad.graph, position: 'g',\n        id, issuer, hashToRelated\n      });\n    }\n\n    return hashToRelated;\n  }\n\n  _hashAndTrackBlankNode({id, hashToBlankNodes}) {\n    // 5.3.1) Create a hash, hash, according to the Hash First Degree\n    // Quads algorithm.\n    const hash = this.hashFirstDegreeQuads(id);\n\n    // 5.3.2) Add hash and identifier to hash to blank nodes map,\n    // creating a new entry if necessary.\n    const idList = hashToBlankNodes.get(hash);\n    if(!idList) {\n      hashToBlankNodes.set(hash, [id]);\n    } else {\n      idList.push(id);\n    }\n  }\n\n  _addBlankNodeQuadInfo({quad, component}) {\n    if(component.termType !== 'BlankNode') {\n      return;\n    }\n    const id = component.value;\n    const info = this.blankNodeInfo.get(id);\n    if(info) {\n      info.quads.add(quad);\n    } else {\n      this.blankNodeInfo.set(id, {quads: new Set([quad]), hash: null});\n    }\n  }\n\n  _addRelatedBlankNodeHash(\n    {quad, component, position, id, issuer, hashToRelated}) {\n    if(!(component.termType === 'BlankNode' && component.value !== id)) {\n      return;\n    }\n    // 3.1.1) Set hash to the result of the Hash Related Blank Node\n    // algorithm, passing the blank node identifier for component as\n    // related, quad, path identifier issuer as issuer, and position as\n    // either s, o, or g based on whether component is a subject, object,\n    // graph name, respectively.\n    const related = component.value;\n    const hash = this.hashRelatedBlankNode(related, quad, issuer, position);\n\n    // 3.1.2) Add a mapping of hash to the blank node identifier for\n    // component to hash to related blank nodes map, adding an entry as\n    // necessary.\n    const entries = hashToRelated.get(hash);\n    if(entries) {\n      entries.push(related);\n    } else {\n      hashToRelated.set(hash, [related]);\n    }\n  }\n\n  _useCanonicalId({component}) {\n    if(component.termType === 'BlankNode' &&\n      !component.value.startsWith(this.canonicalIssuer.prefix)) {\n      return {\n        termType: 'BlankNode',\n        value: this.canonicalIssuer.getId(component.value)\n      };\n    }\n    return component;\n  }\n};\n\nfunction _stringHashCompare(a, b) {\n  return a.hash < b.hash ? -1 : a.hash > b.hash ? 1 : 0;\n}\n","/*\n * Copyright (c) 2016-2021 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst URDNA2015Sync = require('./URDNA2015Sync');\n\nmodule.exports = class URDNA2012Sync extends URDNA2015Sync {\n  constructor() {\n    super();\n    this.name = 'URGNA2012';\n    this.hashAlgorithm = 'sha1';\n  }\n\n  // helper for modifying component during Hash First Degree Quads\n  modifyFirstDegreeComponent(id, component, key) {\n    if(component.termType !== 'BlankNode') {\n      return component;\n    }\n    if(key === 'graph') {\n      return {\n        termType: 'BlankNode',\n        value: '_:g'\n      };\n    }\n    return {\n      termType: 'BlankNode',\n      value: (component.value === id ? '_:a' : '_:z')\n    };\n  }\n\n  // helper for getting a related predicate\n  getRelatedPredicate(quad) {\n    return quad.predicate.value;\n  }\n\n  // helper for creating hash to related blank nodes map\n  createHashToRelated(id, issuer) {\n    // 1) Create a hash to related blank nodes map for storing hashes that\n    // identify related blank nodes.\n    const hashToRelated = new Map();\n\n    // 2) Get a reference, quads, to the list of quads in the blank node to\n    // quads map for the key identifier.\n    const quads = this.blankNodeInfo.get(id).quads;\n\n    // 3) For each quad in quads:\n    for(const quad of quads) {\n      // 3.1) If the quad's subject is a blank node that does not match\n      // identifier, set hash to the result of the Hash Related Blank Node\n      // algorithm, passing the blank node identifier for subject as related,\n      // quad, path identifier issuer as issuer, and p as position.\n      let position;\n      let related;\n      if(quad.subject.termType === 'BlankNode' && quad.subject.value !== id) {\n        related = quad.subject.value;\n        position = 'p';\n      } else if(\n        quad.object.termType === 'BlankNode' && quad.object.value !== id) {\n        // 3.2) Otherwise, if quad's object is a blank node that does not match\n        // identifier, to the result of the Hash Related Blank Node algorithm,\n        // passing the blank node identifier for object as related, quad, path\n        // identifier issuer as issuer, and r as position.\n        related = quad.object.value;\n        position = 'r';\n      } else {\n        // 3.3) Otherwise, continue to the next quad.\n        continue;\n      }\n      // 3.4) Add a mapping of hash to the blank node identifier for the\n      // component that matched (subject or object) to hash to related blank\n      // nodes map, adding an entry as necessary.\n      const hash = this.hashRelatedBlankNode(related, quad, issuer, position);\n      const entries = hashToRelated.get(hash);\n      if(entries) {\n        entries.push(related);\n      } else {\n        hashToRelated.set(hash, [related]);\n      }\n    }\n\n    return hashToRelated;\n  }\n};\n","/**\n * An implementation of the RDF Dataset Normalization specification.\n * This library works in the browser and node.js.\n *\n * BSD 3-Clause License\n * Copyright (c) 2016-2021 Digital Bazaar, Inc.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * Redistributions of source code must retain the above copyright notice,\n * this list of conditions and the following disclaimer.\n *\n * Redistributions in binary form must reproduce the above copyright\n * notice, this list of conditions and the following disclaimer in the\n * documentation and/or other materials provided with the distribution.\n *\n * Neither the name of the Digital Bazaar, Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\n * IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED\n * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A\n * PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n'use strict';\n\nconst URDNA2015 = require('./URDNA2015');\nconst URGNA2012 = require('./URGNA2012');\nconst URDNA2015Sync = require('./URDNA2015Sync');\nconst URGNA2012Sync = require('./URGNA2012Sync');\n\n// optional native support\nlet rdfCanonizeNative;\ntry {\n  rdfCanonizeNative = require('rdf-canonize-native');\n} catch(e) {}\n\nconst api = {};\nmodule.exports = api;\n\n// expose helpers\napi.NQuads = require('./NQuads');\napi.IdentifierIssuer = require('./IdentifierIssuer');\n\n/**\n * Get or set native API.\n *\n * @param api the native API.\n *\n * @return the currently set native API.\n */\napi._rdfCanonizeNative = function(api) {\n  if(api) {\n    rdfCanonizeNative = api;\n  }\n  return rdfCanonizeNative;\n};\n\n/**\n * Asynchronously canonizes an RDF dataset.\n *\n * @param dataset the dataset to canonize.\n * @param options the options to use:\n *          algorithm the canonicalization algorithm to use, `URDNA2015` or\n *            `URGNA2012`.\n *          [useNative] use native implementation (default: false).\n *\n * @return a Promise that resolves to the canonicalized RDF Dataset.\n */\napi.canonize = async function(dataset, options) {\n  // back-compat with legacy dataset\n  if(!Array.isArray(dataset)) {\n    dataset = api.NQuads.legacyDatasetToQuads(dataset);\n  }\n\n  if(options.useNative) {\n    if(!rdfCanonizeNative) {\n      throw new Error('rdf-canonize-native not available');\n    }\n    // TODO: convert native algorithm to Promise-based async\n    return new Promise((resolve, reject) =>\n      rdfCanonizeNative.canonize(dataset, options, (err, canonical) =>\n        err ? reject(err) : resolve(canonical)));\n  }\n\n  if(options.algorithm === 'URDNA2015') {\n    return new URDNA2015(options).main(dataset);\n  }\n  if(options.algorithm === 'URGNA2012') {\n    return new URGNA2012(options).main(dataset);\n  }\n  if(!('algorithm' in options)) {\n    throw new Error('No RDF Dataset Canonicalization algorithm specified.');\n  }\n  throw new Error(\n    'Invalid RDF Dataset Canonicalization algorithm: ' + options.algorithm);\n};\n\n/**\n * This method is no longer available in the public API, it is for testing\n * only. It synchronously canonizes an RDF dataset and does not work in the\n * browser.\n *\n * @param dataset the dataset to canonize.\n * @param options the options to use:\n *          algorithm the canonicalization algorithm to use, `URDNA2015` or\n *            `URGNA2012`.\n *          [useNative] use native implementation (default: false).\n *\n * @return the RDF dataset in canonical form.\n */\napi._canonizeSync = function(dataset, options) {\n  // back-compat with legacy dataset\n  if(!Array.isArray(dataset)) {\n    dataset = api.NQuads.legacyDatasetToQuads(dataset);\n  }\n\n  if(options.useNative) {\n    if(rdfCanonizeNative) {\n      return rdfCanonizeNative.canonizeSync(dataset, options);\n    }\n    throw new Error('rdf-canonize-native not available');\n  }\n  if(options.algorithm === 'URDNA2015') {\n    return new URDNA2015Sync(options).main(dataset);\n  }\n  if(options.algorithm === 'URGNA2012') {\n    return new URGNA2012Sync(options).main(dataset);\n  }\n  if(!('algorithm' in options)) {\n    throw new Error('No RDF Dataset Canonicalization algorithm specified.');\n  }\n  throw new Error(\n    'Invalid RDF Dataset Canonicalization algorithm: ' + options.algorithm);\n};\n","/**\n * An implementation of the RDF Dataset Normalization specification.\n *\n * @author Dave Longley\n *\n * Copyright 2010-2021 Digital Bazaar, Inc.\n */\nmodule.exports = require('./lib');\n","/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst api = {};\nmodule.exports = api;\n\n/**\n * Returns true if the given value is an Array.\n *\n * @param v the value to check.\n *\n * @return true if the value is an Array, false if not.\n */\napi.isArray = Array.isArray;\n\n/**\n * Returns true if the given value is a Boolean.\n *\n * @param v the value to check.\n *\n * @return true if the value is a Boolean, false if not.\n */\napi.isBoolean = v => (typeof v === 'boolean' ||\n  Object.prototype.toString.call(v) === '[object Boolean]');\n\n/**\n * Returns true if the given value is a double.\n *\n * @param v the value to check.\n *\n * @return true if the value is a double, false if not.\n */\napi.isDouble = v => api.isNumber(v) &&\n  (String(v).indexOf('.') !== -1 || Math.abs(v) >= 1e21);\n\n/**\n * Returns true if the given value is an empty Object.\n *\n * @param v the value to check.\n *\n * @return true if the value is an empty Object, false if not.\n */\napi.isEmptyObject = v => api.isObject(v) && Object.keys(v).length === 0;\n\n/**\n * Returns true if the given value is a Number.\n *\n * @param v the value to check.\n *\n * @return true if the value is a Number, false if not.\n */\napi.isNumber = v => (typeof v === 'number' ||\n  Object.prototype.toString.call(v) === '[object Number]');\n\n/**\n * Returns true if the given value is numeric.\n *\n * @param v the value to check.\n *\n * @return true if the value is numeric, false if not.\n */\napi.isNumeric = v => !isNaN(parseFloat(v)) && isFinite(v);\n\n/**\n * Returns true if the given value is an Object.\n *\n * @param v the value to check.\n *\n * @return true if the value is an Object, false if not.\n */\napi.isObject = v => Object.prototype.toString.call(v) === '[object Object]';\n\n/**\n * Returns true if the given value is a String.\n *\n * @param v the value to check.\n *\n * @return true if the value is a String, false if not.\n */\napi.isString = v => (typeof v === 'string' ||\n  Object.prototype.toString.call(v) === '[object String]');\n\n/**\n * Returns true if the given value is undefined.\n *\n * @param v the value to check.\n *\n * @return true if the value is undefined, false if not.\n */\napi.isUndefined = v => typeof v === 'undefined';\n","/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst types = require('./types');\n\nconst api = {};\nmodule.exports = api;\n\n/**\n * Returns true if the given value is a subject with properties.\n *\n * @param v the value to check.\n *\n * @return true if the value is a subject with properties, false if not.\n */\napi.isSubject = v => {\n  // Note: A value is a subject if all of these hold true:\n  // 1. It is an Object.\n  // 2. It is not a @value, @set, or @list.\n  // 3. It has more than 1 key OR any existing key is not @id.\n  if(types.isObject(v) &&\n    !(('@value' in v) || ('@set' in v) || ('@list' in v))) {\n    const keyCount = Object.keys(v).length;\n    return (keyCount > 1 || !('@id' in v));\n  }\n  return false;\n};\n\n/**\n * Returns true if the given value is a subject reference.\n *\n * @param v the value to check.\n *\n * @return true if the value is a subject reference, false if not.\n */\napi.isSubjectReference = v =>\n  // Note: A value is a subject reference if all of these hold true:\n  // 1. It is an Object.\n  // 2. It has a single key: @id.\n  (types.isObject(v) && Object.keys(v).length === 1 && ('@id' in v));\n\n/**\n * Returns true if the given value is a @value.\n *\n * @param v the value to check.\n *\n * @return true if the value is a @value, false if not.\n */\napi.isValue = v =>\n  // Note: A value is a @value if all of these hold true:\n  // 1. It is an Object.\n  // 2. It has the @value property.\n  types.isObject(v) && ('@value' in v);\n\n/**\n * Returns true if the given value is a @list.\n *\n * @param v the value to check.\n *\n * @return true if the value is a @list, false if not.\n */\napi.isList = v =>\n  // Note: A value is a @list if all of these hold true:\n  // 1. It is an Object.\n  // 2. It has the @list property.\n  types.isObject(v) && ('@list' in v);\n\n/**\n * Returns true if the given value is a @graph.\n *\n * @return true if the value is a @graph, false if not.\n */\napi.isGraph = v => {\n  // Note: A value is a graph if all of these hold true:\n  // 1. It is an object.\n  // 2. It has an `@graph` key.\n  // 3. It may have '@id' or '@index'\n  return types.isObject(v) &&\n    '@graph' in v &&\n    Object.keys(v)\n      .filter(key => key !== '@id' && key !== '@index').length === 1;\n};\n\n/**\n * Returns true if the given value is a simple @graph.\n *\n * @return true if the value is a simple @graph, false if not.\n */\napi.isSimpleGraph = v => {\n  // Note: A value is a simple graph if all of these hold true:\n  // 1. It is an object.\n  // 2. It has an `@graph` key.\n  // 3. It has only 1 key or 2 keys where one of them is `@index`.\n  return api.isGraph(v) && !('@id' in v);\n};\n\n/**\n * Returns true if the given value is a blank node.\n *\n * @param v the value to check.\n *\n * @return true if the value is a blank node, false if not.\n */\napi.isBlankNode = v => {\n  // Note: A value is a blank node if all of these hold true:\n  // 1. It is an Object.\n  // 2. If it has an @id key its value begins with '_:'.\n  // 3. It has no keys OR is not a @value, @set, or @list.\n  if(types.isObject(v)) {\n    if('@id' in v) {\n      return (v['@id'].indexOf('_:') === 0);\n    }\n    return (Object.keys(v).length === 0 ||\n      !(('@value' in v) || ('@set' in v) || ('@list' in v)));\n  }\n  return false;\n};\n","/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nmodule.exports = class JsonLdError extends Error {\n  /**\n   * Creates a JSON-LD Error.\n   *\n   * @param msg the error message.\n   * @param type the error type.\n   * @param details the error details.\n   */\n  constructor(\n    message = 'An unspecified JSON-LD error occurred.',\n    name = 'jsonld.Error',\n    details = {}) {\n    super(message);\n    this.name = name;\n    this.message = message;\n    this.details = details;\n  }\n};\n","/*\n * Copyright (c) 2017-2019 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst graphTypes = require('./graphTypes');\nconst types = require('./types');\n// TODO: move `IdentifierIssuer` to its own package\nconst IdentifierIssuer = require('rdf-canonize').IdentifierIssuer;\nconst JsonLdError = require('./JsonLdError');\n\n// constants\nconst REGEX_LINK_HEADERS = /(?:<[^>]*?>|\"[^\"]*?\"|[^,])+/g;\nconst REGEX_LINK_HEADER = /\\s*<([^>]*?)>\\s*(?:;\\s*(.*))?/;\nconst REGEX_LINK_HEADER_PARAMS =\n  /(.*?)=(?:(?:\"([^\"]*?)\")|([^\"]*?))\\s*(?:(?:;\\s*)|$)/g;\n\nconst DEFAULTS = {\n  headers: {\n    accept: 'application/ld+json, application/json'\n  }\n};\n\nconst api = {};\nmodule.exports = api;\napi.IdentifierIssuer = IdentifierIssuer;\n\n/**\n * Clones an object, array, Map, Set, or string/number. If a typed JavaScript\n * object is given, such as a Date, it will be converted to a string.\n *\n * @param value the value to clone.\n *\n * @return the cloned value.\n */\napi.clone = function(value) {\n  if(value && typeof value === 'object') {\n    let rval;\n    if(types.isArray(value)) {\n      rval = [];\n      for(let i = 0; i < value.length; ++i) {\n        rval[i] = api.clone(value[i]);\n      }\n    } else if(value instanceof Map) {\n      rval = new Map();\n      for(const [k, v] of value) {\n        rval.set(k, api.clone(v));\n      }\n    } else if(value instanceof Set) {\n      rval = new Set();\n      for(const v of value) {\n        rval.add(api.clone(v));\n      }\n    } else if(types.isObject(value)) {\n      rval = {};\n      for(const key in value) {\n        rval[key] = api.clone(value[key]);\n      }\n    } else {\n      rval = value.toString();\n    }\n    return rval;\n  }\n  return value;\n};\n\n/**\n * Ensure a value is an array. If the value is an array, it is returned.\n * Otherwise, it is wrapped in an array.\n *\n * @param value the value to return as an array.\n *\n * @return the value as an array.\n */\napi.asArray = function(value) {\n  return Array.isArray(value) ? value : [value];\n};\n\n/**\n * Builds an HTTP headers object for making a JSON-LD request from custom\n * headers and asserts the `accept` header isn't overridden.\n *\n * @param headers an object of headers with keys as header names and values\n *          as header values.\n *\n * @return an object of headers with a valid `accept` header.\n */\napi.buildHeaders = (headers = {}) => {\n  const hasAccept = Object.keys(headers).some(\n    h => h.toLowerCase() === 'accept');\n\n  if(hasAccept) {\n    throw new RangeError(\n      'Accept header may not be specified; only \"' +\n      DEFAULTS.headers.accept + '\" is supported.');\n  }\n\n  return Object.assign({Accept: DEFAULTS.headers.accept}, headers);\n};\n\n/**\n * Parses a link header. The results will be key'd by the value of \"rel\".\n *\n * Link: <http://json-ld.org/contexts/person.jsonld>;\n * rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\"\n *\n * Parses as: {\n *   'http://www.w3.org/ns/json-ld#context': {\n *     target: http://json-ld.org/contexts/person.jsonld,\n *     type: 'application/ld+json'\n *   }\n * }\n *\n * If there is more than one \"rel\" with the same IRI, then entries in the\n * resulting map for that \"rel\" will be arrays.\n *\n * @param header the link header to parse.\n */\napi.parseLinkHeader = header => {\n  const rval = {};\n  // split on unbracketed/unquoted commas\n  const entries = header.match(REGEX_LINK_HEADERS);\n  for(let i = 0; i < entries.length; ++i) {\n    let match = entries[i].match(REGEX_LINK_HEADER);\n    if(!match) {\n      continue;\n    }\n    const result = {target: match[1]};\n    const params = match[2];\n    while((match = REGEX_LINK_HEADER_PARAMS.exec(params))) {\n      result[match[1]] = (match[2] === undefined) ? match[3] : match[2];\n    }\n    const rel = result['rel'] || '';\n    if(Array.isArray(rval[rel])) {\n      rval[rel].push(result);\n    } else if(rval.hasOwnProperty(rel)) {\n      rval[rel] = [rval[rel], result];\n    } else {\n      rval[rel] = result;\n    }\n  }\n  return rval;\n};\n\n/**\n * Throws an exception if the given value is not a valid @type value.\n *\n * @param v the value to check.\n */\napi.validateTypeValue = (v, isFrame) => {\n  if(types.isString(v)) {\n    return;\n  }\n\n  if(types.isArray(v) && v.every(vv => types.isString(vv))) {\n    return;\n  }\n  if(isFrame && types.isObject(v)) {\n    switch(Object.keys(v).length) {\n      case 0:\n        // empty object is wildcard\n        return;\n      case 1:\n        // default entry is all strings\n        if('@default' in v &&\n          api.asArray(v['@default']).every(vv => types.isString(vv))) {\n          return;\n        }\n    }\n  }\n\n  throw new JsonLdError(\n    'Invalid JSON-LD syntax; \"@type\" value must a string, an array of ' +\n    'strings, an empty object, ' +\n    'or a default object.', 'jsonld.SyntaxError',\n    {code: 'invalid type value', value: v});\n};\n\n/**\n * Returns true if the given subject has the given property.\n *\n * @param subject the subject to check.\n * @param property the property to look for.\n *\n * @return true if the subject has the given property, false if not.\n */\napi.hasProperty = (subject, property) => {\n  if(subject.hasOwnProperty(property)) {\n    const value = subject[property];\n    return (!types.isArray(value) || value.length > 0);\n  }\n  return false;\n};\n\n/**\n * Determines if the given value is a property of the given subject.\n *\n * @param subject the subject to check.\n * @param property the property to check.\n * @param value the value to check.\n *\n * @return true if the value exists, false if not.\n */\napi.hasValue = (subject, property, value) => {\n  if(api.hasProperty(subject, property)) {\n    let val = subject[property];\n    const isList = graphTypes.isList(val);\n    if(types.isArray(val) || isList) {\n      if(isList) {\n        val = val['@list'];\n      }\n      for(let i = 0; i < val.length; ++i) {\n        if(api.compareValues(value, val[i])) {\n          return true;\n        }\n      }\n    } else if(!types.isArray(value)) {\n      // avoid matching the set of values with an array value parameter\n      return api.compareValues(value, val);\n    }\n  }\n  return false;\n};\n\n/**\n * Adds a value to a subject. If the value is an array, all values in the\n * array will be added.\n *\n * @param subject the subject to add the value to.\n * @param property the property that relates the value to the subject.\n * @param value the value to add.\n * @param [options] the options to use:\n *        [propertyIsArray] true if the property is always an array, false\n *          if not (default: false).\n *        [valueIsArray] true if the value to be added should be preserved as\n *          an array (lists) (default: false).\n *        [allowDuplicate] true to allow duplicates, false not to (uses a\n *          simple shallow comparison of subject ID or value) (default: true).\n *        [prependValue] false to prepend value to any existing values.\n *          (default: false)\n */\napi.addValue = (subject, property, value, options) => {\n  options = options || {};\n  if(!('propertyIsArray' in options)) {\n    options.propertyIsArray = false;\n  }\n  if(!('valueIsArray' in options)) {\n    options.valueIsArray = false;\n  }\n  if(!('allowDuplicate' in options)) {\n    options.allowDuplicate = true;\n  }\n  if(!('prependValue' in options)) {\n    options.prependValue = false;\n  }\n\n  if(options.valueIsArray) {\n    subject[property] = value;\n  } else if(types.isArray(value)) {\n    if(value.length === 0 && options.propertyIsArray &&\n      !subject.hasOwnProperty(property)) {\n      subject[property] = [];\n    }\n    if(options.prependValue) {\n      value = value.concat(subject[property]);\n      subject[property] = [];\n    }\n    for(let i = 0; i < value.length; ++i) {\n      api.addValue(subject, property, value[i], options);\n    }\n  } else if(subject.hasOwnProperty(property)) {\n    // check if subject already has value if duplicates not allowed\n    const hasValue = (!options.allowDuplicate &&\n      api.hasValue(subject, property, value));\n\n    // make property an array if value not present or always an array\n    if(!types.isArray(subject[property]) &&\n      (!hasValue || options.propertyIsArray)) {\n      subject[property] = [subject[property]];\n    }\n\n    // add new value\n    if(!hasValue) {\n      if(options.prependValue) {\n        subject[property].unshift(value);\n      } else {\n        subject[property].push(value);\n      }\n    }\n  } else {\n    // add new value as set or single value\n    subject[property] = options.propertyIsArray ? [value] : value;\n  }\n};\n\n/**\n * Gets all of the values for a subject's property as an array.\n *\n * @param subject the subject.\n * @param property the property.\n *\n * @return all of the values for a subject's property as an array.\n */\napi.getValues = (subject, property) => [].concat(subject[property] || []);\n\n/**\n * Removes a property from a subject.\n *\n * @param subject the subject.\n * @param property the property.\n */\napi.removeProperty = (subject, property) => {\n  delete subject[property];\n};\n\n/**\n * Removes a value from a subject.\n *\n * @param subject the subject.\n * @param property the property that relates the value to the subject.\n * @param value the value to remove.\n * @param [options] the options to use:\n *          [propertyIsArray] true if the property is always an array, false\n *            if not (default: false).\n */\napi.removeValue = (subject, property, value, options) => {\n  options = options || {};\n  if(!('propertyIsArray' in options)) {\n    options.propertyIsArray = false;\n  }\n\n  // filter out value\n  const values = api.getValues(subject, property).filter(\n    e => !api.compareValues(e, value));\n\n  if(values.length === 0) {\n    api.removeProperty(subject, property);\n  } else if(values.length === 1 && !options.propertyIsArray) {\n    subject[property] = values[0];\n  } else {\n    subject[property] = values;\n  }\n};\n\n/**\n * Relabels all blank nodes in the given JSON-LD input.\n *\n * @param input the JSON-LD input.\n * @param [options] the options to use:\n *          [issuer] an IdentifierIssuer to use to label blank nodes.\n */\napi.relabelBlankNodes = (input, options) => {\n  options = options || {};\n  const issuer = options.issuer || new IdentifierIssuer('_:b');\n  return _labelBlankNodes(issuer, input);\n};\n\n/**\n * Compares two JSON-LD values for equality. Two JSON-LD values will be\n * considered equal if:\n *\n * 1. They are both primitives of the same type and value.\n * 2. They are both @values with the same @value, @type, @language,\n *   and @index, OR\n * 3. They both have @ids they are the same.\n *\n * @param v1 the first value.\n * @param v2 the second value.\n *\n * @return true if v1 and v2 are considered equal, false if not.\n */\napi.compareValues = (v1, v2) => {\n  // 1. equal primitives\n  if(v1 === v2) {\n    return true;\n  }\n\n  // 2. equal @values\n  if(graphTypes.isValue(v1) && graphTypes.isValue(v2) &&\n    v1['@value'] === v2['@value'] &&\n    v1['@type'] === v2['@type'] &&\n    v1['@language'] === v2['@language'] &&\n    v1['@index'] === v2['@index']) {\n    return true;\n  }\n\n  // 3. equal @ids\n  if(types.isObject(v1) &&\n    ('@id' in v1) &&\n    types.isObject(v2) &&\n    ('@id' in v2)) {\n    return v1['@id'] === v2['@id'];\n  }\n\n  return false;\n};\n\n/**\n * Compares two strings first based on length and then lexicographically.\n *\n * @param a the first string.\n * @param b the second string.\n *\n * @return -1 if a < b, 1 if a > b, 0 if a === b.\n */\napi.compareShortestLeast = (a, b) => {\n  if(a.length < b.length) {\n    return -1;\n  }\n  if(b.length < a.length) {\n    return 1;\n  }\n  if(a === b) {\n    return 0;\n  }\n  return (a < b) ? -1 : 1;\n};\n\n/**\n * Labels the blank nodes in the given value using the given IdentifierIssuer.\n *\n * @param issuer the IdentifierIssuer to use.\n * @param element the element with blank nodes to rename.\n *\n * @return the element.\n */\nfunction _labelBlankNodes(issuer, element) {\n  if(types.isArray(element)) {\n    for(let i = 0; i < element.length; ++i) {\n      element[i] = _labelBlankNodes(issuer, element[i]);\n    }\n  } else if(graphTypes.isList(element)) {\n    element['@list'] = _labelBlankNodes(issuer, element['@list']);\n  } else if(types.isObject(element)) {\n    // relabel blank node\n    if(graphTypes.isBlankNode(element)) {\n      element['@id'] = issuer.getId(element['@id']);\n    }\n\n    // recursively apply to all keys\n    const keys = Object.keys(element).sort();\n    for(let ki = 0; ki < keys.length; ++ki) {\n      const key = keys[ki];\n      if(key !== '@id') {\n        element[key] = _labelBlankNodes(issuer, element[key]);\n      }\n    }\n  }\n\n  return element;\n}\n","/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst RDF = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#';\nconst XSD = 'http://www.w3.org/2001/XMLSchema#';\n\nmodule.exports = {\n  // TODO: Deprecated and will be removed later. Use LINK_HEADER_CONTEXT.\n  LINK_HEADER_REL: 'http://www.w3.org/ns/json-ld#context',\n\n  LINK_HEADER_CONTEXT: 'http://www.w3.org/ns/json-ld#context',\n\n  RDF,\n  RDF_LIST: RDF + 'List',\n  RDF_FIRST: RDF + 'first',\n  RDF_REST: RDF + 'rest',\n  RDF_NIL: RDF + 'nil',\n  RDF_TYPE: RDF + 'type',\n  RDF_PLAIN_LITERAL: RDF + 'PlainLiteral',\n  RDF_XML_LITERAL: RDF + 'XMLLiteral',\n  RDF_JSON_LITERAL: RDF + 'JSON',\n  RDF_OBJECT: RDF + 'object',\n  RDF_LANGSTRING: RDF + 'langString',\n\n  XSD,\n  XSD_BOOLEAN: XSD + 'boolean',\n  XSD_DOUBLE: XSD + 'double',\n  XSD_INTEGER: XSD + 'integer',\n  XSD_STRING: XSD + 'string',\n};\n","/*\n * Copyright (c) 2017-2019 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nmodule.exports = class RequestQueue {\n  /**\n   * Creates a simple queue for requesting documents.\n   */\n  constructor() {\n    this._requests = {};\n  }\n\n  wrapLoader(loader) {\n    const self = this;\n    self._loader = loader;\n    return function(/* url */) {\n      return self.add.apply(self, arguments);\n    };\n  }\n\n  async add(url) {\n    let promise = this._requests[url];\n    if(promise) {\n      // URL already queued, wait for it to load\n      return Promise.resolve(promise);\n    }\n\n    // queue URL and load it\n    promise = this._requests[url] = this._loader(url);\n\n    try {\n      return await promise;\n    } finally {\n      delete this._requests[url];\n    }\n  }\n};\n","/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst types = require('./types');\n\nconst api = {};\nmodule.exports = api;\n\n// define URL parser\n// parseUri 1.2.2\n// (c) Steven Levithan <stevenlevithan.com>\n// MIT License\n// with local jsonld.js modifications\napi.parsers = {\n  simple: {\n    // RFC 3986 basic parts\n    keys: [\n      'href', 'scheme', 'authority', 'path', 'query', 'fragment'\n    ],\n    /* eslint-disable-next-line max-len */\n    regex: /^(?:([^:\\/?#]+):)?(?:\\/\\/([^\\/?#]*))?([^?#]*)(?:\\?([^#]*))?(?:#(.*))?/\n  },\n  full: {\n    keys: [\n      'href', 'protocol', 'scheme', 'authority', 'auth', 'user', 'password',\n      'hostname', 'port', 'path', 'directory', 'file', 'query', 'fragment'\n    ],\n    /* eslint-disable-next-line max-len */\n    regex: /^(([^:\\/?#]+):)?(?:\\/\\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?))?(?:(((?:[^?#\\/]*\\/)*)([^?#]*))(?:\\?([^#]*))?(?:#(.*))?)/\n  }\n};\napi.parse = (str, parser) => {\n  const parsed = {};\n  const o = api.parsers[parser || 'full'];\n  const m = o.regex.exec(str);\n  let i = o.keys.length;\n  while(i--) {\n    parsed[o.keys[i]] = (m[i] === undefined) ? null : m[i];\n  }\n\n  // remove default ports in found in URLs\n  if((parsed.scheme === 'https' && parsed.port === '443') ||\n    (parsed.scheme === 'http' && parsed.port === '80')) {\n    parsed.href = parsed.href.replace(':' + parsed.port, '');\n    parsed.authority = parsed.authority.replace(':' + parsed.port, '');\n    parsed.port = null;\n  }\n\n  parsed.normalizedPath = api.removeDotSegments(parsed.path);\n  return parsed;\n};\n\n/**\n * Prepends a base IRI to the given relative IRI.\n *\n * @param base the base IRI.\n * @param iri the relative IRI.\n *\n * @return the absolute IRI.\n */\napi.prependBase = (base, iri) => {\n  // skip IRI processing\n  if(base === null) {\n    return iri;\n  }\n  // already an absolute IRI\n  if(api.isAbsolute(iri)) {\n    return iri;\n  }\n\n  // parse base if it is a string\n  if(!base || types.isString(base)) {\n    base = api.parse(base || '');\n  }\n\n  // parse given IRI\n  const rel = api.parse(iri);\n\n  // per RFC3986 5.2.2\n  const transform = {\n    protocol: base.protocol || ''\n  };\n\n  if(rel.authority !== null) {\n    transform.authority = rel.authority;\n    transform.path = rel.path;\n    transform.query = rel.query;\n  } else {\n    transform.authority = base.authority;\n\n    if(rel.path === '') {\n      transform.path = base.path;\n      if(rel.query !== null) {\n        transform.query = rel.query;\n      } else {\n        transform.query = base.query;\n      }\n    } else {\n      if(rel.path.indexOf('/') === 0) {\n        // IRI represents an absolute path\n        transform.path = rel.path;\n      } else {\n        // merge paths\n        let path = base.path;\n\n        // append relative path to the end of the last directory from base\n        path = path.substr(0, path.lastIndexOf('/') + 1);\n        if((path.length > 0 || base.authority) && path.substr(-1) !== '/') {\n          path += '/';\n        }\n        path += rel.path;\n\n        transform.path = path;\n      }\n      transform.query = rel.query;\n    }\n  }\n\n  if(rel.path !== '') {\n    // remove slashes and dots in path\n    transform.path = api.removeDotSegments(transform.path);\n  }\n\n  // construct URL\n  let rval = transform.protocol;\n  if(transform.authority !== null) {\n    rval += '//' + transform.authority;\n  }\n  rval += transform.path;\n  if(transform.query !== null) {\n    rval += '?' + transform.query;\n  }\n  if(rel.fragment !== null) {\n    rval += '#' + rel.fragment;\n  }\n\n  // handle empty base\n  if(rval === '') {\n    rval = './';\n  }\n\n  return rval;\n};\n\n/**\n * Removes a base IRI from the given absolute IRI.\n *\n * @param base the base IRI.\n * @param iri the absolute IRI.\n *\n * @return the relative IRI if relative to base, otherwise the absolute IRI.\n */\napi.removeBase = (base, iri) => {\n  // skip IRI processing\n  if(base === null) {\n    return iri;\n  }\n\n  if(!base || types.isString(base)) {\n    base = api.parse(base || '');\n  }\n\n  // establish base root\n  let root = '';\n  if(base.href !== '') {\n    root += (base.protocol || '') + '//' + (base.authority || '');\n  } else if(iri.indexOf('//')) {\n    // support network-path reference with empty base\n    root += '//';\n  }\n\n  // IRI not relative to base\n  if(iri.indexOf(root) !== 0) {\n    return iri;\n  }\n\n  // remove root from IRI and parse remainder\n  const rel = api.parse(iri.substr(root.length));\n\n  // remove path segments that match (do not remove last segment unless there\n  // is a hash or query)\n  const baseSegments = base.normalizedPath.split('/');\n  const iriSegments = rel.normalizedPath.split('/');\n  const last = (rel.fragment || rel.query) ? 0 : 1;\n  while(baseSegments.length > 0 && iriSegments.length > last) {\n    if(baseSegments[0] !== iriSegments[0]) {\n      break;\n    }\n    baseSegments.shift();\n    iriSegments.shift();\n  }\n\n  // use '../' for each non-matching base segment\n  let rval = '';\n  if(baseSegments.length > 0) {\n    // don't count the last segment (if it ends with '/' last path doesn't\n    // count and if it doesn't end with '/' it isn't a path)\n    baseSegments.pop();\n    for(let i = 0; i < baseSegments.length; ++i) {\n      rval += '../';\n    }\n  }\n\n  // prepend remaining segments\n  rval += iriSegments.join('/');\n\n  // add query and hash\n  if(rel.query !== null) {\n    rval += '?' + rel.query;\n  }\n  if(rel.fragment !== null) {\n    rval += '#' + rel.fragment;\n  }\n\n  // handle empty base\n  if(rval === '') {\n    rval = './';\n  }\n\n  return rval;\n};\n\n/**\n * Removes dot segments from a URL path.\n *\n * @param path the path to remove dot segments from.\n */\napi.removeDotSegments = path => {\n  // RFC 3986 5.2.4 (reworked)\n\n  // empty path shortcut\n  if(path.length === 0) {\n    return '';\n  }\n\n  const input = path.split('/');\n  const output = [];\n\n  while(input.length > 0) {\n    const next = input.shift();\n    const done = input.length === 0;\n\n    if(next === '.') {\n      if(done) {\n        // ensure output has trailing /\n        output.push('');\n      }\n      continue;\n    }\n\n    if(next === '..') {\n      output.pop();\n      if(done) {\n        // ensure output has trailing /\n        output.push('');\n      }\n      continue;\n    }\n\n    output.push(next);\n  }\n\n  // if path was absolute, ensure output has leading /\n  if(path[0] === '/' && output.length > 0 && output[0] !== '') {\n    output.unshift('');\n  }\n  if(output.length === 1 && output[0] === '') {\n    return '/';\n  }\n\n  return output.join('/');\n};\n\n// TODO: time better isAbsolute/isRelative checks using full regexes:\n// http://jmrware.com/articles/2009/uri_regexp/URI_regex.html\n\n// regex to check for absolute IRI (starting scheme and ':') or blank node IRI\nconst isAbsoluteRegex = /^([A-Za-z][A-Za-z0-9+-.]*|_):[^\\s]*$/;\n\n/**\n * Returns true if the given value is an absolute IRI or blank node IRI, false\n * if not.\n * Note: This weak check only checks for a correct starting scheme.\n *\n * @param v the value to check.\n *\n * @return true if the value is an absolute IRI, false if not.\n */\napi.isAbsolute = v => types.isString(v) && isAbsoluteRegex.test(v);\n\n/**\n * Returns true if the given value is a relative IRI, false if not.\n * Note: this is a weak check.\n *\n * @param v the value to check.\n *\n * @return true if the value is a relative IRI, false if not.\n */\napi.isRelative = v => types.isString(v);\n","/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst {parseLinkHeader, buildHeaders} = require('../util');\nconst {LINK_HEADER_CONTEXT} = require('../constants');\nconst JsonLdError = require('../JsonLdError');\nconst RequestQueue = require('../RequestQueue');\nconst {prependBase} = require('../url');\n\nconst REGEX_LINK_HEADER = /(^|(\\r\\n))link:/i;\n\n/**\n * Creates a built-in XMLHttpRequest document loader.\n *\n * @param options the options to use:\n *          secure: require all URLs to use HTTPS.\n *          headers: an object (map) of headers which will be passed as request\n *            headers for the requested document. Accept is not allowed.\n *          [xhr]: the XMLHttpRequest API to use.\n *\n * @return the XMLHttpRequest document loader.\n */\nmodule.exports = ({\n  secure,\n  headers = {},\n  xhr\n} = {headers: {}}) => {\n  headers = buildHeaders(headers);\n  const queue = new RequestQueue();\n  return queue.wrapLoader(loader);\n\n  async function loader(url) {\n    if(url.indexOf('http:') !== 0 && url.indexOf('https:') !== 0) {\n      throw new JsonLdError(\n        'URL could not be dereferenced; only \"http\" and \"https\" URLs are ' +\n        'supported.',\n        'jsonld.InvalidUrl', {code: 'loading document failed', url});\n    }\n    if(secure && url.indexOf('https') !== 0) {\n      throw new JsonLdError(\n        'URL could not be dereferenced; secure mode is enabled and ' +\n        'the URL\\'s scheme is not \"https\".',\n        'jsonld.InvalidUrl', {code: 'loading document failed', url});\n    }\n\n    let req;\n    try {\n      req = await _get(xhr, url, headers);\n    } catch(e) {\n      throw new JsonLdError(\n        'URL could not be dereferenced, an error occurred.',\n        'jsonld.LoadDocumentError',\n        {code: 'loading document failed', url, cause: e});\n    }\n\n    if(req.status >= 400) {\n      throw new JsonLdError(\n        'URL could not be dereferenced: ' + req.statusText,\n        'jsonld.LoadDocumentError', {\n          code: 'loading document failed',\n          url,\n          httpStatusCode: req.status\n        });\n    }\n\n    let doc = {contextUrl: null, documentUrl: url, document: req.response};\n    let alternate = null;\n\n    // handle Link Header (avoid unsafe header warning by existence testing)\n    const contentType = req.getResponseHeader('Content-Type');\n    let linkHeader;\n    if(REGEX_LINK_HEADER.test(req.getAllResponseHeaders())) {\n      linkHeader = req.getResponseHeader('Link');\n    }\n    if(linkHeader && contentType !== 'application/ld+json') {\n      // only 1 related link header permitted\n      const linkHeaders = parseLinkHeader(linkHeader);\n      const linkedContext = linkHeaders[LINK_HEADER_CONTEXT];\n      if(Array.isArray(linkedContext)) {\n        throw new JsonLdError(\n          'URL could not be dereferenced, it has more than one ' +\n          'associated HTTP Link Header.',\n          'jsonld.InvalidUrl',\n          {code: 'multiple context link headers', url});\n      }\n      if(linkedContext) {\n        doc.contextUrl = linkedContext.target;\n      }\n\n      // \"alternate\" link header is a redirect\n      alternate = linkHeaders['alternate'];\n      if(alternate &&\n        alternate.type == 'application/ld+json' &&\n        !(contentType || '').match(/^application\\/(\\w*\\+)?json$/)) {\n        doc = await loader(prependBase(url, alternate.target));\n      }\n    }\n\n    return doc;\n  }\n};\n\nfunction _get(xhr, url, headers) {\n  xhr = xhr || XMLHttpRequest;\n  const req = new xhr();\n  return new Promise((resolve, reject) => {\n    req.onload = () => resolve(req);\n    req.onerror = err => reject(err);\n    req.open('GET', url, true);\n    for(const k in headers) {\n      req.setRequestHeader(k, headers[k]);\n    }\n    req.send();\n  });\n}\n","/*\n * Copyright (c) 2021 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst xhrLoader = require('./documentLoaders/xhr');\n\nconst api = {};\nmodule.exports = api;\n\n/**\n * Setup browser document loaders.\n *\n * @param jsonld the jsonld api.\n */\napi.setupDocumentLoaders = function(jsonld) {\n  if(typeof XMLHttpRequest !== 'undefined') {\n    jsonld.documentLoaders.xhr = xhrLoader;\n    // use xhr document loader by default\n    jsonld.useDocumentLoader('xhr');\n  }\n};\n\n/**\n * Setup browser globals.\n *\n * @param jsonld the jsonld api.\n */\napi.setupGlobals = function(jsonld) {\n  // setup browser global JsonLdProcessor\n  if(typeof globalThis.JsonLdProcessor === 'undefined') {\n    Object.defineProperty(globalThis, 'JsonLdProcessor', {\n      writable: true,\n      enumerable: false,\n      configurable: true,\n      value: jsonld.JsonLdProcessor\n    });\n  }\n};\n","'use strict'\nmodule.exports = function (Yallist) {\n  Yallist.prototype[Symbol.iterator] = function* () {\n    for (let walker = this.head; walker; walker = walker.next) {\n      yield walker.value\n    }\n  }\n}\n","'use strict'\nmodule.exports = Yallist\n\nYallist.Node = Node\nYallist.create = Yallist\n\nfunction Yallist (list) {\n  var self = this\n  if (!(self instanceof Yallist)) {\n    self = new Yallist()\n  }\n\n  self.tail = null\n  self.head = null\n  self.length = 0\n\n  if (list && typeof list.forEach === 'function') {\n    list.forEach(function (item) {\n      self.push(item)\n    })\n  } else if (arguments.length > 0) {\n    for (var i = 0, l = arguments.length; i < l; i++) {\n      self.push(arguments[i])\n    }\n  }\n\n  return self\n}\n\nYallist.prototype.removeNode = function (node) {\n  if (node.list !== this) {\n    throw new Error('removing node which does not belong to this list')\n  }\n\n  var next = node.next\n  var prev = node.prev\n\n  if (next) {\n    next.prev = prev\n  }\n\n  if (prev) {\n    prev.next = next\n  }\n\n  if (node === this.head) {\n    this.head = next\n  }\n  if (node === this.tail) {\n    this.tail = prev\n  }\n\n  node.list.length--\n  node.next = null\n  node.prev = null\n  node.list = null\n\n  return next\n}\n\nYallist.prototype.unshiftNode = function (node) {\n  if (node === this.head) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var head = this.head\n  node.list = this\n  node.next = head\n  if (head) {\n    head.prev = node\n  }\n\n  this.head = node\n  if (!this.tail) {\n    this.tail = node\n  }\n  this.length++\n}\n\nYallist.prototype.pushNode = function (node) {\n  if (node === this.tail) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var tail = this.tail\n  node.list = this\n  node.prev = tail\n  if (tail) {\n    tail.next = node\n  }\n\n  this.tail = node\n  if (!this.head) {\n    this.head = node\n  }\n  this.length++\n}\n\nYallist.prototype.push = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    push(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.unshift = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    unshift(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.pop = function () {\n  if (!this.tail) {\n    return undefined\n  }\n\n  var res = this.tail.value\n  this.tail = this.tail.prev\n  if (this.tail) {\n    this.tail.next = null\n  } else {\n    this.head = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.shift = function () {\n  if (!this.head) {\n    return undefined\n  }\n\n  var res = this.head.value\n  this.head = this.head.next\n  if (this.head) {\n    this.head.prev = null\n  } else {\n    this.tail = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.head, i = 0; walker !== null; i++) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.next\n  }\n}\n\nYallist.prototype.forEachReverse = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.tail, i = this.length - 1; walker !== null; i--) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.prev\n  }\n}\n\nYallist.prototype.get = function (n) {\n  for (var i = 0, walker = this.head; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.next\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.getReverse = function (n) {\n  for (var i = 0, walker = this.tail; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.prev\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.map = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.head; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.next\n  }\n  return res\n}\n\nYallist.prototype.mapReverse = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.tail; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.prev\n  }\n  return res\n}\n\nYallist.prototype.reduce = function (fn, initial) {\n  var acc\n  var walker = this.head\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.head) {\n    walker = this.head.next\n    acc = this.head.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = 0; walker !== null; i++) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.next\n  }\n\n  return acc\n}\n\nYallist.prototype.reduceReverse = function (fn, initial) {\n  var acc\n  var walker = this.tail\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.tail) {\n    walker = this.tail.prev\n    acc = this.tail.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = this.length - 1; walker !== null; i--) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.prev\n  }\n\n  return acc\n}\n\nYallist.prototype.toArray = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.head; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.next\n  }\n  return arr\n}\n\nYallist.prototype.toArrayReverse = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.tail; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.prev\n  }\n  return arr\n}\n\nYallist.prototype.slice = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = 0, walker = this.head; walker !== null && i < from; i++) {\n    walker = walker.next\n  }\n  for (; walker !== null && i < to; i++, walker = walker.next) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.sliceReverse = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = this.length, walker = this.tail; walker !== null && i > to; i--) {\n    walker = walker.prev\n  }\n  for (; walker !== null && i > from; i--, walker = walker.prev) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.splice = function (start, deleteCount, ...nodes) {\n  if (start > this.length) {\n    start = this.length - 1\n  }\n  if (start < 0) {\n    start = this.length + start;\n  }\n\n  for (var i = 0, walker = this.head; walker !== null && i < start; i++) {\n    walker = walker.next\n  }\n\n  var ret = []\n  for (var i = 0; walker && i < deleteCount; i++) {\n    ret.push(walker.value)\n    walker = this.removeNode(walker)\n  }\n  if (walker === null) {\n    walker = this.tail\n  }\n\n  if (walker !== this.head && walker !== this.tail) {\n    walker = walker.prev\n  }\n\n  for (var i = 0; i < nodes.length; i++) {\n    walker = insert(this, walker, nodes[i])\n  }\n  return ret;\n}\n\nYallist.prototype.reverse = function () {\n  var head = this.head\n  var tail = this.tail\n  for (var walker = head; walker !== null; walker = walker.prev) {\n    var p = walker.prev\n    walker.prev = walker.next\n    walker.next = p\n  }\n  this.head = tail\n  this.tail = head\n  return this\n}\n\nfunction insert (self, node, value) {\n  var inserted = node === self.head ?\n    new Node(value, null, node, self) :\n    new Node(value, node, node.next, self)\n\n  if (inserted.next === null) {\n    self.tail = inserted\n  }\n  if (inserted.prev === null) {\n    self.head = inserted\n  }\n\n  self.length++\n\n  return inserted\n}\n\nfunction push (self, item) {\n  self.tail = new Node(item, self.tail, null, self)\n  if (!self.head) {\n    self.head = self.tail\n  }\n  self.length++\n}\n\nfunction unshift (self, item) {\n  self.head = new Node(item, null, self.head, self)\n  if (!self.tail) {\n    self.tail = self.head\n  }\n  self.length++\n}\n\nfunction Node (value, prev, next, list) {\n  if (!(this instanceof Node)) {\n    return new Node(value, prev, next, list)\n  }\n\n  this.list = list\n  this.value = value\n\n  if (prev) {\n    prev.next = this\n    this.prev = prev\n  } else {\n    this.prev = null\n  }\n\n  if (next) {\n    next.prev = this\n    this.next = next\n  } else {\n    this.next = null\n  }\n}\n\ntry {\n  // add if support for Symbol.iterator is present\n  require('./iterator.js')(Yallist)\n} catch (er) {}\n","'use strict'\n\n// A linked list to keep track of recently-used-ness\nconst Yallist = require('yallist')\n\nconst MAX = Symbol('max')\nconst LENGTH = Symbol('length')\nconst LENGTH_CALCULATOR = Symbol('lengthCalculator')\nconst ALLOW_STALE = Symbol('allowStale')\nconst MAX_AGE = Symbol('maxAge')\nconst DISPOSE = Symbol('dispose')\nconst NO_DISPOSE_ON_SET = Symbol('noDisposeOnSet')\nconst LRU_LIST = Symbol('lruList')\nconst CACHE = Symbol('cache')\nconst UPDATE_AGE_ON_GET = Symbol('updateAgeOnGet')\n\nconst naiveLength = () => 1\n\n// lruList is a yallist where the head is the youngest\n// item, and the tail is the oldest.  the list contains the Hit\n// objects as the entries.\n// Each Hit object has a reference to its Yallist.Node.  This\n// never changes.\n//\n// cache is a Map (or PseudoMap) that matches the keys to\n// the Yallist.Node object.\nclass LRUCache {\n  constructor (options) {\n    if (typeof options === 'number')\n      options = { max: options }\n\n    if (!options)\n      options = {}\n\n    if (options.max && (typeof options.max !== 'number' || options.max < 0))\n      throw new TypeError('max must be a non-negative number')\n    // Kind of weird to have a default max of Infinity, but oh well.\n    const max = this[MAX] = options.max || Infinity\n\n    const lc = options.length || naiveLength\n    this[LENGTH_CALCULATOR] = (typeof lc !== 'function') ? naiveLength : lc\n    this[ALLOW_STALE] = options.stale || false\n    if (options.maxAge && typeof options.maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n    this[MAX_AGE] = options.maxAge || 0\n    this[DISPOSE] = options.dispose\n    this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false\n    this[UPDATE_AGE_ON_GET] = options.updateAgeOnGet || false\n    this.reset()\n  }\n\n  // resize the cache when the max changes.\n  set max (mL) {\n    if (typeof mL !== 'number' || mL < 0)\n      throw new TypeError('max must be a non-negative number')\n\n    this[MAX] = mL || Infinity\n    trim(this)\n  }\n  get max () {\n    return this[MAX]\n  }\n\n  set allowStale (allowStale) {\n    this[ALLOW_STALE] = !!allowStale\n  }\n  get allowStale () {\n    return this[ALLOW_STALE]\n  }\n\n  set maxAge (mA) {\n    if (typeof mA !== 'number')\n      throw new TypeError('maxAge must be a non-negative number')\n\n    this[MAX_AGE] = mA\n    trim(this)\n  }\n  get maxAge () {\n    return this[MAX_AGE]\n  }\n\n  // resize the cache when the lengthCalculator changes.\n  set lengthCalculator (lC) {\n    if (typeof lC !== 'function')\n      lC = naiveLength\n\n    if (lC !== this[LENGTH_CALCULATOR]) {\n      this[LENGTH_CALCULATOR] = lC\n      this[LENGTH] = 0\n      this[LRU_LIST].forEach(hit => {\n        hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key)\n        this[LENGTH] += hit.length\n      })\n    }\n    trim(this)\n  }\n  get lengthCalculator () { return this[LENGTH_CALCULATOR] }\n\n  get length () { return this[LENGTH] }\n  get itemCount () { return this[LRU_LIST].length }\n\n  rforEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].tail; walker !== null;) {\n      const prev = walker.prev\n      forEachStep(this, fn, walker, thisp)\n      walker = prev\n    }\n  }\n\n  forEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].head; walker !== null;) {\n      const next = walker.next\n      forEachStep(this, fn, walker, thisp)\n      walker = next\n    }\n  }\n\n  keys () {\n    return this[LRU_LIST].toArray().map(k => k.key)\n  }\n\n  values () {\n    return this[LRU_LIST].toArray().map(k => k.value)\n  }\n\n  reset () {\n    if (this[DISPOSE] &&\n        this[LRU_LIST] &&\n        this[LRU_LIST].length) {\n      this[LRU_LIST].forEach(hit => this[DISPOSE](hit.key, hit.value))\n    }\n\n    this[CACHE] = new Map() // hash of items by key\n    this[LRU_LIST] = new Yallist() // list of items in order of use recency\n    this[LENGTH] = 0 // length of items in the list\n  }\n\n  dump () {\n    return this[LRU_LIST].map(hit =>\n      isStale(this, hit) ? false : {\n        k: hit.key,\n        v: hit.value,\n        e: hit.now + (hit.maxAge || 0)\n      }).toArray().filter(h => h)\n  }\n\n  dumpLru () {\n    return this[LRU_LIST]\n  }\n\n  set (key, value, maxAge) {\n    maxAge = maxAge || this[MAX_AGE]\n\n    if (maxAge && typeof maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n\n    const now = maxAge ? Date.now() : 0\n    const len = this[LENGTH_CALCULATOR](value, key)\n\n    if (this[CACHE].has(key)) {\n      if (len > this[MAX]) {\n        del(this, this[CACHE].get(key))\n        return false\n      }\n\n      const node = this[CACHE].get(key)\n      const item = node.value\n\n      // dispose of the old one before overwriting\n      // split out into 2 ifs for better coverage tracking\n      if (this[DISPOSE]) {\n        if (!this[NO_DISPOSE_ON_SET])\n          this[DISPOSE](key, item.value)\n      }\n\n      item.now = now\n      item.maxAge = maxAge\n      item.value = value\n      this[LENGTH] += len - item.length\n      item.length = len\n      this.get(key)\n      trim(this)\n      return true\n    }\n\n    const hit = new Entry(key, value, len, now, maxAge)\n\n    // oversized objects fall out of cache automatically.\n    if (hit.length > this[MAX]) {\n      if (this[DISPOSE])\n        this[DISPOSE](key, value)\n\n      return false\n    }\n\n    this[LENGTH] += hit.length\n    this[LRU_LIST].unshift(hit)\n    this[CACHE].set(key, this[LRU_LIST].head)\n    trim(this)\n    return true\n  }\n\n  has (key) {\n    if (!this[CACHE].has(key)) return false\n    const hit = this[CACHE].get(key).value\n    return !isStale(this, hit)\n  }\n\n  get (key) {\n    return get(this, key, true)\n  }\n\n  peek (key) {\n    return get(this, key, false)\n  }\n\n  pop () {\n    const node = this[LRU_LIST].tail\n    if (!node)\n      return null\n\n    del(this, node)\n    return node.value\n  }\n\n  del (key) {\n    del(this, this[CACHE].get(key))\n  }\n\n  load (arr) {\n    // reset the cache\n    this.reset()\n\n    const now = Date.now()\n    // A previous serialized cache has the most recent items first\n    for (let l = arr.length - 1; l >= 0; l--) {\n      const hit = arr[l]\n      const expiresAt = hit.e || 0\n      if (expiresAt === 0)\n        // the item was created without expiration in a non aged cache\n        this.set(hit.k, hit.v)\n      else {\n        const maxAge = expiresAt - now\n        // dont add already expired items\n        if (maxAge > 0) {\n          this.set(hit.k, hit.v, maxAge)\n        }\n      }\n    }\n  }\n\n  prune () {\n    this[CACHE].forEach((value, key) => get(this, key, false))\n  }\n}\n\nconst get = (self, key, doUse) => {\n  const node = self[CACHE].get(key)\n  if (node) {\n    const hit = node.value\n    if (isStale(self, hit)) {\n      del(self, node)\n      if (!self[ALLOW_STALE])\n        return undefined\n    } else {\n      if (doUse) {\n        if (self[UPDATE_AGE_ON_GET])\n          node.value.now = Date.now()\n        self[LRU_LIST].unshiftNode(node)\n      }\n    }\n    return hit.value\n  }\n}\n\nconst isStale = (self, hit) => {\n  if (!hit || (!hit.maxAge && !self[MAX_AGE]))\n    return false\n\n  const diff = Date.now() - hit.now\n  return hit.maxAge ? diff > hit.maxAge\n    : self[MAX_AGE] && (diff > self[MAX_AGE])\n}\n\nconst trim = self => {\n  if (self[LENGTH] > self[MAX]) {\n    for (let walker = self[LRU_LIST].tail;\n      self[LENGTH] > self[MAX] && walker !== null;) {\n      // We know that we're about to delete this one, and also\n      // what the next least recently used key will be, so just\n      // go ahead and set it now.\n      const prev = walker.prev\n      del(self, walker)\n      walker = prev\n    }\n  }\n}\n\nconst del = (self, node) => {\n  if (node) {\n    const hit = node.value\n    if (self[DISPOSE])\n      self[DISPOSE](hit.key, hit.value)\n\n    self[LENGTH] -= hit.length\n    self[CACHE].delete(hit.key)\n    self[LRU_LIST].removeNode(node)\n  }\n}\n\nclass Entry {\n  constructor (key, value, length, now, maxAge) {\n    this.key = key\n    this.value = value\n    this.length = length\n    this.now = now\n    this.maxAge = maxAge || 0\n  }\n}\n\nconst forEachStep = (self, fn, node, thisp) => {\n  let hit = node.value\n  if (isStale(self, hit)) {\n    del(self, node)\n    if (!self[ALLOW_STALE])\n      hit = undefined\n  }\n  if (hit)\n    fn.call(thisp, hit.value, hit.key, self)\n}\n\nmodule.exports = LRUCache\n","/*\n * Copyright (c) 2019 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst LRU = require('lru-cache');\n\nconst MAX_ACTIVE_CONTEXTS = 10;\n\nmodule.exports = class ResolvedContext {\n  /**\n   * Creates a ResolvedContext.\n   *\n   * @param document the context document.\n   */\n  constructor({document}) {\n    this.document = document;\n    // TODO: enable customization of processed context cache\n    // TODO: limit based on size of processed contexts vs. number of them\n    this.cache = new LRU({max: MAX_ACTIVE_CONTEXTS});\n  }\n\n  getProcessed(activeCtx) {\n    return this.cache.get(activeCtx);\n  }\n\n  setProcessed(activeCtx, processedCtx) {\n    this.cache.set(activeCtx, processedCtx);\n  }\n};\n","/*\n * Copyright (c) 2019 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst {\n  isArray: _isArray,\n  isObject: _isObject,\n  isString: _isString,\n} = require('./types');\nconst {\n  asArray: _asArray\n} = require('./util');\nconst {prependBase} = require('./url');\nconst JsonLdError = require('./JsonLdError');\nconst ResolvedContext = require('./ResolvedContext');\n\nconst MAX_CONTEXT_URLS = 10;\n\nmodule.exports = class ContextResolver {\n  /**\n   * Creates a ContextResolver.\n   *\n   * @param sharedCache a shared LRU cache with `get` and `set` APIs.\n   */\n  constructor({sharedCache}) {\n    this.perOpCache = new Map();\n    this.sharedCache = sharedCache;\n  }\n\n  async resolve({\n    activeCtx, context, documentLoader, base, cycles = new Set()\n  }) {\n    // process `@context`\n    if(context && _isObject(context) && context['@context']) {\n      context = context['@context'];\n    }\n\n    // context is one or more contexts\n    context = _asArray(context);\n\n    // resolve each context in the array\n    const allResolved = [];\n    for(const ctx of context) {\n      if(_isString(ctx)) {\n        // see if `ctx` has been resolved before...\n        let resolved = this._get(ctx);\n        if(!resolved) {\n          // not resolved yet, resolve\n          resolved = await this._resolveRemoteContext(\n            {activeCtx, url: ctx, documentLoader, base, cycles});\n        }\n\n        // add to output and continue\n        if(_isArray(resolved)) {\n          allResolved.push(...resolved);\n        } else {\n          allResolved.push(resolved);\n        }\n        continue;\n      }\n      if(ctx === null) {\n        // handle `null` context, nothing to cache\n        allResolved.push(new ResolvedContext({document: null}));\n        continue;\n      }\n      if(!_isObject(ctx)) {\n        _throwInvalidLocalContext(context);\n      }\n      // context is an object, get/create `ResolvedContext` for it\n      const key = JSON.stringify(ctx);\n      let resolved = this._get(key);\n      if(!resolved) {\n        // create a new static `ResolvedContext` and cache it\n        resolved = new ResolvedContext({document: ctx});\n        this._cacheResolvedContext({key, resolved, tag: 'static'});\n      }\n      allResolved.push(resolved);\n    }\n\n    return allResolved;\n  }\n\n  _get(key) {\n    // get key from per operation cache; no `tag` is used with this cache so\n    // any retrieved context will always be the same during a single operation\n    let resolved = this.perOpCache.get(key);\n    if(!resolved) {\n      // see if the shared cache has a `static` entry for this URL\n      const tagMap = this.sharedCache.get(key);\n      if(tagMap) {\n        resolved = tagMap.get('static');\n        if(resolved) {\n          this.perOpCache.set(key, resolved);\n        }\n      }\n    }\n    return resolved;\n  }\n\n  _cacheResolvedContext({key, resolved, tag}) {\n    this.perOpCache.set(key, resolved);\n    if(tag !== undefined) {\n      let tagMap = this.sharedCache.get(key);\n      if(!tagMap) {\n        tagMap = new Map();\n        this.sharedCache.set(key, tagMap);\n      }\n      tagMap.set(tag, resolved);\n    }\n    return resolved;\n  }\n\n  async _resolveRemoteContext({activeCtx, url, documentLoader, base, cycles}) {\n    // resolve relative URL and fetch context\n    url = prependBase(base, url);\n    const {context, remoteDoc} = await this._fetchContext(\n      {activeCtx, url, documentLoader, cycles});\n\n    // update base according to remote document and resolve any relative URLs\n    base = remoteDoc.documentUrl || url;\n    _resolveContextUrls({context, base});\n\n    // resolve, cache, and return context\n    const resolved = await this.resolve(\n      {activeCtx, context, documentLoader, base, cycles});\n    this._cacheResolvedContext({key: url, resolved, tag: remoteDoc.tag});\n    return resolved;\n  }\n\n  async _fetchContext({activeCtx, url, documentLoader, cycles}) {\n    // check for max context URLs fetched during a resolve operation\n    if(cycles.size > MAX_CONTEXT_URLS) {\n      throw new JsonLdError(\n        'Maximum number of @context URLs exceeded.',\n        'jsonld.ContextUrlError',\n        {\n          code: activeCtx.processingMode === 'json-ld-1.0' ?\n            'loading remote context failed' :\n            'context overflow',\n          max: MAX_CONTEXT_URLS\n        });\n    }\n\n    // check for context URL cycle\n    // shortcut to avoid extra work that would eventually hit the max above\n    if(cycles.has(url)) {\n      throw new JsonLdError(\n        'Cyclical @context URLs detected.',\n        'jsonld.ContextUrlError',\n        {\n          code: activeCtx.processingMode === 'json-ld-1.0' ?\n            'recursive context inclusion' :\n            'context overflow',\n          url\n        });\n    }\n\n    // track cycles\n    cycles.add(url);\n\n    let context;\n    let remoteDoc;\n\n    try {\n      remoteDoc = await documentLoader(url);\n      context = remoteDoc.document || null;\n      // parse string context as JSON\n      if(_isString(context)) {\n        context = JSON.parse(context);\n      }\n    } catch(e) {\n      throw new JsonLdError(\n        'Dereferencing a URL did not result in a valid JSON-LD object. ' +\n        'Possible causes are an inaccessible URL perhaps due to ' +\n        'a same-origin policy (ensure the server uses CORS if you are ' +\n        'using client-side JavaScript), too many redirects, a ' +\n        'non-JSON response, or more than one HTTP Link Header was ' +\n        'provided for a remote context.',\n        'jsonld.InvalidUrl',\n        {code: 'loading remote context failed', url, cause: e});\n    }\n\n    // ensure ctx is an object\n    if(!_isObject(context)) {\n      throw new JsonLdError(\n        'Dereferencing a URL did not result in a JSON object. The ' +\n        'response was valid JSON, but it was not a JSON object.',\n        'jsonld.InvalidUrl', {code: 'invalid remote context', url});\n    }\n\n    // use empty context if no @context key is present\n    if(!('@context' in context)) {\n      context = {'@context': {}};\n    } else {\n      context = {'@context': context['@context']};\n    }\n\n    // append @context URL to context if given\n    if(remoteDoc.contextUrl) {\n      if(!_isArray(context['@context'])) {\n        context['@context'] = [context['@context']];\n      }\n      context['@context'].push(remoteDoc.contextUrl);\n    }\n\n    return {context, remoteDoc};\n  }\n};\n\nfunction _throwInvalidLocalContext(ctx) {\n  throw new JsonLdError(\n    'Invalid JSON-LD syntax; @context must be an object.',\n    'jsonld.SyntaxError', {\n      code: 'invalid local context', context: ctx\n    });\n}\n\n/**\n * Resolve all relative `@context` URLs in the given context by inline\n * replacing them with absolute URLs.\n *\n * @param context the context.\n * @param base the base IRI to use to resolve relative IRIs.\n */\nfunction _resolveContextUrls({context, base}) {\n  if(!context) {\n    return;\n  }\n\n  const ctx = context['@context'];\n\n  if(_isString(ctx)) {\n    context['@context'] = prependBase(base, ctx);\n    return;\n  }\n\n  if(_isArray(ctx)) {\n    for(let i = 0; i < ctx.length; ++i) {\n      const element = ctx[i];\n      if(_isString(element)) {\n        ctx[i] = prependBase(base, element);\n        continue;\n      }\n      if(_isObject(element)) {\n        _resolveContextUrls({context: {'@context': element}, base});\n      }\n    }\n    return;\n  }\n\n  if(!_isObject(ctx)) {\n    // no @context URLs can be found in non-object\n    return;\n  }\n\n  // ctx is an object, resolve any context URLs in terms\n  for(const term in ctx) {\n    _resolveContextUrls({context: ctx[term], base});\n  }\n}\n","/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\n// TODO: move `NQuads` to its own package\nmodule.exports = require('rdf-canonize').NQuads;\n","/*\n * Copyright (c) 2017-2019 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst util = require('./util');\nconst JsonLdError = require('./JsonLdError');\n\nconst {\n  isArray: _isArray,\n  isObject: _isObject,\n  isString: _isString,\n  isUndefined: _isUndefined\n} = require('./types');\n\nconst {\n  isAbsolute: _isAbsoluteIri,\n  isRelative: _isRelativeIri,\n  prependBase\n} = require('./url');\n\nconst {\n  asArray: _asArray,\n  compareShortestLeast: _compareShortestLeast\n} = require('./util');\n\nconst INITIAL_CONTEXT_CACHE = new Map();\nconst INITIAL_CONTEXT_CACHE_MAX_SIZE = 10000;\nconst KEYWORD_PATTERN = /^@[a-zA-Z]+$/;\n\nconst api = {};\nmodule.exports = api;\n\n/**\n * Processes a local context and returns a new active context.\n *\n * @param activeCtx the current active context.\n * @param localCtx the local context to process.\n * @param options the context processing options.\n * @param propagate `true` if `false`, retains any previously defined term,\n *   which can be rolled back when the descending into a new node object.\n * @param overrideProtected `false` allows protected terms to be modified.\n *\n * @return a Promise that resolves to the new active context.\n */\napi.process = async ({\n  activeCtx, localCtx, options,\n  propagate = true,\n  overrideProtected = false,\n  cycles = new Set()\n}) => {\n  // normalize local context to an array of @context objects\n  if(_isObject(localCtx) && '@context' in localCtx &&\n    _isArray(localCtx['@context'])) {\n    localCtx = localCtx['@context'];\n  }\n  const ctxs = _asArray(localCtx);\n\n  // no contexts in array, return current active context w/o changes\n  if(ctxs.length === 0) {\n    return activeCtx;\n  }\n\n  // resolve contexts\n  const resolved = await options.contextResolver.resolve({\n    activeCtx,\n    context: localCtx,\n    documentLoader: options.documentLoader,\n    base: options.base\n  });\n\n  // override propagate if first resolved context has `@propagate`\n  if(_isObject(resolved[0].document) &&\n    typeof resolved[0].document['@propagate'] === 'boolean') {\n    // retrieve early, error checking done later\n    propagate = resolved[0].document['@propagate'];\n  }\n\n  // process each context in order, update active context\n  // on each iteration to ensure proper caching\n  let rval = activeCtx;\n\n  // track the previous context\n  // if not propagating, make sure rval has a previous context\n  if(!propagate && !rval.previousContext) {\n    // clone `rval` context before updating\n    rval = rval.clone();\n    rval.previousContext = activeCtx;\n  }\n\n  for(const resolvedContext of resolved) {\n    let {document: ctx} = resolvedContext;\n\n    // update active context to one computed from last iteration\n    activeCtx = rval;\n\n    // reset to initial context\n    if(ctx === null) {\n      // We can't nullify if there are protected terms and we're\n      // not allowing overrides (e.g. processing a property term scoped context)\n      if(!overrideProtected &&\n        Object.keys(activeCtx.protected).length !== 0) {\n        const protectedMode = (options && options.protectedMode) || 'error';\n        if(protectedMode === 'error') {\n          throw new JsonLdError(\n            'Tried to nullify a context with protected terms outside of ' +\n            'a term definition.',\n            'jsonld.SyntaxError',\n            {code: 'invalid context nullification'});\n        } else if(protectedMode === 'warn') {\n          // FIXME: remove logging and use a handler\n          console.warn('WARNING: invalid context nullification');\n\n          // get processed context from cache if available\n          const processed = resolvedContext.getProcessed(activeCtx);\n          if(processed) {\n            rval = activeCtx = processed;\n            continue;\n          }\n\n          const oldActiveCtx = activeCtx;\n          // copy all protected term definitions to fresh initial context\n          rval = activeCtx = api.getInitialContext(options).clone();\n          for(const [term, _protected] of\n            Object.entries(oldActiveCtx.protected)) {\n            if(_protected) {\n              activeCtx.mappings[term] =\n                util.clone(oldActiveCtx.mappings[term]);\n            }\n          }\n          activeCtx.protected = util.clone(oldActiveCtx.protected);\n\n          // cache processed result\n          resolvedContext.setProcessed(oldActiveCtx, rval);\n          continue;\n        }\n        throw new JsonLdError(\n          'Invalid protectedMode.',\n          'jsonld.SyntaxError',\n          {code: 'invalid protected mode', context: localCtx, protectedMode});\n      }\n      rval = activeCtx = api.getInitialContext(options).clone();\n      continue;\n    }\n\n    // get processed context from cache if available\n    const processed = resolvedContext.getProcessed(activeCtx);\n    if(processed) {\n      rval = activeCtx = processed;\n      continue;\n    }\n\n    // dereference @context key if present\n    if(_isObject(ctx) && '@context' in ctx) {\n      ctx = ctx['@context'];\n    }\n\n    // context must be an object by now, all URLs retrieved before this call\n    if(!_isObject(ctx)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @context must be an object.',\n        'jsonld.SyntaxError', {code: 'invalid local context', context: ctx});\n    }\n\n    // TODO: there is likely a `previousContext` cloning optimization that\n    // could be applied here (no need to copy it under certain conditions)\n\n    // clone context before updating it\n    rval = rval.clone();\n\n    // define context mappings for keys in local context\n    const defined = new Map();\n\n    // handle @version\n    if('@version' in ctx) {\n      if(ctx['@version'] !== 1.1) {\n        throw new JsonLdError(\n          'Unsupported JSON-LD version: ' + ctx['@version'],\n          'jsonld.UnsupportedVersion',\n          {code: 'invalid @version value', context: ctx});\n      }\n      if(activeCtx.processingMode &&\n        activeCtx.processingMode === 'json-ld-1.0') {\n        throw new JsonLdError(\n          '@version: ' + ctx['@version'] + ' not compatible with ' +\n          activeCtx.processingMode,\n          'jsonld.ProcessingModeConflict',\n          {code: 'processing mode conflict', context: ctx});\n      }\n      rval.processingMode = 'json-ld-1.1';\n      rval['@version'] = ctx['@version'];\n      defined.set('@version', true);\n    }\n\n    // if not set explicitly, set processingMode to \"json-ld-1.1\"\n    rval.processingMode =\n      rval.processingMode || activeCtx.processingMode;\n\n    // handle @base\n    if('@base' in ctx) {\n      let base = ctx['@base'];\n\n      if(base === null || _isAbsoluteIri(base)) {\n        // no action\n      } else if(_isRelativeIri(base)) {\n        base = prependBase(rval['@base'], base);\n      } else {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; the value of \"@base\" in a ' +\n          '@context must be an absolute IRI, a relative IRI, or null.',\n          'jsonld.SyntaxError', {code: 'invalid base IRI', context: ctx});\n      }\n\n      rval['@base'] = base;\n      defined.set('@base', true);\n    }\n\n    // handle @vocab\n    if('@vocab' in ctx) {\n      const value = ctx['@vocab'];\n      if(value === null) {\n        delete rval['@vocab'];\n      } else if(!_isString(value)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; the value of \"@vocab\" in a ' +\n          '@context must be a string or null.',\n          'jsonld.SyntaxError', {code: 'invalid vocab mapping', context: ctx});\n      } else if(!_isAbsoluteIri(value) && api.processingMode(rval, 1.0)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; the value of \"@vocab\" in a ' +\n          '@context must be an absolute IRI.',\n          'jsonld.SyntaxError', {code: 'invalid vocab mapping', context: ctx});\n      } else {\n        rval['@vocab'] = _expandIri(rval, value, {vocab: true, base: true},\n          undefined, undefined, options);\n      }\n      defined.set('@vocab', true);\n    }\n\n    // handle @language\n    if('@language' in ctx) {\n      const value = ctx['@language'];\n      if(value === null) {\n        delete rval['@language'];\n      } else if(!_isString(value)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; the value of \"@language\" in a ' +\n          '@context must be a string or null.',\n          'jsonld.SyntaxError',\n          {code: 'invalid default language', context: ctx});\n      } else {\n        rval['@language'] = value.toLowerCase();\n      }\n      defined.set('@language', true);\n    }\n\n    // handle @direction\n    if('@direction' in ctx) {\n      const value = ctx['@direction'];\n      if(activeCtx.processingMode === 'json-ld-1.0') {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; @direction not compatible with ' +\n          activeCtx.processingMode,\n          'jsonld.SyntaxError',\n          {code: 'invalid context member', context: ctx});\n      }\n      if(value === null) {\n        delete rval['@direction'];\n      } else if(value !== 'ltr' && value !== 'rtl') {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; the value of \"@direction\" in a ' +\n          '@context must be null, \"ltr\", or \"rtl\".',\n          'jsonld.SyntaxError',\n          {code: 'invalid base direction', context: ctx});\n      } else {\n        rval['@direction'] = value;\n      }\n      defined.set('@direction', true);\n    }\n\n    // handle @propagate\n    // note: we've already extracted it, here we just do error checking\n    if('@propagate' in ctx) {\n      const value = ctx['@propagate'];\n      if(activeCtx.processingMode === 'json-ld-1.0') {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; @propagate not compatible with ' +\n          activeCtx.processingMode,\n          'jsonld.SyntaxError',\n          {code: 'invalid context entry', context: ctx});\n      }\n      if(typeof value !== 'boolean') {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; @propagate value must be a boolean.',\n          'jsonld.SyntaxError',\n          {code: 'invalid @propagate value', context: localCtx});\n      }\n      defined.set('@propagate', true);\n    }\n\n    // handle @import\n    if('@import' in ctx) {\n      const value = ctx['@import'];\n      if(activeCtx.processingMode === 'json-ld-1.0') {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; @import not compatible with ' +\n          activeCtx.processingMode,\n          'jsonld.SyntaxError',\n          {code: 'invalid context entry', context: ctx});\n      }\n      if(!_isString(value)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; @import must be a string.',\n          'jsonld.SyntaxError',\n          {code: 'invalid @import value', context: localCtx});\n      }\n\n      // resolve contexts\n      const resolvedImport = await options.contextResolver.resolve({\n        activeCtx,\n        context: value,\n        documentLoader: options.documentLoader,\n        base: options.base\n      });\n      if(resolvedImport.length !== 1) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; @import must reference a single context.',\n          'jsonld.SyntaxError',\n          {code: 'invalid remote context', context: localCtx});\n      }\n      const processedImport = resolvedImport[0].getProcessed(activeCtx);\n      if(processedImport) {\n        // Note: if the same context were used in this active context\n        // as a reference context, then processed_input might not\n        // be a dict.\n        ctx = processedImport;\n      } else {\n        const importCtx = resolvedImport[0].document;\n        if('@import' in importCtx) {\n          throw new JsonLdError(\n            'Invalid JSON-LD syntax: ' +\n            'imported context must not include @import.',\n            'jsonld.SyntaxError',\n            {code: 'invalid context entry', context: localCtx});\n        }\n\n        // merge ctx into importCtx and replace rval with the result\n        for(const key in importCtx) {\n          if(!ctx.hasOwnProperty(key)) {\n            ctx[key] = importCtx[key];\n          }\n        }\n\n        // Note: this could potenially conflict if the import\n        // were used in the same active context as a referenced\n        // context and an import. In this case, we\n        // could override the cached result, but seems unlikely.\n        resolvedImport[0].setProcessed(activeCtx, ctx);\n      }\n\n      defined.set('@import', true);\n    }\n\n    // handle @protected; determine whether this sub-context is declaring\n    // all its terms to be \"protected\" (exceptions can be made on a\n    // per-definition basis)\n    defined.set('@protected', ctx['@protected'] || false);\n\n    // process all other keys\n    for(const key in ctx) {\n      api.createTermDefinition({\n        activeCtx: rval,\n        localCtx: ctx,\n        term: key,\n        defined,\n        options,\n        overrideProtected\n      });\n\n      if(_isObject(ctx[key]) && '@context' in ctx[key]) {\n        const keyCtx = ctx[key]['@context'];\n        let process = true;\n        if(_isString(keyCtx)) {\n          const url = prependBase(options.base, keyCtx);\n          // track processed contexts to avoid scoped context recursion\n          if(cycles.has(url)) {\n            process = false;\n          } else {\n            cycles.add(url);\n          }\n        }\n        // parse context to validate\n        if(process) {\n          try {\n            await api.process({\n              activeCtx: rval.clone(),\n              localCtx: ctx[key]['@context'],\n              overrideProtected: true,\n              options,\n              cycles\n            });\n          } catch(e) {\n            throw new JsonLdError(\n              'Invalid JSON-LD syntax; invalid scoped context.',\n              'jsonld.SyntaxError',\n              {\n                code: 'invalid scoped context',\n                context: ctx[key]['@context'],\n                term: key\n              });\n          }\n        }\n      }\n    }\n\n    // cache processed result\n    resolvedContext.setProcessed(activeCtx, rval);\n  }\n\n  return rval;\n};\n\n/**\n * Creates a term definition during context processing.\n *\n * @param activeCtx the current active context.\n * @param localCtx the local context being processed.\n * @param term the term in the local context to define the mapping for.\n * @param defined a map of defining/defined keys to detect cycles and prevent\n *          double definitions.\n * @param {Object} [options] - creation options.\n * @param {string} [options.protectedMode=\"error\"] - \"error\" to throw error\n *   on `@protected` constraint violation, \"warn\" to allow violations and\n *   signal a warning.\n * @param overrideProtected `false` allows protected terms to be modified.\n */\napi.createTermDefinition = ({\n  activeCtx,\n  localCtx,\n  term,\n  defined,\n  options,\n  overrideProtected = false,\n}) => {\n  if(defined.has(term)) {\n    // term already defined\n    if(defined.get(term)) {\n      return;\n    }\n    // cycle detected\n    throw new JsonLdError(\n      'Cyclical context definition detected.',\n      'jsonld.CyclicalContext',\n      {code: 'cyclic IRI mapping', context: localCtx, term});\n  }\n\n  // now defining term\n  defined.set(term, false);\n\n  // get context term value\n  let value;\n  if(localCtx.hasOwnProperty(term)) {\n    value = localCtx[term];\n  }\n\n  if(term === '@type' &&\n     _isObject(value) &&\n     (value['@container'] || '@set') === '@set' &&\n     api.processingMode(activeCtx, 1.1)) {\n\n    const validKeys = ['@container', '@id', '@protected'];\n    const keys = Object.keys(value);\n    if(keys.length === 0 || keys.some(k => !validKeys.includes(k))) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; keywords cannot be overridden.',\n        'jsonld.SyntaxError',\n        {code: 'keyword redefinition', context: localCtx, term});\n    }\n  } else if(api.isKeyword(term)) {\n    throw new JsonLdError(\n      'Invalid JSON-LD syntax; keywords cannot be overridden.',\n      'jsonld.SyntaxError',\n      {code: 'keyword redefinition', context: localCtx, term});\n  } else if(term.match(KEYWORD_PATTERN)) {\n    // FIXME: remove logging and use a handler\n    console.warn('WARNING: terms beginning with \"@\" are reserved' +\n      ' for future use and ignored', {term});\n    return;\n  } else if(term === '') {\n    throw new JsonLdError(\n      'Invalid JSON-LD syntax; a term cannot be an empty string.',\n      'jsonld.SyntaxError',\n      {code: 'invalid term definition', context: localCtx});\n  }\n\n  // keep reference to previous mapping for potential `@protected` check\n  const previousMapping = activeCtx.mappings.get(term);\n\n  // remove old mapping\n  if(activeCtx.mappings.has(term)) {\n    activeCtx.mappings.delete(term);\n  }\n\n  // convert short-hand value to object w/@id\n  let simpleTerm = false;\n  if(_isString(value) || value === null) {\n    simpleTerm = true;\n    value = {'@id': value};\n  }\n\n  if(!_isObject(value)) {\n    throw new JsonLdError(\n      'Invalid JSON-LD syntax; @context term values must be ' +\n      'strings or objects.',\n      'jsonld.SyntaxError',\n      {code: 'invalid term definition', context: localCtx});\n  }\n\n  // create new mapping\n  const mapping = {};\n  activeCtx.mappings.set(term, mapping);\n  mapping.reverse = false;\n\n  // make sure term definition only has expected keywords\n  const validKeys = ['@container', '@id', '@language', '@reverse', '@type'];\n\n  // JSON-LD 1.1 support\n  if(api.processingMode(activeCtx, 1.1)) {\n    validKeys.push(\n      '@context', '@direction', '@index', '@nest', '@prefix', '@protected');\n  }\n\n  for(const kw in value) {\n    if(!validKeys.includes(kw)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; a term definition must not contain ' + kw,\n        'jsonld.SyntaxError',\n        {code: 'invalid term definition', context: localCtx});\n    }\n  }\n\n  // always compute whether term has a colon as an optimization for\n  // _compactIri\n  const colon = term.indexOf(':');\n  mapping._termHasColon = (colon > 0);\n\n  if('@reverse' in value) {\n    if('@id' in value) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; a @reverse term definition must not ' +\n        'contain @id.', 'jsonld.SyntaxError',\n        {code: 'invalid reverse property', context: localCtx});\n    }\n    if('@nest' in value) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; a @reverse term definition must not ' +\n        'contain @nest.', 'jsonld.SyntaxError',\n        {code: 'invalid reverse property', context: localCtx});\n    }\n    const reverse = value['@reverse'];\n    if(!_isString(reverse)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; a @context @reverse value must be a string.',\n        'jsonld.SyntaxError', {code: 'invalid IRI mapping', context: localCtx});\n    }\n\n    if(!api.isKeyword(reverse) && reverse.match(KEYWORD_PATTERN)) {\n      // FIXME: remove logging and use a handler\n      console.warn('WARNING: values beginning with \"@\" are reserved' +\n        ' for future use and ignored', {reverse});\n      if(previousMapping) {\n        activeCtx.mappings.set(term, previousMapping);\n      } else {\n        activeCtx.mappings.delete(term);\n      }\n      return;\n    }\n\n    // expand and add @id mapping\n    const id = _expandIri(\n      activeCtx, reverse, {vocab: true, base: false}, localCtx, defined,\n      options);\n    if(!_isAbsoluteIri(id)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; a @context @reverse value must be an ' +\n        'absolute IRI or a blank node identifier.',\n        'jsonld.SyntaxError', {code: 'invalid IRI mapping', context: localCtx});\n    }\n\n    mapping['@id'] = id;\n    mapping.reverse = true;\n  } else if('@id' in value) {\n    let id = value['@id'];\n    if(id && !_isString(id)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; a @context @id value must be an array ' +\n        'of strings or a string.',\n        'jsonld.SyntaxError', {code: 'invalid IRI mapping', context: localCtx});\n    }\n    if(id === null) {\n      // reserve a null term, which may be protected\n      mapping['@id'] = null;\n    } else if(!api.isKeyword(id) && id.match(KEYWORD_PATTERN)) {\n      // FIXME: remove logging and use a handler\n      console.warn('WARNING: values beginning with \"@\" are reserved' +\n        ' for future use and ignored', {id});\n      if(previousMapping) {\n        activeCtx.mappings.set(term, previousMapping);\n      } else {\n        activeCtx.mappings.delete(term);\n      }\n      return;\n    } else if(id !== term) {\n      // expand and add @id mapping\n      id = _expandIri(\n        activeCtx, id, {vocab: true, base: false}, localCtx, defined, options);\n      if(!_isAbsoluteIri(id) && !api.isKeyword(id)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; a @context @id value must be an ' +\n          'absolute IRI, a blank node identifier, or a keyword.',\n          'jsonld.SyntaxError',\n          {code: 'invalid IRI mapping', context: localCtx});\n      }\n\n      // if term has the form of an IRI it must map the same\n      if(term.match(/(?::[^:])|\\//)) {\n        const termDefined = new Map(defined).set(term, true);\n        const termIri = _expandIri(\n          activeCtx, term, {vocab: true, base: false},\n          localCtx, termDefined, options);\n        if(termIri !== id) {\n          throw new JsonLdError(\n            'Invalid JSON-LD syntax; term in form of IRI must ' +\n            'expand to definition.',\n            'jsonld.SyntaxError',\n            {code: 'invalid IRI mapping', context: localCtx});\n        }\n      }\n\n      mapping['@id'] = id;\n      // indicate if this term may be used as a compact IRI prefix\n      mapping._prefix = (simpleTerm &&\n        !mapping._termHasColon &&\n        id.match(/[:\\/\\?#\\[\\]@]$/));\n    }\n  }\n\n  if(!('@id' in mapping)) {\n    // see if the term has a prefix\n    if(mapping._termHasColon) {\n      const prefix = term.substr(0, colon);\n      if(localCtx.hasOwnProperty(prefix)) {\n        // define parent prefix\n        api.createTermDefinition({\n          activeCtx, localCtx, term: prefix, defined, options\n        });\n      }\n\n      if(activeCtx.mappings.has(prefix)) {\n        // set @id based on prefix parent\n        const suffix = term.substr(colon + 1);\n        mapping['@id'] = activeCtx.mappings.get(prefix)['@id'] + suffix;\n      } else {\n        // term is an absolute IRI\n        mapping['@id'] = term;\n      }\n    } else if(term === '@type') {\n      // Special case, were we've previously determined that container is @set\n      mapping['@id'] = term;\n    } else {\n      // non-IRIs *must* define @ids if @vocab is not available\n      if(!('@vocab' in activeCtx)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; @context terms must define an @id.',\n          'jsonld.SyntaxError',\n          {code: 'invalid IRI mapping', context: localCtx, term});\n      }\n      // prepend vocab to term\n      mapping['@id'] = activeCtx['@vocab'] + term;\n    }\n  }\n\n  // Handle term protection\n  if(value['@protected'] === true ||\n    (defined.get('@protected') === true && value['@protected'] !== false)) {\n    activeCtx.protected[term] = true;\n    mapping.protected = true;\n  }\n\n  // IRI mapping now defined\n  defined.set(term, true);\n\n  if('@type' in value) {\n    let type = value['@type'];\n    if(!_isString(type)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; an @context @type value must be a string.',\n        'jsonld.SyntaxError',\n        {code: 'invalid type mapping', context: localCtx});\n    }\n\n    if((type === '@json' || type === '@none')) {\n      if(api.processingMode(activeCtx, 1.0)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; an @context @type value must not be ' +\n          `\"${type}\" in JSON-LD 1.0 mode.`,\n          'jsonld.SyntaxError',\n          {code: 'invalid type mapping', context: localCtx});\n      }\n    } else if(type !== '@id' && type !== '@vocab') {\n      // expand @type to full IRI\n      type = _expandIri(\n        activeCtx, type, {vocab: true, base: false}, localCtx, defined,\n        options);\n      if(!_isAbsoluteIri(type)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; an @context @type value must be an ' +\n          'absolute IRI.',\n          'jsonld.SyntaxError',\n          {code: 'invalid type mapping', context: localCtx});\n      }\n      if(type.indexOf('_:') === 0) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; an @context @type value must be an IRI, ' +\n          'not a blank node identifier.',\n          'jsonld.SyntaxError',\n          {code: 'invalid type mapping', context: localCtx});\n      }\n    }\n\n    // add @type to mapping\n    mapping['@type'] = type;\n  }\n\n  if('@container' in value) {\n    // normalize container to an array form\n    const container = _isString(value['@container']) ?\n      [value['@container']] : (value['@container'] || []);\n    const validContainers = ['@list', '@set', '@index', '@language'];\n    let isValid = true;\n    const hasSet = container.includes('@set');\n\n    // JSON-LD 1.1 support\n    if(api.processingMode(activeCtx, 1.1)) {\n      validContainers.push('@graph', '@id', '@type');\n\n      // check container length\n      if(container.includes('@list')) {\n        if(container.length !== 1) {\n          throw new JsonLdError(\n            'Invalid JSON-LD syntax; @context @container with @list must ' +\n            'have no other values',\n            'jsonld.SyntaxError',\n            {code: 'invalid container mapping', context: localCtx});\n        }\n      } else if(container.includes('@graph')) {\n        if(container.some(key =>\n          key !== '@graph' && key !== '@id' && key !== '@index' &&\n          key !== '@set')) {\n          throw new JsonLdError(\n            'Invalid JSON-LD syntax; @context @container with @graph must ' +\n            'have no other values other than @id, @index, and @set',\n            'jsonld.SyntaxError',\n            {code: 'invalid container mapping', context: localCtx});\n        }\n      } else {\n        // otherwise, container may also include @set\n        isValid &= container.length <= (hasSet ? 2 : 1);\n      }\n\n      if(container.includes('@type')) {\n        // If mapping does not have an @type,\n        // set it to @id\n        mapping['@type'] = mapping['@type'] || '@id';\n\n        // type mapping must be either @id or @vocab\n        if(!['@id', '@vocab'].includes(mapping['@type'])) {\n          throw new JsonLdError(\n            'Invalid JSON-LD syntax; container: @type requires @type to be ' +\n            '@id or @vocab.',\n            'jsonld.SyntaxError',\n            {code: 'invalid type mapping', context: localCtx});\n        }\n      }\n    } else {\n      // in JSON-LD 1.0, container must not be an array (it must be a string,\n      // which is one of the validContainers)\n      isValid &= !_isArray(value['@container']);\n\n      // check container length\n      isValid &= container.length <= 1;\n    }\n\n    // check against valid containers\n    isValid &= container.every(c => validContainers.includes(c));\n\n    // @set not allowed with @list\n    isValid &= !(hasSet && container.includes('@list'));\n\n    if(!isValid) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @context @container value must be ' +\n        'one of the following: ' + validContainers.join(', '),\n        'jsonld.SyntaxError',\n        {code: 'invalid container mapping', context: localCtx});\n    }\n\n    if(mapping.reverse &&\n      !container.every(c => ['@index', '@set'].includes(c))) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @context @container value for a @reverse ' +\n        'type definition must be @index or @set.', 'jsonld.SyntaxError',\n        {code: 'invalid reverse property', context: localCtx});\n    }\n\n    // add @container to mapping\n    mapping['@container'] = container;\n  }\n\n  // property indexing\n  if('@index' in value) {\n    if(!('@container' in value) || !mapping['@container'].includes('@index')) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @index without @index in @container: ' +\n        `\"${value['@index']}\" on term \"${term}\".`, 'jsonld.SyntaxError',\n        {code: 'invalid term definition', context: localCtx});\n    }\n    if(!_isString(value['@index']) || value['@index'].indexOf('@') === 0) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @index must expand to an IRI: ' +\n        `\"${value['@index']}\" on term \"${term}\".`, 'jsonld.SyntaxError',\n        {code: 'invalid term definition', context: localCtx});\n    }\n    mapping['@index'] = value['@index'];\n  }\n\n  // scoped contexts\n  if('@context' in value) {\n    mapping['@context'] = value['@context'];\n  }\n\n  if('@language' in value && !('@type' in value)) {\n    let language = value['@language'];\n    if(language !== null && !_isString(language)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @context @language value must be ' +\n        'a string or null.', 'jsonld.SyntaxError',\n        {code: 'invalid language mapping', context: localCtx});\n    }\n\n    // add @language to mapping\n    if(language !== null) {\n      language = language.toLowerCase();\n    }\n    mapping['@language'] = language;\n  }\n\n  // term may be used as a prefix\n  if('@prefix' in value) {\n    if(term.match(/:|\\//)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @context @prefix used on a compact IRI term',\n        'jsonld.SyntaxError',\n        {code: 'invalid term definition', context: localCtx});\n    }\n    if(api.isKeyword(mapping['@id'])) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; keywords may not be used as prefixes',\n        'jsonld.SyntaxError',\n        {code: 'invalid term definition', context: localCtx});\n    }\n    if(typeof value['@prefix'] === 'boolean') {\n      mapping._prefix = value['@prefix'] === true;\n    } else {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @context value for @prefix must be boolean',\n        'jsonld.SyntaxError',\n        {code: 'invalid @prefix value', context: localCtx});\n    }\n  }\n\n  if('@direction' in value) {\n    const direction = value['@direction'];\n    if(direction !== null && direction !== 'ltr' && direction !== 'rtl') {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @direction value must be ' +\n        'null, \"ltr\", or \"rtl\".',\n        'jsonld.SyntaxError',\n        {code: 'invalid base direction', context: localCtx});\n    }\n    mapping['@direction'] = direction;\n  }\n\n  if('@nest' in value) {\n    const nest = value['@nest'];\n    if(!_isString(nest) || (nest !== '@nest' && nest.indexOf('@') === 0)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @context @nest value must be ' +\n        'a string which is not a keyword other than @nest.',\n        'jsonld.SyntaxError',\n        {code: 'invalid @nest value', context: localCtx});\n    }\n    mapping['@nest'] = nest;\n  }\n\n  // disallow aliasing @context and @preserve\n  const id = mapping['@id'];\n  if(id === '@context' || id === '@preserve') {\n    throw new JsonLdError(\n      'Invalid JSON-LD syntax; @context and @preserve cannot be aliased.',\n      'jsonld.SyntaxError', {code: 'invalid keyword alias', context: localCtx});\n  }\n\n  // Check for overriding protected terms\n  if(previousMapping && previousMapping.protected && !overrideProtected) {\n    // force new term to continue to be protected and see if the mappings would\n    // be equal\n    activeCtx.protected[term] = true;\n    mapping.protected = true;\n    if(!_deepCompare(previousMapping, mapping)) {\n      const protectedMode = (options && options.protectedMode) || 'error';\n      if(protectedMode === 'error') {\n        throw new JsonLdError(\n          `Invalid JSON-LD syntax; tried to redefine \"${term}\" which is a ` +\n          'protected term.',\n          'jsonld.SyntaxError',\n          {code: 'protected term redefinition', context: localCtx, term});\n      } else if(protectedMode === 'warn') {\n        // FIXME: remove logging and use a handler\n        console.warn('WARNING: protected term redefinition', {term});\n        return;\n      }\n      throw new JsonLdError(\n        'Invalid protectedMode.',\n        'jsonld.SyntaxError',\n        {code: 'invalid protected mode', context: localCtx, term,\n          protectedMode});\n    }\n  }\n};\n\n/**\n * Expands a string to a full IRI. The string may be a term, a prefix, a\n * relative IRI, or an absolute IRI. The associated absolute IRI will be\n * returned.\n *\n * @param activeCtx the current active context.\n * @param value the string to expand.\n * @param relativeTo options for how to resolve relative IRIs:\n *          base: true to resolve against the base IRI, false not to.\n *          vocab: true to concatenate after @vocab, false not to.\n * @param {Object} [options] - processing options.\n *\n * @return the expanded value.\n */\napi.expandIri = (activeCtx, value, relativeTo, options) => {\n  return _expandIri(activeCtx, value, relativeTo, undefined, undefined,\n    options);\n};\n\n/**\n * Expands a string to a full IRI. The string may be a term, a prefix, a\n * relative IRI, or an absolute IRI. The associated absolute IRI will be\n * returned.\n *\n * @param activeCtx the current active context.\n * @param value the string to expand.\n * @param relativeTo options for how to resolve relative IRIs:\n *          base: true to resolve against the base IRI, false not to.\n *          vocab: true to concatenate after @vocab, false not to.\n * @param localCtx the local context being processed (only given if called\n *          during context processing).\n * @param defined a map for tracking cycles in context definitions (only given\n *          if called during context processing).\n * @param {Object} [options] - processing options.\n *\n * @return the expanded value.\n */\nfunction _expandIri(activeCtx, value, relativeTo, localCtx, defined, options) {\n  // already expanded\n  if(value === null || !_isString(value) || api.isKeyword(value)) {\n    return value;\n  }\n\n  // ignore non-keyword things that look like a keyword\n  if(value.match(KEYWORD_PATTERN)) {\n    return null;\n  }\n\n  // define term dependency if not defined\n  if(localCtx && localCtx.hasOwnProperty(value) &&\n    defined.get(value) !== true) {\n    api.createTermDefinition({\n      activeCtx, localCtx, term: value, defined, options\n    });\n  }\n\n  relativeTo = relativeTo || {};\n  if(relativeTo.vocab) {\n    const mapping = activeCtx.mappings.get(value);\n\n    // value is explicitly ignored with a null mapping\n    if(mapping === null) {\n      return null;\n    }\n\n    if(_isObject(mapping) && '@id' in mapping) {\n      // value is a term\n      return mapping['@id'];\n    }\n  }\n\n  // split value into prefix:suffix\n  const colon = value.indexOf(':');\n  if(colon > 0) {\n    const prefix = value.substr(0, colon);\n    const suffix = value.substr(colon + 1);\n\n    // do not expand blank nodes (prefix of '_') or already-absolute\n    // IRIs (suffix of '//')\n    if(prefix === '_' || suffix.indexOf('//') === 0) {\n      return value;\n    }\n\n    // prefix dependency not defined, define it\n    if(localCtx && localCtx.hasOwnProperty(prefix)) {\n      api.createTermDefinition({\n        activeCtx, localCtx, term: prefix, defined, options\n      });\n    }\n\n    // use mapping if prefix is defined\n    const mapping = activeCtx.mappings.get(prefix);\n    if(mapping && mapping._prefix) {\n      return mapping['@id'] + suffix;\n    }\n\n    // already absolute IRI\n    if(_isAbsoluteIri(value)) {\n      return value;\n    }\n  }\n\n  // prepend vocab\n  if(relativeTo.vocab && '@vocab' in activeCtx) {\n    return activeCtx['@vocab'] + value;\n  }\n\n  // prepend base\n  if(relativeTo.base && '@base' in activeCtx) {\n    if(activeCtx['@base']) {\n      // The null case preserves value as potentially relative\n      return prependBase(prependBase(options.base, activeCtx['@base']), value);\n    }\n  } else if(relativeTo.base) {\n    return prependBase(options.base, value);\n  }\n\n  return value;\n}\n\n/**\n * Gets the initial context.\n *\n * @param options the options to use:\n *          [base] the document base IRI.\n *\n * @return the initial context.\n */\napi.getInitialContext = options => {\n  const key = JSON.stringify({processingMode: options.processingMode});\n  const cached = INITIAL_CONTEXT_CACHE.get(key);\n  if(cached) {\n    return cached;\n  }\n\n  const initialContext = {\n    processingMode: options.processingMode,\n    mappings: new Map(),\n    inverse: null,\n    getInverse: _createInverseContext,\n    clone: _cloneActiveContext,\n    revertToPreviousContext: _revertToPreviousContext,\n    protected: {}\n  };\n  // TODO: consider using LRU cache instead\n  if(INITIAL_CONTEXT_CACHE.size === INITIAL_CONTEXT_CACHE_MAX_SIZE) {\n    // clear whole cache -- assumes scenario where the cache fills means\n    // the cache isn't being used very efficiently anyway\n    INITIAL_CONTEXT_CACHE.clear();\n  }\n  INITIAL_CONTEXT_CACHE.set(key, initialContext);\n  return initialContext;\n\n  /**\n   * Generates an inverse context for use in the compaction algorithm, if\n   * not already generated for the given active context.\n   *\n   * @return the inverse context.\n   */\n  function _createInverseContext() {\n    const activeCtx = this;\n\n    // lazily create inverse\n    if(activeCtx.inverse) {\n      return activeCtx.inverse;\n    }\n    const inverse = activeCtx.inverse = {};\n\n    // variables for building fast CURIE map\n    const fastCurieMap = activeCtx.fastCurieMap = {};\n    const irisToTerms = {};\n\n    // handle default language\n    const defaultLanguage = (activeCtx['@language'] || '@none').toLowerCase();\n\n    // handle default direction\n    const defaultDirection = activeCtx['@direction'];\n\n    // create term selections for each mapping in the context, ordered by\n    // shortest and then lexicographically least\n    const mappings = activeCtx.mappings;\n    const terms = [...mappings.keys()].sort(_compareShortestLeast);\n    for(const term of terms) {\n      const mapping = mappings.get(term);\n      if(mapping === null) {\n        continue;\n      }\n\n      let container = mapping['@container'] || '@none';\n      container = [].concat(container).sort().join('');\n\n      if(mapping['@id'] === null) {\n        continue;\n      }\n      // iterate over every IRI in the mapping\n      const ids = _asArray(mapping['@id']);\n      for(const iri of ids) {\n        let entry = inverse[iri];\n        const isKeyword = api.isKeyword(iri);\n\n        if(!entry) {\n          // initialize entry\n          inverse[iri] = entry = {};\n\n          if(!isKeyword && !mapping._termHasColon) {\n            // init IRI to term map and fast CURIE prefixes\n            irisToTerms[iri] = [term];\n            const fastCurieEntry = {iri, terms: irisToTerms[iri]};\n            if(iri[0] in fastCurieMap) {\n              fastCurieMap[iri[0]].push(fastCurieEntry);\n            } else {\n              fastCurieMap[iri[0]] = [fastCurieEntry];\n            }\n          }\n        } else if(!isKeyword && !mapping._termHasColon) {\n          // add IRI to term match\n          irisToTerms[iri].push(term);\n        }\n\n        // add new entry\n        if(!entry[container]) {\n          entry[container] = {\n            '@language': {},\n            '@type': {},\n            '@any': {}\n          };\n        }\n        entry = entry[container];\n        _addPreferredTerm(term, entry['@any'], '@none');\n\n        if(mapping.reverse) {\n          // term is preferred for values using @reverse\n          _addPreferredTerm(term, entry['@type'], '@reverse');\n        } else if(mapping['@type'] === '@none') {\n          _addPreferredTerm(term, entry['@any'], '@none');\n          _addPreferredTerm(term, entry['@language'], '@none');\n          _addPreferredTerm(term, entry['@type'], '@none');\n        } else if('@type' in mapping) {\n          // term is preferred for values using specific type\n          _addPreferredTerm(term, entry['@type'], mapping['@type']);\n        } else if('@language' in mapping && '@direction' in mapping) {\n          // term is preferred for values using specific language and direction\n          const language = mapping['@language'];\n          const direction = mapping['@direction'];\n          if(language && direction) {\n            _addPreferredTerm(term, entry['@language'],\n              `${language}_${direction}`.toLowerCase());\n          } else if(language) {\n            _addPreferredTerm(term, entry['@language'], language.toLowerCase());\n          } else if(direction) {\n            _addPreferredTerm(term, entry['@language'], `_${direction}`);\n          } else {\n            _addPreferredTerm(term, entry['@language'], '@null');\n          }\n        } else if('@language' in mapping) {\n          _addPreferredTerm(term, entry['@language'],\n            (mapping['@language'] || '@null').toLowerCase());\n        } else if('@direction' in mapping) {\n          if(mapping['@direction']) {\n            _addPreferredTerm(term, entry['@language'],\n              `_${mapping['@direction']}`);\n          } else {\n            _addPreferredTerm(term, entry['@language'], '@none');\n          }\n        } else if(defaultDirection) {\n          _addPreferredTerm(term, entry['@language'], `_${defaultDirection}`);\n          _addPreferredTerm(term, entry['@language'], '@none');\n          _addPreferredTerm(term, entry['@type'], '@none');\n        } else {\n          // add entries for no type and no language\n          _addPreferredTerm(term, entry['@language'], defaultLanguage);\n          _addPreferredTerm(term, entry['@language'], '@none');\n          _addPreferredTerm(term, entry['@type'], '@none');\n        }\n      }\n    }\n\n    // build fast CURIE map\n    for(const key in fastCurieMap) {\n      _buildIriMap(fastCurieMap, key, 1);\n    }\n\n    return inverse;\n  }\n\n  /**\n   * Runs a recursive algorithm to build a lookup map for quickly finding\n   * potential CURIEs.\n   *\n   * @param iriMap the map to build.\n   * @param key the current key in the map to work on.\n   * @param idx the index into the IRI to compare.\n   */\n  function _buildIriMap(iriMap, key, idx) {\n    const entries = iriMap[key];\n    const next = iriMap[key] = {};\n\n    let iri;\n    let letter;\n    for(const entry of entries) {\n      iri = entry.iri;\n      if(idx >= iri.length) {\n        letter = '';\n      } else {\n        letter = iri[idx];\n      }\n      if(letter in next) {\n        next[letter].push(entry);\n      } else {\n        next[letter] = [entry];\n      }\n    }\n\n    for(const key in next) {\n      if(key === '') {\n        continue;\n      }\n      _buildIriMap(next, key, idx + 1);\n    }\n  }\n\n  /**\n   * Adds the term for the given entry if not already added.\n   *\n   * @param term the term to add.\n   * @param entry the inverse context typeOrLanguage entry to add to.\n   * @param typeOrLanguageValue the key in the entry to add to.\n   */\n  function _addPreferredTerm(term, entry, typeOrLanguageValue) {\n    if(!entry.hasOwnProperty(typeOrLanguageValue)) {\n      entry[typeOrLanguageValue] = term;\n    }\n  }\n\n  /**\n   * Clones an active context, creating a child active context.\n   *\n   * @return a clone (child) of the active context.\n   */\n  function _cloneActiveContext() {\n    const child = {};\n    child.mappings = util.clone(this.mappings);\n    child.clone = this.clone;\n    child.inverse = null;\n    child.getInverse = this.getInverse;\n    child.protected = util.clone(this.protected);\n    if(this.previousContext) {\n      child.previousContext = this.previousContext.clone();\n    }\n    child.revertToPreviousContext = this.revertToPreviousContext;\n    if('@base' in this) {\n      child['@base'] = this['@base'];\n    }\n    if('@language' in this) {\n      child['@language'] = this['@language'];\n    }\n    if('@vocab' in this) {\n      child['@vocab'] = this['@vocab'];\n    }\n    return child;\n  }\n\n  /**\n   * Reverts any type-scoped context in this active context to the previous\n   * context.\n   */\n  function _revertToPreviousContext() {\n    if(!this.previousContext) {\n      return this;\n    }\n    return this.previousContext.clone();\n  }\n};\n\n/**\n * Gets the value for the given active context key and type, null if none is\n * set or undefined if none is set and type is '@context'.\n *\n * @param ctx the active context.\n * @param key the context key.\n * @param [type] the type of value to get (eg: '@id', '@type'), if not\n *          specified gets the entire entry for a key, null if not found.\n *\n * @return the value, null, or undefined.\n */\napi.getContextValue = (ctx, key, type) => {\n  // invalid key\n  if(key === null) {\n    if(type === '@context') {\n      return undefined;\n    }\n    return null;\n  }\n\n  // get specific entry information\n  if(ctx.mappings.has(key)) {\n    const entry = ctx.mappings.get(key);\n\n    if(_isUndefined(type)) {\n      // return whole entry\n      return entry;\n    }\n    if(entry.hasOwnProperty(type)) {\n      // return entry value for type\n      return entry[type];\n    }\n  }\n\n  // get default language\n  if(type === '@language' && type in ctx) {\n    return ctx[type];\n  }\n\n  // get default direction\n  if(type === '@direction' && type in ctx) {\n    return ctx[type];\n  }\n\n  if(type === '@context') {\n    return undefined;\n  }\n  return null;\n};\n\n/**\n * Processing Mode check.\n *\n * @param activeCtx the current active context.\n * @param version the string or numeric version to check.\n *\n * @return boolean.\n */\napi.processingMode = (activeCtx, version) => {\n  if(version.toString() >= '1.1') {\n    return !activeCtx.processingMode ||\n      activeCtx.processingMode >= 'json-ld-' + version.toString();\n  } else {\n    return activeCtx.processingMode === 'json-ld-1.0';\n  }\n};\n\n/**\n * Returns whether or not the given value is a keyword.\n *\n * @param v the value to check.\n *\n * @return true if the value is a keyword, false if not.\n */\napi.isKeyword = v => {\n  if(!_isString(v) || v[0] !== '@') {\n    return false;\n  }\n  switch(v) {\n    case '@base':\n    case '@container':\n    case '@context':\n    case '@default':\n    case '@direction':\n    case '@embed':\n    case '@explicit':\n    case '@graph':\n    case '@id':\n    case '@included':\n    case '@index':\n    case '@json':\n    case '@language':\n    case '@list':\n    case '@nest':\n    case '@none':\n    case '@omitDefault':\n    case '@prefix':\n    case '@preserve':\n    case '@protected':\n    case '@requireAll':\n    case '@reverse':\n    case '@set':\n    case '@type':\n    case '@value':\n    case '@version':\n    case '@vocab':\n      return true;\n  }\n  return false;\n};\n\nfunction _deepCompare(x1, x2) {\n  // compare `null` or primitive types directly\n  if((!(x1 && typeof x1 === 'object')) ||\n     (!(x2 && typeof x2 === 'object'))) {\n    return x1 === x2;\n  }\n  // x1 and x2 are objects (also potentially arrays)\n  const x1Array = Array.isArray(x1);\n  if(x1Array !== Array.isArray(x2)) {\n    return false;\n  }\n  if(x1Array) {\n    if(x1.length !== x2.length) {\n      return false;\n    }\n    for(let i = 0; i < x1.length; ++i) {\n      if(!_deepCompare(x1[i], x2[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  // x1 and x2 are non-array objects\n  const k1s = Object.keys(x1);\n  const k2s = Object.keys(x2);\n  if(k1s.length !== k2s.length) {\n    return false;\n  }\n  for(const k1 in x1) {\n    let v1 = x1[k1];\n    let v2 = x2[k1];\n    // special case: `@container` can be in any order\n    if(k1 === '@container') {\n      if(Array.isArray(v1) && Array.isArray(v2)) {\n        v1 = v1.slice().sort();\n        v2 = v2.slice().sort();\n      }\n    }\n    if(!_deepCompare(v1, v2)) {\n      return false;\n    }\n  }\n  return true;\n}\n","/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst JsonLdError = require('./JsonLdError');\n\nconst {\n  isArray: _isArray,\n  isObject: _isObject,\n  isEmptyObject: _isEmptyObject,\n  isString: _isString,\n  isUndefined: _isUndefined\n} = require('./types');\n\nconst {\n  isList: _isList,\n  isValue: _isValue,\n  isGraph: _isGraph,\n  isSubject: _isSubject\n} = require('./graphTypes');\n\nconst {\n  expandIri: _expandIri,\n  getContextValue: _getContextValue,\n  isKeyword: _isKeyword,\n  process: _processContext,\n  processingMode: _processingMode\n} = require('./context');\n\nconst {\n  isAbsolute: _isAbsoluteIri\n} = require('./url');\n\nconst {\n  addValue: _addValue,\n  asArray: _asArray,\n  getValues: _getValues,\n  validateTypeValue: _validateTypeValue\n} = require('./util');\n\nconst api = {};\nmodule.exports = api;\nconst REGEX_BCP47 = /^[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*$/;\n\n/**\n * Recursively expands an element using the given context. Any context in\n * the element will be removed. All context URLs must have been retrieved\n * before calling this method.\n *\n * @param activeCtx the context to use.\n * @param activeProperty the property for the element, null for none.\n * @param element the element to expand.\n * @param options the expansion options.\n * @param insideList true if the element is a list, false if not.\n * @param insideIndex true if the element is inside an index container,\n *          false if not.\n * @param typeScopedContext an optional type-scoped active context for\n *          expanding values of nodes that were expressed according to\n *          a type-scoped context.\n * @param expansionMap(info) a function that can be used to custom map\n *          unmappable values (or to throw an error when they are detected);\n *          if this function returns `undefined` then the default behavior\n *          will be used.\n *\n * @return a Promise that resolves to the expanded value.\n */\napi.expand = async ({\n  activeCtx,\n  activeProperty = null,\n  element,\n  options = {},\n  insideList = false,\n  insideIndex = false,\n  typeScopedContext = null,\n  expansionMap = () => undefined\n}) => {\n  // nothing to expand\n  if(element === null || element === undefined) {\n    return null;\n  }\n\n  // disable framing if activeProperty is @default\n  if(activeProperty === '@default') {\n    options = Object.assign({}, options, {isFrame: false});\n  }\n\n  if(!_isArray(element) && !_isObject(element)) {\n    // drop free-floating scalars that are not in lists unless custom mapped\n    if(!insideList && (activeProperty === null ||\n      _expandIri(activeCtx, activeProperty, {vocab: true},\n        options) === '@graph')) {\n      const mapped = await expansionMap({\n        unmappedValue: element,\n        activeCtx,\n        activeProperty,\n        options,\n        insideList\n      });\n      if(mapped === undefined) {\n        return null;\n      }\n      return mapped;\n    }\n\n    // expand element according to value expansion rules\n    return _expandValue({activeCtx, activeProperty, value: element, options});\n  }\n\n  // recursively expand array\n  if(_isArray(element)) {\n    let rval = [];\n    const container = _getContextValue(\n      activeCtx, activeProperty, '@container') || [];\n    insideList = insideList || container.includes('@list');\n    for(let i = 0; i < element.length; ++i) {\n      // expand element\n      let e = await api.expand({\n        activeCtx,\n        activeProperty,\n        element: element[i],\n        options,\n        expansionMap,\n        insideIndex,\n        typeScopedContext\n      });\n      if(insideList && _isArray(e)) {\n        e = {'@list': e};\n      }\n\n      if(e === null) {\n        e = await expansionMap({\n          unmappedValue: element[i],\n          activeCtx,\n          activeProperty,\n          parent: element,\n          index: i,\n          options,\n          expandedParent: rval,\n          insideList\n        });\n        if(e === undefined) {\n          continue;\n        }\n      }\n\n      if(_isArray(e)) {\n        rval = rval.concat(e);\n      } else {\n        rval.push(e);\n      }\n    }\n    return rval;\n  }\n\n  // recursively expand object:\n\n  // first, expand the active property\n  const expandedActiveProperty = _expandIri(\n    activeCtx, activeProperty, {vocab: true}, options);\n\n  // Get any property-scoped context for activeProperty\n  const propertyScopedCtx =\n    _getContextValue(activeCtx, activeProperty, '@context');\n\n  // second, determine if any type-scoped context should be reverted; it\n  // should only be reverted when the following are all true:\n  // 1. `element` is not a value or subject reference\n  // 2. `insideIndex` is false\n  typeScopedContext = typeScopedContext ||\n    (activeCtx.previousContext ? activeCtx : null);\n  let keys = Object.keys(element).sort();\n  let mustRevert = !insideIndex;\n  if(mustRevert && typeScopedContext && keys.length <= 2 &&\n    !keys.includes('@context')) {\n    for(const key of keys) {\n      const expandedProperty = _expandIri(\n        typeScopedContext, key, {vocab: true}, options);\n      if(expandedProperty === '@value') {\n        // value found, ensure type-scoped context is used to expand it\n        mustRevert = false;\n        activeCtx = typeScopedContext;\n        break;\n      }\n      if(expandedProperty === '@id' && keys.length === 1) {\n        // subject reference found, do not revert\n        mustRevert = false;\n        break;\n      }\n    }\n  }\n\n  if(mustRevert) {\n    // revert type scoped context\n    activeCtx = activeCtx.revertToPreviousContext();\n  }\n\n  // apply property-scoped context after reverting term-scoped context\n  if(!_isUndefined(propertyScopedCtx)) {\n    activeCtx = await _processContext({\n      activeCtx,\n      localCtx: propertyScopedCtx,\n      propagate: true,\n      overrideProtected: true,\n      options\n    });\n  }\n\n  // if element has a context, process it\n  if('@context' in element) {\n    activeCtx = await _processContext(\n      {activeCtx, localCtx: element['@context'], options});\n  }\n\n  // set the type-scoped context to the context on input, for use later\n  typeScopedContext = activeCtx;\n\n  // Remember the first key found expanding to @type\n  let typeKey = null;\n\n  // look for scoped contexts on `@type`\n  for(const key of keys) {\n    const expandedProperty = _expandIri(activeCtx, key, {vocab: true}, options);\n    if(expandedProperty === '@type') {\n      // set scoped contexts from @type\n      // avoid sorting if possible\n      typeKey = typeKey || key;\n      const value = element[key];\n      const types =\n        Array.isArray(value) ?\n          (value.length > 1 ? value.slice().sort() : value) : [value];\n      for(const type of types) {\n        const ctx = _getContextValue(typeScopedContext, type, '@context');\n        if(!_isUndefined(ctx)) {\n          activeCtx = await _processContext({\n            activeCtx,\n            localCtx: ctx,\n            options,\n            propagate: false\n          });\n        }\n      }\n    }\n  }\n\n  // process each key and value in element, ignoring @nest content\n  let rval = {};\n  await _expandObject({\n    activeCtx,\n    activeProperty,\n    expandedActiveProperty,\n    element,\n    expandedParent: rval,\n    options,\n    insideList,\n    typeKey,\n    typeScopedContext,\n    expansionMap});\n\n  // get property count on expanded output\n  keys = Object.keys(rval);\n  let count = keys.length;\n\n  if('@value' in rval) {\n    // @value must only have @language or @type\n    if('@type' in rval && ('@language' in rval || '@direction' in rval)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; an element containing \"@value\" may not ' +\n        'contain both \"@type\" and either \"@language\" or \"@direction\".',\n        'jsonld.SyntaxError', {code: 'invalid value object', element: rval});\n    }\n    let validCount = count - 1;\n    if('@type' in rval) {\n      validCount -= 1;\n    }\n    if('@index' in rval) {\n      validCount -= 1;\n    }\n    if('@language' in rval) {\n      validCount -= 1;\n    }\n    if('@direction' in rval) {\n      validCount -= 1;\n    }\n    if(validCount !== 0) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; an element containing \"@value\" may only ' +\n        'have an \"@index\" property and either \"@type\" ' +\n        'or either or both \"@language\" or \"@direction\".',\n        'jsonld.SyntaxError', {code: 'invalid value object', element: rval});\n    }\n    const values = rval['@value'] === null ? [] : _asArray(rval['@value']);\n    const types = _getValues(rval, '@type');\n\n    // drop null @values unless custom mapped\n    if(_processingMode(activeCtx, 1.1) && types.includes('@json') &&\n      types.length === 1) {\n      // Any value of @value is okay if @type: @json\n    } else if(values.length === 0) {\n      const mapped = await expansionMap({\n        unmappedValue: rval,\n        activeCtx,\n        activeProperty,\n        element,\n        options,\n        insideList\n      });\n      if(mapped !== undefined) {\n        rval = mapped;\n      } else {\n        rval = null;\n      }\n    } else if(!values.every(v => (_isString(v) || _isEmptyObject(v))) &&\n      '@language' in rval) {\n      // if @language is present, @value must be a string\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; only strings may be language-tagged.',\n        'jsonld.SyntaxError',\n        {code: 'invalid language-tagged value', element: rval});\n    } else if(!types.every(t =>\n      (_isAbsoluteIri(t) && !(_isString(t) && t.indexOf('_:') === 0) ||\n      _isEmptyObject(t)))) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; an element containing \"@value\" and \"@type\" ' +\n        'must have an absolute IRI for the value of \"@type\".',\n        'jsonld.SyntaxError', {code: 'invalid typed value', element: rval});\n    }\n  } else if('@type' in rval && !_isArray(rval['@type'])) {\n    // convert @type to an array\n    rval['@type'] = [rval['@type']];\n  } else if('@set' in rval || '@list' in rval) {\n    // handle @set and @list\n    if(count > 1 && !(count === 2 && '@index' in rval)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; if an element has the property \"@set\" ' +\n        'or \"@list\", then it can have at most one other property that is ' +\n        '\"@index\".', 'jsonld.SyntaxError',\n        {code: 'invalid set or list object', element: rval});\n    }\n    // optimize away @set\n    if('@set' in rval) {\n      rval = rval['@set'];\n      keys = Object.keys(rval);\n      count = keys.length;\n    }\n  } else if(count === 1 && '@language' in rval) {\n    // drop objects with only @language unless custom mapped\n    const mapped = await expansionMap(rval, {\n      unmappedValue: rval,\n      activeCtx,\n      activeProperty,\n      element,\n      options,\n      insideList\n    });\n    if(mapped !== undefined) {\n      rval = mapped;\n    } else {\n      rval = null;\n    }\n  }\n\n  // drop certain top-level objects that do not occur in lists, unless custom\n  // mapped\n  if(_isObject(rval) &&\n    !options.keepFreeFloatingNodes && !insideList &&\n    (activeProperty === null || expandedActiveProperty === '@graph')) {\n    // drop empty object, top-level @value/@list, or object with only @id\n    if(count === 0 || '@value' in rval || '@list' in rval ||\n      (count === 1 && '@id' in rval)) {\n      const mapped = await expansionMap({\n        unmappedValue: rval,\n        activeCtx,\n        activeProperty,\n        element,\n        options,\n        insideList\n      });\n      if(mapped !== undefined) {\n        rval = mapped;\n      } else {\n        rval = null;\n      }\n    }\n  }\n\n  return rval;\n};\n\n/**\n * Expand each key and value of element adding to result\n *\n * @param activeCtx the context to use.\n * @param activeProperty the property for the element.\n * @param expandedActiveProperty the expansion of activeProperty\n * @param element the element to expand.\n * @param expandedParent the expanded result into which to add values.\n * @param options the expansion options.\n * @param insideList true if the element is a list, false if not.\n * @param typeKey first key found expanding to @type.\n * @param typeScopedContext the context before reverting.\n * @param expansionMap(info) a function that can be used to custom map\n *          unmappable values (or to throw an error when they are detected);\n *          if this function returns `undefined` then the default behavior\n *          will be used.\n */\nasync function _expandObject({\n  activeCtx,\n  activeProperty,\n  expandedActiveProperty,\n  element,\n  expandedParent,\n  options = {},\n  insideList,\n  typeKey,\n  typeScopedContext,\n  expansionMap\n}) {\n  const keys = Object.keys(element).sort();\n  const nests = [];\n  let unexpandedValue;\n\n  // Figure out if this is the type for a JSON literal\n  const isJsonType = element[typeKey] &&\n    _expandIri(activeCtx,\n      (_isArray(element[typeKey]) ? element[typeKey][0] : element[typeKey]),\n      {vocab: true}, options) === '@json';\n\n  for(const key of keys) {\n    let value = element[key];\n    let expandedValue;\n\n    // skip @context\n    if(key === '@context') {\n      continue;\n    }\n\n    // expand property\n    let expandedProperty = _expandIri(activeCtx, key, {vocab: true}, options);\n\n    // drop non-absolute IRI keys that aren't keywords unless custom mapped\n    if(expandedProperty === null ||\n      !(_isAbsoluteIri(expandedProperty) || _isKeyword(expandedProperty))) {\n      // TODO: use `await` to support async\n      expandedProperty = expansionMap({\n        unmappedProperty: key,\n        activeCtx,\n        activeProperty,\n        parent: element,\n        options,\n        insideList,\n        value,\n        expandedParent\n      });\n      if(expandedProperty === undefined) {\n        continue;\n      }\n    }\n\n    if(_isKeyword(expandedProperty)) {\n      if(expandedActiveProperty === '@reverse') {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; a keyword cannot be used as a @reverse ' +\n          'property.', 'jsonld.SyntaxError',\n          {code: 'invalid reverse property map', value});\n      }\n      if(expandedProperty in expandedParent &&\n         expandedProperty !== '@included' &&\n         expandedProperty !== '@type') {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; colliding keywords detected.',\n          'jsonld.SyntaxError',\n          {code: 'colliding keywords', keyword: expandedProperty});\n      }\n    }\n\n    // syntax error if @id is not a string\n    if(expandedProperty === '@id') {\n      if(!_isString(value)) {\n        if(!options.isFrame) {\n          throw new JsonLdError(\n            'Invalid JSON-LD syntax; \"@id\" value must a string.',\n            'jsonld.SyntaxError', {code: 'invalid @id value', value});\n        }\n        if(_isObject(value)) {\n          // empty object is a wildcard\n          if(!_isEmptyObject(value)) {\n            throw new JsonLdError(\n              'Invalid JSON-LD syntax; \"@id\" value an empty object or array ' +\n              'of strings, if framing',\n              'jsonld.SyntaxError', {code: 'invalid @id value', value});\n          }\n        } else if(_isArray(value)) {\n          if(!value.every(v => _isString(v))) {\n            throw new JsonLdError(\n              'Invalid JSON-LD syntax; \"@id\" value an empty object or array ' +\n              'of strings, if framing',\n              'jsonld.SyntaxError', {code: 'invalid @id value', value});\n          }\n        } else {\n          throw new JsonLdError(\n            'Invalid JSON-LD syntax; \"@id\" value an empty object or array ' +\n            'of strings, if framing',\n            'jsonld.SyntaxError', {code: 'invalid @id value', value});\n        }\n      }\n\n      _addValue(\n        expandedParent, '@id',\n        _asArray(value).map(v =>\n          _isString(v) ? _expandIri(activeCtx, v, {base: true}, options) : v),\n        {propertyIsArray: options.isFrame});\n      continue;\n    }\n\n    if(expandedProperty === '@type') {\n      // if framing, can be a default object, but need to expand\n      // key to determine that\n      if(_isObject(value)) {\n        value = Object.fromEntries(Object.entries(value).map(([k, v]) => [\n          _expandIri(typeScopedContext, k, {vocab: true}),\n          _asArray(v).map(vv =>\n            _expandIri(typeScopedContext, vv, {base: true, vocab: true})\n          )\n        ]));\n      }\n      _validateTypeValue(value, options.isFrame);\n      _addValue(\n        expandedParent, '@type',\n        _asArray(value).map(v =>\n          _isString(v) ?\n            _expandIri(typeScopedContext, v,\n              {base: true, vocab: true}, options) : v),\n        {propertyIsArray: options.isFrame});\n      continue;\n    }\n\n    // Included blocks are treated as an array of separate object nodes sharing\n    // the same referencing active_property.\n    // For 1.0, it is skipped as are other unknown keywords\n    if(expandedProperty === '@included' && _processingMode(activeCtx, 1.1)) {\n      const includedResult = _asArray(await api.expand({\n        activeCtx,\n        activeProperty,\n        element: value,\n        options,\n        expansionMap\n      }));\n\n      // Expanded values must be node objects\n      if(!includedResult.every(v => _isSubject(v))) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; ' +\n          'values of @included must expand to node objects.',\n          'jsonld.SyntaxError', {code: 'invalid @included value', value});\n      }\n\n      _addValue(\n        expandedParent, '@included', includedResult, {propertyIsArray: true});\n      continue;\n    }\n\n    // @graph must be an array or an object\n    if(expandedProperty === '@graph' &&\n      !(_isObject(value) || _isArray(value))) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; \"@graph\" value must not be an ' +\n        'object or an array.',\n        'jsonld.SyntaxError', {code: 'invalid @graph value', value});\n    }\n\n    if(expandedProperty === '@value') {\n      // capture value for later\n      // \"colliding keywords\" check prevents this from being set twice\n      unexpandedValue = value;\n      if(isJsonType && _processingMode(activeCtx, 1.1)) {\n        // no coercion to array, and retain all values\n        expandedParent['@value'] = value;\n      } else {\n        _addValue(\n          expandedParent, '@value', value, {propertyIsArray: options.isFrame});\n      }\n      continue;\n    }\n\n    // @language must be a string\n    // it should match BCP47\n    if(expandedProperty === '@language') {\n      if(value === null) {\n        // drop null @language values, they expand as if they didn't exist\n        continue;\n      }\n      if(!_isString(value) && !options.isFrame) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; \"@language\" value must be a string.',\n          'jsonld.SyntaxError',\n          {code: 'invalid language-tagged string', value});\n      }\n      // ensure language value is lowercase\n      value = _asArray(value).map(v => _isString(v) ? v.toLowerCase() : v);\n\n      // ensure language tag matches BCP47\n      for(const lang of value) {\n        if(_isString(lang) && !lang.match(REGEX_BCP47)) {\n          console.warn(`@language must be valid BCP47: ${lang}`);\n        }\n      }\n\n      _addValue(\n        expandedParent, '@language', value, {propertyIsArray: options.isFrame});\n      continue;\n    }\n\n    // @direction must be \"ltr\" or \"rtl\"\n    if(expandedProperty === '@direction') {\n      if(!_isString(value) && !options.isFrame) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; \"@direction\" value must be a string.',\n          'jsonld.SyntaxError',\n          {code: 'invalid base direction', value});\n      }\n\n      value = _asArray(value);\n\n      // ensure direction is \"ltr\" or \"rtl\"\n      for(const dir of value) {\n        if(_isString(dir) && dir !== 'ltr' && dir !== 'rtl') {\n          throw new JsonLdError(\n            'Invalid JSON-LD syntax; \"@direction\" must be \"ltr\" or \"rtl\".',\n            'jsonld.SyntaxError',\n            {code: 'invalid base direction', value});\n        }\n      }\n\n      _addValue(\n        expandedParent, '@direction', value,\n        {propertyIsArray: options.isFrame});\n      continue;\n    }\n\n    // @index must be a string\n    if(expandedProperty === '@index') {\n      if(!_isString(value)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; \"@index\" value must be a string.',\n          'jsonld.SyntaxError',\n          {code: 'invalid @index value', value});\n      }\n      _addValue(expandedParent, '@index', value);\n      continue;\n    }\n\n    // @reverse must be an object\n    if(expandedProperty === '@reverse') {\n      if(!_isObject(value)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; \"@reverse\" value must be an object.',\n          'jsonld.SyntaxError', {code: 'invalid @reverse value', value});\n      }\n\n      expandedValue = await api.expand({\n        activeCtx,\n        activeProperty:\n        '@reverse',\n        element: value,\n        options,\n        expansionMap\n      });\n      // properties double-reversed\n      if('@reverse' in expandedValue) {\n        for(const property in expandedValue['@reverse']) {\n          _addValue(\n            expandedParent, property, expandedValue['@reverse'][property],\n            {propertyIsArray: true});\n        }\n      }\n\n      // FIXME: can this be merged with code below to simplify?\n      // merge in all reversed properties\n      let reverseMap = expandedParent['@reverse'] || null;\n      for(const property in expandedValue) {\n        if(property === '@reverse') {\n          continue;\n        }\n        if(reverseMap === null) {\n          reverseMap = expandedParent['@reverse'] = {};\n        }\n        _addValue(reverseMap, property, [], {propertyIsArray: true});\n        const items = expandedValue[property];\n        for(let ii = 0; ii < items.length; ++ii) {\n          const item = items[ii];\n          if(_isValue(item) || _isList(item)) {\n            throw new JsonLdError(\n              'Invalid JSON-LD syntax; \"@reverse\" value must not be a ' +\n              '@value or an @list.', 'jsonld.SyntaxError',\n              {code: 'invalid reverse property value', value: expandedValue});\n          }\n          _addValue(reverseMap, property, item, {propertyIsArray: true});\n        }\n      }\n\n      continue;\n    }\n\n    // nested keys\n    if(expandedProperty === '@nest') {\n      nests.push(key);\n      continue;\n    }\n\n    // use potential scoped context for key\n    let termCtx = activeCtx;\n    const ctx = _getContextValue(activeCtx, key, '@context');\n    if(!_isUndefined(ctx)) {\n      termCtx = await _processContext({\n        activeCtx,\n        localCtx: ctx,\n        propagate: true,\n        overrideProtected: true,\n        options\n      });\n    }\n\n    const container = _getContextValue(termCtx, key, '@container') || [];\n\n    if(container.includes('@language') && _isObject(value)) {\n      const direction = _getContextValue(termCtx, key, '@direction');\n      // handle language map container (skip if value is not an object)\n      expandedValue = _expandLanguageMap(termCtx, value, direction, options);\n    } else if(container.includes('@index') && _isObject(value)) {\n      // handle index container (skip if value is not an object)\n      const asGraph = container.includes('@graph');\n      const indexKey = _getContextValue(termCtx, key, '@index') || '@index';\n      const propertyIndex = indexKey !== '@index' &&\n        _expandIri(activeCtx, indexKey, {vocab: true}, options);\n\n      expandedValue = await _expandIndexMap({\n        activeCtx: termCtx,\n        options,\n        activeProperty: key,\n        value,\n        expansionMap,\n        asGraph,\n        indexKey,\n        propertyIndex\n      });\n    } else if(container.includes('@id') && _isObject(value)) {\n      // handle id container (skip if value is not an object)\n      const asGraph = container.includes('@graph');\n      expandedValue = await _expandIndexMap({\n        activeCtx: termCtx,\n        options,\n        activeProperty: key,\n        value,\n        expansionMap,\n        asGraph,\n        indexKey: '@id'\n      });\n    } else if(container.includes('@type') && _isObject(value)) {\n      // handle type container (skip if value is not an object)\n      expandedValue = await _expandIndexMap({\n        // since container is `@type`, revert type scoped context when expanding\n        activeCtx: termCtx.revertToPreviousContext(),\n        options,\n        activeProperty: key,\n        value,\n        expansionMap,\n        asGraph: false,\n        indexKey: '@type'\n      });\n    } else {\n      // recurse into @list or @set\n      const isList = (expandedProperty === '@list');\n      if(isList || expandedProperty === '@set') {\n        let nextActiveProperty = activeProperty;\n        if(isList && expandedActiveProperty === '@graph') {\n          nextActiveProperty = null;\n        }\n        expandedValue = await api.expand({\n          activeCtx: termCtx,\n          activeProperty: nextActiveProperty,\n          element: value,\n          options,\n          insideList: isList,\n          expansionMap\n        });\n      } else if(\n        _getContextValue(activeCtx, key, '@type') === '@json') {\n        expandedValue = {\n          '@type': '@json',\n          '@value': value\n        };\n      } else {\n        // recursively expand value with key as new active property\n        expandedValue = await api.expand({\n          activeCtx: termCtx,\n          activeProperty: key,\n          element: value,\n          options,\n          insideList: false,\n          expansionMap\n        });\n      }\n    }\n\n    // drop null values if property is not @value\n    if(expandedValue === null && expandedProperty !== '@value') {\n      // TODO: use `await` to support async\n      expandedValue = expansionMap({\n        unmappedValue: value,\n        expandedProperty,\n        activeCtx: termCtx,\n        activeProperty,\n        parent: element,\n        options,\n        insideList,\n        key,\n        expandedParent\n      });\n      if(expandedValue === undefined) {\n        continue;\n      }\n    }\n\n    // convert expanded value to @list if container specifies it\n    if(expandedProperty !== '@list' && !_isList(expandedValue) &&\n      container.includes('@list')) {\n      // ensure expanded value in @list is an array\n      expandedValue = {'@list': _asArray(expandedValue)};\n    }\n\n    // convert expanded value to @graph if container specifies it\n    // and value is not, itself, a graph\n    // index cases handled above\n    if(container.includes('@graph') &&\n      !container.some(key => key === '@id' || key === '@index')) {\n      // ensure expanded values are arrays\n      expandedValue = _asArray(expandedValue)\n        .map(v => ({'@graph': _asArray(v)}));\n    }\n\n    // FIXME: can this be merged with code above to simplify?\n    // merge in reverse properties\n    if(termCtx.mappings.has(key) && termCtx.mappings.get(key).reverse) {\n      const reverseMap =\n        expandedParent['@reverse'] = expandedParent['@reverse'] || {};\n      expandedValue = _asArray(expandedValue);\n      for(let ii = 0; ii < expandedValue.length; ++ii) {\n        const item = expandedValue[ii];\n        if(_isValue(item) || _isList(item)) {\n          throw new JsonLdError(\n            'Invalid JSON-LD syntax; \"@reverse\" value must not be a ' +\n            '@value or an @list.', 'jsonld.SyntaxError',\n            {code: 'invalid reverse property value', value: expandedValue});\n        }\n        _addValue(reverseMap, expandedProperty, item, {propertyIsArray: true});\n      }\n      continue;\n    }\n\n    // add value for property\n    // special keywords handled above\n    _addValue(expandedParent, expandedProperty, expandedValue, {\n      propertyIsArray: true\n    });\n  }\n\n  // @value must not be an object or an array (unless framing) or if @type is\n  // @json\n  if('@value' in expandedParent) {\n    if(expandedParent['@type'] === '@json' && _processingMode(activeCtx, 1.1)) {\n      // allow any value, to be verified when the object is fully expanded and\n      // the @type is @json.\n    } else if((_isObject(unexpandedValue) || _isArray(unexpandedValue)) &&\n      !options.isFrame) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; \"@value\" value must not be an ' +\n        'object or an array.',\n        'jsonld.SyntaxError',\n        {code: 'invalid value object value', value: unexpandedValue});\n    }\n  }\n\n  // expand each nested key\n  for(const key of nests) {\n    const nestedValues = _isArray(element[key]) ? element[key] : [element[key]];\n    for(const nv of nestedValues) {\n      if(!_isObject(nv) || Object.keys(nv).some(k =>\n        _expandIri(activeCtx, k, {vocab: true}, options) === '@value')) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; nested value must be a node object.',\n          'jsonld.SyntaxError',\n          {code: 'invalid @nest value', value: nv});\n      }\n      await _expandObject({\n        activeCtx,\n        activeProperty,\n        expandedActiveProperty,\n        element: nv,\n        expandedParent,\n        options,\n        insideList,\n        typeScopedContext,\n        typeKey,\n        expansionMap});\n    }\n  }\n}\n\n/**\n * Expands the given value by using the coercion and keyword rules in the\n * given context.\n *\n * @param activeCtx the active context to use.\n * @param activeProperty the active property the value is associated with.\n * @param value the value to expand.\n * @param {Object} [options] - processing options.\n *\n * @return the expanded value.\n */\nfunction _expandValue({activeCtx, activeProperty, value, options}) {\n  // nothing to expand\n  if(value === null || value === undefined) {\n    return null;\n  }\n\n  // special-case expand @id and @type (skips '@id' expansion)\n  const expandedProperty = _expandIri(\n    activeCtx, activeProperty, {vocab: true}, options);\n  if(expandedProperty === '@id') {\n    return _expandIri(activeCtx, value, {base: true}, options);\n  } else if(expandedProperty === '@type') {\n    return _expandIri(activeCtx, value, {vocab: true, base: true}, options);\n  }\n\n  // get type definition from context\n  const type = _getContextValue(activeCtx, activeProperty, '@type');\n\n  // do @id expansion (automatic for @graph)\n  if((type === '@id' || expandedProperty === '@graph') && _isString(value)) {\n    return {'@id': _expandIri(activeCtx, value, {base: true}, options)};\n  }\n  // do @id expansion w/vocab\n  if(type === '@vocab' && _isString(value)) {\n    return {\n      '@id': _expandIri(activeCtx, value, {vocab: true, base: true}, options)\n    };\n  }\n\n  // do not expand keyword values\n  if(_isKeyword(expandedProperty)) {\n    return value;\n  }\n\n  const rval = {};\n\n  if(type && !['@id', '@vocab', '@none'].includes(type)) {\n    // other type\n    rval['@type'] = type;\n  } else if(_isString(value)) {\n    // check for language tagging for strings\n    const language = _getContextValue(activeCtx, activeProperty, '@language');\n    if(language !== null) {\n      rval['@language'] = language;\n    }\n    const direction = _getContextValue(activeCtx, activeProperty, '@direction');\n    if(direction !== null) {\n      rval['@direction'] = direction;\n    }\n  }\n  // do conversion of values that aren't basic JSON types to strings\n  if(!['boolean', 'number', 'string'].includes(typeof value)) {\n    value = value.toString();\n  }\n  rval['@value'] = value;\n\n  return rval;\n}\n\n/**\n * Expands a language map.\n *\n * @param activeCtx the active context to use.\n * @param languageMap the language map to expand.\n * @param direction the direction to apply to values.\n * @param {Object} [options] - processing options.\n *\n * @return the expanded language map.\n */\nfunction _expandLanguageMap(activeCtx, languageMap, direction, options) {\n  const rval = [];\n  const keys = Object.keys(languageMap).sort();\n  for(const key of keys) {\n    const expandedKey = _expandIri(activeCtx, key, {vocab: true}, options);\n    let val = languageMap[key];\n    if(!_isArray(val)) {\n      val = [val];\n    }\n    for(const item of val) {\n      if(item === null) {\n        // null values are allowed (8.5) but ignored (3.1)\n        continue;\n      }\n      if(!_isString(item)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; language map values must be strings.',\n          'jsonld.SyntaxError',\n          {code: 'invalid language map value', languageMap});\n      }\n      const val = {'@value': item};\n      if(expandedKey !== '@none') {\n        val['@language'] = key.toLowerCase();\n      }\n      if(direction) {\n        val['@direction'] = direction;\n      }\n      rval.push(val);\n    }\n  }\n  return rval;\n}\n\nasync function _expandIndexMap(\n  {activeCtx, options, activeProperty, value, expansionMap, asGraph,\n    indexKey, propertyIndex}) {\n  const rval = [];\n  const keys = Object.keys(value).sort();\n  const isTypeIndex = indexKey === '@type';\n  for(let key of keys) {\n    // if indexKey is @type, there may be a context defined for it\n    if(isTypeIndex) {\n      const ctx = _getContextValue(activeCtx, key, '@context');\n      if(!_isUndefined(ctx)) {\n        activeCtx = await _processContext({\n          activeCtx,\n          localCtx: ctx,\n          propagate: false,\n          options\n        });\n      }\n    }\n\n    let val = value[key];\n    if(!_isArray(val)) {\n      val = [val];\n    }\n\n    val = await api.expand({\n      activeCtx,\n      activeProperty,\n      element: val,\n      options,\n      insideList: false,\n      insideIndex: true,\n      expansionMap\n    });\n\n    // expand for @type, but also for @none\n    let expandedKey;\n    if(propertyIndex) {\n      if(key === '@none') {\n        expandedKey = '@none';\n      } else {\n        expandedKey = _expandValue(\n          {activeCtx, activeProperty: indexKey, value: key, options});\n      }\n    } else {\n      expandedKey = _expandIri(activeCtx, key, {vocab: true}, options);\n    }\n\n    if(indexKey === '@id') {\n      // expand document relative\n      key = _expandIri(activeCtx, key, {base: true}, options);\n    } else if(isTypeIndex) {\n      key = expandedKey;\n    }\n\n    for(let item of val) {\n      // If this is also a @graph container, turn items into graphs\n      if(asGraph && !_isGraph(item)) {\n        item = {'@graph': [item]};\n      }\n      if(indexKey === '@type') {\n        if(expandedKey === '@none') {\n          // ignore @none\n        } else if(item['@type']) {\n          item['@type'] = [key].concat(item['@type']);\n        } else {\n          item['@type'] = [key];\n        }\n      } else if(_isValue(item) &&\n        !['@language', '@type', '@index'].includes(indexKey)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; Attempt to add illegal key to value ' +\n          `object: \"${indexKey}\".`,\n          'jsonld.SyntaxError',\n          {code: 'invalid value object', value: item});\n      } else if(propertyIndex) {\n        // index is a property to be expanded, and values interpreted for that\n        // property\n        if(expandedKey !== '@none') {\n          // expand key as a value\n          _addValue(item, propertyIndex, expandedKey, {\n            propertyIsArray: true,\n            prependValue: true\n          });\n        }\n      } else if(expandedKey !== '@none' && !(indexKey in item)) {\n        item[indexKey] = key;\n      }\n      rval.push(item);\n    }\n  }\n  return rval;\n}\n","/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst {isKeyword} = require('./context');\nconst graphTypes = require('./graphTypes');\nconst types = require('./types');\nconst util = require('./util');\nconst JsonLdError = require('./JsonLdError');\n\nconst api = {};\nmodule.exports = api;\n\n/**\n * Creates a merged JSON-LD node map (node ID => node).\n *\n * @param input the expanded JSON-LD to create a node map of.\n * @param [options] the options to use:\n *          [issuer] a jsonld.IdentifierIssuer to use to label blank nodes.\n *\n * @return the node map.\n */\napi.createMergedNodeMap = (input, options) => {\n  options = options || {};\n\n  // produce a map of all subjects and name each bnode\n  const issuer = options.issuer || new util.IdentifierIssuer('_:b');\n  const graphs = {'@default': {}};\n  api.createNodeMap(input, graphs, '@default', issuer);\n\n  // add all non-default graphs to default graph\n  return api.mergeNodeMaps(graphs);\n};\n\n/**\n * Recursively flattens the subjects in the given JSON-LD expanded input\n * into a node map.\n *\n * @param input the JSON-LD expanded input.\n * @param graphs a map of graph name to subject map.\n * @param graph the name of the current graph.\n * @param issuer the blank node identifier issuer.\n * @param name the name assigned to the current input if it is a bnode.\n * @param list the list to append to, null for none.\n */\napi.createNodeMap = (input, graphs, graph, issuer, name, list) => {\n  // recurse through array\n  if(types.isArray(input)) {\n    for(const node of input) {\n      api.createNodeMap(node, graphs, graph, issuer, undefined, list);\n    }\n    return;\n  }\n\n  // add non-object to list\n  if(!types.isObject(input)) {\n    if(list) {\n      list.push(input);\n    }\n    return;\n  }\n\n  // add values to list\n  if(graphTypes.isValue(input)) {\n    if('@type' in input) {\n      let type = input['@type'];\n      // rename @type blank node\n      if(type.indexOf('_:') === 0) {\n        input['@type'] = type = issuer.getId(type);\n      }\n    }\n    if(list) {\n      list.push(input);\n    }\n    return;\n  } else if(list && graphTypes.isList(input)) {\n    const _list = [];\n    api.createNodeMap(input['@list'], graphs, graph, issuer, name, _list);\n    list.push({'@list': _list});\n    return;\n  }\n\n  // Note: At this point, input must be a subject.\n\n  // spec requires @type to be named first, so assign names early\n  if('@type' in input) {\n    const types = input['@type'];\n    for(const type of types) {\n      if(type.indexOf('_:') === 0) {\n        issuer.getId(type);\n      }\n    }\n  }\n\n  // get name for subject\n  if(types.isUndefined(name)) {\n    name = graphTypes.isBlankNode(input) ?\n      issuer.getId(input['@id']) : input['@id'];\n  }\n\n  // add subject reference to list\n  if(list) {\n    list.push({'@id': name});\n  }\n\n  // create new subject or merge into existing one\n  const subjects = graphs[graph];\n  const subject = subjects[name] = subjects[name] || {};\n  subject['@id'] = name;\n  const properties = Object.keys(input).sort();\n  for(let property of properties) {\n    // skip @id\n    if(property === '@id') {\n      continue;\n    }\n\n    // handle reverse properties\n    if(property === '@reverse') {\n      const referencedNode = {'@id': name};\n      const reverseMap = input['@reverse'];\n      for(const reverseProperty in reverseMap) {\n        const items = reverseMap[reverseProperty];\n        for(const item of items) {\n          let itemName = item['@id'];\n          if(graphTypes.isBlankNode(item)) {\n            itemName = issuer.getId(itemName);\n          }\n          api.createNodeMap(item, graphs, graph, issuer, itemName);\n          util.addValue(\n            subjects[itemName], reverseProperty, referencedNode,\n            {propertyIsArray: true, allowDuplicate: false});\n        }\n      }\n      continue;\n    }\n\n    // recurse into graph\n    if(property === '@graph') {\n      // add graph subjects map entry\n      if(!(name in graphs)) {\n        graphs[name] = {};\n      }\n      api.createNodeMap(input[property], graphs, name, issuer);\n      continue;\n    }\n\n    // recurse into included\n    if(property === '@included') {\n      api.createNodeMap(input[property], graphs, graph, issuer);\n      continue;\n    }\n\n    // copy non-@type keywords\n    if(property !== '@type' && isKeyword(property)) {\n      if(property === '@index' && property in subject &&\n        (input[property] !== subject[property] ||\n        input[property]['@id'] !== subject[property]['@id'])) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; conflicting @index property detected.',\n          'jsonld.SyntaxError',\n          {code: 'conflicting indexes', subject});\n      }\n      subject[property] = input[property];\n      continue;\n    }\n\n    // iterate over objects\n    const objects = input[property];\n\n    // if property is a bnode, assign it a new id\n    if(property.indexOf('_:') === 0) {\n      property = issuer.getId(property);\n    }\n\n    // ensure property is added for empty arrays\n    if(objects.length === 0) {\n      util.addValue(subject, property, [], {propertyIsArray: true});\n      continue;\n    }\n    for(let o of objects) {\n      if(property === '@type') {\n        // rename @type blank nodes\n        o = (o.indexOf('_:') === 0) ? issuer.getId(o) : o;\n      }\n\n      // handle embedded subject or subject reference\n      if(graphTypes.isSubject(o) || graphTypes.isSubjectReference(o)) {\n        // skip null @id\n        if('@id' in o && !o['@id']) {\n          continue;\n        }\n\n        // relabel blank node @id\n        const id = graphTypes.isBlankNode(o) ?\n          issuer.getId(o['@id']) : o['@id'];\n\n        // add reference and recurse\n        util.addValue(\n          subject, property, {'@id': id},\n          {propertyIsArray: true, allowDuplicate: false});\n        api.createNodeMap(o, graphs, graph, issuer, id);\n      } else if(graphTypes.isValue(o)) {\n        util.addValue(\n          subject, property, o,\n          {propertyIsArray: true, allowDuplicate: false});\n      } else if(graphTypes.isList(o)) {\n        // handle @list\n        const _list = [];\n        api.createNodeMap(o['@list'], graphs, graph, issuer, name, _list);\n        o = {'@list': _list};\n        util.addValue(\n          subject, property, o,\n          {propertyIsArray: true, allowDuplicate: false});\n      } else {\n        // handle @value\n        api.createNodeMap(o, graphs, graph, issuer, name);\n        util.addValue(\n          subject, property, o, {propertyIsArray: true, allowDuplicate: false});\n      }\n    }\n  }\n};\n\n/**\n * Merge separate named graphs into a single merged graph including\n * all nodes from the default graph and named graphs.\n *\n * @param graphs a map of graph name to subject map.\n *\n * @return the merged graph map.\n */\napi.mergeNodeMapGraphs = graphs => {\n  const merged = {};\n  for(const name of Object.keys(graphs).sort()) {\n    for(const id of Object.keys(graphs[name]).sort()) {\n      const node = graphs[name][id];\n      if(!(id in merged)) {\n        merged[id] = {'@id': id};\n      }\n      const mergedNode = merged[id];\n\n      for(const property of Object.keys(node).sort()) {\n        if(isKeyword(property) && property !== '@type') {\n          // copy keywords\n          mergedNode[property] = util.clone(node[property]);\n        } else {\n          // merge objects\n          for(const value of node[property]) {\n            util.addValue(\n              mergedNode, property, util.clone(value),\n              {propertyIsArray: true, allowDuplicate: false});\n          }\n        }\n      }\n    }\n  }\n\n  return merged;\n};\n\napi.mergeNodeMaps = graphs => {\n  // add all non-default graphs to default graph\n  const defaultGraph = graphs['@default'];\n  const graphNames = Object.keys(graphs).sort();\n  for(const graphName of graphNames) {\n    if(graphName === '@default') {\n      continue;\n    }\n    const nodeMap = graphs[graphName];\n    let subject = defaultGraph[graphName];\n    if(!subject) {\n      defaultGraph[graphName] = subject = {\n        '@id': graphName,\n        '@graph': []\n      };\n    } else if(!('@graph' in subject)) {\n      subject['@graph'] = [];\n    }\n    const graph = subject['@graph'];\n    for(const id of Object.keys(nodeMap).sort()) {\n      const node = nodeMap[id];\n      // only add full subjects\n      if(!graphTypes.isSubjectReference(node)) {\n        graph.push(node);\n      }\n    }\n  }\n  return defaultGraph;\n};\n","/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst {\n  isSubjectReference: _isSubjectReference\n} = require('./graphTypes');\n\nconst {\n  createMergedNodeMap: _createMergedNodeMap\n} = require('./nodeMap');\n\nconst api = {};\nmodule.exports = api;\n\n/**\n * Performs JSON-LD flattening.\n *\n * @param input the expanded JSON-LD to flatten.\n *\n * @return the flattened output.\n */\napi.flatten = input => {\n  const defaultGraph = _createMergedNodeMap(input);\n\n  // produce flattened output\n  const flattened = [];\n  const keys = Object.keys(defaultGraph).sort();\n  for(let ki = 0; ki < keys.length; ++ki) {\n    const node = defaultGraph[keys[ki]];\n    // only add full subjects to top-level\n    if(!_isSubjectReference(node)) {\n      flattened.push(node);\n    }\n  }\n  return flattened;\n};\n","/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst JsonLdError = require('./JsonLdError');\nconst graphTypes = require('./graphTypes');\nconst types = require('./types');\nconst util = require('./util');\n\n// constants\nconst {\n  // RDF,\n  RDF_LIST,\n  RDF_FIRST,\n  RDF_REST,\n  RDF_NIL,\n  RDF_TYPE,\n  // RDF_PLAIN_LITERAL,\n  // RDF_XML_LITERAL,\n  RDF_JSON_LITERAL,\n  // RDF_OBJECT,\n  // RDF_LANGSTRING,\n\n  // XSD,\n  XSD_BOOLEAN,\n  XSD_DOUBLE,\n  XSD_INTEGER,\n  XSD_STRING,\n} = require('./constants');\n\nconst REGEX_BCP47 = /^[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*$/;\n\nconst api = {};\nmodule.exports = api;\n\n/**\n * Converts an RDF dataset to JSON-LD.\n *\n * @param dataset the RDF dataset.\n * @param options the RDF serialization options.\n *\n * @return a Promise that resolves to the JSON-LD output.\n */\napi.fromRDF = async (\n  dataset,\n  {\n    useRdfType = false,\n    useNativeTypes = false,\n    rdfDirection = null\n  }\n) => {\n  const defaultGraph = {};\n  const graphMap = {'@default': defaultGraph};\n  const referencedOnce = {};\n\n  for(const quad of dataset) {\n    // TODO: change 'name' to 'graph'\n    const name = (quad.graph.termType === 'DefaultGraph') ?\n      '@default' : quad.graph.value;\n    if(!(name in graphMap)) {\n      graphMap[name] = {};\n    }\n    if(name !== '@default' && !(name in defaultGraph)) {\n      defaultGraph[name] = {'@id': name};\n    }\n\n    const nodeMap = graphMap[name];\n\n    // get subject, predicate, object\n    const s = quad.subject.value;\n    const p = quad.predicate.value;\n    const o = quad.object;\n\n    if(!(s in nodeMap)) {\n      nodeMap[s] = {'@id': s};\n    }\n    const node = nodeMap[s];\n\n    const objectIsNode = o.termType.endsWith('Node');\n    if(objectIsNode && !(o.value in nodeMap)) {\n      nodeMap[o.value] = {'@id': o.value};\n    }\n\n    if(p === RDF_TYPE && !useRdfType && objectIsNode) {\n      util.addValue(node, '@type', o.value, {propertyIsArray: true});\n      continue;\n    }\n\n    const value = _RDFToObject(o, useNativeTypes, rdfDirection);\n    util.addValue(node, p, value, {propertyIsArray: true});\n\n    // object may be an RDF list/partial list node but we can't know easily\n    // until all triples are read\n    if(objectIsNode) {\n      if(o.value === RDF_NIL) {\n        // track rdf:nil uniquely per graph\n        const object = nodeMap[o.value];\n        if(!('usages' in object)) {\n          object.usages = [];\n        }\n        object.usages.push({\n          node,\n          property: p,\n          value\n        });\n      } else if(o.value in referencedOnce) {\n        // object referenced more than once\n        referencedOnce[o.value] = false;\n      } else {\n        // keep track of single reference\n        referencedOnce[o.value] = {\n          node,\n          property: p,\n          value\n        };\n      }\n    }\n  }\n\n  /*\n  for(let name in dataset) {\n    const graph = dataset[name];\n    if(!(name in graphMap)) {\n      graphMap[name] = {};\n    }\n    if(name !== '@default' && !(name in defaultGraph)) {\n      defaultGraph[name] = {'@id': name};\n    }\n    const nodeMap = graphMap[name];\n    for(let ti = 0; ti < graph.length; ++ti) {\n      const triple = graph[ti];\n\n      // get subject, predicate, object\n      const s = triple.subject.value;\n      const p = triple.predicate.value;\n      const o = triple.object;\n\n      if(!(s in nodeMap)) {\n        nodeMap[s] = {'@id': s};\n      }\n      const node = nodeMap[s];\n\n      const objectIsId = (o.type === 'IRI' || o.type === 'blank node');\n      if(objectIsId && !(o.value in nodeMap)) {\n        nodeMap[o.value] = {'@id': o.value};\n      }\n\n      if(p === RDF_TYPE && !useRdfType && objectIsId) {\n        util.addValue(node, '@type', o.value, {propertyIsArray: true});\n        continue;\n      }\n\n      const value = _RDFToObject(o, useNativeTypes);\n      util.addValue(node, p, value, {propertyIsArray: true});\n\n      // object may be an RDF list/partial list node but we can't know easily\n      // until all triples are read\n      if(objectIsId) {\n        if(o.value === RDF_NIL) {\n          // track rdf:nil uniquely per graph\n          const object = nodeMap[o.value];\n          if(!('usages' in object)) {\n            object.usages = [];\n          }\n          object.usages.push({\n            node: node,\n            property: p,\n            value: value\n          });\n        } else if(o.value in referencedOnce) {\n          // object referenced more than once\n          referencedOnce[o.value] = false;\n        } else {\n          // keep track of single reference\n          referencedOnce[o.value] = {\n            node: node,\n            property: p,\n            value: value\n          };\n        }\n      }\n    }\n  }*/\n\n  // convert linked lists to @list arrays\n  for(const name in graphMap) {\n    const graphObject = graphMap[name];\n\n    // no @lists to be converted, continue\n    if(!(RDF_NIL in graphObject)) {\n      continue;\n    }\n\n    // iterate backwards through each RDF list\n    const nil = graphObject[RDF_NIL];\n    if(!nil.usages) {\n      continue;\n    }\n    for(let usage of nil.usages) {\n      let node = usage.node;\n      let property = usage.property;\n      let head = usage.value;\n      const list = [];\n      const listNodes = [];\n\n      // ensure node is a well-formed list node; it must:\n      // 1. Be referenced only once.\n      // 2. Have an array for rdf:first that has 1 item.\n      // 3. Have an array for rdf:rest that has 1 item.\n      // 4. Have no keys other than: @id, rdf:first, rdf:rest, and,\n      //   optionally, @type where the value is rdf:List.\n      let nodeKeyCount = Object.keys(node).length;\n      while(property === RDF_REST &&\n        types.isObject(referencedOnce[node['@id']]) &&\n        types.isArray(node[RDF_FIRST]) && node[RDF_FIRST].length === 1 &&\n        types.isArray(node[RDF_REST]) && node[RDF_REST].length === 1 &&\n        (nodeKeyCount === 3 ||\n          (nodeKeyCount === 4 && types.isArray(node['@type']) &&\n          node['@type'].length === 1 && node['@type'][0] === RDF_LIST))) {\n        list.push(node[RDF_FIRST][0]);\n        listNodes.push(node['@id']);\n\n        // get next node, moving backwards through list\n        usage = referencedOnce[node['@id']];\n        node = usage.node;\n        property = usage.property;\n        head = usage.value;\n        nodeKeyCount = Object.keys(node).length;\n\n        // if node is not a blank node, then list head found\n        if(!graphTypes.isBlankNode(node)) {\n          break;\n        }\n      }\n\n      // transform list into @list object\n      delete head['@id'];\n      head['@list'] = list.reverse();\n      for(const listNode of listNodes) {\n        delete graphObject[listNode];\n      }\n    }\n\n    delete nil.usages;\n  }\n\n  const result = [];\n  const subjects = Object.keys(defaultGraph).sort();\n  for(const subject of subjects) {\n    const node = defaultGraph[subject];\n    if(subject in graphMap) {\n      const graph = node['@graph'] = [];\n      const graphObject = graphMap[subject];\n      const graphSubjects = Object.keys(graphObject).sort();\n      for(const graphSubject of graphSubjects) {\n        const node = graphObject[graphSubject];\n        // only add full subjects to top-level\n        if(!graphTypes.isSubjectReference(node)) {\n          graph.push(node);\n        }\n      }\n    }\n    // only add full subjects to top-level\n    if(!graphTypes.isSubjectReference(node)) {\n      result.push(node);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Converts an RDF triple object to a JSON-LD object.\n *\n * @param o the RDF triple object to convert.\n * @param useNativeTypes true to output native types, false not to.\n *\n * @return the JSON-LD object.\n */\nfunction _RDFToObject(o, useNativeTypes, rdfDirection) {\n  // convert NamedNode/BlankNode object to JSON-LD\n  if(o.termType.endsWith('Node')) {\n    return {'@id': o.value};\n  }\n\n  // convert literal to JSON-LD\n  const rval = {'@value': o.value};\n\n  // add language\n  if(o.language) {\n    rval['@language'] = o.language;\n  } else {\n    let type = o.datatype.value;\n    if(!type) {\n      type = XSD_STRING;\n    }\n    if(type === RDF_JSON_LITERAL) {\n      type = '@json';\n      try {\n        rval['@value'] = JSON.parse(rval['@value']);\n      } catch(e) {\n        throw new JsonLdError(\n          'JSON literal could not be parsed.',\n          'jsonld.InvalidJsonLiteral',\n          {code: 'invalid JSON literal', value: rval['@value'], cause: e});\n      }\n    }\n    // use native types for certain xsd types\n    if(useNativeTypes) {\n      if(type === XSD_BOOLEAN) {\n        if(rval['@value'] === 'true') {\n          rval['@value'] = true;\n        } else if(rval['@value'] === 'false') {\n          rval['@value'] = false;\n        }\n      } else if(types.isNumeric(rval['@value'])) {\n        if(type === XSD_INTEGER) {\n          const i = parseInt(rval['@value'], 10);\n          if(i.toFixed(0) === rval['@value']) {\n            rval['@value'] = i;\n          }\n        } else if(type === XSD_DOUBLE) {\n          rval['@value'] = parseFloat(rval['@value']);\n        }\n      }\n      // do not add native type\n      if(![XSD_BOOLEAN, XSD_INTEGER, XSD_DOUBLE, XSD_STRING].includes(type)) {\n        rval['@type'] = type;\n      }\n    } else if(rdfDirection === 'i18n-datatype' &&\n      type.startsWith('https://www.w3.org/ns/i18n#')) {\n      const [, language, direction] = type.split(/[#_]/);\n      if(language.length > 0) {\n        rval['@language'] = language;\n        if(!language.match(REGEX_BCP47)) {\n          console.warn(`@language must be valid BCP47: ${language}`);\n        }\n      }\n      rval['@direction'] = direction;\n    } else if(type !== XSD_STRING) {\n      rval['@type'] = type;\n    }\n  }\n\n  return rval;\n}\n","/* jshint esversion: 6 */\n/* jslint node: true */\n'use strict';\n\nmodule.exports = function serialize (object) {\n  if (object === null || typeof object !== 'object' || object.toJSON != null) {\n    return JSON.stringify(object);\n  }\n\n  if (Array.isArray(object)) {\n    return '[' + object.reduce((t, cv, ci) => {\n      const comma = ci === 0 ? '' : ',';\n      const value = cv === undefined || typeof cv === 'symbol' ? null : cv;\n      return t + comma + serialize(value);\n    }, '') + ']';\n  }\n\n  return '{' + Object.keys(object).sort().reduce((t, cv, ci) => {\n    if (object[cv] === undefined ||\n        typeof object[cv] === 'symbol') {\n      return t;\n    }\n    const comma = t.length === 0 ? '' : ',';\n    return t + comma + serialize(cv) + ':' + serialize(object[cv]);\n  }, '') + '}';\n};\n","/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst {createNodeMap} = require('./nodeMap');\nconst {isKeyword} = require('./context');\nconst graphTypes = require('./graphTypes');\nconst jsonCanonicalize = require('canonicalize');\nconst types = require('./types');\nconst util = require('./util');\n\nconst {\n  // RDF,\n  // RDF_LIST,\n  RDF_FIRST,\n  RDF_REST,\n  RDF_NIL,\n  RDF_TYPE,\n  // RDF_PLAIN_LITERAL,\n  // RDF_XML_LITERAL,\n  RDF_JSON_LITERAL,\n  // RDF_OBJECT,\n  RDF_LANGSTRING,\n\n  // XSD,\n  XSD_BOOLEAN,\n  XSD_DOUBLE,\n  XSD_INTEGER,\n  XSD_STRING,\n} = require('./constants');\n\nconst {\n  isAbsolute: _isAbsoluteIri\n} = require('./url');\n\nconst api = {};\nmodule.exports = api;\n\n/**\n * Outputs an RDF dataset for the expanded JSON-LD input.\n *\n * @param input the expanded JSON-LD input.\n * @param options the RDF serialization options.\n *\n * @return the RDF dataset.\n */\napi.toRDF = (input, options) => {\n  // create node map for default graph (and any named graphs)\n  const issuer = new util.IdentifierIssuer('_:b');\n  const nodeMap = {'@default': {}};\n  createNodeMap(input, nodeMap, '@default', issuer);\n\n  const dataset = [];\n  const graphNames = Object.keys(nodeMap).sort();\n  for(const graphName of graphNames) {\n    let graphTerm;\n    if(graphName === '@default') {\n      graphTerm = {termType: 'DefaultGraph', value: ''};\n    } else if(_isAbsoluteIri(graphName)) {\n      if(graphName.startsWith('_:')) {\n        graphTerm = {termType: 'BlankNode'};\n      } else {\n        graphTerm = {termType: 'NamedNode'};\n      }\n      graphTerm.value = graphName;\n    } else {\n      // skip relative IRIs (not valid RDF)\n      continue;\n    }\n    _graphToRDF(dataset, nodeMap[graphName], graphTerm, issuer, options);\n  }\n\n  return dataset;\n};\n\n/**\n * Adds RDF quads for a particular graph to the given dataset.\n *\n * @param dataset the dataset to append RDF quads to.\n * @param graph the graph to create RDF quads for.\n * @param graphTerm the graph term for each quad.\n * @param issuer a IdentifierIssuer for assigning blank node names.\n * @param options the RDF serialization options.\n *\n * @return the array of RDF triples for the given graph.\n */\nfunction _graphToRDF(dataset, graph, graphTerm, issuer, options) {\n  const ids = Object.keys(graph).sort();\n  for(const id of ids) {\n    const node = graph[id];\n    const properties = Object.keys(node).sort();\n    for(let property of properties) {\n      const items = node[property];\n      if(property === '@type') {\n        property = RDF_TYPE;\n      } else if(isKeyword(property)) {\n        continue;\n      }\n\n      for(const item of items) {\n        // RDF subject\n        const subject = {\n          termType: id.startsWith('_:') ? 'BlankNode' : 'NamedNode',\n          value: id\n        };\n\n        // skip relative IRI subjects (not valid RDF)\n        if(!_isAbsoluteIri(id)) {\n          continue;\n        }\n\n        // RDF predicate\n        const predicate = {\n          termType: property.startsWith('_:') ? 'BlankNode' : 'NamedNode',\n          value: property\n        };\n\n        // skip relative IRI predicates (not valid RDF)\n        if(!_isAbsoluteIri(property)) {\n          continue;\n        }\n\n        // skip blank node predicates unless producing generalized RDF\n        if(predicate.termType === 'BlankNode' &&\n          !options.produceGeneralizedRdf) {\n          continue;\n        }\n\n        // convert list, value or node object to triple\n        const object =\n          _objectToRDF(item, issuer, dataset, graphTerm, options.rdfDirection);\n        // skip null objects (they are relative IRIs)\n        if(object) {\n          dataset.push({\n            subject,\n            predicate,\n            object,\n            graph: graphTerm\n          });\n        }\n      }\n    }\n  }\n}\n\n/**\n * Converts a @list value into linked list of blank node RDF quads\n * (an RDF collection).\n *\n * @param list the @list value.\n * @param issuer a IdentifierIssuer for assigning blank node names.\n * @param dataset the array of quads to append to.\n * @param graphTerm the graph term for each quad.\n *\n * @return the head of the list.\n */\nfunction _listToRDF(list, issuer, dataset, graphTerm, rdfDirection) {\n  const first = {termType: 'NamedNode', value: RDF_FIRST};\n  const rest = {termType: 'NamedNode', value: RDF_REST};\n  const nil = {termType: 'NamedNode', value: RDF_NIL};\n\n  const last = list.pop();\n  // Result is the head of the list\n  const result = last ? {termType: 'BlankNode', value: issuer.getId()} : nil;\n  let subject = result;\n\n  for(const item of list) {\n    const object = _objectToRDF(item, issuer, dataset, graphTerm, rdfDirection);\n    const next = {termType: 'BlankNode', value: issuer.getId()};\n    dataset.push({\n      subject,\n      predicate: first,\n      object,\n      graph: graphTerm\n    });\n    dataset.push({\n      subject,\n      predicate: rest,\n      object: next,\n      graph: graphTerm\n    });\n    subject = next;\n  }\n\n  // Tail of list\n  if(last) {\n    const object = _objectToRDF(last, issuer, dataset, graphTerm, rdfDirection);\n    dataset.push({\n      subject,\n      predicate: first,\n      object,\n      graph: graphTerm\n    });\n    dataset.push({\n      subject,\n      predicate: rest,\n      object: nil,\n      graph: graphTerm\n    });\n  }\n\n  return result;\n}\n\n/**\n * Converts a JSON-LD value object to an RDF literal or a JSON-LD string,\n * node object to an RDF resource, or adds a list.\n *\n * @param item the JSON-LD value or node object.\n * @param issuer a IdentifierIssuer for assigning blank node names.\n * @param dataset the dataset to append RDF quads to.\n * @param graphTerm the graph term for each quad.\n *\n * @return the RDF literal or RDF resource.\n */\nfunction _objectToRDF(item, issuer, dataset, graphTerm, rdfDirection) {\n  const object = {};\n\n  // convert value object to RDF\n  if(graphTypes.isValue(item)) {\n    object.termType = 'Literal';\n    object.value = undefined;\n    object.datatype = {\n      termType: 'NamedNode'\n    };\n    let value = item['@value'];\n    const datatype = item['@type'] || null;\n\n    // convert to XSD/JSON datatypes as appropriate\n    if(datatype === '@json') {\n      object.value = jsonCanonicalize(value);\n      object.datatype.value = RDF_JSON_LITERAL;\n    } else if(types.isBoolean(value)) {\n      object.value = value.toString();\n      object.datatype.value = datatype || XSD_BOOLEAN;\n    } else if(types.isDouble(value) || datatype === XSD_DOUBLE) {\n      if(!types.isDouble(value)) {\n        value = parseFloat(value);\n      }\n      // canonical double representation\n      object.value = value.toExponential(15).replace(/(\\d)0*e\\+?/, '$1E');\n      object.datatype.value = datatype || XSD_DOUBLE;\n    } else if(types.isNumber(value)) {\n      object.value = value.toFixed(0);\n      object.datatype.value = datatype || XSD_INTEGER;\n    } else if(rdfDirection === 'i18n-datatype' &&\n      '@direction' in item) {\n      const datatype = 'https://www.w3.org/ns/i18n#' +\n        (item['@language'] || '') +\n        `_${item['@direction']}`;\n      object.datatype.value = datatype;\n      object.value = value;\n    } else if('@language' in item) {\n      object.value = value;\n      object.datatype.value = datatype || RDF_LANGSTRING;\n      object.language = item['@language'];\n    } else {\n      object.value = value;\n      object.datatype.value = datatype || XSD_STRING;\n    }\n  } else if(graphTypes.isList(item)) {\n    const _list =\n      _listToRDF(item['@list'], issuer, dataset, graphTerm, rdfDirection);\n    object.termType = _list.termType;\n    object.value = _list.value;\n  } else {\n    // convert string/node object to RDF\n    const id = types.isObject(item) ? item['@id'] : item;\n    object.termType = id.startsWith('_:') ? 'BlankNode' : 'NamedNode';\n    object.value = id;\n  }\n\n  // skip relative IRIs, not valid RDF\n  if(object.termType === 'NamedNode' && !_isAbsoluteIri(object.value)) {\n    return null;\n  }\n\n  return object;\n}\n","/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst {isKeyword} = require('./context');\nconst graphTypes = require('./graphTypes');\nconst types = require('./types');\nconst util = require('./util');\nconst url = require('./url');\nconst JsonLdError = require('./JsonLdError');\nconst {\n  createNodeMap: _createNodeMap,\n  mergeNodeMapGraphs: _mergeNodeMapGraphs\n} = require('./nodeMap');\n\nconst api = {};\nmodule.exports = api;\n\n/**\n * Performs JSON-LD `merged` framing.\n *\n * @param input the expanded JSON-LD to frame.\n * @param frame the expanded JSON-LD frame to use.\n * @param options the framing options.\n *\n * @return the framed output.\n */\napi.frameMergedOrDefault = (input, frame, options) => {\n  // create framing state\n  const state = {\n    options,\n    embedded: false,\n    graph: '@default',\n    graphMap: {'@default': {}},\n    subjectStack: [],\n    link: {},\n    bnodeMap: {}\n  };\n\n  // produce a map of all graphs and name each bnode\n  // FIXME: currently uses subjects from @merged graph only\n  const issuer = new util.IdentifierIssuer('_:b');\n  _createNodeMap(input, state.graphMap, '@default', issuer);\n  if(options.merged) {\n    state.graphMap['@merged'] = _mergeNodeMapGraphs(state.graphMap);\n    state.graph = '@merged';\n  }\n  state.subjects = state.graphMap[state.graph];\n\n  // frame the subjects\n  const framed = [];\n  api.frame(state, Object.keys(state.subjects).sort(), frame, framed);\n\n  // If pruning blank nodes, find those to prune\n  if(options.pruneBlankNodeIdentifiers) {\n    // remove all blank nodes appearing only once, done in compaction\n    options.bnodesToClear =\n      Object.keys(state.bnodeMap).filter(id => state.bnodeMap[id].length === 1);\n  }\n\n  // remove @preserve from results\n  options.link = {};\n  return _cleanupPreserve(framed, options);\n};\n\n/**\n * Frames subjects according to the given frame.\n *\n * @param state the current framing state.\n * @param subjects the subjects to filter.\n * @param frame the frame.\n * @param parent the parent subject or top-level array.\n * @param property the parent property, initialized to null.\n */\napi.frame = (state, subjects, frame, parent, property = null) => {\n  // validate the frame\n  _validateFrame(frame);\n  frame = frame[0];\n\n  // get flags for current frame\n  const options = state.options;\n  const flags = {\n    embed: _getFrameFlag(frame, options, 'embed'),\n    explicit: _getFrameFlag(frame, options, 'explicit'),\n    requireAll: _getFrameFlag(frame, options, 'requireAll')\n  };\n\n  // get link for current graph\n  if(!state.link.hasOwnProperty(state.graph)) {\n    state.link[state.graph] = {};\n  }\n  const link = state.link[state.graph];\n\n  // filter out subjects that match the frame\n  const matches = _filterSubjects(state, subjects, frame, flags);\n\n  // add matches to output\n  const ids = Object.keys(matches).sort();\n  for(const id of ids) {\n    const subject = matches[id];\n\n    /* Note: In order to treat each top-level match as a compartmentalized\n    result, clear the unique embedded subjects map when the property is null,\n    which only occurs at the top-level. */\n    if(property === null) {\n      state.uniqueEmbeds = {[state.graph]: {}};\n    } else {\n      state.uniqueEmbeds[state.graph] = state.uniqueEmbeds[state.graph] || {};\n    }\n\n    if(flags.embed === '@link' && id in link) {\n      // TODO: may want to also match an existing linked subject against\n      // the current frame ... so different frames could produce different\n      // subjects that are only shared in-memory when the frames are the same\n\n      // add existing linked subject\n      _addFrameOutput(parent, property, link[id]);\n      continue;\n    }\n\n    // start output for subject\n    const output = {'@id': id};\n    if(id.indexOf('_:') === 0) {\n      util.addValue(state.bnodeMap, id, output, {propertyIsArray: true});\n    }\n    link[id] = output;\n\n    // validate @embed\n    if((flags.embed === '@first' || flags.embed === '@last') && state.is11) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; invalid value of @embed.',\n        'jsonld.SyntaxError', {code: 'invalid @embed value', frame});\n    }\n\n    if(!state.embedded && state.uniqueEmbeds[state.graph].hasOwnProperty(id)) {\n      // skip adding this node object to the top level, as it was\n      // already included in another node object\n      continue;\n    }\n\n    // if embed is @never or if a circular reference would be created by an\n    // embed, the subject cannot be embedded, just add the reference;\n    // note that a circular reference won't occur when the embed flag is\n    // `@link` as the above check will short-circuit before reaching this point\n    if(state.embedded &&\n      (flags.embed === '@never' ||\n      _createsCircularReference(subject, state.graph, state.subjectStack))) {\n      _addFrameOutput(parent, property, output);\n      continue;\n    }\n\n    // if only the first (or once) should be embedded\n    if(state.embedded &&\n       (flags.embed == '@first' || flags.embed == '@once') &&\n       state.uniqueEmbeds[state.graph].hasOwnProperty(id)) {\n      _addFrameOutput(parent, property, output);\n      continue;\n    }\n\n    // if only the last match should be embedded\n    if(flags.embed === '@last') {\n      // remove any existing embed\n      if(id in state.uniqueEmbeds[state.graph]) {\n        _removeEmbed(state, id);\n      }\n    }\n\n    state.uniqueEmbeds[state.graph][id] = {parent, property};\n\n    // push matching subject onto stack to enable circular embed checks\n    state.subjectStack.push({subject, graph: state.graph});\n\n    // subject is also the name of a graph\n    if(id in state.graphMap) {\n      let recurse = false;\n      let subframe = null;\n      if(!('@graph' in frame)) {\n        recurse = state.graph !== '@merged';\n        subframe = {};\n      } else {\n        subframe = frame['@graph'][0];\n        recurse = !(id === '@merged' || id === '@default');\n        if(!types.isObject(subframe)) {\n          subframe = {};\n        }\n      }\n\n      if(recurse) {\n        // recurse into graph\n        api.frame(\n          {...state, graph: id, embedded: false},\n          Object.keys(state.graphMap[id]).sort(), [subframe], output, '@graph');\n      }\n    }\n\n    // if frame has @included, recurse over its sub-frame\n    if('@included' in frame) {\n      api.frame(\n        {...state, embedded: false},\n        subjects, frame['@included'], output, '@included');\n    }\n\n    // iterate over subject properties\n    for(const prop of Object.keys(subject).sort()) {\n      // copy keywords to output\n      if(isKeyword(prop)) {\n        output[prop] = util.clone(subject[prop]);\n\n        if(prop === '@type') {\n          // count bnode values of @type\n          for(const type of subject['@type']) {\n            if(type.indexOf('_:') === 0) {\n              util.addValue(\n                state.bnodeMap, type, output, {propertyIsArray: true});\n            }\n          }\n        }\n        continue;\n      }\n\n      // explicit is on and property isn't in the frame, skip processing\n      if(flags.explicit && !(prop in frame)) {\n        continue;\n      }\n\n      // add objects\n      for(const o of subject[prop]) {\n        const subframe = (prop in frame ?\n          frame[prop] : _createImplicitFrame(flags));\n\n        // recurse into list\n        if(graphTypes.isList(o)) {\n          const subframe =\n            (frame[prop] && frame[prop][0] && frame[prop][0]['@list']) ?\n              frame[prop][0]['@list'] :\n              _createImplicitFrame(flags);\n\n          // add empty list\n          const list = {'@list': []};\n          _addFrameOutput(output, prop, list);\n\n          // add list objects\n          const src = o['@list'];\n          for(const oo of src) {\n            if(graphTypes.isSubjectReference(oo)) {\n              // recurse into subject reference\n              api.frame(\n                {...state, embedded: true},\n                [oo['@id']], subframe, list, '@list');\n            } else {\n              // include other values automatically\n              _addFrameOutput(list, '@list', util.clone(oo));\n            }\n          }\n        } else if(graphTypes.isSubjectReference(o)) {\n          // recurse into subject reference\n          api.frame(\n            {...state, embedded: true},\n            [o['@id']], subframe, output, prop);\n        } else if(_valueMatch(subframe[0], o)) {\n          // include other values, if they match\n          _addFrameOutput(output, prop, util.clone(o));\n        }\n      }\n    }\n\n    // handle defaults\n    for(const prop of Object.keys(frame).sort()) {\n      // skip keywords\n      if(prop === '@type') {\n        if(!types.isObject(frame[prop][0]) ||\n           !('@default' in frame[prop][0])) {\n          continue;\n        }\n        // allow through default types\n      } else if(isKeyword(prop)) {\n        continue;\n      }\n\n      // if omit default is off, then include default values for properties\n      // that appear in the next frame but are not in the matching subject\n      const next = frame[prop][0] || {};\n      const omitDefaultOn = _getFrameFlag(next, options, 'omitDefault');\n      if(!omitDefaultOn && !(prop in output)) {\n        let preserve = '@null';\n        if('@default' in next) {\n          preserve = util.clone(next['@default']);\n        }\n        if(!types.isArray(preserve)) {\n          preserve = [preserve];\n        }\n        output[prop] = [{'@preserve': preserve}];\n      }\n    }\n\n    // if embed reverse values by finding nodes having this subject as a value\n    // of the associated property\n    for(const reverseProp of Object.keys(frame['@reverse'] || {}).sort()) {\n      const subframe = frame['@reverse'][reverseProp];\n      for(const subject of Object.keys(state.subjects)) {\n        const nodeValues =\n          util.getValues(state.subjects[subject], reverseProp);\n        if(nodeValues.some(v => v['@id'] === id)) {\n          // node has property referencing this subject, recurse\n          output['@reverse'] = output['@reverse'] || {};\n          util.addValue(\n            output['@reverse'], reverseProp, [], {propertyIsArray: true});\n          api.frame(\n            {...state, embedded: true},\n            [subject], subframe, output['@reverse'][reverseProp],\n            property);\n        }\n      }\n    }\n\n    // add output to parent\n    _addFrameOutput(parent, property, output);\n\n    // pop matching subject from circular ref-checking stack\n    state.subjectStack.pop();\n  }\n};\n\n/**\n * Replace `@null` with `null`, removing it from arrays.\n *\n * @param input the framed, compacted output.\n * @param options the framing options used.\n *\n * @return the resulting output.\n */\napi.cleanupNull = (input, options) => {\n  // recurse through arrays\n  if(types.isArray(input)) {\n    const noNulls = input.map(v => api.cleanupNull(v, options));\n    return noNulls.filter(v => v); // removes nulls from array\n  }\n\n  if(input === '@null') {\n    return null;\n  }\n\n  if(types.isObject(input)) {\n    // handle in-memory linked nodes\n    if('@id' in input) {\n      const id = input['@id'];\n      if(options.link.hasOwnProperty(id)) {\n        const idx = options.link[id].indexOf(input);\n        if(idx !== -1) {\n          // already visited\n          return options.link[id][idx];\n        }\n        // prevent circular visitation\n        options.link[id].push(input);\n      } else {\n        // prevent circular visitation\n        options.link[id] = [input];\n      }\n    }\n\n    for(const key in input) {\n      input[key] = api.cleanupNull(input[key], options);\n    }\n  }\n  return input;\n};\n\n/**\n * Creates an implicit frame when recursing through subject matches. If\n * a frame doesn't have an explicit frame for a particular property, then\n * a wildcard child frame will be created that uses the same flags that the\n * parent frame used.\n *\n * @param flags the current framing flags.\n *\n * @return the implicit frame.\n */\nfunction _createImplicitFrame(flags) {\n  const frame = {};\n  for(const key in flags) {\n    if(flags[key] !== undefined) {\n      frame['@' + key] = [flags[key]];\n    }\n  }\n  return [frame];\n}\n\n/**\n * Checks the current subject stack to see if embedding the given subject\n * would cause a circular reference.\n *\n * @param subjectToEmbed the subject to embed.\n * @param graph the graph the subject to embed is in.\n * @param subjectStack the current stack of subjects.\n *\n * @return true if a circular reference would be created, false if not.\n */\nfunction _createsCircularReference(subjectToEmbed, graph, subjectStack) {\n  for(let i = subjectStack.length - 1; i >= 0; --i) {\n    const subject = subjectStack[i];\n    if(subject.graph === graph &&\n      subject.subject['@id'] === subjectToEmbed['@id']) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Gets the frame flag value for the given flag name.\n *\n * @param frame the frame.\n * @param options the framing options.\n * @param name the flag name.\n *\n * @return the flag value.\n */\nfunction _getFrameFlag(frame, options, name) {\n  const flag = '@' + name;\n  let rval = (flag in frame ? frame[flag][0] : options[name]);\n  if(name === 'embed') {\n    // default is \"@last\"\n    // backwards-compatibility support for \"embed\" maps:\n    // true => \"@last\"\n    // false => \"@never\"\n    if(rval === true) {\n      rval = '@once';\n    } else if(rval === false) {\n      rval = '@never';\n    } else if(rval !== '@always' && rval !== '@never' && rval !== '@link' &&\n      rval !== '@first' && rval !== '@last' && rval !== '@once') {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; invalid value of @embed.',\n        'jsonld.SyntaxError', {code: 'invalid @embed value', frame});\n    }\n  }\n  return rval;\n}\n\n/**\n * Validates a JSON-LD frame, throwing an exception if the frame is invalid.\n *\n * @param frame the frame to validate.\n */\nfunction _validateFrame(frame) {\n  if(!types.isArray(frame) || frame.length !== 1 || !types.isObject(frame[0])) {\n    throw new JsonLdError(\n      'Invalid JSON-LD syntax; a JSON-LD frame must be a single object.',\n      'jsonld.SyntaxError', {frame});\n  }\n\n  if('@id' in frame[0]) {\n    for(const id of util.asArray(frame[0]['@id'])) {\n      // @id must be wildcard or an IRI\n      if(!(types.isObject(id) || url.isAbsolute(id)) ||\n        (types.isString(id) && id.indexOf('_:') === 0)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; invalid @id in frame.',\n          'jsonld.SyntaxError', {code: 'invalid frame', frame});\n      }\n    }\n  }\n\n  if('@type' in frame[0]) {\n    for(const type of util.asArray(frame[0]['@type'])) {\n      // @id must be wildcard or an IRI\n      if(!(types.isObject(type) || url.isAbsolute(type)) ||\n        (types.isString(type) && type.indexOf('_:') === 0)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; invalid @type in frame.',\n          'jsonld.SyntaxError', {code: 'invalid frame', frame});\n      }\n    }\n  }\n}\n\n/**\n * Returns a map of all of the subjects that match a parsed frame.\n *\n * @param state the current framing state.\n * @param subjects the set of subjects to filter.\n * @param frame the parsed frame.\n * @param flags the frame flags.\n *\n * @return all of the matched subjects.\n */\nfunction _filterSubjects(state, subjects, frame, flags) {\n  // filter subjects in @id order\n  const rval = {};\n  for(const id of subjects) {\n    const subject = state.graphMap[state.graph][id];\n    if(_filterSubject(state, subject, frame, flags)) {\n      rval[id] = subject;\n    }\n  }\n  return rval;\n}\n\n/**\n * Returns true if the given subject matches the given frame.\n *\n * Matches either based on explicit type inclusion where the node has any\n * type listed in the frame. If the frame has empty types defined matches\n * nodes not having a @type. If the frame has a type of {} defined matches\n * nodes having any type defined.\n *\n * Otherwise, does duck typing, where the node must have all of the\n * properties defined in the frame.\n *\n * @param state the current framing state.\n * @param subject the subject to check.\n * @param frame the frame to check.\n * @param flags the frame flags.\n *\n * @return true if the subject matches, false if not.\n */\nfunction _filterSubject(state, subject, frame, flags) {\n  // check ducktype\n  let wildcard = true;\n  let matchesSome = false;\n\n  for(const key in frame) {\n    let matchThis = false;\n    const nodeValues = util.getValues(subject, key);\n    const isEmpty = util.getValues(frame, key).length === 0;\n\n    if(key === '@id') {\n      // match on no @id or any matching @id, including wildcard\n      if(types.isEmptyObject(frame['@id'][0] || {})) {\n        matchThis = true;\n      } else if(frame['@id'].length >= 0) {\n        matchThis = frame['@id'].includes(nodeValues[0]);\n      }\n      if(!flags.requireAll) {\n        return matchThis;\n      }\n    } else if(key === '@type') {\n      // check @type (object value means 'any' type,\n      // fall through to ducktyping)\n      wildcard = false;\n      if(isEmpty) {\n        if(nodeValues.length > 0) {\n          // don't match on no @type\n          return false;\n        }\n        matchThis = true;\n      } else if(frame['@type'].length === 1 &&\n        types.isEmptyObject(frame['@type'][0])) {\n        // match on wildcard @type if there is a type\n        matchThis = nodeValues.length > 0;\n      } else {\n        // match on a specific @type\n        for(const type of frame['@type']) {\n          if(types.isObject(type) && '@default' in type) {\n            // match on default object\n            matchThis = true;\n          } else {\n            matchThis = matchThis || nodeValues.some(tt => tt === type);\n          }\n        }\n      }\n      if(!flags.requireAll) {\n        return matchThis;\n      }\n    } else if(isKeyword(key)) {\n      continue;\n    } else {\n      // Force a copy of this frame entry so it can be manipulated\n      const thisFrame = util.getValues(frame, key)[0];\n      let hasDefault = false;\n      if(thisFrame) {\n        _validateFrame([thisFrame]);\n        hasDefault = '@default' in thisFrame;\n      }\n\n      // no longer a wildcard pattern if frame has any non-keyword properties\n      wildcard = false;\n\n      // skip, but allow match if node has no value for property, and frame has\n      // a default value\n      if(nodeValues.length === 0 && hasDefault) {\n        continue;\n      }\n\n      // if frame value is empty, don't match if subject has any value\n      if(nodeValues.length > 0 && isEmpty) {\n        return false;\n      }\n\n      if(thisFrame === undefined) {\n        // node does not match if values is not empty and the value of property\n        // in frame is match none.\n        if(nodeValues.length > 0) {\n          return false;\n        }\n        matchThis = true;\n      } else {\n        if(graphTypes.isList(thisFrame)) {\n          const listValue = thisFrame['@list'][0];\n          if(graphTypes.isList(nodeValues[0])) {\n            const nodeListValues = nodeValues[0]['@list'];\n\n            if(graphTypes.isValue(listValue)) {\n              // match on any matching value\n              matchThis = nodeListValues.some(lv => _valueMatch(listValue, lv));\n            } else if(graphTypes.isSubject(listValue) ||\n              graphTypes.isSubjectReference(listValue)) {\n              matchThis = nodeListValues.some(lv => _nodeMatch(\n                state, listValue, lv, flags));\n            }\n          }\n        } else if(graphTypes.isValue(thisFrame)) {\n          matchThis = nodeValues.some(nv => _valueMatch(thisFrame, nv));\n        } else if(graphTypes.isSubjectReference(thisFrame)) {\n          matchThis =\n            nodeValues.some(nv => _nodeMatch(state, thisFrame, nv, flags));\n        } else if(types.isObject(thisFrame)) {\n          matchThis = nodeValues.length > 0;\n        } else {\n          matchThis = false;\n        }\n      }\n    }\n\n    // all non-defaulted values must match if requireAll is set\n    if(!matchThis && flags.requireAll) {\n      return false;\n    }\n\n    matchesSome = matchesSome || matchThis;\n  }\n\n  // return true if wildcard or subject matches some properties\n  return wildcard || matchesSome;\n}\n\n/**\n * Removes an existing embed.\n *\n * @param state the current framing state.\n * @param id the @id of the embed to remove.\n */\nfunction _removeEmbed(state, id) {\n  // get existing embed\n  const embeds = state.uniqueEmbeds[state.graph];\n  const embed = embeds[id];\n  const parent = embed.parent;\n  const property = embed.property;\n\n  // create reference to replace embed\n  const subject = {'@id': id};\n\n  // remove existing embed\n  if(types.isArray(parent)) {\n    // replace subject with reference\n    for(let i = 0; i < parent.length; ++i) {\n      if(util.compareValues(parent[i], subject)) {\n        parent[i] = subject;\n        break;\n      }\n    }\n  } else {\n    // replace subject with reference\n    const useArray = types.isArray(parent[property]);\n    util.removeValue(parent, property, subject, {propertyIsArray: useArray});\n    util.addValue(parent, property, subject, {propertyIsArray: useArray});\n  }\n\n  // recursively remove dependent dangling embeds\n  const removeDependents = id => {\n    // get embed keys as a separate array to enable deleting keys in map\n    const ids = Object.keys(embeds);\n    for(const next of ids) {\n      if(next in embeds && types.isObject(embeds[next].parent) &&\n        embeds[next].parent['@id'] === id) {\n        delete embeds[next];\n        removeDependents(next);\n      }\n    }\n  };\n  removeDependents(id);\n}\n\n/**\n * Removes the @preserve keywords from expanded result of framing.\n *\n * @param input the framed, framed output.\n * @param options the framing options used.\n *\n * @return the resulting output.\n */\nfunction _cleanupPreserve(input, options) {\n  // recurse through arrays\n  if(types.isArray(input)) {\n    return input.map(value => _cleanupPreserve(value, options));\n  }\n\n  if(types.isObject(input)) {\n    // remove @preserve\n    if('@preserve' in input) {\n      return input['@preserve'][0];\n    }\n\n    // skip @values\n    if(graphTypes.isValue(input)) {\n      return input;\n    }\n\n    // recurse through @lists\n    if(graphTypes.isList(input)) {\n      input['@list'] = _cleanupPreserve(input['@list'], options);\n      return input;\n    }\n\n    // handle in-memory linked nodes\n    if('@id' in input) {\n      const id = input['@id'];\n      if(options.link.hasOwnProperty(id)) {\n        const idx = options.link[id].indexOf(input);\n        if(idx !== -1) {\n          // already visited\n          return options.link[id][idx];\n        }\n        // prevent circular visitation\n        options.link[id].push(input);\n      } else {\n        // prevent circular visitation\n        options.link[id] = [input];\n      }\n    }\n\n    // recurse through properties\n    for(const prop in input) {\n      // potentially remove the id, if it is an unreference bnode\n      if(prop === '@id' && options.bnodesToClear.includes(input[prop])) {\n        delete input['@id'];\n        continue;\n      }\n\n      input[prop] = _cleanupPreserve(input[prop], options);\n    }\n  }\n  return input;\n}\n\n/**\n * Adds framing output to the given parent.\n *\n * @param parent the parent to add to.\n * @param property the parent property.\n * @param output the output to add.\n */\nfunction _addFrameOutput(parent, property, output) {\n  if(types.isObject(parent)) {\n    util.addValue(parent, property, output, {propertyIsArray: true});\n  } else {\n    parent.push(output);\n  }\n}\n\n/**\n * Node matches if it is a node, and matches the pattern as a frame.\n *\n * @param state the current framing state.\n * @param pattern used to match value\n * @param value to check\n * @param flags the frame flags.\n */\nfunction _nodeMatch(state, pattern, value, flags) {\n  if(!('@id' in value)) {\n    return false;\n  }\n  const nodeObject = state.subjects[value['@id']];\n  return nodeObject && _filterSubject(state, nodeObject, pattern, flags);\n}\n\n/**\n * Value matches if it is a value and matches the value pattern\n *\n * * `pattern` is empty\n * * @values are the same, or `pattern[@value]` is a wildcard, and\n * * @types are the same or `value[@type]` is not null\n *   and `pattern[@type]` is `{}`, or `value[@type]` is null\n *   and `pattern[@type]` is null or `[]`, and\n * * @languages are the same or `value[@language]` is not null\n *   and `pattern[@language]` is `{}`, or `value[@language]` is null\n *   and `pattern[@language]` is null or `[]`.\n *\n * @param pattern used to match value\n * @param value to check\n */\nfunction _valueMatch(pattern, value) {\n  const v1 = value['@value'];\n  const t1 = value['@type'];\n  const l1 = value['@language'];\n  const v2 = pattern['@value'] ?\n    (types.isArray(pattern['@value']) ?\n      pattern['@value'] : [pattern['@value']]) :\n    [];\n  const t2 = pattern['@type'] ?\n    (types.isArray(pattern['@type']) ?\n      pattern['@type'] : [pattern['@type']]) :\n    [];\n  const l2 = pattern['@language'] ?\n    (types.isArray(pattern['@language']) ?\n      pattern['@language'] : [pattern['@language']]) :\n    [];\n\n  if(v2.length === 0 && t2.length === 0 && l2.length === 0) {\n    return true;\n  }\n  if(!(v2.includes(v1) || types.isEmptyObject(v2[0]))) {\n    return false;\n  }\n  if(!(!t1 && t2.length === 0 || t2.includes(t1) || t1 &&\n    types.isEmptyObject(t2[0]))) {\n    return false;\n  }\n  if(!(!l1 && l2.length === 0 || l2.includes(l1) || l1 &&\n    types.isEmptyObject(l2[0]))) {\n    return false;\n  }\n  return true;\n}\n","/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst JsonLdError = require('./JsonLdError');\n\nconst {\n  isArray: _isArray,\n  isObject: _isObject,\n  isString: _isString,\n  isUndefined: _isUndefined\n} = require('./types');\n\nconst {\n  isList: _isList,\n  isValue: _isValue,\n  isGraph: _isGraph,\n  isSimpleGraph: _isSimpleGraph,\n  isSubjectReference: _isSubjectReference\n} = require('./graphTypes');\n\nconst {\n  expandIri: _expandIri,\n  getContextValue: _getContextValue,\n  isKeyword: _isKeyword,\n  process: _processContext,\n  processingMode: _processingMode\n} = require('./context');\n\nconst {\n  removeBase: _removeBase,\n  prependBase: _prependBase\n} = require('./url');\n\nconst {\n  addValue: _addValue,\n  asArray: _asArray,\n  compareShortestLeast: _compareShortestLeast\n} = require('./util');\n\nconst api = {};\nmodule.exports = api;\n\n/**\n * Recursively compacts an element using the given active context. All values\n * must be in expanded form before this method is called.\n *\n * @param activeCtx the active context to use.\n * @param activeProperty the compacted property associated with the element\n *          to compact, null for none.\n * @param element the element to compact.\n * @param options the compaction options.\n * @param compactionMap the compaction map to use.\n *\n * @return a promise that resolves to the compacted value.\n */\napi.compact = async ({\n  activeCtx,\n  activeProperty = null,\n  element,\n  options = {},\n  compactionMap = () => undefined\n}) => {\n  // recursively compact array\n  if(_isArray(element)) {\n    let rval = [];\n    for(let i = 0; i < element.length; ++i) {\n      // compact, dropping any null values unless custom mapped\n      let compacted = await api.compact({\n        activeCtx,\n        activeProperty,\n        element: element[i],\n        options,\n        compactionMap\n      });\n      if(compacted === null) {\n        compacted = await compactionMap({\n          unmappedValue: element[i],\n          activeCtx,\n          activeProperty,\n          parent: element,\n          index: i,\n          options\n        });\n        if(compacted === undefined) {\n          continue;\n        }\n      }\n      rval.push(compacted);\n    }\n    if(options.compactArrays && rval.length === 1) {\n      // use single element if no container is specified\n      const container = _getContextValue(\n        activeCtx, activeProperty, '@container') || [];\n      if(container.length === 0) {\n        rval = rval[0];\n      }\n    }\n    return rval;\n  }\n\n  // use any scoped context on activeProperty\n  const ctx = _getContextValue(activeCtx, activeProperty, '@context');\n  if(!_isUndefined(ctx)) {\n    activeCtx = await _processContext({\n      activeCtx,\n      localCtx: ctx,\n      propagate: true,\n      overrideProtected: true,\n      options\n    });\n  }\n\n  // recursively compact object\n  if(_isObject(element)) {\n    if(options.link && '@id' in element &&\n      options.link.hasOwnProperty(element['@id'])) {\n      // check for a linked element to reuse\n      const linked = options.link[element['@id']];\n      for(let i = 0; i < linked.length; ++i) {\n        if(linked[i].expanded === element) {\n          return linked[i].compacted;\n        }\n      }\n    }\n\n    // do value compaction on @values and subject references\n    if(_isValue(element) || _isSubjectReference(element)) {\n      const rval =\n        api.compactValue({activeCtx, activeProperty, value: element, options});\n      if(options.link && _isSubjectReference(element)) {\n        // store linked element\n        if(!(options.link.hasOwnProperty(element['@id']))) {\n          options.link[element['@id']] = [];\n        }\n        options.link[element['@id']].push({expanded: element, compacted: rval});\n      }\n      return rval;\n    }\n\n    // if expanded property is @list and we're contained within a list\n    // container, recursively compact this item to an array\n    if(_isList(element)) {\n      const container = _getContextValue(\n        activeCtx, activeProperty, '@container') || [];\n      if(container.includes('@list')) {\n        return api.compact({\n          activeCtx,\n          activeProperty,\n          element: element['@list'],\n          options,\n          compactionMap\n        });\n      }\n    }\n\n    // FIXME: avoid misuse of active property as an expanded property?\n    const insideReverse = (activeProperty === '@reverse');\n\n    const rval = {};\n\n    // original context before applying property-scoped and local contexts\n    const inputCtx = activeCtx;\n\n    // revert to previous context, if there is one,\n    // and element is not a value object or a node reference\n    if(!_isValue(element) && !_isSubjectReference(element)) {\n      activeCtx = activeCtx.revertToPreviousContext();\n    }\n\n    // apply property-scoped context after reverting term-scoped context\n    const propertyScopedCtx =\n      _getContextValue(inputCtx, activeProperty, '@context');\n    if(!_isUndefined(propertyScopedCtx)) {\n      activeCtx = await _processContext({\n        activeCtx,\n        localCtx: propertyScopedCtx,\n        propagate: true,\n        overrideProtected: true,\n        options\n      });\n    }\n\n    if(options.link && '@id' in element) {\n      // store linked element\n      if(!options.link.hasOwnProperty(element['@id'])) {\n        options.link[element['@id']] = [];\n      }\n      options.link[element['@id']].push({expanded: element, compacted: rval});\n    }\n\n    // apply any context defined on an alias of @type\n    // if key is @type and any compacted value is a term having a local\n    // context, overlay that context\n    let types = element['@type'] || [];\n    if(types.length > 1) {\n      types = Array.from(types).sort();\n    }\n    // find all type-scoped contexts based on current context, prior to\n    // updating it\n    const typeContext = activeCtx;\n    for(const type of types) {\n      const compactedType = api.compactIri(\n        {activeCtx: typeContext, iri: type, relativeTo: {vocab: true}});\n\n      // Use any type-scoped context defined on this value\n      const ctx = _getContextValue(inputCtx, compactedType, '@context');\n      if(!_isUndefined(ctx)) {\n        activeCtx = await _processContext({\n          activeCtx,\n          localCtx: ctx,\n          options,\n          propagate: false\n        });\n      }\n    }\n\n    // process element keys in order\n    const keys = Object.keys(element).sort();\n    for(const expandedProperty of keys) {\n      const expandedValue = element[expandedProperty];\n\n      // compact @id\n      if(expandedProperty === '@id') {\n        let compactedValue = _asArray(expandedValue).map(\n          expandedIri => api.compactIri({\n            activeCtx,\n            iri: expandedIri,\n            relativeTo: {vocab: false},\n            base: options.base\n          }));\n        if(compactedValue.length === 1) {\n          compactedValue = compactedValue[0];\n        }\n\n        // use keyword alias and add value\n        const alias = api.compactIri(\n          {activeCtx, iri: '@id', relativeTo: {vocab: true}});\n\n        rval[alias] = compactedValue;\n        continue;\n      }\n\n      // compact @type(s)\n      if(expandedProperty === '@type') {\n        // resolve type values against previous context\n        let compactedValue = _asArray(expandedValue).map(\n          expandedIri => api.compactIri({\n            activeCtx: inputCtx,\n            iri: expandedIri,\n            relativeTo: {vocab: true}\n          }));\n        if(compactedValue.length === 1) {\n          compactedValue = compactedValue[0];\n        }\n\n        // use keyword alias and add value\n        const alias = api.compactIri(\n          {activeCtx, iri: '@type', relativeTo: {vocab: true}});\n        const container = _getContextValue(\n          activeCtx, alias, '@container') || [];\n\n        // treat as array for @type if @container includes @set\n        const typeAsSet =\n          container.includes('@set') &&\n          _processingMode(activeCtx, 1.1);\n        const isArray =\n          typeAsSet || (_isArray(compactedValue) && expandedValue.length === 0);\n        _addValue(rval, alias, compactedValue, {propertyIsArray: isArray});\n        continue;\n      }\n\n      // handle @reverse\n      if(expandedProperty === '@reverse') {\n        // recursively compact expanded value\n        const compactedValue = await api.compact({\n          activeCtx,\n          activeProperty: '@reverse',\n          element: expandedValue,\n          options,\n          compactionMap\n        });\n\n        // handle double-reversed properties\n        for(const compactedProperty in compactedValue) {\n          if(activeCtx.mappings.has(compactedProperty) &&\n            activeCtx.mappings.get(compactedProperty).reverse) {\n            const value = compactedValue[compactedProperty];\n            const container = _getContextValue(\n              activeCtx, compactedProperty, '@container') || [];\n            const useArray = (\n              container.includes('@set') || !options.compactArrays);\n            _addValue(\n              rval, compactedProperty, value, {propertyIsArray: useArray});\n            delete compactedValue[compactedProperty];\n          }\n        }\n\n        if(Object.keys(compactedValue).length > 0) {\n          // use keyword alias and add value\n          const alias = api.compactIri({\n            activeCtx,\n            iri: expandedProperty,\n            relativeTo: {vocab: true}\n          });\n          _addValue(rval, alias, compactedValue);\n        }\n\n        continue;\n      }\n\n      if(expandedProperty === '@preserve') {\n        // compact using activeProperty\n        const compactedValue = await api.compact({\n          activeCtx,\n          activeProperty,\n          element: expandedValue,\n          options,\n          compactionMap\n        });\n\n        if(!(_isArray(compactedValue) && compactedValue.length === 0)) {\n          _addValue(rval, expandedProperty, compactedValue);\n        }\n        continue;\n      }\n\n      // handle @index property\n      if(expandedProperty === '@index') {\n        // drop @index if inside an @index container\n        const container = _getContextValue(\n          activeCtx, activeProperty, '@container') || [];\n        if(container.includes('@index')) {\n          continue;\n        }\n\n        // use keyword alias and add value\n        const alias = api.compactIri({\n          activeCtx,\n          iri: expandedProperty,\n          relativeTo: {vocab: true}\n        });\n        _addValue(rval, alias, expandedValue);\n        continue;\n      }\n\n      // skip array processing for keywords that aren't\n      // @graph, @list, or @included\n      if(expandedProperty !== '@graph' && expandedProperty !== '@list' &&\n        expandedProperty !== '@included' &&\n        _isKeyword(expandedProperty)) {\n        // use keyword alias and add value as is\n        const alias = api.compactIri({\n          activeCtx,\n          iri: expandedProperty,\n          relativeTo: {vocab: true}\n        });\n        _addValue(rval, alias, expandedValue);\n        continue;\n      }\n\n      // Note: expanded value must be an array due to expansion algorithm.\n      if(!_isArray(expandedValue)) {\n        throw new JsonLdError(\n          'JSON-LD expansion error; expanded value must be an array.',\n          'jsonld.SyntaxError');\n      }\n\n      // preserve empty arrays\n      if(expandedValue.length === 0) {\n        const itemActiveProperty = api.compactIri({\n          activeCtx,\n          iri: expandedProperty,\n          value: expandedValue,\n          relativeTo: {vocab: true},\n          reverse: insideReverse\n        });\n        const nestProperty = activeCtx.mappings.has(itemActiveProperty) ?\n          activeCtx.mappings.get(itemActiveProperty)['@nest'] : null;\n        let nestResult = rval;\n        if(nestProperty) {\n          _checkNestProperty(activeCtx, nestProperty, options);\n          if(!_isObject(rval[nestProperty])) {\n            rval[nestProperty] = {};\n          }\n          nestResult = rval[nestProperty];\n        }\n        _addValue(\n          nestResult, itemActiveProperty, expandedValue, {\n            propertyIsArray: true\n          });\n      }\n\n      // recusively process array values\n      for(const expandedItem of expandedValue) {\n        // compact property and get container type\n        const itemActiveProperty = api.compactIri({\n          activeCtx,\n          iri: expandedProperty,\n          value: expandedItem,\n          relativeTo: {vocab: true},\n          reverse: insideReverse\n        });\n\n        // if itemActiveProperty is a @nest property, add values to nestResult,\n        // otherwise rval\n        const nestProperty = activeCtx.mappings.has(itemActiveProperty) ?\n          activeCtx.mappings.get(itemActiveProperty)['@nest'] : null;\n        let nestResult = rval;\n        if(nestProperty) {\n          _checkNestProperty(activeCtx, nestProperty, options);\n          if(!_isObject(rval[nestProperty])) {\n            rval[nestProperty] = {};\n          }\n          nestResult = rval[nestProperty];\n        }\n\n        const container = _getContextValue(\n          activeCtx, itemActiveProperty, '@container') || [];\n\n        // get simple @graph or @list value if appropriate\n        const isGraph = _isGraph(expandedItem);\n        const isList = _isList(expandedItem);\n        let inner;\n        if(isList) {\n          inner = expandedItem['@list'];\n        } else if(isGraph) {\n          inner = expandedItem['@graph'];\n        }\n\n        // recursively compact expanded item\n        let compactedItem = await api.compact({\n          activeCtx,\n          activeProperty: itemActiveProperty,\n          element: (isList || isGraph) ? inner : expandedItem,\n          options,\n          compactionMap\n        });\n\n        // handle @list\n        if(isList) {\n          // ensure @list value is an array\n          if(!_isArray(compactedItem)) {\n            compactedItem = [compactedItem];\n          }\n\n          if(!container.includes('@list')) {\n            // wrap using @list alias\n            compactedItem = {\n              [api.compactIri({\n                activeCtx,\n                iri: '@list',\n                relativeTo: {vocab: true}\n              })]: compactedItem\n            };\n\n            // include @index from expanded @list, if any\n            if('@index' in expandedItem) {\n              compactedItem[api.compactIri({\n                activeCtx,\n                iri: '@index',\n                relativeTo: {vocab: true}\n              })] = expandedItem['@index'];\n            }\n          } else {\n            _addValue(nestResult, itemActiveProperty, compactedItem, {\n              valueIsArray: true,\n              allowDuplicate: true\n            });\n            continue;\n          }\n        }\n\n        // Graph object compaction cases\n        if(isGraph) {\n          if(container.includes('@graph') && (container.includes('@id') ||\n            container.includes('@index') && _isSimpleGraph(expandedItem))) {\n            // get or create the map object\n            let mapObject;\n            if(nestResult.hasOwnProperty(itemActiveProperty)) {\n              mapObject = nestResult[itemActiveProperty];\n            } else {\n              nestResult[itemActiveProperty] = mapObject = {};\n            }\n\n            // index on @id or @index or alias of @none\n            const key = (container.includes('@id') ?\n              expandedItem['@id'] : expandedItem['@index']) ||\n              api.compactIri({activeCtx, iri: '@none',\n                relativeTo: {vocab: true}});\n            // add compactedItem to map, using value of `@id` or a new blank\n            // node identifier\n\n            _addValue(\n              mapObject, key, compactedItem, {\n                propertyIsArray:\n                  (!options.compactArrays || container.includes('@set'))\n              });\n          } else if(container.includes('@graph') &&\n            _isSimpleGraph(expandedItem)) {\n            // container includes @graph but not @id or @index and value is a\n            // simple graph object add compact value\n            // if compactedItem contains multiple values, it is wrapped in\n            // `@included`\n            if(_isArray(compactedItem) && compactedItem.length > 1) {\n              compactedItem = {'@included': compactedItem};\n            }\n            _addValue(\n              nestResult, itemActiveProperty, compactedItem, {\n                propertyIsArray:\n                  (!options.compactArrays || container.includes('@set'))\n              });\n          } else {\n            // wrap using @graph alias, remove array if only one item and\n            // compactArrays not set\n            if(_isArray(compactedItem) && compactedItem.length === 1 &&\n              options.compactArrays) {\n              compactedItem = compactedItem[0];\n            }\n            compactedItem = {\n              [api.compactIri({\n                activeCtx,\n                iri: '@graph',\n                relativeTo: {vocab: true}\n              })]: compactedItem\n            };\n\n            // include @id from expanded graph, if any\n            if('@id' in expandedItem) {\n              compactedItem[api.compactIri({\n                activeCtx,\n                iri: '@id',\n                relativeTo: {vocab: true}\n              })] = expandedItem['@id'];\n            }\n\n            // include @index from expanded graph, if any\n            if('@index' in expandedItem) {\n              compactedItem[api.compactIri({\n                activeCtx,\n                iri: '@index',\n                relativeTo: {vocab: true}\n              })] = expandedItem['@index'];\n            }\n            _addValue(\n              nestResult, itemActiveProperty, compactedItem, {\n                propertyIsArray:\n                  (!options.compactArrays || container.includes('@set'))\n              });\n          }\n        } else if(container.includes('@language') ||\n          container.includes('@index') || container.includes('@id') ||\n          container.includes('@type')) {\n          // handle language and index maps\n          // get or create the map object\n          let mapObject;\n          if(nestResult.hasOwnProperty(itemActiveProperty)) {\n            mapObject = nestResult[itemActiveProperty];\n          } else {\n            nestResult[itemActiveProperty] = mapObject = {};\n          }\n\n          let key;\n          if(container.includes('@language')) {\n          // if container is a language map, simplify compacted value to\n          // a simple string\n            if(_isValue(compactedItem)) {\n              compactedItem = compactedItem['@value'];\n            }\n            key = expandedItem['@language'];\n          } else if(container.includes('@index')) {\n            const indexKey = _getContextValue(\n              activeCtx, itemActiveProperty, '@index') || '@index';\n            const containerKey = api.compactIri(\n              {activeCtx, iri: indexKey, relativeTo: {vocab: true}});\n            if(indexKey === '@index') {\n              key = expandedItem['@index'];\n              delete compactedItem[containerKey];\n            } else {\n              let others;\n              [key, ...others] = _asArray(compactedItem[indexKey] || []);\n              if(!_isString(key)) {\n                // Will use @none if it isn't a string.\n                key = null;\n              } else {\n                switch(others.length) {\n                  case 0:\n                    delete compactedItem[indexKey];\n                    break;\n                  case 1:\n                    compactedItem[indexKey] = others[0];\n                    break;\n                  default:\n                    compactedItem[indexKey] = others;\n                    break;\n                }\n              }\n            }\n          } else if(container.includes('@id')) {\n            const idKey = api.compactIri({activeCtx, iri: '@id',\n              relativeTo: {vocab: true}});\n            key = compactedItem[idKey];\n            delete compactedItem[idKey];\n          } else if(container.includes('@type')) {\n            const typeKey = api.compactIri({\n              activeCtx,\n              iri: '@type',\n              relativeTo: {vocab: true}\n            });\n            let types;\n            [key, ...types] = _asArray(compactedItem[typeKey] || []);\n            switch(types.length) {\n              case 0:\n                delete compactedItem[typeKey];\n                break;\n              case 1:\n                compactedItem[typeKey] = types[0];\n                break;\n              default:\n                compactedItem[typeKey] = types;\n                break;\n            }\n\n            // If compactedItem contains a single entry\n            // whose key maps to @id, recompact without @type\n            if(Object.keys(compactedItem).length === 1 &&\n              '@id' in expandedItem) {\n              compactedItem = await api.compact({\n                activeCtx,\n                activeProperty: itemActiveProperty,\n                element: {'@id': expandedItem['@id']},\n                options,\n                compactionMap\n              });\n            }\n          }\n\n          // if compacting this value which has no key, index on @none\n          if(!key) {\n            key = api.compactIri({activeCtx, iri: '@none',\n              relativeTo: {vocab: true}});\n          }\n          // add compact value to map object using key from expanded value\n          // based on the container type\n          _addValue(\n            mapObject, key, compactedItem, {\n              propertyIsArray: container.includes('@set')\n            });\n        } else {\n          // use an array if: compactArrays flag is false,\n          // @container is @set or @list , value is an empty\n          // array, or key is @graph\n          const isArray = (!options.compactArrays ||\n            container.includes('@set') || container.includes('@list') ||\n            (_isArray(compactedItem) && compactedItem.length === 0) ||\n            expandedProperty === '@list' || expandedProperty === '@graph');\n\n          // add compact value\n          _addValue(\n            nestResult, itemActiveProperty, compactedItem,\n            {propertyIsArray: isArray});\n        }\n      }\n    }\n\n    return rval;\n  }\n\n  // only primitives remain which are already compact\n  return element;\n};\n\n/**\n * Compacts an IRI or keyword into a term or prefix if it can be. If the\n * IRI has an associated value it may be passed.\n *\n * @param activeCtx the active context to use.\n * @param iri the IRI to compact.\n * @param value the value to check or null.\n * @param relativeTo options for how to compact IRIs:\n *          vocab: true to split after @vocab, false not to.\n * @param reverse true if a reverse property is being compacted, false if not.\n * @param base the absolute URL to use for compacting document-relative IRIs.\n *\n * @return the compacted term, prefix, keyword alias, or the original IRI.\n */\napi.compactIri = ({\n  activeCtx,\n  iri,\n  value = null,\n  relativeTo = {vocab: false},\n  reverse = false,\n  base = null\n}) => {\n  // can't compact null\n  if(iri === null) {\n    return iri;\n  }\n\n  // if context is from a property term scoped context composed with a\n  // type-scoped context, then use the previous context instead\n  if(activeCtx.isPropertyTermScoped && activeCtx.previousContext) {\n    activeCtx = activeCtx.previousContext;\n  }\n\n  const inverseCtx = activeCtx.getInverse();\n\n  // if term is a keyword, it may be compacted to a simple alias\n  if(_isKeyword(iri) &&\n    iri in inverseCtx &&\n    '@none' in inverseCtx[iri] &&\n    '@type' in inverseCtx[iri]['@none'] &&\n    '@none' in inverseCtx[iri]['@none']['@type']) {\n    return inverseCtx[iri]['@none']['@type']['@none'];\n  }\n\n  // use inverse context to pick a term if iri is relative to vocab\n  if(relativeTo.vocab && iri in inverseCtx) {\n    const defaultLanguage = activeCtx['@language'] || '@none';\n\n    // prefer @index if available in value\n    const containers = [];\n    if(_isObject(value) && '@index' in value && !('@graph' in value)) {\n      containers.push('@index', '@index@set');\n    }\n\n    // if value is a preserve object, use its value\n    if(_isObject(value) && '@preserve' in value) {\n      value = value['@preserve'][0];\n    }\n\n    // prefer most specific container including @graph, prefering @set\n    // variations\n    if(_isGraph(value)) {\n      // favor indexmap if the graph is indexed\n      if('@index' in value) {\n        containers.push(\n          '@graph@index', '@graph@index@set', '@index', '@index@set');\n      }\n      // favor idmap if the graph is has an @id\n      if('@id' in value) {\n        containers.push(\n          '@graph@id', '@graph@id@set');\n      }\n      containers.push('@graph', '@graph@set', '@set');\n      // allow indexmap if the graph is not indexed\n      if(!('@index' in value)) {\n        containers.push(\n          '@graph@index', '@graph@index@set', '@index', '@index@set');\n      }\n      // allow idmap if the graph does not have an @id\n      if(!('@id' in value)) {\n        containers.push('@graph@id', '@graph@id@set');\n      }\n    } else if(_isObject(value) && !_isValue(value)) {\n      containers.push('@id', '@id@set', '@type', '@set@type');\n    }\n\n    // defaults for term selection based on type/language\n    let typeOrLanguage = '@language';\n    let typeOrLanguageValue = '@null';\n\n    if(reverse) {\n      typeOrLanguage = '@type';\n      typeOrLanguageValue = '@reverse';\n      containers.push('@set');\n    } else if(_isList(value)) {\n      // choose the most specific term that works for all elements in @list\n      // only select @list containers if @index is NOT in value\n      if(!('@index' in value)) {\n        containers.push('@list');\n      }\n      const list = value['@list'];\n      if(list.length === 0) {\n        // any empty list can be matched against any term that uses the\n        // @list container regardless of @type or @language\n        typeOrLanguage = '@any';\n        typeOrLanguageValue = '@none';\n      } else {\n        let commonLanguage = (list.length === 0) ? defaultLanguage : null;\n        let commonType = null;\n        for(let i = 0; i < list.length; ++i) {\n          const item = list[i];\n          let itemLanguage = '@none';\n          let itemType = '@none';\n          if(_isValue(item)) {\n            if('@direction' in item) {\n              const lang = (item['@language'] || '').toLowerCase();\n              const dir = item['@direction'];\n              itemLanguage = `${lang}_${dir}`;\n            } else if('@language' in item) {\n              itemLanguage = item['@language'].toLowerCase();\n            } else if('@type' in item) {\n              itemType = item['@type'];\n            } else {\n              // plain literal\n              itemLanguage = '@null';\n            }\n          } else {\n            itemType = '@id';\n          }\n          if(commonLanguage === null) {\n            commonLanguage = itemLanguage;\n          } else if(itemLanguage !== commonLanguage && _isValue(item)) {\n            commonLanguage = '@none';\n          }\n          if(commonType === null) {\n            commonType = itemType;\n          } else if(itemType !== commonType) {\n            commonType = '@none';\n          }\n          // there are different languages and types in the list, so choose\n          // the most generic term, no need to keep iterating the list\n          if(commonLanguage === '@none' && commonType === '@none') {\n            break;\n          }\n        }\n        commonLanguage = commonLanguage || '@none';\n        commonType = commonType || '@none';\n        if(commonType !== '@none') {\n          typeOrLanguage = '@type';\n          typeOrLanguageValue = commonType;\n        } else {\n          typeOrLanguageValue = commonLanguage;\n        }\n      }\n    } else {\n      if(_isValue(value)) {\n        if('@language' in value && !('@index' in value)) {\n          containers.push('@language', '@language@set');\n          typeOrLanguageValue = value['@language'];\n          const dir = value['@direction'];\n          if(dir) {\n            typeOrLanguageValue = `${typeOrLanguageValue}_${dir}`;\n          }\n        } else if('@direction' in value && !('@index' in value)) {\n          typeOrLanguageValue = `_${value['@direction']}`;\n        } else if('@type' in value) {\n          typeOrLanguage = '@type';\n          typeOrLanguageValue = value['@type'];\n        }\n      } else {\n        typeOrLanguage = '@type';\n        typeOrLanguageValue = '@id';\n      }\n      containers.push('@set');\n    }\n\n    // do term selection\n    containers.push('@none');\n\n    // an index map can be used to index values using @none, so add as a low\n    // priority\n    if(_isObject(value) && !('@index' in value)) {\n      // allow indexing even if no @index present\n      containers.push('@index', '@index@set');\n    }\n\n    // values without type or language can use @language map\n    if(_isValue(value) && Object.keys(value).length === 1) {\n      // allow indexing even if no @index present\n      containers.push('@language', '@language@set');\n    }\n\n    const term = _selectTerm(\n      activeCtx, iri, value, containers, typeOrLanguage, typeOrLanguageValue);\n    if(term !== null) {\n      return term;\n    }\n  }\n\n  // no term match, use @vocab if available\n  if(relativeTo.vocab) {\n    if('@vocab' in activeCtx) {\n      // determine if vocab is a prefix of the iri\n      const vocab = activeCtx['@vocab'];\n      if(iri.indexOf(vocab) === 0 && iri !== vocab) {\n        // use suffix as relative iri if it is not a term in the active context\n        const suffix = iri.substr(vocab.length);\n        if(!activeCtx.mappings.has(suffix)) {\n          return suffix;\n        }\n      }\n    }\n  }\n\n  // no term or @vocab match, check for possible CURIEs\n  let choice = null;\n  // TODO: make FastCurieMap a class with a method to do this lookup\n  const partialMatches = [];\n  let iriMap = activeCtx.fastCurieMap;\n  // check for partial matches of against `iri`, which means look until\n  // iri.length - 1, not full length\n  const maxPartialLength = iri.length - 1;\n  for(let i = 0; i < maxPartialLength && iri[i] in iriMap; ++i) {\n    iriMap = iriMap[iri[i]];\n    if('' in iriMap) {\n      partialMatches.push(iriMap[''][0]);\n    }\n  }\n  // check partial matches in reverse order to prefer longest ones first\n  for(let i = partialMatches.length - 1; i >= 0; --i) {\n    const entry = partialMatches[i];\n    const terms = entry.terms;\n    for(const term of terms) {\n      // a CURIE is usable if:\n      // 1. it has no mapping, OR\n      // 2. value is null, which means we're not compacting an @value, AND\n      //   the mapping matches the IRI\n      const curie = term + ':' + iri.substr(entry.iri.length);\n      const isUsableCurie = (activeCtx.mappings.get(term)._prefix &&\n        (!activeCtx.mappings.has(curie) ||\n        (value === null && activeCtx.mappings.get(curie)['@id'] === iri)));\n\n      // select curie if it is shorter or the same length but lexicographically\n      // less than the current choice\n      if(isUsableCurie && (choice === null ||\n        _compareShortestLeast(curie, choice) < 0)) {\n        choice = curie;\n      }\n    }\n  }\n\n  // return chosen curie\n  if(choice !== null) {\n    return choice;\n  }\n\n  // If iri could be confused with a compact IRI using a term in this context,\n  // signal an error\n  for(const [term, td] of activeCtx.mappings) {\n    if(td && td._prefix && iri.startsWith(term + ':')) {\n      throw new JsonLdError(\n        `Absolute IRI \"${iri}\" confused with prefix \"${term}\".`,\n        'jsonld.SyntaxError',\n        {code: 'IRI confused with prefix', context: activeCtx});\n    }\n  }\n\n  // compact IRI relative to base\n  if(!relativeTo.vocab) {\n    if('@base' in activeCtx) {\n      if(!activeCtx['@base']) {\n        // The None case preserves rval as potentially relative\n        return iri;\n      } else {\n        return _removeBase(_prependBase(base, activeCtx['@base']), iri);\n      }\n    } else {\n      return _removeBase(base, iri);\n    }\n  }\n\n  // return IRI as is\n  return iri;\n};\n\n/**\n * Performs value compaction on an object with '@value' or '@id' as the only\n * property.\n *\n * @param activeCtx the active context.\n * @param activeProperty the active property that points to the value.\n * @param value the value to compact.\n * @param {Object} [options] - processing options.\n *\n * @return the compaction result.\n */\napi.compactValue = ({activeCtx, activeProperty, value, options}) => {\n  // value is a @value\n  if(_isValue(value)) {\n    // get context rules\n    const type = _getContextValue(activeCtx, activeProperty, '@type');\n    const language = _getContextValue(activeCtx, activeProperty, '@language');\n    const direction = _getContextValue(activeCtx, activeProperty, '@direction');\n    const container =\n      _getContextValue(activeCtx, activeProperty, '@container') || [];\n\n    // whether or not the value has an @index that must be preserved\n    const preserveIndex = '@index' in value && !container.includes('@index');\n\n    // if there's no @index to preserve ...\n    if(!preserveIndex && type !== '@none') {\n      // matching @type or @language specified in context, compact value\n      if(value['@type'] === type) {\n        return value['@value'];\n      }\n      if('@language' in value && value['@language'] === language &&\n         '@direction' in value && value['@direction'] === direction) {\n        return value['@value'];\n      }\n      if('@language' in value && value['@language'] === language) {\n        return value['@value'];\n      }\n      if('@direction' in value && value['@direction'] === direction) {\n        return value['@value'];\n      }\n    }\n\n    // return just the value of @value if all are true:\n    // 1. @value is the only key or @index isn't being preserved\n    // 2. there is no default language or @value is not a string or\n    //   the key has a mapping with a null @language\n    const keyCount = Object.keys(value).length;\n    const isValueOnlyKey = (keyCount === 1 ||\n      (keyCount === 2 && '@index' in value && !preserveIndex));\n    const hasDefaultLanguage = ('@language' in activeCtx);\n    const isValueString = _isString(value['@value']);\n    const hasNullMapping = (activeCtx.mappings.has(activeProperty) &&\n      activeCtx.mappings.get(activeProperty)['@language'] === null);\n    if(isValueOnlyKey &&\n      type !== '@none' &&\n      (!hasDefaultLanguage || !isValueString || hasNullMapping)) {\n      return value['@value'];\n    }\n\n    const rval = {};\n\n    // preserve @index\n    if(preserveIndex) {\n      rval[api.compactIri({\n        activeCtx,\n        iri: '@index',\n        relativeTo: {vocab: true}\n      })] = value['@index'];\n    }\n\n    if('@type' in value) {\n      // compact @type IRI\n      rval[api.compactIri({\n        activeCtx,\n        iri: '@type',\n        relativeTo: {vocab: true}\n      })] = api.compactIri(\n        {activeCtx, iri: value['@type'], relativeTo: {vocab: true}});\n    } else if('@language' in value) {\n      // alias @language\n      rval[api.compactIri({\n        activeCtx,\n        iri: '@language',\n        relativeTo: {vocab: true}\n      })] = value['@language'];\n    }\n\n    if('@direction' in value) {\n      // alias @direction\n      rval[api.compactIri({\n        activeCtx,\n        iri: '@direction',\n        relativeTo: {vocab: true}\n      })] = value['@direction'];\n    }\n\n    // alias @value\n    rval[api.compactIri({\n      activeCtx,\n      iri: '@value',\n      relativeTo: {vocab: true}\n    })] = value['@value'];\n\n    return rval;\n  }\n\n  // value is a subject reference\n  const expandedProperty = _expandIri(activeCtx, activeProperty, {vocab: true},\n    options);\n  const type = _getContextValue(activeCtx, activeProperty, '@type');\n  const compacted = api.compactIri({\n    activeCtx,\n    iri: value['@id'],\n    relativeTo: {vocab: type === '@vocab'},\n    base: options.base});\n\n  // compact to scalar\n  if(type === '@id' || type === '@vocab' || expandedProperty === '@graph') {\n    return compacted;\n  }\n\n  return {\n    [api.compactIri({\n      activeCtx,\n      iri: '@id',\n      relativeTo: {vocab: true}\n    })]: compacted\n  };\n};\n\n/**\n * Picks the preferred compaction term from the given inverse context entry.\n *\n * @param activeCtx the active context.\n * @param iri the IRI to pick the term for.\n * @param value the value to pick the term for.\n * @param containers the preferred containers.\n * @param typeOrLanguage either '@type' or '@language'.\n * @param typeOrLanguageValue the preferred value for '@type' or '@language'.\n *\n * @return the preferred term.\n */\nfunction _selectTerm(\n  activeCtx, iri, value, containers, typeOrLanguage, typeOrLanguageValue) {\n  if(typeOrLanguageValue === null) {\n    typeOrLanguageValue = '@null';\n  }\n\n  // preferences for the value of @type or @language\n  const prefs = [];\n\n  // determine prefs for @id based on whether or not value compacts to a term\n  if((typeOrLanguageValue === '@id' || typeOrLanguageValue === '@reverse') &&\n    _isObject(value) && '@id' in value) {\n    // prefer @reverse first\n    if(typeOrLanguageValue === '@reverse') {\n      prefs.push('@reverse');\n    }\n    // try to compact value to a term\n    const term = api.compactIri(\n      {activeCtx, iri: value['@id'], relativeTo: {vocab: true}});\n    if(activeCtx.mappings.has(term) &&\n      activeCtx.mappings.get(term) &&\n      activeCtx.mappings.get(term)['@id'] === value['@id']) {\n      // prefer @vocab\n      prefs.push.apply(prefs, ['@vocab', '@id']);\n    } else {\n      // prefer @id\n      prefs.push.apply(prefs, ['@id', '@vocab']);\n    }\n  } else {\n    prefs.push(typeOrLanguageValue);\n\n    // consider direction only\n    const langDir = prefs.find(el => el.includes('_'));\n    if(langDir) {\n      // consider _dir portion\n      prefs.push(langDir.replace(/^[^_]+_/, '_'));\n    }\n  }\n  prefs.push('@none');\n\n  const containerMap = activeCtx.inverse[iri];\n  for(const container of containers) {\n    // if container not available in the map, continue\n    if(!(container in containerMap)) {\n      continue;\n    }\n\n    const typeOrLanguageValueMap = containerMap[container][typeOrLanguage];\n    for(const pref of prefs) {\n      // if type/language option not available in the map, continue\n      if(!(pref in typeOrLanguageValueMap)) {\n        continue;\n      }\n\n      // select term\n      return typeOrLanguageValueMap[pref];\n    }\n  }\n\n  return null;\n}\n\n/**\n * The value of `@nest` in the term definition must either be `@nest`, or a term\n * which resolves to `@nest`.\n *\n * @param activeCtx the active context.\n * @param nestProperty a term in the active context or `@nest`.\n * @param {Object} [options] - processing options.\n */\nfunction _checkNestProperty(activeCtx, nestProperty, options) {\n  if(_expandIri(activeCtx, nestProperty, {vocab: true}, options) !== '@nest') {\n    throw new JsonLdError(\n      'JSON-LD compact error; nested property must have an @nest value ' +\n      'resolving to @nest.',\n      'jsonld.SyntaxError', {code: 'invalid @nest value'});\n  }\n}\n","/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nmodule.exports = jsonld => {\n  class JsonLdProcessor {\n    toString() {\n      return '[object JsonLdProcessor]';\n    }\n  }\n  Object.defineProperty(JsonLdProcessor, 'prototype', {\n    writable: false,\n    enumerable: false\n  });\n  Object.defineProperty(JsonLdProcessor.prototype, 'constructor', {\n    writable: true,\n    enumerable: false,\n    configurable: true,\n    value: JsonLdProcessor\n  });\n\n  // The Web IDL test harness will check the number of parameters defined in\n  // the functions below. The number of parameters must exactly match the\n  // required (non-optional) parameters of the JsonLdProcessor interface as\n  // defined here:\n  // https://www.w3.org/TR/json-ld-api/#the-jsonldprocessor-interface\n\n  JsonLdProcessor.compact = function(input, ctx) {\n    if(arguments.length < 2) {\n      return Promise.reject(\n        new TypeError('Could not compact, too few arguments.'));\n    }\n    return jsonld.compact(input, ctx);\n  };\n  JsonLdProcessor.expand = function(input) {\n    if(arguments.length < 1) {\n      return Promise.reject(\n        new TypeError('Could not expand, too few arguments.'));\n    }\n    return jsonld.expand(input);\n  };\n  JsonLdProcessor.flatten = function(input) {\n    if(arguments.length < 1) {\n      return Promise.reject(\n        new TypeError('Could not flatten, too few arguments.'));\n    }\n    return jsonld.flatten(input);\n  };\n\n  return JsonLdProcessor;\n};\n","/**\n * A JavaScript implementation of the JSON-LD API.\n *\n * @author Dave Longley\n *\n * @license BSD 3-Clause License\n * Copyright (c) 2011-2019 Digital Bazaar, Inc.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * Redistributions of source code must retain the above copyright notice,\n * this list of conditions and the following disclaimer.\n *\n * Redistributions in binary form must reproduce the above copyright\n * notice, this list of conditions and the following disclaimer in the\n * documentation and/or other materials provided with the distribution.\n *\n * Neither the name of the Digital Bazaar, Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\n * IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED\n * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A\n * PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\nconst canonize = require('rdf-canonize');\nconst platform = require('./platform');\nconst util = require('./util');\nconst ContextResolver = require('./ContextResolver');\nconst IdentifierIssuer = util.IdentifierIssuer;\nconst JsonLdError = require('./JsonLdError');\nconst LRU = require('lru-cache');\nconst NQuads = require('./NQuads');\n\nconst {expand: _expand} = require('./expand');\nconst {flatten: _flatten} = require('./flatten');\nconst {fromRDF: _fromRDF} = require('./fromRdf');\nconst {toRDF: _toRDF} = require('./toRdf');\n\nconst {\n  frameMergedOrDefault: _frameMergedOrDefault,\n  cleanupNull: _cleanupNull\n} = require('./frame');\n\nconst {\n  isArray: _isArray,\n  isObject: _isObject,\n  isString: _isString\n} = require('./types');\n\nconst {\n  isSubjectReference: _isSubjectReference,\n} = require('./graphTypes');\n\nconst {\n  expandIri: _expandIri,\n  getInitialContext: _getInitialContext,\n  process: _processContext,\n  processingMode: _processingMode\n} = require('./context');\n\nconst {\n  compact: _compact,\n  compactIri: _compactIri\n} = require('./compact');\n\nconst {\n  createNodeMap: _createNodeMap,\n  createMergedNodeMap: _createMergedNodeMap,\n  mergeNodeMaps: _mergeNodeMaps\n} = require('./nodeMap');\n\n/* eslint-disable indent */\n// attaches jsonld API to the given object\nconst wrapper = function(jsonld) {\n\n/** Registered RDF dataset parsers hashed by content-type. */\nconst _rdfParsers = {};\n\n// resolved context cache\n// TODO: consider basing max on context size rather than number\nconst RESOLVED_CONTEXT_CACHE_MAX_SIZE = 100;\nconst _resolvedContextCache = new LRU({max: RESOLVED_CONTEXT_CACHE_MAX_SIZE});\n\n/* Core API */\n\n/**\n * Performs JSON-LD compaction.\n *\n * @param input the JSON-LD input to compact.\n * @param ctx the context to compact with.\n * @param [options] options to use:\n *          [base] the base IRI to use.\n *          [compactArrays] true to compact arrays to single values when\n *            appropriate, false not to (default: true).\n *          [compactToRelative] true to compact IRIs to be relative to document\n *            base, false to keep absolute (default: true)\n *          [graph] true to always output a top-level graph (default: false).\n *          [expandContext] a context to expand with.\n *          [skipExpansion] true to assume the input is expanded and skip\n *            expansion, false not to, defaults to false.\n *          [documentLoader(url, options)] the document loader.\n *          [expansionMap(info)] a function that can be used to custom map\n *            unmappable values (or to throw an error when they are detected);\n *            if this function returns `undefined` then the default behavior\n *            will be used.\n *          [framing] true if compaction is occuring during a framing operation.\n *          [compactionMap(info)] a function that can be used to custom map\n *            unmappable values (or to throw an error when they are detected);\n *            if this function returns `undefined` then the default behavior\n *            will be used.\n *          [contextResolver] internal use only.\n *\n * @return a Promise that resolves to the compacted output.\n */\njsonld.compact = async function(input, ctx, options) {\n  if(arguments.length < 2) {\n    throw new TypeError('Could not compact, too few arguments.');\n  }\n\n  if(ctx === null) {\n    throw new JsonLdError(\n      'The compaction context must not be null.',\n      'jsonld.CompactError', {code: 'invalid local context'});\n  }\n\n  // nothing to compact\n  if(input === null) {\n    return null;\n  }\n\n  // set default options\n  options = _setDefaults(options, {\n    base: _isString(input) ? input : '',\n    compactArrays: true,\n    compactToRelative: true,\n    graph: false,\n    skipExpansion: false,\n    link: false,\n    issuer: new IdentifierIssuer('_:b'),\n    contextResolver: new ContextResolver(\n      {sharedCache: _resolvedContextCache})\n  });\n  if(options.link) {\n    // force skip expansion when linking, \"link\" is not part of the public\n    // API, it should only be called from framing\n    options.skipExpansion = true;\n  }\n  if(!options.compactToRelative) {\n    delete options.base;\n  }\n\n  // expand input\n  let expanded;\n  if(options.skipExpansion) {\n    expanded = input;\n  } else {\n    expanded = await jsonld.expand(input, options);\n  }\n\n  // process context\n  const activeCtx = await jsonld.processContext(\n    _getInitialContext(options), ctx, options);\n\n  // do compaction\n  let compacted = await _compact({\n    activeCtx,\n    element: expanded,\n    options,\n    compactionMap: options.compactionMap\n  });\n\n  // perform clean up\n  if(options.compactArrays && !options.graph && _isArray(compacted)) {\n    if(compacted.length === 1) {\n      // simplify to a single item\n      compacted = compacted[0];\n    } else if(compacted.length === 0) {\n      // simplify to an empty object\n      compacted = {};\n    }\n  } else if(options.graph && _isObject(compacted)) {\n    // always use array if graph option is on\n    compacted = [compacted];\n  }\n\n  // follow @context key\n  if(_isObject(ctx) && '@context' in ctx) {\n    ctx = ctx['@context'];\n  }\n\n  // build output context\n  ctx = util.clone(ctx);\n  if(!_isArray(ctx)) {\n    ctx = [ctx];\n  }\n  // remove empty contexts\n  const tmp = ctx;\n  ctx = [];\n  for(let i = 0; i < tmp.length; ++i) {\n    if(!_isObject(tmp[i]) || Object.keys(tmp[i]).length > 0) {\n      ctx.push(tmp[i]);\n    }\n  }\n\n  // remove array if only one context\n  const hasContext = (ctx.length > 0);\n  if(ctx.length === 1) {\n    ctx = ctx[0];\n  }\n\n  // add context and/or @graph\n  if(_isArray(compacted)) {\n    // use '@graph' keyword\n    const graphAlias = _compactIri({\n      activeCtx, iri: '@graph', relativeTo: {vocab: true}\n    });\n    const graph = compacted;\n    compacted = {};\n    if(hasContext) {\n      compacted['@context'] = ctx;\n    }\n    compacted[graphAlias] = graph;\n  } else if(_isObject(compacted) && hasContext) {\n    // reorder keys so @context is first\n    const graph = compacted;\n    compacted = {'@context': ctx};\n    for(const key in graph) {\n      compacted[key] = graph[key];\n    }\n  }\n\n  return compacted;\n};\n\n/**\n * Performs JSON-LD expansion.\n *\n * @param input the JSON-LD input to expand.\n * @param [options] the options to use:\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [keepFreeFloatingNodes] true to keep free-floating nodes,\n *            false not to, defaults to false.\n *          [documentLoader(url, options)] the document loader.\n *          [expansionMap(info)] a function that can be used to custom map\n *            unmappable values (or to throw an error when they are detected);\n *            if this function returns `undefined` then the default behavior\n *            will be used.\n *          [contextResolver] internal use only.\n *\n * @return a Promise that resolves to the expanded output.\n */\njsonld.expand = async function(input, options) {\n  if(arguments.length < 1) {\n    throw new TypeError('Could not expand, too few arguments.');\n  }\n\n  // set default options\n  options = _setDefaults(options, {\n    keepFreeFloatingNodes: false,\n    contextResolver: new ContextResolver(\n      {sharedCache: _resolvedContextCache})\n  });\n  if(options.expansionMap === false) {\n    options.expansionMap = undefined;\n  }\n\n  // build set of objects that may have @contexts to resolve\n  const toResolve = {};\n\n  // build set of contexts to process prior to expansion\n  const contextsToProcess = [];\n\n  // if an `expandContext` has been given ensure it gets resolved\n  if('expandContext' in options) {\n    const expandContext = util.clone(options.expandContext);\n    if(_isObject(expandContext) && '@context' in expandContext) {\n      toResolve.expandContext = expandContext;\n    } else {\n      toResolve.expandContext = {'@context': expandContext};\n    }\n    contextsToProcess.push(toResolve.expandContext);\n  }\n\n  // if input is a string, attempt to dereference remote document\n  let defaultBase;\n  if(!_isString(input)) {\n    // input is not a URL, do not need to retrieve it first\n    toResolve.input = util.clone(input);\n  } else {\n    // load remote doc\n    const remoteDoc = await jsonld.get(input, options);\n    defaultBase = remoteDoc.documentUrl;\n    toResolve.input = remoteDoc.document;\n    if(remoteDoc.contextUrl) {\n      // context included in HTTP link header and must be resolved\n      toResolve.remoteContext = {'@context': remoteDoc.contextUrl};\n      contextsToProcess.push(toResolve.remoteContext);\n    }\n  }\n\n  // set default base\n  if(!('base' in options)) {\n    options.base = defaultBase || '';\n  }\n\n  // process any additional contexts\n  let activeCtx = _getInitialContext(options);\n  for(const localCtx of contextsToProcess) {\n    activeCtx = await _processContext({activeCtx, localCtx, options});\n  }\n\n  // expand resolved input\n  let expanded = await _expand({\n    activeCtx,\n    element: toResolve.input,\n    options,\n    expansionMap: options.expansionMap\n  });\n\n  // optimize away @graph with no other properties\n  if(_isObject(expanded) && ('@graph' in expanded) &&\n    Object.keys(expanded).length === 1) {\n    expanded = expanded['@graph'];\n  } else if(expanded === null) {\n    expanded = [];\n  }\n\n  // normalize to an array\n  if(!_isArray(expanded)) {\n    expanded = [expanded];\n  }\n\n  return expanded;\n};\n\n/**\n * Performs JSON-LD flattening.\n *\n * @param input the JSON-LD to flatten.\n * @param ctx the context to use to compact the flattened output, or null.\n * @param [options] the options to use:\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [documentLoader(url, options)] the document loader.\n *          [contextResolver] internal use only.\n *\n * @return a Promise that resolves to the flattened output.\n */\njsonld.flatten = async function(input, ctx, options) {\n  if(arguments.length < 1) {\n    return new TypeError('Could not flatten, too few arguments.');\n  }\n\n  if(typeof ctx === 'function') {\n    ctx = null;\n  } else {\n    ctx = ctx || null;\n  }\n\n  // set default options\n  options = _setDefaults(options, {\n    base: _isString(input) ? input : '',\n    contextResolver: new ContextResolver(\n      {sharedCache: _resolvedContextCache})\n  });\n\n  // expand input\n  const expanded = await jsonld.expand(input, options);\n\n  // do flattening\n  const flattened = _flatten(expanded);\n\n  if(ctx === null) {\n    // no compaction required\n    return flattened;\n  }\n\n  // compact result (force @graph option to true, skip expansion)\n  options.graph = true;\n  options.skipExpansion = true;\n  const compacted = await jsonld.compact(flattened, ctx, options);\n\n  return compacted;\n};\n\n/**\n * Performs JSON-LD framing.\n *\n * @param input the JSON-LD input to frame.\n * @param frame the JSON-LD frame to use.\n * @param [options] the framing options.\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [embed] default @embed flag: '@last', '@always', '@never', '@link'\n *            (default: '@last').\n *          [explicit] default @explicit flag (default: false).\n *          [requireAll] default @requireAll flag (default: true).\n *          [omitDefault] default @omitDefault flag (default: false).\n *          [documentLoader(url, options)] the document loader.\n *          [contextResolver] internal use only.\n *\n * @return a Promise that resolves to the framed output.\n */\njsonld.frame = async function(input, frame, options) {\n  if(arguments.length < 2) {\n    throw new TypeError('Could not frame, too few arguments.');\n  }\n\n  // set default options\n  options = _setDefaults(options, {\n    base: _isString(input) ? input : '',\n    embed: '@once',\n    explicit: false,\n    requireAll: false,\n    omitDefault: false,\n    bnodesToClear: [],\n    contextResolver: new ContextResolver(\n      {sharedCache: _resolvedContextCache})\n  });\n\n  // if frame is a string, attempt to dereference remote document\n  if(_isString(frame)) {\n    // load remote doc\n    const remoteDoc = await jsonld.get(frame, options);\n    frame = remoteDoc.document;\n\n    if(remoteDoc.contextUrl) {\n      // inject link header @context into frame\n      let ctx = frame['@context'];\n      if(!ctx) {\n        ctx = remoteDoc.contextUrl;\n      } else if(_isArray(ctx)) {\n        ctx.push(remoteDoc.contextUrl);\n      } else {\n        ctx = [ctx, remoteDoc.contextUrl];\n      }\n      frame['@context'] = ctx;\n    }\n  }\n\n  const frameContext = frame ? frame['@context'] || {} : {};\n\n  // process context\n  const activeCtx = await jsonld.processContext(\n    _getInitialContext(options), frameContext, options);\n\n  // mode specific defaults\n  if(!options.hasOwnProperty('omitGraph')) {\n    options.omitGraph = _processingMode(activeCtx, 1.1);\n  }\n  if(!options.hasOwnProperty('pruneBlankNodeIdentifiers')) {\n    options.pruneBlankNodeIdentifiers = _processingMode(activeCtx, 1.1);\n  }\n\n  // expand input\n  const expanded = await jsonld.expand(input, options);\n\n  // expand frame\n  const opts = {...options};\n  opts.isFrame = true;\n  opts.keepFreeFloatingNodes = true;\n  const expandedFrame = await jsonld.expand(frame, opts);\n\n  // if the unexpanded frame includes a key expanding to @graph, frame the\n  // default graph, otherwise, the merged graph\n  const frameKeys = Object.keys(frame)\n    .map(key => _expandIri(activeCtx, key, {vocab: true}));\n  opts.merged = !frameKeys.includes('@graph');\n  opts.is11 = _processingMode(activeCtx, 1.1);\n\n  // do framing\n  const framed = _frameMergedOrDefault(expanded, expandedFrame, opts);\n\n  opts.graph = !options.omitGraph;\n  opts.skipExpansion = true;\n  opts.link = {};\n  opts.framing = true;\n  let compacted = await jsonld.compact(framed, frameContext, opts);\n\n  // replace @null with null, compacting arrays\n  opts.link = {};\n  compacted = _cleanupNull(compacted, opts);\n\n  return compacted;\n};\n\n/**\n * **Experimental**\n *\n * Links a JSON-LD document's nodes in memory.\n *\n * @param input the JSON-LD document to link.\n * @param [ctx] the JSON-LD context to apply.\n * @param [options] the options to use:\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [documentLoader(url, options)] the document loader.\n *          [contextResolver] internal use only.\n *\n * @return a Promise that resolves to the linked output.\n */\njsonld.link = async function(input, ctx, options) {\n  // API matches running frame with a wildcard frame and embed: '@link'\n  // get arguments\n  const frame = {};\n  if(ctx) {\n    frame['@context'] = ctx;\n  }\n  frame['@embed'] = '@link';\n  return jsonld.frame(input, frame, options);\n};\n\n/**\n * Performs RDF dataset normalization on the given input. The input is JSON-LD\n * unless the 'inputFormat' option is used. The output is an RDF dataset\n * unless the 'format' option is used.\n *\n * @param input the input to normalize as JSON-LD or as a format specified by\n *          the 'inputFormat' option.\n * @param [options] the options to use:\n *          [algorithm] the normalization algorithm to use, `URDNA2015` or\n *            `URGNA2012` (default: `URDNA2015`).\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [skipExpansion] true to assume the input is expanded and skip\n *            expansion, false not to, defaults to false.\n *          [inputFormat] the format if input is not JSON-LD:\n *            'application/n-quads' for N-Quads.\n *          [format] the format if output is a string:\n *            'application/n-quads' for N-Quads.\n *          [documentLoader(url, options)] the document loader.\n *          [useNative] true to use a native canonize algorithm\n *          [contextResolver] internal use only.\n *\n * @return a Promise that resolves to the normalized output.\n */\njsonld.normalize = jsonld.canonize = async function(input, options) {\n  if(arguments.length < 1) {\n    throw new TypeError('Could not canonize, too few arguments.');\n  }\n\n  // set default options\n  options = _setDefaults(options, {\n    base: _isString(input) ? input : '',\n    algorithm: 'URDNA2015',\n    skipExpansion: false,\n    contextResolver: new ContextResolver(\n      {sharedCache: _resolvedContextCache})\n  });\n  if('inputFormat' in options) {\n    if(options.inputFormat !== 'application/n-quads' &&\n      options.inputFormat !== 'application/nquads') {\n      throw new JsonLdError(\n        'Unknown canonicalization input format.',\n        'jsonld.CanonizeError');\n    }\n    // TODO: `await` for async parsers\n    const parsedInput = NQuads.parse(input);\n\n    // do canonicalization\n    return canonize.canonize(parsedInput, options);\n  }\n\n  // convert to RDF dataset then do normalization\n  const opts = {...options};\n  delete opts.format;\n  opts.produceGeneralizedRdf = false;\n  const dataset = await jsonld.toRDF(input, opts);\n\n  // do canonicalization\n  return canonize.canonize(dataset, options);\n};\n\n/**\n * Converts an RDF dataset to JSON-LD.\n *\n * @param dataset a serialized string of RDF in a format specified by the\n *          format option or an RDF dataset to convert.\n * @param [options] the options to use:\n *          [format] the format if dataset param must first be parsed:\n *            'application/n-quads' for N-Quads (default).\n *          [rdfParser] a custom RDF-parser to use to parse the dataset.\n *          [useRdfType] true to use rdf:type, false to use @type\n *            (default: false).\n *          [useNativeTypes] true to convert XSD types into native types\n *            (boolean, integer, double), false not to (default: false).\n *\n * @return a Promise that resolves to the JSON-LD document.\n */\njsonld.fromRDF = async function(dataset, options) {\n  if(arguments.length < 1) {\n    throw new TypeError('Could not convert from RDF, too few arguments.');\n  }\n\n  // set default options\n  options = _setDefaults(options, {\n    format: _isString(dataset) ? 'application/n-quads' : undefined\n  });\n\n  const {format} = options;\n  let {rdfParser} = options;\n\n  // handle special format\n  if(format) {\n    // check supported formats\n    rdfParser = rdfParser || _rdfParsers[format];\n    if(!rdfParser) {\n      throw new JsonLdError(\n        'Unknown input format.',\n        'jsonld.UnknownFormat', {format});\n    }\n  } else {\n    // no-op parser, assume dataset already parsed\n    rdfParser = () => dataset;\n  }\n\n  // rdfParser must be synchronous or return a promise, no callback support\n  const parsedDataset = await rdfParser(dataset);\n  return _fromRDF(parsedDataset, options);\n};\n\n/**\n * Outputs the RDF dataset found in the given JSON-LD object.\n *\n * @param input the JSON-LD input.\n * @param [options] the options to use:\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [skipExpansion] true to assume the input is expanded and skip\n *            expansion, false not to, defaults to false.\n *          [format] the format to use to output a string:\n *            'application/n-quads' for N-Quads.\n *          [produceGeneralizedRdf] true to output generalized RDF, false\n *            to produce only standard RDF (default: false).\n *          [documentLoader(url, options)] the document loader.\n *          [contextResolver] internal use only.\n *\n * @return a Promise that resolves to the RDF dataset.\n */\njsonld.toRDF = async function(input, options) {\n  if(arguments.length < 1) {\n    throw new TypeError('Could not convert to RDF, too few arguments.');\n  }\n\n  // set default options\n  options = _setDefaults(options, {\n    base: _isString(input) ? input : '',\n    skipExpansion: false,\n    contextResolver: new ContextResolver(\n      {sharedCache: _resolvedContextCache})\n  });\n\n  // TODO: support toRDF custom map?\n  let expanded;\n  if(options.skipExpansion) {\n    expanded = input;\n  } else {\n    // expand input\n    expanded = await jsonld.expand(input, options);\n  }\n\n  // output RDF dataset\n  const dataset = _toRDF(expanded, options);\n  if(options.format) {\n    if(options.format === 'application/n-quads' ||\n      options.format === 'application/nquads') {\n      return NQuads.serialize(dataset);\n    }\n    throw new JsonLdError(\n      'Unknown output format.',\n      'jsonld.UnknownFormat', {format: options.format});\n  }\n\n  return dataset;\n};\n\n/**\n * **Experimental**\n *\n * Recursively flattens the nodes in the given JSON-LD input into a merged\n * map of node ID => node. All graphs will be merged into the default graph.\n *\n * @param input the JSON-LD input.\n * @param [options] the options to use:\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [issuer] a jsonld.IdentifierIssuer to use to label blank nodes.\n *          [documentLoader(url, options)] the document loader.\n *          [contextResolver] internal use only.\n *\n * @return a Promise that resolves to the merged node map.\n */\njsonld.createNodeMap = async function(input, options) {\n  if(arguments.length < 1) {\n    throw new TypeError('Could not create node map, too few arguments.');\n  }\n\n  // set default options\n  options = _setDefaults(options, {\n    base: _isString(input) ? input : '',\n    contextResolver: new ContextResolver(\n      {sharedCache: _resolvedContextCache})\n  });\n\n  // expand input\n  const expanded = await jsonld.expand(input, options);\n\n  return _createMergedNodeMap(expanded, options);\n};\n\n/**\n * **Experimental**\n *\n * Merges two or more JSON-LD documents into a single flattened document.\n *\n * @param docs the JSON-LD documents to merge together.\n * @param ctx the context to use to compact the merged result, or null.\n * @param [options] the options to use:\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [issuer] a jsonld.IdentifierIssuer to use to label blank nodes.\n *          [mergeNodes] true to merge properties for nodes with the same ID,\n *            false to ignore new properties for nodes with the same ID once\n *            the ID has been defined; note that this may not prevent merging\n *            new properties where a node is in the `object` position\n *            (default: true).\n *          [documentLoader(url, options)] the document loader.\n *          [contextResolver] internal use only.\n *\n * @return a Promise that resolves to the merged output.\n */\njsonld.merge = async function(docs, ctx, options) {\n  if(arguments.length < 1) {\n    throw new TypeError('Could not merge, too few arguments.');\n  }\n  if(!_isArray(docs)) {\n    throw new TypeError('Could not merge, \"docs\" must be an array.');\n  }\n\n  if(typeof ctx === 'function') {\n    ctx = null;\n  } else {\n    ctx = ctx || null;\n  }\n\n  // set default options\n  options = _setDefaults(options, {\n    contextResolver: new ContextResolver(\n      {sharedCache: _resolvedContextCache})\n  });\n\n  // expand all documents\n  const expanded = await Promise.all(docs.map(doc => {\n    const opts = {...options};\n    return jsonld.expand(doc, opts);\n  }));\n\n  let mergeNodes = true;\n  if('mergeNodes' in options) {\n    mergeNodes = options.mergeNodes;\n  }\n\n  const issuer = options.issuer || new IdentifierIssuer('_:b');\n  const graphs = {'@default': {}};\n\n  for(let i = 0; i < expanded.length; ++i) {\n    // uniquely relabel blank nodes\n    const doc = util.relabelBlankNodes(expanded[i], {\n      issuer: new IdentifierIssuer('_:b' + i + '-')\n    });\n\n    // add nodes to the shared node map graphs if merging nodes, to a\n    // separate graph set if not\n    const _graphs = (mergeNodes || i === 0) ? graphs : {'@default': {}};\n    _createNodeMap(doc, _graphs, '@default', issuer);\n\n    if(_graphs !== graphs) {\n      // merge document graphs but don't merge existing nodes\n      for(const graphName in _graphs) {\n        const _nodeMap = _graphs[graphName];\n        if(!(graphName in graphs)) {\n          graphs[graphName] = _nodeMap;\n          continue;\n        }\n        const nodeMap = graphs[graphName];\n        for(const key in _nodeMap) {\n          if(!(key in nodeMap)) {\n            nodeMap[key] = _nodeMap[key];\n          }\n        }\n      }\n    }\n  }\n\n  // add all non-default graphs to default graph\n  const defaultGraph = _mergeNodeMaps(graphs);\n\n  // produce flattened output\n  const flattened = [];\n  const keys = Object.keys(defaultGraph).sort();\n  for(let ki = 0; ki < keys.length; ++ki) {\n    const node = defaultGraph[keys[ki]];\n    // only add full subjects to top-level\n    if(!_isSubjectReference(node)) {\n      flattened.push(node);\n    }\n  }\n\n  if(ctx === null) {\n    return flattened;\n  }\n\n  // compact result (force @graph option to true, skip expansion)\n  options.graph = true;\n  options.skipExpansion = true;\n  const compacted = await jsonld.compact(flattened, ctx, options);\n\n  return compacted;\n};\n\n/**\n * The default document loader for external documents.\n *\n * @param url the URL to load.\n *\n * @return a promise that resolves to the remote document.\n */\nObject.defineProperty(jsonld, 'documentLoader', {\n  get: () => jsonld._documentLoader,\n  set: v => jsonld._documentLoader = v\n});\n// default document loader not implemented\njsonld.documentLoader = async url => {\n  throw new JsonLdError(\n    'Could not retrieve a JSON-LD document from the URL. URL ' +\n    'dereferencing not implemented.', 'jsonld.LoadDocumentError',\n    {code: 'loading document failed', url});\n};\n\n/**\n * Gets a remote JSON-LD document using the default document loader or\n * one given in the passed options.\n *\n * @param url the URL to fetch.\n * @param [options] the options to use:\n *          [documentLoader] the document loader to use.\n *\n * @return a Promise that resolves to the retrieved remote document.\n */\njsonld.get = async function(url, options) {\n  let load;\n  if(typeof options.documentLoader === 'function') {\n    load = options.documentLoader;\n  } else {\n    load = jsonld.documentLoader;\n  }\n\n  const remoteDoc = await load(url);\n\n  try {\n    if(!remoteDoc.document) {\n      throw new JsonLdError(\n        'No remote document found at the given URL.',\n        'jsonld.NullRemoteDocument');\n    }\n    if(_isString(remoteDoc.document)) {\n      remoteDoc.document = JSON.parse(remoteDoc.document);\n    }\n  } catch(e) {\n    throw new JsonLdError(\n      'Could not retrieve a JSON-LD document from the URL.',\n      'jsonld.LoadDocumentError', {\n        code: 'loading document failed',\n        cause: e,\n        remoteDoc\n      });\n  }\n\n  return remoteDoc;\n};\n\n/**\n * Processes a local context, resolving any URLs as necessary, and returns a\n * new active context.\n *\n * @param activeCtx the current active context.\n * @param localCtx the local context to process.\n * @param [options] the options to use:\n *          [documentLoader(url, options)] the document loader.\n *          [contextResolver] internal use only.\n *\n * @return a Promise that resolves to the new active context.\n */\njsonld.processContext = async function(\n  activeCtx, localCtx, options) {\n  // set default options\n  options = _setDefaults(options, {\n    base: '',\n    contextResolver: new ContextResolver(\n      {sharedCache: _resolvedContextCache})\n  });\n\n  // return initial context early for null context\n  if(localCtx === null) {\n    return _getInitialContext(options);\n  }\n\n  // get URLs in localCtx\n  localCtx = util.clone(localCtx);\n  if(!(_isObject(localCtx) && '@context' in localCtx)) {\n    localCtx = {'@context': localCtx};\n  }\n\n  return _processContext({activeCtx, localCtx, options});\n};\n\n// backwards compatibility\njsonld.getContextValue = require('./context').getContextValue;\n\n/**\n * Document loaders.\n */\njsonld.documentLoaders = {};\n\n/**\n * Assigns the default document loader for external document URLs to a built-in\n * default. Supported types currently include: 'xhr' and 'node'.\n *\n * @param type the type to set.\n * @param [params] the parameters required to use the document loader.\n */\njsonld.useDocumentLoader = function(type) {\n  if(!(type in jsonld.documentLoaders)) {\n    throw new JsonLdError(\n      'Unknown document loader type: \"' + type + '\"',\n      'jsonld.UnknownDocumentLoader',\n      {type});\n  }\n\n  // set document loader\n  jsonld.documentLoader = jsonld.documentLoaders[type].apply(\n    jsonld, Array.prototype.slice.call(arguments, 1));\n};\n\n/**\n * Registers an RDF dataset parser by content-type, for use with\n * jsonld.fromRDF. An RDF dataset parser will always be given one parameter,\n * a string of input. An RDF dataset parser can be synchronous or\n * asynchronous (by returning a promise).\n *\n * @param contentType the content-type for the parser.\n * @param parser(input) the parser function (takes a string as a parameter\n *          and either returns an RDF dataset or a Promise that resolves to one.\n */\njsonld.registerRDFParser = function(contentType, parser) {\n  _rdfParsers[contentType] = parser;\n};\n\n/**\n * Unregisters an RDF dataset parser by content-type.\n *\n * @param contentType the content-type for the parser.\n */\njsonld.unregisterRDFParser = function(contentType) {\n  delete _rdfParsers[contentType];\n};\n\n// register the N-Quads RDF parser\njsonld.registerRDFParser('application/n-quads', NQuads.parse);\njsonld.registerRDFParser('application/nquads', NQuads.parse);\n\n/* URL API */\njsonld.url = require('./url');\n\n/* Utility API */\njsonld.util = util;\n// backwards compatibility\nObject.assign(jsonld, util);\n\n// reexpose API as jsonld.promises for backwards compatability\njsonld.promises = jsonld;\n\n// backwards compatibility\njsonld.RequestQueue = require('./RequestQueue');\n\n/* WebIDL API */\njsonld.JsonLdProcessor = require('./JsonLdProcessor')(jsonld);\n\nplatform.setupGlobals(jsonld);\nplatform.setupDocumentLoaders(jsonld);\n\nfunction _setDefaults(options, {\n  documentLoader = jsonld.documentLoader,\n  ...defaults\n}) {\n  return Object.assign({}, {documentLoader}, defaults, options);\n}\n\n// end of jsonld API `wrapper` factory\nreturn jsonld;\n};\n\n// external APIs:\n\n// used to generate a new jsonld API instance\nconst factory = function() {\n  return wrapper(function() {\n    return factory();\n  });\n};\n\n// wrap the main jsonld API instance\nwrapper(factory);\n// export API\nmodule.exports = factory;\n","var global = typeof self !== 'undefined' ? self : this;\nvar __self__ = (function () {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = global.DOMException\n}\nF.prototype = global;\nreturn new F();\n})();\n(function(self) {\n\nvar irrelevant = (function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n}({}));\n})(__self__);\n__self__.fetch.ponyfill = true;\n// Remove \"polyfill\" property added by whatwg-fetch\ndelete __self__.fetch.polyfill;\n// Choose between native implementation (global) or custom implementation (__self__)\n// var ctx = global.fetch ? global : __self__;\nvar ctx = __self__; // this line disable service worker support temporarily\nexports = ctx.fetch // To enable: import fetch from 'cross-fetch'\nexports.default = ctx.fetch // For TypeScript consumers without esModuleInterop.\nexports.fetch = ctx.fetch // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = ctx.Headers\nexports.Request = ctx.Request\nexports.Response = ctx.Response\nmodule.exports = exports\n","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)?\\/[^/]+(?:\\?.*)?$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var getBundleURL = require('./bundle-url').getBundleURL;\n\nfunction loadBundlesLazy(bundles) {\n  if (!Array.isArray(bundles)) {\n    bundles = [bundles]\n  }\n\n  var id = bundles[bundles.length - 1];\n\n  try {\n    return Promise.resolve(require(id));\n  } catch (err) {\n    if (err.code === 'MODULE_NOT_FOUND') {\n      return new LazyPromise(function (resolve, reject) {\n        loadBundles(bundles.slice(0, -1))\n          .then(function () {\n            return require(id);\n          })\n          .then(resolve, reject);\n      });\n    }\n\n    throw err;\n  }\n}\n\nfunction loadBundles(bundles) {\n  return Promise.all(bundles.map(loadBundle));\n}\n\nvar bundleLoaders = {};\nfunction registerBundleLoader(type, loader) {\n  bundleLoaders[type] = loader;\n}\n\nmodule.exports = exports = loadBundlesLazy;\nexports.load = loadBundles;\nexports.register = registerBundleLoader;\n\nvar bundles = {};\nfunction loadBundle(bundle) {\n  var id;\n  if (Array.isArray(bundle)) {\n    id = bundle[1];\n    bundle = bundle[0];\n  }\n\n  if (bundles[bundle]) {\n    return bundles[bundle];\n  }\n\n  var type = (bundle.substring(bundle.lastIndexOf('.') + 1, bundle.length) || bundle).toLowerCase();\n  var bundleLoader = bundleLoaders[type];\n  if (bundleLoader) {\n    return bundles[bundle] = bundleLoader(getBundleURL() + bundle)\n      .then(function (resolved) {\n        if (resolved) {\n          module.bundle.register(id, resolved);\n        }\n\n        return resolved;\n      }).catch(function(e) {\n        delete bundles[bundle];\n        \n        throw e;\n      });\n  }\n}\n\nfunction LazyPromise(executor) {\n  this.executor = executor;\n  this.promise = null;\n}\n\nLazyPromise.prototype.then = function (onSuccess, onError) {\n  if (this.promise === null) this.promise = new Promise(this.executor)\n  return this.promise.then(onSuccess, onError)\n};\n\nLazyPromise.prototype.catch = function (onError) {\n  if (this.promise === null) this.promise = new Promise(this.executor)\n  return this.promise.catch(onError)\n};\n","import LinkHeader from 'http-link-header';\nimport RdfJsDataFactory from '@rdfjs/data-model';\nimport rdfJsDatasetModule from '@rdfjs/dataset';\nimport * as jsonld from 'jsonld';\nimport * as crossFetch from 'cross-fetch';\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Verify whether a given SolidDataset includes metadata about where it was sent to.\r\n *\r\n * @param dataset A [[SolidDataset]] that may have metadata attached about the Resource it was retrieved from.\r\n * @returns True if `dataset` includes metadata about the Resource it was sent to, false if not.\r\n * @since 0.2.0\r\n */\r\nfunction hasResourceInfo(resource) {\r\n    const potentialResourceInfo = resource;\r\n    return (typeof potentialResourceInfo === \"object\" &&\r\n        typeof potentialResourceInfo.internal_resourceInfo === \"object\");\r\n}\r\n/**\r\n * Verify whether a given SolidDataset includes metadata about where it was retrieved from.\r\n *\r\n * @param dataset A [[SolidDataset]] that may have metadata attached about the Resource it was retrieved from.\r\n * @returns True if `dataset` includes metadata about the Resource it was retrieved from, false if not.\r\n * @since 0.6.0\r\n */\r\nfunction hasServerResourceInfo(resource) {\r\n    const potentialResourceInfo = resource;\r\n    return (typeof potentialResourceInfo === \"object\" &&\r\n        typeof potentialResourceInfo.internal_resourceInfo === \"object\" &&\r\n        typeof potentialResourceInfo.internal_resourceInfo.linkedResources ===\r\n            \"object\");\r\n}\r\n/** @internal */\r\nfunction hasChangelog(dataset) {\r\n    const potentialChangeLog = dataset;\r\n    return (typeof potentialChangeLog.internal_changeLog === \"object\" &&\r\n        Array.isArray(potentialChangeLog.internal_changeLog.additions) &&\r\n        Array.isArray(potentialChangeLog.internal_changeLog.deletions));\r\n}\r\n/**\r\n * Errors thrown by solid-client extend this class, and can thereby be distinguished from errors\r\n * thrown in lower-level libraries.\r\n * @since 1.2.0\r\n */\r\nclass SolidClientError extends Error {\r\n}\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/** @internal */\r\nfunction internal_toIriString(iri) {\r\n    return typeof iri === \"string\" ? iri : iri.value;\r\n}\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * @ignore Internal fallback for when no fetcher is provided; not to be used downstream.\r\n */\r\nconst fetch = async (resource, init) => {\r\n    /* istanbul ignore if: `require` is always defined in the unit test environment */\r\n    if (typeof window === \"object\" && typeof require !== \"function\") {\r\n        return await window.fetch(resource, init);\r\n    }\r\n    /* istanbul ignore if: `require` is always defined in the unit test environment */\r\n    if (typeof require !== \"function\") {\r\n        // When using Node.js with ES Modules, require is not defined:\r\n        const crossFetchModule = await import('cross-fetch');\r\n        const fetch = crossFetchModule.default;\r\n        return fetch(resource, init);\r\n    }\r\n    // Implementation note: it's up to the client application to resolve these module names to the\r\n    // respective npm packages. At least one commonly used tool (Webpack) is only able to do that if\r\n    // the module names are literal strings.\r\n    // Additionally, Webpack throws a warning in a way that halts compilation for at least Next.js\r\n    // when using native Javascript dynamic imports (`import()`), whereas `require()` just logs a\r\n    // warning. Since the use of package names instead of file names requires a bundles anyway, this\r\n    // should not have any practical consequences. For more background, see:\r\n    // https://github.com/webpack/webpack/issues/7713\r\n    let fetch;\r\n    // Unfortunately solid-client-authn-browser does not support a default session yet.\r\n    // Once it does, we can auto-detect if it is available and use it as follows:\r\n    // try {\r\n    //   fetch = require(\"solid-client-authn-browser\").fetch;\r\n    // } catch (e) {\r\n    // When enabling the above, make sure to add a similar try {...} catch block using `import`\r\n    // statements in the elseif above.\r\n    // eslint-disable-next-line prefer-const\r\n    fetch = require(\"cross-fetch\");\r\n    // }\r\n    return await fetch(resource, init);\r\n};\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * @internal\r\n */\r\nfunction internal_parseResourceInfo(response) {\r\n    var _a, _b, _c;\r\n    const contentTypeParts = (_b = (_a = response.headers.get(\"Content-Type\")) === null || _a === void 0 ? void 0 : _a.split(\";\")) !== null && _b !== void 0 ? _b : [];\r\n    // If the server offers a Turtle or JSON-LD serialisation on its own accord,\r\n    // that tells us whether it is RDF data that the server can understand\r\n    // (and hence can be updated with a PATCH request with SPARQL INSERT and DELETE statements),\r\n    // in which case our SolidDataset-related functions should handle it.\r\n    // For more context, see https://github.com/inrupt/solid-client-js/pull/214.\r\n    const isSolidDataset = contentTypeParts.length > 0 &&\r\n        [\"text/turtle\", \"application/ld+json\"].includes(contentTypeParts[0]);\r\n    const resourceInfo = {\r\n        sourceIri: response.url,\r\n        isRawData: !isSolidDataset,\r\n        contentType: (_c = response.headers.get(\"Content-Type\")) !== null && _c !== void 0 ? _c : undefined,\r\n        linkedResources: {},\r\n    };\r\n    const linkHeader = response.headers.get(\"Link\");\r\n    if (linkHeader) {\r\n        const parsedLinks = LinkHeader.parse(linkHeader);\r\n        // Set ACL link\r\n        const aclLinks = parsedLinks.get(\"rel\", \"acl\");\r\n        if (aclLinks.length === 1) {\r\n            resourceInfo.aclUrl = new URL(aclLinks[0].uri, resourceInfo.sourceIri).href;\r\n        }\r\n        // Parse all link headers and expose them in a standard way\r\n        // (this can replace the parsing of the ACL link above):\r\n        resourceInfo.linkedResources = parsedLinks.refs.reduce((rels, ref) => {\r\n            var _a;\r\n            var _b;\r\n            (_a = rels[_b = ref.rel]) !== null && _a !== void 0 ? _a : (rels[_b] = []);\r\n            rels[ref.rel].push(new URL(ref.uri, resourceInfo.sourceIri).href);\r\n            return rels;\r\n        }, resourceInfo.linkedResources);\r\n    }\r\n    const wacAllowHeader = response.headers.get(\"WAC-Allow\");\r\n    if (wacAllowHeader) {\r\n        resourceInfo.permissions = parseWacAllowHeader(wacAllowHeader);\r\n    }\r\n    return resourceInfo;\r\n}\r\n/**\r\n * Parse a WAC-Allow header into user and public access booleans.\r\n *\r\n * @param wacAllowHeader A WAC-Allow header in the format `user=\"read append write control\",public=\"read\"`\r\n * @see https://github.com/solid/solid-spec/blob/cb1373a369398d561b909009bd0e5a8c3fec953b/api-rest.md#wac-allow-headers\r\n */\r\nfunction parseWacAllowHeader(wacAllowHeader) {\r\n    function parsePermissionStatement(permissionStatement) {\r\n        const permissions = permissionStatement.split(\" \");\r\n        const writePermission = permissions.includes(\"write\");\r\n        return writePermission\r\n            ? {\r\n                read: permissions.includes(\"read\"),\r\n                append: true,\r\n                write: true,\r\n                control: permissions.includes(\"control\"),\r\n            }\r\n            : {\r\n                read: permissions.includes(\"read\"),\r\n                append: permissions.includes(\"append\"),\r\n                write: false,\r\n                control: permissions.includes(\"control\"),\r\n            };\r\n    }\r\n    function getStatementFor(header, scope) {\r\n        const relevantEntries = header\r\n            .split(\",\")\r\n            .map((rawEntry) => rawEntry.split(\"=\"))\r\n            .filter((parts) => parts.length === 2 && parts[0].trim() === scope);\r\n        // There should only be one statement with the given scope:\r\n        if (relevantEntries.length !== 1) {\r\n            return \"\";\r\n        }\r\n        const relevantStatement = relevantEntries[0][1].trim();\r\n        // The given statement should be wrapped in double quotes to be valid:\r\n        if (relevantStatement.charAt(0) !== '\"' ||\r\n            relevantStatement.charAt(relevantStatement.length - 1) !== '\"') {\r\n            return \"\";\r\n        }\r\n        // Return the statment without the wrapping quotes, e.g.: read append write control\r\n        return relevantStatement.substring(1, relevantStatement.length - 1);\r\n    }\r\n    return {\r\n        user: parsePermissionStatement(getStatementFor(wacAllowHeader, \"user\")),\r\n        public: parsePermissionStatement(getStatementFor(wacAllowHeader, \"public\")),\r\n    };\r\n}\r\n/** @hidden Used to instantiate a separate instance from input parameters */\r\nfunction internal_cloneResource(resource) {\r\n    let clonedResource;\r\n    if (typeof resource.slice === \"function\") {\r\n        // If given Resource is a File:\r\n        clonedResource = Object.assign(resource.slice(), Object.assign({}, resource));\r\n    }\r\n    else {\r\n        // If it is just a plain object containing metadata:\r\n        clonedResource = Object.assign({}, resource);\r\n    }\r\n    return clonedResource;\r\n}\r\n/** @internal */\r\nfunction internal_isUnsuccessfulResponse(response) {\r\n    return !response.ok;\r\n}\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n// TODO: These should be replaced by auto-generated constants,\r\n//       if we can ensure that unused constants will be excluded from bundles.\r\n/** @hidden */\r\nconst acl = {\r\n    Authorization: \"http://www.w3.org/ns/auth/acl#Authorization\",\r\n    AuthenticatedAgent: \"http://www.w3.org/ns/auth/acl#AuthenticatedAgent\",\r\n    accessTo: \"http://www.w3.org/ns/auth/acl#accessTo\",\r\n    agent: \"http://www.w3.org/ns/auth/acl#agent\",\r\n    agentGroup: \"http://www.w3.org/ns/auth/acl#agentGroup\",\r\n    agentClass: \"http://www.w3.org/ns/auth/acl#agentClass\",\r\n    default: \"http://www.w3.org/ns/auth/acl#default\",\r\n    defaultForNew: \"http://www.w3.org/ns/auth/acl#defaultForNew\",\r\n    mode: \"http://www.w3.org/ns/auth/acl#mode\",\r\n    origin: \"http://www.w3.org/ns/auth/acl#origin\",\r\n};\r\n/** @hidden */\r\nconst rdf = {\r\n    type: \"http://www.w3.org/1999/02/22-rdf-syntax-ns#type\",\r\n};\r\n/** @hidden */\r\nconst ldp = {\r\n    BasicContainer: \"http://www.w3.org/ns/ldp#BasicContainer\",\r\n    Container: \"http://www.w3.org/ns/ldp#Container\",\r\n    Resource: \"http://www.w3.org/ns/ldp#Resource\",\r\n    contains: \"http://www.w3.org/ns/ldp#contains\",\r\n};\r\n/** @hidden */\r\nconst foaf = {\r\n    Agent: \"http://xmlns.com/foaf/0.1/Agent\",\r\n};\r\n/** @hidden */\r\nconst acp = {\r\n    AccessControlResource: \"http://www.w3.org/ns/solid/acp#AccessControlResource\",\r\n    Policy: \"http://www.w3.org/ns/solid/acp#Policy\",\r\n    AccessControl: \"http://www.w3.org/ns/solid/acp#AccessControl\",\r\n    Read: \"http://www.w3.org/ns/solid/acp#Read\",\r\n    Append: \"http://www.w3.org/ns/solid/acp#Append\",\r\n    Write: \"http://www.w3.org/ns/solid/acp#Write\",\r\n    /** @deprecated Removed from the ACP proposal, to be replaced by Matchers. */\r\n    Rule: \"http://www.w3.org/ns/solid/acp#Rule\",\r\n    Matcher: \"http://www.w3.org/ns/solid/acp#Matcher\",\r\n    accessControl: \"http://www.w3.org/ns/solid/acp#accessControl\",\r\n    apply: \"http://www.w3.org/ns/solid/acp#apply\",\r\n    applyMembers: \"http://www.w3.org/ns/solid/acp#applyMembers\",\r\n    allow: \"http://www.w3.org/ns/solid/acp#allow\",\r\n    deny: \"http://www.w3.org/ns/solid/acp#deny\",\r\n    allOf: \"http://www.w3.org/ns/solid/acp#allOf\",\r\n    anyOf: \"http://www.w3.org/ns/solid/acp#anyOf\",\r\n    noneOf: \"http://www.w3.org/ns/solid/acp#noneOf\",\r\n    access: \"http://www.w3.org/ns/solid/acp#access\",\r\n    accessMembers: \"http://www.w3.org/ns/solid/acp#accessMembers\",\r\n    agent: \"http://www.w3.org/ns/solid/acp#agent\",\r\n    group: \"http://www.w3.org/ns/solid/acp#group\",\r\n    client: \"http://www.w3.org/ns/solid/acp#client\",\r\n    PublicAgent: \"http://www.w3.org/ns/solid/acp#PublicAgent\",\r\n    AuthenticatedAgent: \"http://www.w3.org/ns/solid/acp#AuthenticatedAgent\",\r\n    CreatorAgent: \"http://www.w3.org/ns/solid/acp#CreatorAgent\",\r\n};\r\n/** @hidden */\r\nconst solid = {\r\n    PublicOidcClient: \"http://www.w3.org/ns/solid/terms#PublicOidcClient\",\r\n};\r\n/** @hidden */\r\nconst security = {\r\n    publicKey: \"https://w3id.org/security#publicKey\",\r\n};\r\n/** @hidden */\r\nconst pim = {\r\n    storage: \"http://www.w3.org/ns/pim/space#storage\",\r\n};\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/** @ignore For internal use only. */\r\nconst internal_defaultFetchOptions = {\r\n    fetch: fetch,\r\n};\r\n/**\r\n * Retrieve the information about a resource (e.g. access permissions) without\r\n * fetching the resource itself.\r\n *\r\n * @param url URL to fetch Resource metadata from.\r\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters).\r\n * @returns Promise resolving to the metadata describing the given Resource, or rejecting if fetching it failed.\r\n * @since 0.4.0\r\n */\r\nasync function getResourceInfo(url, options = internal_defaultFetchOptions) {\r\n    const config = Object.assign(Object.assign({}, internal_defaultFetchOptions), options);\r\n    const response = await config.fetch(url, { method: \"HEAD\" });\r\n    return responseToResourceInfo(response);\r\n}\r\n/**\r\n * Parse Solid metadata from a Response obtained by fetching a Resource from a Solid Pod,\r\n *\r\n * @param response A Fetch API Response. See {@link https://developer.mozilla.org/en-US/docs/Web/API/Response MDN}.\r\n * @returns Resource metadata readable by functions such as [[getSourceUrl]].\r\n * @hidden This interface is not exposed yet until we've tried it out in practice.\r\n */\r\nfunction responseToResourceInfo(response) {\r\n    if (internal_isUnsuccessfulResponse(response)) {\r\n        throw new FetchError(`Fetching the metadata of the Resource at [${response.url}] failed: [${response.status}] [${response.statusText}].`, response);\r\n    }\r\n    const resourceInfo = internal_parseResourceInfo(response);\r\n    return { internal_resourceInfo: resourceInfo };\r\n}\r\n/**\r\n * @param resource Resource for which to check whether it is a Container.\r\n * @returns Whether `resource` is a Container.\r\n */\r\nfunction isContainer(resource) {\r\n    const containerUrl = hasResourceInfo(resource)\r\n        ? getSourceUrl(resource)\r\n        : internal_toIriString(resource);\r\n    return containerUrl.endsWith(\"/\");\r\n}\r\n/**\r\n * This function will tell you whether a given Resource contains raw data, or a SolidDataset.\r\n *\r\n * @param resource Resource for which to check whether it contains raw data.\r\n * @return Whether `resource` contains raw data.\r\n */\r\nfunction isRawData(resource) {\r\n    return resource.internal_resourceInfo.isRawData;\r\n}\r\n/**\r\n * @param resource Resource for which to determine the Content Type.\r\n * @returns The Content Type, if known, or null if not known.\r\n */\r\nfunction getContentType$1(resource) {\r\n    var _a;\r\n    return (_a = resource.internal_resourceInfo.contentType) !== null && _a !== void 0 ? _a : null;\r\n}\r\nfunction getSourceUrl(resource) {\r\n    if (hasResourceInfo(resource)) {\r\n        return resource.internal_resourceInfo.sourceIri;\r\n    }\r\n    return null;\r\n}\r\n/** @hidden Alias of getSourceUrl for those who prefer to use IRI terminology. */\r\nconst getSourceIri = getSourceUrl;\r\n/**\r\n * Given a Resource that exposes information about the owner of the Pod it is in, returns the WebID of that owner.\r\n *\r\n * Data about the owner of the Pod is exposed when the following conditions hold:\r\n * - The Pod server supports exposing the Pod owner\r\n * - The current user is allowed to see who the Pod owner is.\r\n *\r\n * If one or more of those conditions are false, this function will return `null`.\r\n *\r\n * @param resource A Resource that contains information about the owner of the Pod it is in.\r\n * @returns The WebID of the owner of the Pod the Resource is in, if provided, or `null` if not.\r\n * @since 0.6.0\r\n */\r\nfunction getPodOwner(resource) {\r\n    var _a;\r\n    if (!hasServerResourceInfo(resource)) {\r\n        return null;\r\n    }\r\n    const podOwners = (_a = getLinkedResourceUrlAll(resource)[\"http://www.w3.org/ns/solid/terms#podOwner\"]) !== null && _a !== void 0 ? _a : [];\r\n    return podOwners.length === 1 ? podOwners[0] : null;\r\n}\r\n/**\r\n * Given a WebID and a Resource that exposes information about the owner of the Pod it is in, returns whether the given WebID is the owner of the Pod.\r\n *\r\n * Data about the owner of the Pod is exposed when the following conditions hold:\r\n * - The Pod server supports exposing the Pod owner\r\n * - The current user is allowed to see who the Pod owner is.\r\n *\r\n * If one or more of those conditions are false, this function will return `null`.\r\n *\r\n * @param webId The WebID of which to check whether it is the Pod Owner's.\r\n * @param resource A Resource that contains information about the owner of the Pod it is in.\r\n * @returns Whether the given WebID is the Pod Owner's, if the Pod Owner is exposed, or `null` if it is not exposed.\r\n * @since 0.6.0\r\n */\r\nfunction isPodOwner(webId, resource) {\r\n    const podOwner = getPodOwner(resource);\r\n    if (typeof podOwner !== \"string\") {\r\n        return null;\r\n    }\r\n    return podOwner === webId;\r\n}\r\n/**\r\n * Get the URLs of Resources linked to the given Resource.\r\n *\r\n * Solid servers can link Resources to each other. For example, in servers\r\n * implementing Web Access Control, Resources can have an Access Control List\r\n * Resource linked to it via the `acl` relation.\r\n *\r\n * @param resource A Resource fetched from a Solid Pod.\r\n * @returns The URLs of Resources linked to the given Resource, indexed by the key that links them.\r\n * @since 1.7.0\r\n */\r\nfunction getLinkedResourceUrlAll(resource) {\r\n    return resource.internal_resourceInfo.linkedResources;\r\n}\r\n/**\r\n * Get what access the current user has to the given Resource.\r\n *\r\n * This function can tell you what access the current user has for the given\r\n * Resource, allowing you to e.g. determine that changes to it will be rejected\r\n * before attempting to do so.\r\n * Additionally, for servers adhering to the Web Access Control specification,\r\n * it will tell you what access unauthenticated users have to the given Resource.\r\n *\r\n * @param resource A Resource fetched from a Solid Pod.\r\n * @returns What access the current user and, if supported by the server, unauthenticated users have to the given Resource.\r\n * @since 1.7.0\r\n */\r\nfunction getEffectiveAccess(resource) {\r\n    var _a, _b, _c, _d, _e, _f, _g;\r\n    if (typeof resource.internal_resourceInfo.permissions === \"object\") {\r\n        return {\r\n            user: {\r\n                read: resource.internal_resourceInfo.permissions.user.read,\r\n                append: resource.internal_resourceInfo.permissions.user.append,\r\n                write: resource.internal_resourceInfo.permissions.user.write,\r\n            },\r\n            public: {\r\n                read: resource.internal_resourceInfo.permissions.public.read,\r\n                append: resource.internal_resourceInfo.permissions.public.append,\r\n                write: resource.internal_resourceInfo.permissions.public.write,\r\n            },\r\n        };\r\n    }\r\n    const linkedResourceUrls = getLinkedResourceUrlAll(resource);\r\n    return {\r\n        user: {\r\n            read: (_b = (_a = linkedResourceUrls[acp.allow]) === null || _a === void 0 ? void 0 : _a.includes(acp.Read)) !== null && _b !== void 0 ? _b : false,\r\n            append: (_e = (((_c = linkedResourceUrls[acp.allow]) === null || _c === void 0 ? void 0 : _c.includes(acp.Append)) ||\r\n                ((_d = linkedResourceUrls[acp.allow]) === null || _d === void 0 ? void 0 : _d.includes(acp.Write)))) !== null && _e !== void 0 ? _e : false,\r\n            write: (_g = (_f = linkedResourceUrls[acp.allow]) === null || _f === void 0 ? void 0 : _f.includes(acp.Write)) !== null && _g !== void 0 ? _g : false,\r\n        },\r\n    };\r\n}\r\n/**\r\n * Extends the regular JavaScript error object with access to the status code and status message.\r\n * @since 1.2.0\r\n */\r\nclass FetchError extends SolidClientError {\r\n    constructor(message, errorResponse) {\r\n        super(message);\r\n        this.response = errorResponse;\r\n    }\r\n    get statusCode() {\r\n        return this.response.status;\r\n    }\r\n    get statusText() {\r\n        return this.response.statusText;\r\n    }\r\n}\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nconst defaultGetFileOptions = {\r\n    fetch: fetch,\r\n};\r\nconst RESERVED_HEADERS = [\"Slug\", \"If-None-Match\", \"Content-Type\"];\r\n/**\r\n * Some of the headers must be set by the library, rather than directly.\r\n */\r\nfunction containsReserved(header) {\r\n    return RESERVED_HEADERS.some((reserved) => header[reserved] !== undefined);\r\n}\r\n/**\r\n * ```{note} This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Retrieves a file from a URL and returns the file as a blob.\r\n *\r\n * For example:\r\n *\r\n * ```\r\n * const fileBlob = await getFile(\"https://pod.example.com/some/file\", { fetch: fetch });\r\n * ```\r\n *\r\n * For additional examples, see\r\n * [Read/Write Files](https://docs.inrupt.com/developer-tools/javascript/client-libraries/tutorial/read-write-files/#retrieve-a-file).\r\n *\r\n * @param url The URL of the file to return\r\n * @param options Fetching options: a custom fetcher and/or headers.\r\n * @returns The file as a blob.\r\n */\r\nasync function getFile(input, options = defaultGetFileOptions) {\r\n    const config = Object.assign(Object.assign({}, defaultGetFileOptions), options);\r\n    const url = internal_toIriString(input);\r\n    const response = await config.fetch(url, config.init);\r\n    if (internal_isUnsuccessfulResponse(response)) {\r\n        throw new FetchError(`Fetching the File failed: [${response.status}] [${response.statusText}].`, response);\r\n    }\r\n    const resourceInfo = internal_parseResourceInfo(response);\r\n    const data = await response.blob();\r\n    const fileWithResourceInfo = Object.assign(data, {\r\n        internal_resourceInfo: resourceInfo,\r\n    });\r\n    return fileWithResourceInfo;\r\n}\r\n/**\r\n * ```{note} This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n * Deletes a file at a given URL.\r\n *\r\n * For example:\r\n *\r\n * ```\r\n * await deleteFile( \"https://pod.example.com/some/file\", { fetch: fetch });\r\n * ```\r\n *\r\n * For additional examples, see\r\n * [Read/Write Files](https://docs.inrupt.com/developer-tools/javascript/client-libraries/tutorial/read-write-files/#delete-a-file).\r\n *\r\n * @param file The URL of the file to delete\r\n */\r\nasync function deleteFile(file, options = defaultGetFileOptions) {\r\n    const config = Object.assign(Object.assign({}, defaultGetFileOptions), options);\r\n    const url = hasResourceInfo(file)\r\n        ? internal_toIriString(getSourceIri(file))\r\n        : internal_toIriString(file);\r\n    const response = await config.fetch(url, Object.assign(Object.assign({}, config.init), { method: \"DELETE\" }));\r\n    if (internal_isUnsuccessfulResponse(response)) {\r\n        throw new FetchError(`Deleting the file at [${url}] failed: [${response.status}] [${response.statusText}].`, response);\r\n    }\r\n}\r\n/**\r\n * ```{note} This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Saves a file in an existing folder/Container associated with the given URL.\r\n *\r\n * For example:\r\n *\r\n * ```\r\n * const savedFile = await saveFileInContainer(\r\n *   \"https://pod.example.com/some/existing/container/\",\r\n *   new Blob([\"This is a plain piece of text\"], { type: \"plain/text\" }),\r\n *   { slug: \"suggestedFileName.txt\", contentType: \"text/plain\", fetch: fetch }\r\n * );\r\n * ```\r\n *\r\n * For additional example, see\r\n * [Read/Write Files](https://docs.inrupt.com/developer-tools/javascript/client-libraries/tutorial/read-write-files/#save-a-file-into-an-existing-container).\r\n *\r\n * In the `options` parameter,\r\n *\r\n * - You can suggest a file name in the `slug` field.  However, the Solid\r\n *   Server may or may not use the suggested `slug` as the file name.\r\n *\r\n * - *Recommended:* You can specify the [media type](https://developer.mozilla.org/en-US/docs/Glossary/MIME_type)\r\n *   of the file in the `contentType`.  If unspecified, the function uses the default type of\r\n *   `application/octet-stream`, indicating a binary data file.\r\n *\r\n * The function saves a file into an *existing* Container. If the\r\n * Container does not exist, either:\r\n * - Create the Container first using [[createContainerAt]], and then\r\n *   use the function, or\r\n * - Use [[overwriteFile]] to save the file. [[overwriteFile]] creates\r\n *   the Containers in the saved file path as needed.\r\n *\r\n * Users who only have `Append` but not `Write` access to a Container\r\n * can use [[saveFileInContainer]] to save new files to the Container.\r\n * That is, [[saveFileInContainer]] is useful in situations where users\r\n * can add new files to a Container but not change existing files in\r\n * the Container, such as users given access to send notifications to\r\n * another's Pod but not to view or delete existing notifications in that Pod.\r\n *\r\n * Users with `Write` access to the given folder/Container may prefer to\r\n * use [[overwriteFile]].\r\n *\r\n * @param folderUrl The URL of an existing folder where the new file is saved.\r\n * @param file The file to be written.\r\n * @param options Additional parameters for file creation (e.g. a slug).\r\n * @returns A Promise that resolves to the saved file, if available, or `null` if the current user does not have Read access to the newly-saved file. It rejects if saving fails.\r\n */\r\nasync function saveFileInContainer(folderUrl, file, options = defaultGetFileOptions) {\r\n    const folderUrlString = internal_toIriString(folderUrl);\r\n    const response = await writeFile(folderUrlString, file, \"POST\", options);\r\n    if (internal_isUnsuccessfulResponse(response)) {\r\n        throw new FetchError(`Saving the file in [${folderUrl}] failed: [${response.status}] [${response.statusText}].`, response);\r\n    }\r\n    const locationHeader = response.headers.get(\"Location\");\r\n    if (locationHeader === null) {\r\n        throw new Error(\"Could not determine the location of the newly saved file.\");\r\n    }\r\n    const fileIri = new URL(locationHeader, new URL(folderUrlString).origin).href;\r\n    const blobClone = internal_cloneResource(file);\r\n    const resourceInfo = {\r\n        internal_resourceInfo: {\r\n            isRawData: true,\r\n            sourceIri: fileIri,\r\n            contentType: getContentType(file, options.contentType),\r\n        },\r\n    };\r\n    return Object.assign(blobClone, resourceInfo);\r\n}\r\n/**\r\n * ```{note} This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Saves a file at a given URL. If a file already exists at the URL,\r\n * the function overwrites the existing file.\r\n *\r\n * For example:\r\n *\r\n * ```\r\n * const savedFile = await overwriteFile(\r\n *   \"https://pod.example.com/some/container/myFile.txt\",\r\n *   new Blob([\"This is a plain piece of text\"], { type: \"plain/text\" }),\r\n *   { contentType: \"text/plain\", fetch: fetch }\r\n * );\r\n * ```\r\n *\r\n * For additional example, see\r\n * [Read/Write Files](https://docs.inrupt.com/developer-tools/javascript/client-libraries/tutorial/read-write-files/#write-a-file-to-a-specific-url).\r\n *\r\n * *Recommended:* In the `options` parameter, you can specify the\r\n * [media type](https://developer.mozilla.org/en-US/docs/Glossary/MIME_type)\r\n * of the file in the `contentType`.  If unspecified, the function uses the default type of\r\n * `application/octet-stream`, indicating a binary data file.\r\n *\r\n * When saving a file with [[overwriteFile]], the Solid server creates any\r\n * intermediary Containers as needed; i.e., the Containers do not\r\n * need to be created in advance. For example, when saving a file to the target URL of\r\n * https://example.pod/container/resource, if https://example.pod/container/ does not exist,\r\n * the container is created as part of the save.\r\n *\r\n * @param fileUrl The URL where the file is saved.\r\n * @param file The file to be written.\r\n * @param options Additional parameters for file creation (e.g., media type).\r\n */\r\nasync function overwriteFile(fileUrl, file, options = defaultGetFileOptions) {\r\n    const fileUrlString = internal_toIriString(fileUrl);\r\n    const response = await writeFile(fileUrlString, file, \"PUT\", options);\r\n    if (internal_isUnsuccessfulResponse(response)) {\r\n        throw new FetchError(`Overwriting the file at [${fileUrlString}] failed: [${response.status}] [${response.statusText}].`, response);\r\n    }\r\n    const blobClone = internal_cloneResource(file);\r\n    const resourceInfo = internal_parseResourceInfo(response);\r\n    resourceInfo.sourceIri = fileUrlString;\r\n    resourceInfo.isRawData = true;\r\n    return Object.assign(blobClone, { internal_resourceInfo: resourceInfo });\r\n}\r\nfunction isHeadersArray(headers) {\r\n    return Array.isArray(headers);\r\n}\r\n/**\r\n * The return type of this function is misleading: it should ONLY be used to check\r\n * whether an object has a forEach method that returns <key, value> pairs.\r\n *\r\n * @param headers A headers object that might have a forEach\r\n */\r\nfunction hasHeadersObjectForEach(headers) {\r\n    return typeof headers.forEach === \"function\";\r\n}\r\n/**\r\n * @hidden\r\n * This function feels unnecessarily complicated, but is required in order to\r\n * have Headers according to type definitions in both Node and browser environments.\r\n * This might require a fix upstream to be cleaned up.\r\n *\r\n * @param headersToFlatten A structure containing headers potentially in several formats\r\n */\r\nfunction flattenHeaders(headersToFlatten) {\r\n    if (typeof headersToFlatten === \"undefined\") {\r\n        return {};\r\n    }\r\n    let flatHeaders = {};\r\n    if (isHeadersArray(headersToFlatten)) {\r\n        headersToFlatten.forEach(([key, value]) => {\r\n            flatHeaders[key] = value;\r\n        });\r\n        // Note that the following line must be a elsif, because string[][] has a forEach,\r\n        // but it returns string[] instead of <key, value>\r\n    }\r\n    else if (hasHeadersObjectForEach(headersToFlatten)) {\r\n        headersToFlatten.forEach((value, key) => {\r\n            flatHeaders[key] = value;\r\n        });\r\n    }\r\n    else {\r\n        // If the headers are already a Record<string, string>,\r\n        // they can directly be returned.\r\n        flatHeaders = headersToFlatten;\r\n    }\r\n    return flatHeaders;\r\n}\r\n/**\r\n * Internal function that performs the actual write HTTP query, either POST\r\n * or PUT depending on the use case.\r\n *\r\n * @param fileUrl The URL where the file is saved\r\n * @param file The file to be written\r\n * @param method The HTTP method\r\n * @param options Additional parameters for file creation (e.g. a slug, or media type)\r\n */\r\nasync function writeFile(targetUrl, file, method, options) {\r\n    var _a, _b;\r\n    const config = Object.assign(Object.assign({}, defaultGetFileOptions), options);\r\n    const headers = flattenHeaders((_b = (_a = config.init) === null || _a === void 0 ? void 0 : _a.headers) !== null && _b !== void 0 ? _b : {});\r\n    if (containsReserved(headers)) {\r\n        throw new Error(`No reserved header (${RESERVED_HEADERS.join(\", \")}) should be set in the optional RequestInit.`);\r\n    }\r\n    // If a slug is in the parameters, set the request headers accordingly\r\n    if (config.slug !== undefined) {\r\n        headers[\"Slug\"] = config.slug;\r\n    }\r\n    headers[\"Content-Type\"] = getContentType(file, options.contentType);\r\n    const targetUrlString = internal_toIriString(targetUrl);\r\n    return await config.fetch(targetUrlString, Object.assign(Object.assign({}, config.init), { headers,\r\n        method, body: file }));\r\n}\r\nfunction getContentType(file, contentTypeOverride) {\r\n    if (typeof contentTypeOverride === \"string\") {\r\n        return contentTypeOverride;\r\n    }\r\n    const fileType = typeof file === \"object\" &&\r\n        file !== null &&\r\n        typeof file.type === \"string\" &&\r\n        file.type.length > 0\r\n        ? file.type\r\n        : undefined;\r\n    return fileType !== null && fileType !== void 0 ? fileType : \"application/octet-stream\";\r\n}\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nrdfJsDatasetModule.dataset;\r\nconst localNodeSkolemPrefix = \"https://inrupt.com/.well-known/sdk-local-node/\";\r\n/**\r\n * Runtime freezing might be too much overhead;\r\n * if so, this function allows us to replace it by a function\r\n * that merely marks its input as Readonly<> for static analysis.\r\n */\r\nconst freeze = Object.freeze;\r\nfunction isLocalNodeIri(iri) {\r\n    return (iri.substring(0, localNodeSkolemPrefix.length) === localNodeSkolemPrefix);\r\n}\r\nfunction getLocalNodeName(localNodeIri) {\r\n    return localNodeIri.substring(localNodeSkolemPrefix.length);\r\n}\r\nfunction getLocalNodeIri(localNodeName) {\r\n    return `${localNodeSkolemPrefix}${localNodeName}`;\r\n}\r\nfunction isBlankNodeId(value) {\r\n    return typeof value === \"string\" && value.substring(0, 2) === \"_:\";\r\n}\r\nfunction getBlankNodeValue(blankNodeId) {\r\n    return blankNodeId.substring(2);\r\n}\r\nfunction getBlankNodeId(blankNode) {\r\n    return `_:${blankNode.value}`;\r\n}\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * IRIs of the XML Schema data types we support\r\n * @internal\r\n */\r\nconst xmlSchemaTypes = {\r\n    boolean: \"http://www.w3.org/2001/XMLSchema#boolean\",\r\n    dateTime: \"http://www.w3.org/2001/XMLSchema#dateTime\",\r\n    date: \"http://www.w3.org/2001/XMLSchema#date\",\r\n    time: \"http://www.w3.org/2001/XMLSchema#time\",\r\n    decimal: \"http://www.w3.org/2001/XMLSchema#decimal\",\r\n    integer: \"http://www.w3.org/2001/XMLSchema#integer\",\r\n    string: \"http://www.w3.org/2001/XMLSchema#string\",\r\n    langString: \"http://www.w3.org/1999/02/22-rdf-syntax-ns#langString\",\r\n};\r\n/**\r\n * @internal\r\n * @param value Value to serialise.\r\n * @returns String representation of `value`.\r\n * @see https://www.w3.org/TR/xmlschema-2/#boolean-lexical-representation\r\n */\r\nfunction serializeBoolean(value) {\r\n    return value ? \"true\" : \"false\";\r\n}\r\n/**\r\n * @internal\r\n * @param value Value to deserialise.\r\n * @returns Deserialized boolean, or null if the given value is not a valid serialised boolean.\r\n * @see https://www.w3.org/TR/xmlschema-2/#boolean-lexical-representation\r\n */\r\nfunction deserializeBoolean(value) {\r\n    if (value === \"true\" || value === \"1\") {\r\n        return true;\r\n    }\r\n    else if (value === \"false\" || value === \"0\") {\r\n        return false;\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\r\n/**\r\n * @internal\r\n * @param value Value to serialise.\r\n * @returns String representation of `value` in UTC.\r\n * @see https://www.w3.org/TR/xmlschema-2/#time-lexical-repr\r\n */\r\nfunction serializeTime(value) {\r\n    let millisecondString;\r\n    let timezoneString;\r\n    if (value.millisecond) {\r\n        if (value.millisecond < 10) {\r\n            millisecondString = \"00\" + value.millisecond;\r\n        }\r\n        else if (value.millisecond < 100) {\r\n            millisecondString = \"0\" + value.millisecond;\r\n        }\r\n        else {\r\n            millisecondString = value.millisecond;\r\n        }\r\n    }\r\n    if (typeof value.timezoneHourOffset === \"number\") {\r\n        const timezoneFormatted = Math.abs(value.timezoneHourOffset) < 10\r\n            ? \"0\" + Math.abs(value.timezoneHourOffset)\r\n            : Math.abs(value.timezoneHourOffset);\r\n        timezoneString =\r\n            value.timezoneHourOffset >= 0\r\n                ? \"+\" + timezoneFormatted\r\n                : \"-\" + timezoneFormatted;\r\n        if (value.timezoneMinuteOffset) {\r\n            timezoneString =\r\n                timezoneString +\r\n                    \":\" +\r\n                    (value.timezoneMinuteOffset < 10\r\n                        ? \"0\" + value.timezoneMinuteOffset\r\n                        : value.timezoneMinuteOffset);\r\n        }\r\n        else {\r\n            timezoneString = timezoneString + \":00\";\r\n        }\r\n    }\r\n    return ((value.hour < 10 ? \"0\" + value.hour : value.hour) +\r\n        \":\" +\r\n        (value.minute < 10 ? \"0\" + value.minute : value.minute) +\r\n        \":\" +\r\n        (value.second < 10 ? \"0\" + value.second : value.second) +\r\n        (value.millisecond ? \".\" + millisecondString : \"\") +\r\n        (timezoneString ? timezoneString : \"\"));\r\n}\r\n/**\r\n * @internal\r\n * @param literalString Value to deserialise.\r\n * @returns Deserialized time, or null if the given value is not a valid serialised datetime.\r\n * @see https://www.w3.org/TR/xmlschema-2/#time-lexical-repr\r\n */\r\nfunction deserializeTime(literalString) {\r\n    // Time in the format described at\r\n    // https://www.w3.org/TR/xmlschema-2/#time-lexical-repr\r\n    // \\d\\d:\\d\\d:\\d\\d - Two digits for the hour, minute and second, respectively, separated by a `:`.\r\n    //                  Example: \"13:37:42\".\r\n    // (\\.\\d+)? - Optionally a `.` followed by one or more digits representing milliseconds.\r\n    //            Example: \".1337\".\r\n    // (Z|(\\+|-)\\d\\d:\\d\\d) - The letter Z indicating UTC, or a `+` or `-` followed by two digits for\r\n    //                       the hour offset and two for the minute offset, separated by a `:`.\r\n    //                       Example: \"+13:37\".\r\n    const timeRegEx = /\\d\\d:\\d\\d:\\d\\d(\\.\\d+)?(Z|(\\+|-)\\d\\d:\\d\\d)?/;\r\n    if (!timeRegEx.test(literalString)) {\r\n        return null;\r\n    }\r\n    const [timeString, timezoneString] = splitTimeFromTimezone(literalString);\r\n    const [hourString, minuteString, timeRest] = timeString.split(\":\");\r\n    let utcHours = Number.parseInt(hourString, 10);\r\n    let utcMinutes = Number.parseInt(minuteString, 10);\r\n    const [secondString, optionalMillisecondString] = timeRest.split(\".\");\r\n    const utcSeconds = Number.parseInt(secondString, 10);\r\n    const utcMilliseconds = optionalMillisecondString\r\n        ? Number.parseInt(optionalMillisecondString, 10)\r\n        : undefined;\r\n    if (utcMinutes >= 60) {\r\n        utcHours = utcHours + 1;\r\n        utcMinutes = utcMinutes - 60;\r\n    }\r\n    const deserializedTime = {\r\n        hour: utcHours,\r\n        minute: utcMinutes,\r\n        second: utcSeconds,\r\n    };\r\n    if (typeof utcMilliseconds === \"number\") {\r\n        deserializedTime.millisecond = utcMilliseconds;\r\n    }\r\n    if (typeof timezoneString === \"string\") {\r\n        const [hourOffset, minuteOffset] = getTimezoneOffsets(timezoneString);\r\n        if (typeof hourOffset !== \"number\" ||\r\n            hourOffset > 24 ||\r\n            typeof minuteOffset !== \"number\" ||\r\n            minuteOffset > 59) {\r\n            return null;\r\n        }\r\n        deserializedTime.timezoneHourOffset = hourOffset;\r\n        deserializedTime.timezoneMinuteOffset = minuteOffset;\r\n    }\r\n    return deserializedTime;\r\n}\r\n/**\r\n * @internal\r\n * @param value Value to serialise.\r\n * @returns String representation of `value`.\r\n * @see https://www.w3.org/TR/xmlschema-2/#dateTime-lexical-representation\r\n */\r\nfunction serializeDatetime(value) {\r\n    // Although the XML Schema DateTime is not _exactly_ an ISO 8601 string\r\n    // (see https://www.w3.org/TR/xmlschema-2/#deviantformats),\r\n    // the deviations only affect the parsing, not the serialisation.\r\n    // Therefore, we can just use .toISOString():\r\n    return value.toISOString();\r\n}\r\n/**\r\n * @internal\r\n * @param value Value to deserialise.\r\n * @returns Deserialized datetime, or null if the given value is not a valid serialised datetime.\r\n * @see https://www.w3.org/TR/xmlschema-2/#dateTime-lexical-representation\r\n */\r\nfunction deserializeDatetime(literalString) {\r\n    // DateTime in the format described at\r\n    // https://www.w3.org/TR/xmlschema-2/#dateTime-lexical-representation\r\n    // (without constraints on the value).\r\n    // -? - An optional leading `-`.\r\n    // \\d{4,}- - Four or more digits followed by a `-` representing the year. Example: \"3000-\".\r\n    // \\d\\d-\\d\\d - Two digits representing the month and two representing the day of the month,\r\n    //             separated by a `-`. Example: \"11-03\".\r\n    // T - The letter T, separating the date from the time.\r\n    // \\d\\d:\\d\\d:\\d\\d - Two digits for the hour, minute and second, respectively, separated by a `:`.\r\n    //                  Example: \"13:37:42\".\r\n    // (\\.\\d+)? - Optionally a `.` followed by one or more digits representing milliseconds.\r\n    //            Example: \".1337\".\r\n    // (Z|(\\+|-)\\d\\d:\\d\\d) - The letter Z indicating UTC, or a `+` or `-` followed by two digits for\r\n    //                       the hour offset and two for the minute offset, separated by a `:`.\r\n    //                       Example: \"+13:37\".\r\n    const datetimeRegEx = /-?\\d{4,}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(\\.\\d+)?(Z|(\\+|-)\\d\\d:\\d\\d)?/;\r\n    if (!datetimeRegEx.test(literalString)) {\r\n        return null;\r\n    }\r\n    const [signedDateString, rest] = literalString.split(\"T\");\r\n    // The date string can optionally be prefixed with `-`,\r\n    // in which case the year is negative:\r\n    const [yearMultiplier, dateString] = signedDateString.charAt(0) === \"-\"\r\n        ? [-1, signedDateString.substring(1)]\r\n        : [1, signedDateString];\r\n    const [yearString, monthString, dayString] = dateString.split(\"-\");\r\n    const utcFullYear = Number.parseInt(yearString, 10) * yearMultiplier;\r\n    const utcMonth = Number.parseInt(monthString, 10) - 1;\r\n    const utcDate = Number.parseInt(dayString, 10);\r\n    const [timeString, timezoneString] = splitTimeFromTimezone(rest);\r\n    const [hourOffset, minuteOffset] = typeof timezoneString === \"string\"\r\n        ? getTimezoneOffsets(timezoneString)\r\n        : [0, 0];\r\n    const [hourString, minuteString, timeRest] = timeString.split(\":\");\r\n    const utcHours = Number.parseInt(hourString, 10) + hourOffset;\r\n    const utcMinutes = Number.parseInt(minuteString, 10) + minuteOffset;\r\n    const [secondString, optionalMillisecondString] = timeRest.split(\".\");\r\n    const utcSeconds = Number.parseInt(secondString, 10);\r\n    const utcMilliseconds = optionalMillisecondString\r\n        ? Number.parseInt(optionalMillisecondString, 10)\r\n        : 0;\r\n    const date = new Date(Date.UTC(utcFullYear, utcMonth, utcDate, utcHours, utcMinutes, utcSeconds, utcMilliseconds));\r\n    // For the year, values from 0 to 99 map to the years 1900 to 1999. Since the serialisation\r\n    // always writes out the years fully, we should correct this to actually map to the years 0 to 99.\r\n    // See\r\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/Date#Individual_date_and_time_component_values\r\n    if (utcFullYear >= 0 && utcFullYear < 100) {\r\n        // Note that we base it on the calculated year, rather than the year that was actually read.\r\n        // This is because the year might actually differ from the value listed in the serialisation,\r\n        // i.e. when moving the timezone offset to UTC pushes it into a different year:\r\n        date.setUTCFullYear(date.getUTCFullYear() - 1900);\r\n    }\r\n    return date;\r\n}\r\n/**\r\n * @internal\r\n * @param value Value to serialise.\r\n * @returns String representation of `value`.\r\n * @see https://www.w3.org/TR/xmlschema-2/#date-lexical-representation\r\n */\r\nfunction serializeDate(value) {\r\n    const year = value.getFullYear();\r\n    const month = value.getMonth() + 1;\r\n    const day = value.getDate();\r\n    const [_, timezone] = splitTimeFromTimezone(value.toISOString());\r\n    return `${year}-${String(month).padStart(2, \"0\")}-${String(day).padStart(2, \"0\")}${timezone}`;\r\n}\r\n/**\r\n * @internal\r\n * @param value Value to deserialise.\r\n * @returns Deserialized datetime, or null if the given value is not a valid serialised datetime.\r\n * @see https://www.w3.org/TR/xmlschema-2/#date-lexical-representation\r\n */\r\nfunction deserializeDate(literalString) {\r\n    // Date in the format described at\r\n    // https://www.w3.org/TR/xmlschema-2/#date-lexical-representation\r\n    // (without constraints on the value).\r\n    // -? - An optional leading `-`.\r\n    // \\d{4,}- - Four or more digits followed by a `-` representing the year. Example: \"3000-\".\r\n    // \\d\\d-\\d\\d - Two digits representing the month and two representing the day of the month,\r\n    //             separated by a `-`. Example: \"11-03\".\r\n    // (Z|(\\+|-)\\d\\d:\\d\\d) - Optionally, the letter Z indicating UTC, or a `+` or `-` followed by two digits for\r\n    //                       the hour offset and two for the minute offset, separated by a `:`.\r\n    //                       Example: \"+13:37\".\r\n    const dateRegEx = /-?\\d{4,}-\\d\\d-\\d\\d(Z|(\\+|-)\\d\\d:\\d\\d)?/;\r\n    if (!dateRegEx.test(literalString)) {\r\n        return null;\r\n    }\r\n    const signedDateString = literalString;\r\n    // The date string can optionally be prefixed with `-`,\r\n    // in which case the year is negative:\r\n    const [yearMultiplier, dateString] = signedDateString.charAt(0) === \"-\"\r\n        ? [-1, signedDateString.substring(1)]\r\n        : [1, signedDateString];\r\n    const [yearString, monthString, dayAndTimezoneString] = dateString.split(\"-\");\r\n    const dayString = dayAndTimezoneString.length > 2\r\n        ? dayAndTimezoneString.substring(0, 2)\r\n        : dayAndTimezoneString;\r\n    const utcFullYear = Number.parseInt(yearString, 10) * yearMultiplier;\r\n    const utcMonth = Number.parseInt(monthString, 10) - 1;\r\n    const utcDate = Number.parseInt(dayString, 10);\r\n    const hour = 12;\r\n    // setting at 12:00 avoids all timezones\r\n    const date = new Date(Date.UTC(utcFullYear, utcMonth, utcDate, hour));\r\n    // For the year, values from 0 to 99 map to the years 1900 to 1999. Since the serialisation\r\n    // always writes out the years fully, we should correct this to actually map to the years 0 to 99.\r\n    // See\r\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/Date#Individual_date_and_time_component_values\r\n    if (utcFullYear >= 0 && utcFullYear < 100) {\r\n        date.setUTCFullYear(date.getUTCFullYear() - 1900);\r\n    }\r\n    return date;\r\n}\r\n/**\r\n * @param timeString An XML Schema time string.\r\n * @returns A tuple [timeString, timezoneString].\r\n * @see https://www.w3.org/TR/xmlschema-2/#time-lexical-repr\r\n */\r\nfunction splitTimeFromTimezone(timeString) {\r\n    if (timeString.endsWith(\"Z\")) {\r\n        return [timeString.substring(0, timeString.length - 1), \"Z\"];\r\n    }\r\n    const splitOnPlus = timeString.split(\"+\");\r\n    const splitOnMinus = timeString.split(\"-\");\r\n    if (splitOnPlus.length === 1 && splitOnMinus.length === 1) {\r\n        return [splitOnPlus[0], undefined];\r\n    }\r\n    return splitOnPlus.length > splitOnMinus.length\r\n        ? [splitOnPlus[0], \"+\" + splitOnPlus[1]]\r\n        : [splitOnMinus[0], \"-\" + splitOnMinus[1]];\r\n}\r\n/**\r\n * @param timezoneString Lexical representation of a time zone in XML Schema.\r\n * @returns A tuple of the hour and minute offset of the time zone.\r\n * @see https://www.w3.org/TR/xmlschema-2/#dateTime-timezones\r\n */\r\nfunction getTimezoneOffsets(timezoneString) {\r\n    if (timezoneString === \"Z\") {\r\n        return [0, 0];\r\n    }\r\n    const multiplier = timezoneString.charAt(0) === \"+\" ? 1 : -1;\r\n    const [hourString, minuteString] = timezoneString.substring(1).split(\":\");\r\n    const hours = Number.parseInt(hourString, 10);\r\n    const minutes = Number.parseInt(minuteString, 10);\r\n    return [hours * multiplier, minutes * multiplier];\r\n}\r\n/**\r\n * @internal\r\n * @param value Value to serialise.\r\n * @returns String representation of `value`.\r\n * @see https://www.w3.org/TR/xmlschema-2/#decimal-lexical-representation\r\n */\r\nfunction serializeDecimal(value) {\r\n    return value.toString();\r\n}\r\n/**\r\n * @internal\r\n * @param value Value to deserialise.\r\n * @returns Deserialized decimal, or null if the given value is not a valid serialised decimal.\r\n * @see https://www.w3.org/TR/xmlschema-2/#decimal-lexical-representation\r\n */\r\nfunction deserializeDecimal(literalString) {\r\n    const deserialized = Number.parseFloat(literalString);\r\n    if (Number.isNaN(deserialized)) {\r\n        return null;\r\n    }\r\n    return deserialized;\r\n}\r\n/**\r\n * @internal\r\n * @param value Value to serialise.\r\n * @returns String representation of `value`.\r\n */\r\nfunction serializeInteger(value) {\r\n    return value.toString();\r\n}\r\n/**\r\n * @internal\r\n * @param value Value to deserialise.\r\n * @returns Deserialized integer, or null if the given value is not a valid serialised integer.\r\n */\r\nfunction deserializeInteger(literalString) {\r\n    const deserialized = Number.parseInt(literalString, 10);\r\n    if (Number.isNaN(deserialized)) {\r\n        return null;\r\n    }\r\n    return deserialized;\r\n}\r\n/**\r\n * @internal\r\n * @param locale Locale to transform into a consistent format.\r\n */\r\nfunction normalizeLocale(locale) {\r\n    return locale.toLowerCase();\r\n}\r\n/**\r\n * @internal Library users shouldn't need to be exposed to raw NamedNodes.\r\n * @param value The value that might or might not be a Named Node.\r\n * @returns Whether `value` is a Named Node.\r\n */\r\nfunction isNamedNode(value) {\r\n    return isTerm(value) && value.termType === \"NamedNode\";\r\n}\r\n/**\r\n * @internal Library users shouldn't need to be exposed to raw Literals.\r\n * @param value The value that might or might not be a Literal.\r\n * @returns Whether `value` is a Literal.\r\n */\r\nfunction isLiteral(value) {\r\n    return isTerm(value) && value.termType === \"Literal\";\r\n}\r\n/**\r\n * @internal Library users shouldn't need to be exposed to raw Terms.\r\n * @param value The value that might or might not be a Term.\r\n * @returns Whether `value` is a Term.\r\n */\r\nfunction isTerm(value) {\r\n    return (value !== null &&\r\n        typeof value === \"object\" &&\r\n        typeof value.termType === \"string\" &&\r\n        typeof value.value === \"string\" &&\r\n        typeof value.equals === \"function\");\r\n}\r\n/**\r\n * @internal Library users shouldn't need to be exposed to LocalNodes.\r\n * @param value The value that might or might not be a Node with no known IRI yet.\r\n * @returns Whether `value` is a Node with no known IRI yet.\r\n */\r\nfunction isLocalNode(value) {\r\n    return isNamedNode(value) && isLocalNodeIri(value.value);\r\n}\r\n/**\r\n * Ensure that a given value is a valid URL.\r\n *\r\n * @internal Library users shouldn't need to be exposed to raw URLs.\r\n * @param iri The value of which to verify that it is a valid URL.\r\n */\r\nfunction internal_isValidUrl(iri) {\r\n    const iriString = internal_toIriString(iri);\r\n    // If the runtime environment supports URL, instantiate one.\r\n    // If the given IRI is not a valid URL, it will throw an error.\r\n    // See: https://developer.mozilla.org/en-US/docs/Web/API/URL\r\n    /* istanbul ignore if [URL is available in our testing environment, so we cannot test the alternative] */\r\n    if (typeof URL !== \"function\") {\r\n        // If we can't validate the URL, do not throw an error:\r\n        return true;\r\n    }\r\n    try {\r\n        new URL(iriString);\r\n    }\r\n    catch (_a) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * @internal Utility method; library users should not need to interact with LocalNodes directly.\r\n * @param localNode The LocalNode to resolve to a NamedNode.\r\n * @param resourceIri The Resource in which the Node will be saved.\r\n */\r\nfunction resolveIriForLocalNode(localNode, resourceIri) {\r\n    return DataFactory.namedNode(resolveLocalIri(getLocalNodeName(localNode.value), resourceIri));\r\n}\r\n/**\r\n * @internal API for internal use only.\r\n * @param name The name identifying a Thing.\r\n * @param resourceIri The Resource in which the Thing can be found.\r\n */\r\nfunction resolveLocalIri(name, resourceIri) {\r\n    /* istanbul ignore if [The URL interface is available in the testing environment, so we cannot test this] */\r\n    if (typeof URL !== \"function\") {\r\n        throw new Error(\"The URL interface is not available, so an IRI cannot be determined.\");\r\n    }\r\n    const thingIri = new URL(resourceIri);\r\n    thingIri.hash = name;\r\n    return thingIri.href;\r\n}\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nconst DataFactory = RdfJsDataFactory;\r\nfunction addRdfJsQuadToDataset(dataset, quad, quadParseOptions = {}) {\r\n    var _a;\r\n    const supportedGraphTypes = [\r\n        \"NamedNode\",\r\n        \"DefaultGraph\",\r\n    ];\r\n    if (!supportedGraphTypes.includes(quad.graph.termType)) {\r\n        throw new Error(`Cannot parse Quads with nodes of type [${quad.graph.termType}] as their Graph node.`);\r\n    }\r\n    const graphId = quad.graph.termType === \"DefaultGraph\" ? \"default\" : quad.graph.value;\r\n    const graph = (_a = dataset.graphs[graphId]) !== null && _a !== void 0 ? _a : {};\r\n    return freeze(Object.assign(Object.assign({}, dataset), { graphs: freeze(Object.assign(Object.assign({}, dataset.graphs), { [graphId]: addRdfJsQuadToGraph(graph, quad, quadParseOptions) })) }));\r\n}\r\nfunction addRdfJsQuadToGraph(graph, quad, quadParseOptions) {\r\n    var _a;\r\n    const supportedSubjectTypes = [\r\n        \"NamedNode\",\r\n        \"BlankNode\",\r\n    ];\r\n    if (!supportedSubjectTypes.includes(quad.subject.termType)) {\r\n        throw new Error(`Cannot parse Quads with nodes of type [${quad.subject.termType}] as their Subject node.`);\r\n    }\r\n    const subjectIri = quad.subject.termType === \"BlankNode\"\r\n        ? `_:${quad.subject.value}`\r\n        : quad.subject.value;\r\n    const subject = (_a = graph[subjectIri]) !== null && _a !== void 0 ? _a : {\r\n        type: \"Subject\",\r\n        url: subjectIri,\r\n        predicates: {},\r\n    };\r\n    return freeze(Object.assign(Object.assign({}, graph), { [subjectIri]: addRdfJsQuadToSubject(subject, quad, quadParseOptions) }));\r\n}\r\nfunction addRdfJsQuadToSubject(subject, quad, quadParseOptions) {\r\n    return freeze(Object.assign(Object.assign({}, subject), { predicates: addRdfJsQuadToPredicates(subject.predicates, quad, quadParseOptions) }));\r\n}\r\nfunction addRdfJsQuadToPredicates(predicates, quad, quadParseOptions) {\r\n    var _a;\r\n    const supportedPredicateTypes = [\r\n        \"NamedNode\",\r\n    ];\r\n    if (!supportedPredicateTypes.includes(quad.predicate.termType)) {\r\n        throw new Error(`Cannot parse Quads with nodes of type [${quad.predicate.termType}] as their Predicate node.`);\r\n    }\r\n    const predicateIri = quad.predicate.value;\r\n    const objects = (_a = predicates[predicateIri]) !== null && _a !== void 0 ? _a : {};\r\n    return freeze(Object.assign(Object.assign({}, predicates), { [predicateIri]: addRdfJsQuadToObjects(objects, quad, quadParseOptions) }));\r\n}\r\nfunction addRdfJsQuadToObjects(objects, quad, quadParseOptions) {\r\n    var _a, _b, _c, _d, _e, _f, _g, _h;\r\n    if (quad.object.termType === \"NamedNode\") {\r\n        const namedNodes = freeze([\r\n            ...((_a = objects.namedNodes) !== null && _a !== void 0 ? _a : []),\r\n            quad.object.value,\r\n        ]);\r\n        return freeze(Object.assign(Object.assign({}, objects), { namedNodes: namedNodes }));\r\n    }\r\n    if (quad.object.termType === \"Literal\") {\r\n        if (quad.object.datatype.value === xmlSchemaTypes.langString) {\r\n            const locale = quad.object.language.toLowerCase();\r\n            const thisLocaleStrings = freeze([\r\n                ...((_c = (_b = objects.langStrings) === null || _b === void 0 ? void 0 : _b[locale]) !== null && _c !== void 0 ? _c : []),\r\n                quad.object.value,\r\n            ]);\r\n            const langStrings = freeze(Object.assign(Object.assign({}, ((_d = objects.langStrings) !== null && _d !== void 0 ? _d : {})), { [locale]: thisLocaleStrings }));\r\n            return freeze(Object.assign(Object.assign({}, objects), { langStrings: langStrings }));\r\n        }\r\n        // If the Object is a non-langString Literal\r\n        const thisTypeValues = freeze([\r\n            ...((_f = (_e = objects.literals) === null || _e === void 0 ? void 0 : _e[quad.object.datatype.value]) !== null && _f !== void 0 ? _f : []),\r\n            quad.object.value,\r\n        ]);\r\n        const literals = freeze(Object.assign(Object.assign({}, ((_g = objects.literals) !== null && _g !== void 0 ? _g : {})), { [quad.object.datatype.value]: thisTypeValues }));\r\n        return freeze(Object.assign(Object.assign({}, objects), { literals: literals }));\r\n    }\r\n    if (quad.object.termType === \"BlankNode\") {\r\n        const blankNodePredicates = getPredicatesForBlankNode(quad.object, quadParseOptions);\r\n        const blankNodes = freeze([\r\n            ...((_h = objects.blankNodes) !== null && _h !== void 0 ? _h : []),\r\n            blankNodePredicates,\r\n        ]);\r\n        return freeze(Object.assign(Object.assign({}, objects), { blankNodes: blankNodes }));\r\n    }\r\n    throw new Error(`Objects of type [${quad.object.termType}] are not supported.`);\r\n}\r\nfunction getPredicatesForBlankNode(node, quadParseOptions) {\r\n    var _a, _b;\r\n    const chainBlankNodes = (_a = quadParseOptions.chainBlankNodes) !== null && _a !== void 0 ? _a : [];\r\n    if (chainBlankNodes.find((chainBlankNode) => chainBlankNode.equals(node)) ===\r\n        undefined) {\r\n        // If this Blank Node is not used to provide nested values for another Subject,\r\n        // just return its identifier.\r\n        // That identifier will also be listed among the Subjects in the Graph.\r\n        return getBlankNodeId(node);\r\n    }\r\n    /* istanbul ignore next: If there are chain nodes, there will always be other Quads, so the `?? []` can't be reached: */\r\n    const quads = (_b = quadParseOptions.otherQuads) !== null && _b !== void 0 ? _b : [];\r\n    const quadsWithNodeAsSubject = quads.filter((quad) => quad.subject.equals(node));\r\n    // First add the Quads with regular Objects\r\n    const predicates = quadsWithNodeAsSubject\r\n        .filter((quad) => !isBlankNode(quad.object))\r\n        .reduce((predicatesAcc, quad) => {\r\n        var _a;\r\n        const supportedPredicateTypes = [\r\n            \"NamedNode\",\r\n        ];\r\n        if (!supportedPredicateTypes.includes(quad.predicate.termType)) {\r\n            throw new Error(`Cannot parse Quads with nodes of type [${quad.predicate.termType}] as their Predicate node.`);\r\n        }\r\n        const objects = (_a = predicatesAcc[quad.predicate.value]) !== null && _a !== void 0 ? _a : {};\r\n        return freeze(Object.assign(Object.assign({}, predicatesAcc), { [quad.predicate.value]: addRdfJsQuadToObjects(objects, quad, quadParseOptions) }));\r\n    }, {});\r\n    // And then also add the Quads that have another Blank Node as the Object\r\n    // in addition to the Blank Node `node` as the Subject:\r\n    const blankNodeObjectQuads = quadsWithNodeAsSubject.filter((quad) => isBlankNode(quad.object));\r\n    return blankNodeObjectQuads.reduce((predicatesAcc, quad) => {\r\n        var _a, _b;\r\n        const supportedPredicateTypes = [\r\n            \"NamedNode\",\r\n        ];\r\n        if (!supportedPredicateTypes.includes(quad.predicate.termType)) {\r\n            throw new Error(`Cannot parse Quads with nodes of type [${quad.predicate.termType}] as their Predicate node.`);\r\n        }\r\n        /* istanbul ignore next: The `?? {}` doesn't get hit; presumably it's initialised above. */\r\n        const objects = (_a = predicatesAcc[quad.predicate.value]) !== null && _a !== void 0 ? _a : {};\r\n        /* istanbul ignore next: The `?? []` doesn't get hit; presumably it's initialised above. */\r\n        const blankNodes = (_b = objects.blankNodes) !== null && _b !== void 0 ? _b : [];\r\n        return freeze(Object.assign(Object.assign({}, predicatesAcc), { \r\n            // The BlankNode assertions are valid because we filtered on BlankNodes above:\r\n            [quad.predicate.value]: Object.assign(Object.assign({}, objects), { blankNodes: [\r\n                    ...blankNodes,\r\n                    getPredicatesForBlankNode(quad.object, quadParseOptions),\r\n                ] }) }));\r\n    }, predicates);\r\n}\r\n/**\r\n * Given an array of Quads, returns all Blank Nodes that are used in a single chain of Nodes.\r\n *\r\n * This allows you to obtain which Blank Nodes are involved in e.g. RDF lists.\r\n * This is useful because those can be represented as nested data that will have\r\n * a deterministic structure, whereas a representation of Blank Nodes that\r\n * create a cycle or are re-used will need ad-hoc, non-deterministic identifiers\r\n * to allow for representation without inifinite nesting.\r\n */\r\nfunction getChainBlankNodes(quads) {\r\n    // All Blank Nodes that occur in Subject position:\r\n    const blankNodeSubjects = quads\r\n        .map((quad) => quad.subject)\r\n        .filter(isBlankNode);\r\n    // All Blank Nodes that occur in Object position:\r\n    const blankNodeObjects = quads.map((quad) => quad.object).filter(isBlankNode);\r\n    // Makes sure that all given Nodes are the same,\r\n    // which will be used to verify that a set of Quads all have the same Subject:\r\n    function everyNodeTheSame(nodes) {\r\n        // This could potentially be made more performant by mapping every term\r\n        // to their value and using native JS comparisons, assuming every node is\r\n        // either a Blank or a Named Node.\r\n        return nodes.every((otherNode) => nodes.every((anotherNode) => otherNode.equals(anotherNode)));\r\n    }\r\n    // Get all Blank Nodes that are part of a cycle in the graph:\r\n    const cycleBlankNodes = [];\r\n    blankNodeObjects.forEach((blankNodeObject) => {\r\n        cycleBlankNodes.push(...getCycleBlankNodes(blankNodeObject, quads));\r\n    });\r\n    // Get Blank Nodes that are used to provide nested values for a single Subject,\r\n    // which we'll represent as nested values as well\r\n    // (this allows us to avoid generating a non-deterministic, ad-hoc identifier\r\n    // for those Blank Nodes).\r\n    // We'll do this by taking all Blank Nodes in the given Quads...\r\n    const chainBlankNodes = blankNodeSubjects\r\n        .concat(blankNodeObjects)\r\n        .filter((blankNode) => {\r\n        // ....removing those Blank Nodes that are part of a cycle...\r\n        if (cycleBlankNodes.some((cycleBlankNode) => cycleBlankNode.equals(blankNode))) {\r\n            return false;\r\n        }\r\n        // ...and then returning only those Blank Nodes that only occur in the\r\n        // Object position for a single Subject, i.e. that are part of a single\r\n        // chain:\r\n        const subjectsWithThisNodeAsObject = quads\r\n            .filter((quad) => quad.object.equals(blankNode))\r\n            .map((quad) => quad.subject);\r\n        return (subjectsWithThisNodeAsObject.length > 0 &&\r\n            everyNodeTheSame(subjectsWithThisNodeAsObject));\r\n    });\r\n    return chainBlankNodes;\r\n}\r\nfunction toRdfJsQuads(dataset, options = {}) {\r\n    var _a;\r\n    const quads = [];\r\n    const dataFactory = (_a = options.dataFactory) !== null && _a !== void 0 ? _a : RdfJsDataFactory;\r\n    Object.keys(dataset.graphs).forEach((graphIri) => {\r\n        const graph = dataset.graphs[graphIri];\r\n        const graphNode = graphIri === \"default\"\r\n            ? dataFactory.defaultGraph()\r\n            : dataFactory.namedNode(graphIri);\r\n        Object.keys(graph).forEach((subjectIri) => {\r\n            const predicates = graph[subjectIri].predicates;\r\n            const subjectNode = isBlankNodeId(subjectIri)\r\n                ? dataFactory.blankNode(getBlankNodeValue(subjectIri))\r\n                : dataFactory.namedNode(subjectIri);\r\n            quads.push(...subjectToRdfJsQuads(predicates, subjectNode, graphNode, options));\r\n        });\r\n    });\r\n    return quads;\r\n}\r\nfunction subjectToRdfJsQuads(predicates, subjectNode, graphNode, options = {}) {\r\n    var _a;\r\n    const quads = [];\r\n    const dataFactory = (_a = options.dataFactory) !== null && _a !== void 0 ? _a : RdfJsDataFactory;\r\n    Object.keys(predicates).forEach((predicateIri) => {\r\n        var _a, _b, _c, _d;\r\n        const predicateNode = dataFactory.namedNode(predicateIri);\r\n        const langStrings = (_a = predicates[predicateIri].langStrings) !== null && _a !== void 0 ? _a : {};\r\n        const namedNodes = (_b = predicates[predicateIri].namedNodes) !== null && _b !== void 0 ? _b : [];\r\n        const literals = (_c = predicates[predicateIri].literals) !== null && _c !== void 0 ? _c : {};\r\n        const blankNodes = (_d = predicates[predicateIri].blankNodes) !== null && _d !== void 0 ? _d : [];\r\n        const literalTypes = Object.keys(literals);\r\n        literalTypes.forEach((typeIri) => {\r\n            const typeNode = dataFactory.namedNode(typeIri);\r\n            const literalValues = literals[typeIri];\r\n            literalValues.forEach((value) => {\r\n                const literalNode = dataFactory.literal(value, typeNode);\r\n                quads.push(dataFactory.quad(subjectNode, predicateNode, literalNode, graphNode));\r\n            });\r\n        });\r\n        const locales = Object.keys(langStrings);\r\n        locales.forEach((locale) => {\r\n            const localeValues = langStrings[locale];\r\n            localeValues.forEach((value) => {\r\n                const langStringNode = dataFactory.literal(value, locale);\r\n                quads.push(dataFactory.quad(subjectNode, predicateNode, langStringNode, graphNode));\r\n            });\r\n        });\r\n        namedNodes.forEach((namedNodeIri) => {\r\n            const node = dataFactory.namedNode(namedNodeIri);\r\n            quads.push(dataFactory.quad(subjectNode, predicateNode, node, graphNode));\r\n        });\r\n        blankNodes.forEach((blankNodeIdOrPredicates) => {\r\n            if (isBlankNodeId(blankNodeIdOrPredicates)) {\r\n                const blankNode = dataFactory.blankNode(getBlankNodeValue(blankNodeIdOrPredicates));\r\n                quads.push(dataFactory.quad(subjectNode, predicateNode, blankNode, graphNode));\r\n            }\r\n            else {\r\n                const node = dataFactory.blankNode();\r\n                const blankNodeObjectQuad = dataFactory.quad(subjectNode, predicateNode, node, graphNode);\r\n                const blankNodeSubjectQuads = subjectToRdfJsQuads(blankNodeIdOrPredicates, node, graphNode);\r\n                quads.push(blankNodeObjectQuad);\r\n                quads.push(...blankNodeSubjectQuads);\r\n            }\r\n        });\r\n    });\r\n    return quads;\r\n}\r\n/**\r\n * A recursive function that finds all Blank Nodes in an array of Quads that create a cycle in the graph.\r\n *\r\n * This function will traverse the graph starting from `currentNode`, keeping\r\n * track of all the Blank Nodes it encounters twice while doing so, and\r\n * returning those.\r\n */\r\nfunction getCycleBlankNodes(currentNode, quads, traversedBlankNodes = []) {\r\n    // If we've encountered `currentNode` before, all the Blank Nodes we've\r\n    // encountered so far are part of a cycle. Return those.\r\n    if (traversedBlankNodes.find((traversedBlankNode) => traversedBlankNode.equals(currentNode)) !== undefined) {\r\n        return traversedBlankNodes;\r\n    }\r\n    // Find all Blank Nodes that are connected to `currentNode`:\r\n    const blankNodeObjects = quads\r\n        .filter((quad) => quad.subject.equals(currentNode) && isBlankNode(quad.object))\r\n        .map((quad) => quad.object);\r\n    // If no Blank Nodes are connected to `currentNode`, and `currentNode` is not\r\n    // part of a cycle, we're done; the currently traversed Nodes do not form a\r\n    // cycle:\r\n    if (blankNodeObjects.length === 0) {\r\n        return [];\r\n    }\r\n    // Store that we've traversed `currentNode`, then move on to all the Blank\r\n    // Nodes connected to it, which will then take up the role of `currentNode`:\r\n    const nextTraversedNodes = [...traversedBlankNodes, currentNode];\r\n    const cycleBlankNodeArrays = blankNodeObjects.map((nextNode) => getCycleBlankNodes(nextNode, quads, nextTraversedNodes));\r\n    // Collect all the cycle Blank Nodes found in those traverals,\r\n    // then return them:\r\n    const allCycleBlankNodes = [];\r\n    for (const cycleBlankNodes of cycleBlankNodeArrays) {\r\n        allCycleBlankNodes.push(...cycleBlankNodes);\r\n    }\r\n    return allCycleBlankNodes;\r\n}\r\nfunction isBlankNode(term) {\r\n    return term.termType === \"BlankNode\";\r\n}\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nconst getJsonLdParser = () => {\r\n    const onQuadCallbacks = [];\r\n    const onCompleteCallbacks = [];\r\n    const onErrorCallbacks = [];\r\n    return {\r\n        onQuad: (callback) => {\r\n            onQuadCallbacks.push(callback);\r\n        },\r\n        onError: (callback) => {\r\n            onErrorCallbacks.push(callback);\r\n        },\r\n        onComplete: (callback) => {\r\n            onCompleteCallbacks.push(callback);\r\n        },\r\n        parse: async (source, resourceInfo) => {\r\n            let quads = [];\r\n            try {\r\n                const plainQuads = (await jsonld.toRDF(JSON.parse(source), {\r\n                    base: getSourceUrl(resourceInfo),\r\n                }));\r\n                quads = fixQuads(plainQuads);\r\n            }\r\n            catch (error) {\r\n                onErrorCallbacks.forEach((callback) => callback(error));\r\n            }\r\n            quads.forEach((quad) => {\r\n                onQuadCallbacks.forEach((callback) => callback(quad));\r\n            });\r\n            onCompleteCallbacks.forEach((callback) => callback());\r\n        },\r\n    };\r\n};\r\n/* Quads returned by jsonld parser are not spec-compliant\r\n * see https://github.com/digitalbazaar/jsonld.js/issues/243\r\n * Also, no specific type for these 'quads' is exposed by the library\r\n */\r\nfunction fixQuads(plainQuads) {\r\n    const fixedQuads = plainQuads.map((plainQuad) => DataFactory.quad(term(plainQuad.subject), term(plainQuad.predicate), term(plainQuad.object), term(plainQuad.graph)));\r\n    return fixedQuads;\r\n}\r\nfunction term(term) {\r\n    switch (term.termType) {\r\n        case \"NamedNode\":\r\n            return DataFactory.namedNode(term.value);\r\n        case \"BlankNode\":\r\n            return DataFactory.blankNode(term.value.substr(2)); // Remove the '_:' prefix. see https://github.com/digitalbazaar/jsonld.js/issues/244\r\n        case \"Literal\":\r\n            return DataFactory.literal(term.value, term.language || term.datatype);\r\n        case \"DefaultGraph\":\r\n            return DataFactory.defaultGraph();\r\n        default:\r\n            throw Error(\"unknown termType: \" + term.termType);\r\n    }\r\n}\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nconst getTurtleParser = () => {\r\n    const onQuadCallbacks = [];\r\n    const onCompleteCallbacks = [];\r\n    const onErrorCallbacks = [];\r\n    return {\r\n        onQuad: (callback) => {\r\n            onQuadCallbacks.push(callback);\r\n        },\r\n        onError: (callback) => {\r\n            onErrorCallbacks.push(callback);\r\n        },\r\n        onComplete: (callback) => {\r\n            onCompleteCallbacks.push(callback);\r\n        },\r\n        parse: async (source, resourceInfo) => {\r\n            const parser = await getParser(getSourceUrl(resourceInfo));\r\n            parser.parse(source, (error, quad, _prefixes) => {\r\n                if (error) {\r\n                    onErrorCallbacks.forEach((callback) => callback(error));\r\n                }\r\n                else if (quad) {\r\n                    onQuadCallbacks.forEach((callback) => callback(quad));\r\n                }\r\n                else {\r\n                    onCompleteCallbacks.forEach((callback) => callback());\r\n                }\r\n            });\r\n        },\r\n    };\r\n};\r\nasync function getParser(baseIri) {\r\n    const n3 = await loadN3();\r\n    return new n3.Parser({ format: \"text/turtle\", baseIRI: baseIri });\r\n}\r\n/**\r\n * @param quads Triples that should be serialised to Turtle\r\n * @internal Utility method for internal use; not part of the public API.\r\n */\r\nasync function triplesToTurtle(quads) {\r\n    const n3 = await loadN3();\r\n    const format = \"text/turtle\";\r\n    const writer = new n3.Writer({ format: format });\r\n    // Remove any potentially lingering references to Named Graphs in Quads;\r\n    // they'll be determined by the URL the Turtle will be sent to:\r\n    const triples = quads.map((quad) => DataFactory.quad(quad.subject, quad.predicate, quad.object, undefined));\r\n    writer.addQuads(triples);\r\n    const writePromise = new Promise((resolve, reject) => {\r\n        writer.end((error, result) => {\r\n            /* istanbul ignore if [n3.js doesn't actually pass an error nor a result, apparently: https://github.com/rdfjs/N3.js/blob/62682e48c02d8965b4d728cb5f2cbec6b5d1b1b8/src/N3Writer.js#L290] */\r\n            if (error) {\r\n                return reject(error);\r\n            }\r\n            resolve(result);\r\n        });\r\n    });\r\n    const rawTurtle = await writePromise;\r\n    return rawTurtle;\r\n}\r\nasync function loadN3() {\r\n    // When loaded via Webpack or another bundler that looks at the `modules` field in package.json,\r\n    // N3 serves up ES modules with named exports.\r\n    // However, when it is loaded in Node, it serves up a CommonJS module, which, when imported from\r\n    // a Node ES module, is in the shape of a default export that is an object with all the named\r\n    // exports as its properties.\r\n    // This means that if we were to import the default module, our code would fail in Webpack,\r\n    // whereas if we imported the named exports, our code would fail in Node.\r\n    // As a workaround, we use a dynamic import. This way, we can use the same syntax in every\r\n    // environment, where the differences between the environments are in whether the returned object\r\n    // includes a `default` property that contains all exported functions, or whether those functions\r\n    // are available on the returned object directly. We can then respond to those different\r\n    // situations at runtime.\r\n    // Unfortunately, that does mean that tree shaking will not work until N3 also provides ES modules\r\n    // for Node, or adds a default export for Webpack. See\r\n    // https://github.com/rdfjs/N3.js/issues/196\r\n    const n3Module = await import('n3');\r\n    /* istanbul ignore if: the package provides named exports in the unit test environment */\r\n    if (typeof n3Module.default !== \"undefined\") {\r\n        return n3Module.default;\r\n    }\r\n    return n3Module;\r\n}\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/** @hidden For internal use only. */\r\nfunction internal_getReadableValue(value) {\r\n    var _a, _b, _c, _d, _e, _f, _g, _h;\r\n    if (isNamedNode(value)) {\r\n        return `<${value.value}> (URL)`;\r\n    }\r\n    if (isLiteral(value)) {\r\n        /* istanbul ignore if: thingAsMarkdown always instantiates a NamedNode, so we can't hit this code path in tests. */\r\n        if (!isNamedNode(value.datatype)) {\r\n            return `[${value.value}] (RDF/JS Literal of unknown type)`;\r\n        }\r\n        let val;\r\n        switch (value.datatype.value) {\r\n            case xmlSchemaTypes.boolean:\r\n                val =\r\n                    (_b = (_a = deserializeBoolean(value.value)) === null || _a === void 0 ? void 0 : _a.valueOf()) !== null && _b !== void 0 ? _b : `Invalid data: \\`${value.value}\\``;\r\n                return val + \" (boolean)\";\r\n            case xmlSchemaTypes.dateTime:\r\n                val =\r\n                    (_d = (_c = deserializeDatetime(value.value)) === null || _c === void 0 ? void 0 : _c.toUTCString()) !== null && _d !== void 0 ? _d : `Invalid data: \\`${value.value}\\``;\r\n                return val + \" (datetime)\";\r\n            case xmlSchemaTypes.decimal:\r\n                val =\r\n                    (_f = (_e = deserializeDecimal(value.value)) === null || _e === void 0 ? void 0 : _e.toString()) !== null && _f !== void 0 ? _f : `Invalid data: \\`${value.value}\\``;\r\n                return val + \" (decimal)\";\r\n            case xmlSchemaTypes.integer:\r\n                val =\r\n                    (_h = (_g = deserializeInteger(value.value)) === null || _g === void 0 ? void 0 : _g.toString()) !== null && _h !== void 0 ? _h : `Invalid data: \\`${value.value}\\``;\r\n                return val + \" (integer)\";\r\n            case xmlSchemaTypes.langString:\r\n                return `\"${value.value}\" (${value.language} string)`;\r\n            case xmlSchemaTypes.string:\r\n                return `\"${value.value}\" (string)`;\r\n            default:\r\n                return `[${value.value}] (RDF/JS Literal of type: \\`${value.datatype.value}\\`)`;\r\n        }\r\n    }\r\n    /* istanbul ignore else: thingAsMarkdown doesn't generate other Nodes, so we can't hit this path in tests. */\r\n    if (value.termType === \"BlankNode\") {\r\n        return `[${value.value}] (RDF/JS BlankNode)`;\r\n    }\r\n    /* istanbul ignore next: thingAsMarkdown doesn't generate Quad Nodes, so we can't hit this path in tests. */\r\n    if (value.termType === \"Quad\") {\r\n        return `??? (nested RDF* Quad)`;\r\n    }\r\n    /* istanbul ignore else: The if statements are exhaustive; if not, TypeScript will complain. */\r\n    /* istanbul ignore next: thingAsMarkdown doesn't generate Variable Nodes, so we can't hit this path in tests. */\r\n    if (value.termType === \"Variable\") {\r\n        return `?${value.value} (RDF/JS Variable)`;\r\n    }\r\n    /* istanbul ignore next: The if statements are exhaustive; if not, TypeScript will complain. */\r\n    return value;\r\n}\r\n/**\r\n * @hidden\r\n */\r\nfunction internal_throwIfNotThing(thing) {\r\n    if (!isThing(thing)) {\r\n        throw new ThingExpectedError(thing);\r\n    }\r\n}\r\n/**\r\n * @hidden\r\n * @param solidDataset\r\n */\r\nfunction internal_addAdditionsToChangeLog(solidDataset, additions) {\r\n    const changeLog = hasChangelog(solidDataset)\r\n        ? solidDataset.internal_changeLog\r\n        : /* istanbul ignore next: This function always gets called after addDeletionsToChangeLog, so the ChangeLog always already exists in tests: */\r\n            { additions: [], deletions: [] };\r\n    const [newAdditions, newDeletions] = additions\r\n        .filter((addition) => !containsBlankNode(addition))\r\n        .reduce(([additionsAcc, deletionsAcc], addition) => {\r\n        const existingDeletion = deletionsAcc.find((deletion) => deletion.equals(addition));\r\n        if (typeof existingDeletion !== \"undefined\") {\r\n            return [\r\n                additionsAcc,\r\n                deletionsAcc.filter((deletion) => !deletion.equals(addition)),\r\n            ];\r\n        }\r\n        return [additionsAcc.concat(addition), deletionsAcc];\r\n    }, [changeLog.additions, changeLog.deletions]);\r\n    return freeze(Object.assign(Object.assign({}, solidDataset), { internal_changeLog: {\r\n            additions: newAdditions,\r\n            deletions: newDeletions,\r\n        } }));\r\n}\r\n/**\r\n * @hidden\r\n * @param solidDataset\r\n */\r\nfunction internal_addDeletionsToChangeLog(solidDataset, deletions) {\r\n    const changeLog = hasChangelog(solidDataset)\r\n        ? solidDataset.internal_changeLog\r\n        : { additions: [], deletions: [] };\r\n    const [newAdditions, newDeletions] = deletions\r\n        .filter((deletion) => !containsBlankNode(deletion))\r\n        .reduce(([additionsAcc, deletionsAcc], deletion) => {\r\n        const existingAddition = additionsAcc.find((addition) => addition.equals(deletion));\r\n        if (typeof existingAddition !== \"undefined\") {\r\n            return [\r\n                additionsAcc.filter((addition) => !addition.equals(deletion)),\r\n                deletionsAcc,\r\n            ];\r\n        }\r\n        return [additionsAcc, deletionsAcc.concat(deletion)];\r\n    }, [changeLog.additions, changeLog.deletions]);\r\n    return freeze(Object.assign(Object.assign({}, solidDataset), { internal_changeLog: {\r\n            additions: newAdditions,\r\n            deletions: newDeletions,\r\n        } }));\r\n}\r\n/**\r\n * Enforces the presence of a Changelog for a given dataset. If a changelog is\r\n * already present, it is unchanged. Otherwise, an empty changelog is created.\r\n * @hidden\r\n * @param solidDataset\r\n */\r\nfunction internal_withChangeLog(solidDataset) {\r\n    const newSolidDataset = hasChangelog(solidDataset)\r\n        ? solidDataset\r\n        : freeze(Object.assign(Object.assign({}, solidDataset), { internal_changeLog: { additions: [], deletions: [] } }));\r\n    return newSolidDataset;\r\n}\r\n/**\r\n * We don't currently support reading and writing Blank Nodes, so this function can be used to skip those Quads.\r\n *\r\n * This is needed because we cannot reconcile Blank Nodes in additions and\r\n * deletions. Down the road, we should do a diff before saving a SolidDataset\r\n * against a saved copy of the originally-fetched one, based on our own data\r\n * structures, which should make it easier to reconcile.\r\n */\r\nfunction containsBlankNode(quad) {\r\n    return (quad.subject.termType === \"BlankNode\" ||\r\n        quad.object.termType === \"BlankNode\");\r\n}\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Returns the URLs of all Properties that the given [[Thing ]]has values for.b\r\n *\r\n * @param thing The [[Thing]] of which to get that Property URLs that have a value.\r\n * @returns The URLs of the Properties for which values are defined for the given Thing.\r\n * @hidden This is an advanced API that should not be needed for most Solid use cases. If you do find yourself needing this, please file a feature request sharing your use case.\r\n */\r\nfunction getPropertyAll(thing) {\r\n    return Object.keys(thing.predicates).filter((predicate) => getTerm(thing, predicate) !== null);\r\n}\r\n/**\r\n * Returns the URL value of the specified Property from a [[Thing]].\r\n * If the Property is not present or its value is not of type URL, returns null.\r\n * If the Property has multiple URL values, returns one of its URL values.\r\n *\r\n * @param thing The [[Thing]] to read a URL value from.\r\n * @param property The Property whose URL value to return.\r\n * @returns A URL value for the given Property if present, or null if the Property is not present or the value is not of type URL.\r\n */\r\nfunction getUrl(thing, property) {\r\n    var _a, _b, _c;\r\n    internal_throwIfNotThing(thing);\r\n    if (!internal_isValidUrl(property)) {\r\n        throw new ValidPropertyUrlExpectedError(property);\r\n    }\r\n    const predicateUrl = internal_toIriString(property);\r\n    const firstUrl = (_c = (_b = (_a = thing.predicates[predicateUrl]) === null || _a === void 0 ? void 0 : _a.namedNodes) === null || _b === void 0 ? void 0 : _b[0]) !== null && _c !== void 0 ? _c : null;\r\n    if (firstUrl === null) {\r\n        return null;\r\n    }\r\n    return isLocalNodeIri(firstUrl) ? `#${getLocalNodeName(firstUrl)}` : firstUrl;\r\n}\r\n/** @hidden Alias of [[getUrl]] for those who prefer IRI terminology. */\r\nconst getIri = getUrl;\r\n/**\r\n * Returns the URL values of the specified Property from a [[Thing]].\r\n * If the Property is not present, returns an empty array.\r\n * If the Property's value is not of type URL, omits that value in the array.\r\n *\r\n * @param thing The [[Thing]] to read the URL values from.\r\n * @param property The Property whose URL values to return.\r\n * @returns An array of URL values for the given Property.\r\n */\r\nfunction getUrlAll(thing, property) {\r\n    var _a, _b, _c;\r\n    internal_throwIfNotThing(thing);\r\n    if (!internal_isValidUrl(property)) {\r\n        throw new ValidPropertyUrlExpectedError(property);\r\n    }\r\n    const predicateUrl = internal_toIriString(property);\r\n    return ((_c = (_b = (_a = thing.predicates[predicateUrl]) === null || _a === void 0 ? void 0 : _a.namedNodes) === null || _b === void 0 ? void 0 : _b.map((iri) => isLocalNodeIri(iri) ? `#${getLocalNodeName(iri)}` : iri)) !== null && _c !== void 0 ? _c : []);\r\n}\r\n/** @hidden Alias of [[getUrlAll]] for those who prefer IRI terminology. */\r\nconst getIriAll = getUrlAll;\r\n/**\r\n * Returns the boolean value of the specified Property from a [[Thing]].\r\n * If the Property is not present or its value is not of type boolean, returns null.\r\n * If the Property has multiple boolean values, returns one of its values.\r\n *\r\n * @param thing The [[Thing]] to read a boolean value from.\r\n * @param property The Property whose boolean value to return.\r\n * @returns A boolean value for the given Property if present, or null if the Property is not present or the value is not of type boolean.\r\n */\r\nfunction getBoolean(thing, property) {\r\n    internal_throwIfNotThing(thing);\r\n    const literalString = getLiteralOfType(thing, property, xmlSchemaTypes.boolean);\r\n    if (literalString === null) {\r\n        return null;\r\n    }\r\n    return deserializeBoolean(literalString);\r\n}\r\n/**\r\n * Returns the boolean values of the specified Property from a [[Thing]].\r\n * If the Property is not present, returns an empty array.\r\n * If the Property's value is not of type boolean, omits that value in the array.\r\n *\r\n * @param thing The [[Thing]] to read the boolean values from.\r\n * @param property The Property whose boolean values to return.\r\n * @returns An array of boolean values for the given Property.\r\n */\r\nfunction getBooleanAll(thing, property) {\r\n    internal_throwIfNotThing(thing);\r\n    const literalStrings = getLiteralAllOfType(thing, property, xmlSchemaTypes.boolean);\r\n    return literalStrings\r\n        .map(deserializeBoolean)\r\n        .filter((possibleBoolean) => possibleBoolean !== null);\r\n}\r\n/**\r\n * Returns the datetime value of the specified Property from a [[Thing]].\r\n * If the Property is not present or its value is not of type datetime, returns null.\r\n * If the Property has multiple datetime values, returns one of its values.\r\n *\r\n * @param thing The [[Thing]] to read a datetime value from.\r\n * @param property The Property whose datetime value to return.\r\n * @returns A datetime value for the given Property if present, or null if the Property is not present or the value is not of type datetime.\r\n */\r\nfunction getDatetime(thing, property) {\r\n    internal_throwIfNotThing(thing);\r\n    const literalString = getLiteralOfType(thing, property, xmlSchemaTypes.dateTime);\r\n    if (literalString === null) {\r\n        return null;\r\n    }\r\n    return deserializeDatetime(literalString);\r\n}\r\n/**\r\n * Returns the datetime values of the specified Property from a [[Thing]].\r\n * If the Property is not present, returns an empty array.\r\n * If the Property's value is not of type datetime, omits that value in the array.\r\n *\r\n * @param thing The [[Thing]] to read the datetime values from.\r\n * @param property The Property whose datetime values to return.\r\n * @returns An array of datetime values for the given Property.\r\n */\r\nfunction getDatetimeAll(thing, property) {\r\n    internal_throwIfNotThing(thing);\r\n    const literalStrings = getLiteralAllOfType(thing, property, xmlSchemaTypes.dateTime);\r\n    return literalStrings\r\n        .map(deserializeDatetime)\r\n        .filter((potentialDatetime) => potentialDatetime !== null);\r\n}\r\n/**\r\n * Returns the date value of the specified Property from a [[Thing]].\r\n * If the Property is not present or its value is not of type date, returns null.\r\n * If the Property has multiple date values, returns one of its values.\r\n *\r\n * @param thing The [[Thing]] to read a date value from.\r\n * @param property The Property whose date value to return.\r\n * @returns A date value for the given Property if present, or null if the Property is not present or the value is not of type date.\r\n * @since 1.10.0\r\n */\r\nfunction getDate(thing, property) {\r\n    internal_throwIfNotThing(thing);\r\n    const literalString = getLiteralOfType(thing, property, xmlSchemaTypes.date);\r\n    if (literalString === null) {\r\n        return null;\r\n    }\r\n    return deserializeDate(literalString);\r\n}\r\n/**\r\n * Returns the date values of the specified Property from a [[Thing]].\r\n * If the Property is not present, returns an empty array.\r\n * If the Property's value is not of type date, omits that value in the array.\r\n *\r\n * @param thing The [[Thing]] to read the date values from.\r\n * @param property The Property whose date values to return.\r\n * @returns An array of date values for the given Property.\r\n * @since 1.10.0\r\n */\r\nfunction getDateAll(thing, property) {\r\n    internal_throwIfNotThing(thing);\r\n    const literalStrings = getLiteralAllOfType(thing, property, xmlSchemaTypes.date);\r\n    return literalStrings\r\n        .map(deserializeDate)\r\n        .filter((potentialDate) => potentialDate !== null);\r\n}\r\n/**\r\n * Returns the time value of the specified Property from a [[Thing]].\r\n * If the Property is not present or its value is not of type time, returns null.\r\n * If the Property has multiple time values, returns one of its values.\r\n *\r\n * @param thing The [[Thing]] to read a time value from.\r\n * @param property The Property whose time value to return.\r\n * @returns A time value for the given Property if present, or null if the Property is not present or the value is not of type time.\r\n * @since 1.10.0\r\n */\r\nfunction getTime(thing, property) {\r\n    internal_throwIfNotThing(thing);\r\n    const literalString = getLiteralOfType(thing, property, xmlSchemaTypes.time);\r\n    if (literalString === null) {\r\n        return null;\r\n    }\r\n    return deserializeTime(literalString);\r\n}\r\n/**\r\n * Returns the time values of the specified Property from a [[Thing]].\r\n * If the Property is not present, returns an empty array.\r\n * If the Property's value is not of type time, omits that value in the array.\r\n *\r\n * @param thing The [[Thing]] to read the time values from.\r\n * @param property The Property whose time values to return.\r\n * @returns An array of time values for the given Property.\r\n * @since 1.10.0\r\n */\r\nfunction getTimeAll(thing, property) {\r\n    internal_throwIfNotThing(thing);\r\n    const literalStrings = getLiteralAllOfType(thing, property, xmlSchemaTypes.time);\r\n    return literalStrings\r\n        .map(deserializeTime)\r\n        .filter((potentialTime) => potentialTime !== null);\r\n}\r\n/**\r\n * Returns the decimal value of the specified Property from a [[Thing]].\r\n * If the Property is not present or its value is not of type decimal, returns null.\r\n * If the Property has multiple decimal values, returns one of its values.\r\n *\r\n * @param thing The [[Thing]] to read a decimal value from.\r\n * @param property The Property whose decimal value to return.\r\n * @returns A decimal value for the given Property if present, or null if the Property is not present or the value is not of type decimal.\r\n */\r\nfunction getDecimal(thing, property) {\r\n    internal_throwIfNotThing(thing);\r\n    const literalString = getLiteralOfType(thing, property, xmlSchemaTypes.decimal);\r\n    if (literalString === null) {\r\n        return null;\r\n    }\r\n    return deserializeDecimal(literalString);\r\n}\r\n/**\r\n * Returns the decimal values of the specified Property from a [[Thing]].\r\n * If the Property is not present, returns an empty array.\r\n * If the Property's value is not of type decimal, omits that value in the array.\r\n *\r\n * @param thing The [[Thing]] to read the decimal values from.\r\n * @param property The Property whose decimal values to return.\r\n * @returns An array of decimal values for the given Property.\r\n */\r\nfunction getDecimalAll(thing, property) {\r\n    internal_throwIfNotThing(thing);\r\n    const literalStrings = getLiteralAllOfType(thing, property, xmlSchemaTypes.decimal);\r\n    return literalStrings\r\n        .map((literalString) => deserializeDecimal(literalString))\r\n        .filter((potentialDecimal) => potentialDecimal !== null);\r\n}\r\n/**\r\n * Returns the integer value of the specified Property from a [[Thing]].\r\n * If the Property is not present or its value is not of type integer, returns null.\r\n * If the Property has multiple integer values, returns one of its values.\r\n *\r\n * @param thing The [[Thing]] to read an integer value from.\r\n * @param property The Property whose integer value to return.\r\n * @returns A integer value for the given Property if present, or null if the Property is not present or the value is not of type datetime.\r\n */\r\nfunction getInteger(thing, property) {\r\n    internal_throwIfNotThing(thing);\r\n    const literalString = getLiteralOfType(thing, property, xmlSchemaTypes.integer);\r\n    if (literalString === null) {\r\n        return null;\r\n    }\r\n    return deserializeInteger(literalString);\r\n}\r\n/**\r\n * Returns the integer values of the specified Property from a [[Thing]].\r\n * If the Property is not present, returns an empty array.\r\n * If the Property's value is not of type integer, omits that value in the array.\r\n *\r\n * @param thing The [[Thing]] to read the integer values from.\r\n * @param property The Property whose integer values to return.\r\n * @returns An array of integer values for the given Property.\r\n */\r\nfunction getIntegerAll(thing, property) {\r\n    internal_throwIfNotThing(thing);\r\n    const literalStrings = getLiteralAllOfType(thing, property, xmlSchemaTypes.integer);\r\n    return literalStrings\r\n        .map((literalString) => deserializeInteger(literalString))\r\n        .filter((potentialInteger) => potentialInteger !== null);\r\n}\r\n/**\r\n * Returns the localized string value of the specified Property from a [[Thing]].\r\n * If the Property is not present as a string in the specified locale, returns null.\r\n * If the Property has multiple string values for the specified locale, returns one of its values.\r\n *\r\n * @param thing The [[Thing]] to read a localised string value from.\r\n * @param property The Property whose localised string value to return.\r\n * @param locale The desired locale for the string value.\r\n * @returns A localised string value for the given Property if present in the specified `locale`, or null otherwise.\r\n */\r\nfunction getStringWithLocale(thing, property, locale) {\r\n    var _a, _b;\r\n    internal_throwIfNotThing(thing);\r\n    if (!internal_isValidUrl(property)) {\r\n        throw new ValidPropertyUrlExpectedError(property);\r\n    }\r\n    const predicateIri = internal_toIriString(property);\r\n    const langStrings = (_b = (_a = thing.predicates[predicateIri]) === null || _a === void 0 ? void 0 : _a.langStrings) !== null && _b !== void 0 ? _b : {};\r\n    const existingLocales = Object.keys(langStrings);\r\n    const matchingLocale = existingLocales.find((existingLocale) => existingLocale.toLowerCase() === locale.toLowerCase() &&\r\n        Array.isArray(langStrings[existingLocale]) &&\r\n        langStrings[existingLocale].length > 0);\r\n    return typeof matchingLocale === \"string\"\r\n        ? langStrings[matchingLocale][0]\r\n        : null;\r\n}\r\n/**\r\n * Returns the localized string values of the specified Property from a [[Thing]].\r\n * If the Property is not present, returns an empty array.\r\n * If the Property's value is not a string of the specified locale, omits that value in the array.\r\n *\r\n * @param thing The [[Thing]] to read the localised string values from.\r\n * @param property The Property whose localised string values to return.\r\n * @param locale The desired locale for the string values.\r\n * @returns An array of localised string values for the given Property.\r\n */\r\nfunction getStringWithLocaleAll(thing, property, locale) {\r\n    var _a, _b;\r\n    internal_throwIfNotThing(thing);\r\n    if (!internal_isValidUrl(property)) {\r\n        throw new ValidPropertyUrlExpectedError(property);\r\n    }\r\n    const predicateIri = internal_toIriString(property);\r\n    const langStrings = (_b = (_a = thing.predicates[predicateIri]) === null || _a === void 0 ? void 0 : _a.langStrings) !== null && _b !== void 0 ? _b : {};\r\n    const existingLocales = Object.keys(langStrings);\r\n    const matchingLocale = existingLocales.find((existingLocale) => existingLocale.toLowerCase() === locale.toLowerCase() &&\r\n        Array.isArray(langStrings[existingLocale]) &&\r\n        langStrings[existingLocale].length > 0);\r\n    return typeof matchingLocale === \"string\"\r\n        ? [...langStrings[matchingLocale]]\r\n        : [];\r\n}\r\n/**\r\n * Returns all localized string values mapped by the locales for the specified property from the\r\n * specified [[Thing]] (explicitly filters out non-language string literals).\r\n *\r\n * @param thing The [[Thing]] to read the localised string values from.\r\n * @param property The Property whose localised string values to return.\r\n * @returns A Map of objects, keyed on locale with the value an array of string values (for that locale).\r\n */\r\nfunction getStringByLocaleAll(thing, property) {\r\n    var _a, _b;\r\n    internal_throwIfNotThing(thing);\r\n    if (!internal_isValidUrl(property)) {\r\n        throw new ValidPropertyUrlExpectedError(property);\r\n    }\r\n    const predicateIri = internal_toIriString(property);\r\n    const stringsByLocale = (_b = (_a = thing.predicates[predicateIri]) === null || _a === void 0 ? void 0 : _a.langStrings) !== null && _b !== void 0 ? _b : {};\r\n    return new Map(Object.entries(stringsByLocale).map(([locale, values]) => [\r\n        locale,\r\n        [...values],\r\n    ]));\r\n}\r\n/**\r\n * Returns the string value of the specified Property from a [[Thing]].\r\n * If the Property is not present or its value is not of type string, returns null.\r\n * If the Property has multiple string values, returns one of its values.\r\n *\r\n * @param thing The [[Thing]] to read a string value from.\r\n * @param property The Property whose string value to return.\r\n * @returns A string value for the given Property if present, or null if the Property is not present or the value is not of type string.\r\n */\r\nfunction getStringNoLocale(thing, property) {\r\n    internal_throwIfNotThing(thing);\r\n    const literalString = getLiteralOfType(thing, property, xmlSchemaTypes.string);\r\n    return literalString;\r\n}\r\n/**\r\n * Returns the string values of the specified Property from a [[Thing]].\r\n * If the Property is not present, returns an empty array.\r\n * If the Property's value is not of type string, omits that value in the array.\r\n *\r\n * @param thing The [[Thing]] to read the string values from.\r\n * @param property The Property whose string values to return.\r\n * @returns An array of string values for the given Property.\r\n */\r\nfunction getStringNoLocaleAll(thing, property) {\r\n    internal_throwIfNotThing(thing);\r\n    const literalStrings = getLiteralAllOfType(thing, property, xmlSchemaTypes.string);\r\n    return literalStrings;\r\n}\r\n/**\r\n * @param thing The [[Thing]] to read a NamedNode value from.\r\n * @param property The given Property for which you want the NamedNode value.\r\n * @returns A NamedNode value for the given Property, if present, or null otherwise.\r\n * @ignore This should not be needed due to the other get*() functions. If you do find yourself needing it, please file a feature request for your use case.\r\n * @see https://rdf.js.org/data-model-spec/#namednode-interface\r\n */\r\nfunction getNamedNode(thing, property) {\r\n    const iriString = getIri(thing, property);\r\n    if (iriString === null) {\r\n        return null;\r\n    }\r\n    return DataFactory.namedNode(iriString);\r\n}\r\n/**\r\n * @param thing The [[Thing]] to read the NamedNode values from.\r\n * @param property The given Property for which you want the NamedNode values.\r\n * @returns The NamedNode values for the given Property.\r\n * @ignore This should not be needed due to the other get*() functions. If you do find yourself needing it, please file a feature request for your use case.\r\n * @see https://rdf.js.org/data-model-spec/#namednode-interface\r\n */\r\nfunction getNamedNodeAll(thing, property) {\r\n    const iriStrings = getIriAll(thing, property);\r\n    return iriStrings.map((iriString) => DataFactory.namedNode(iriString));\r\n}\r\n/**\r\n * @param thing The [[Thing]] to read a Literal value from.\r\n * @param property The given Property for which you want the Literal value.\r\n * @returns A Literal value for the given Property, if present, or null otherwise.\r\n * @ignore This should not be needed due to the other get*() functions. If you do find yourself needing it, please file a feature request for your use case.\r\n * @see https://rdf.js.org/data-model-spec/#literal-interface\r\n */\r\nfunction getLiteral(thing, property) {\r\n    var _a, _b, _c, _d;\r\n    internal_throwIfNotThing(thing);\r\n    if (!internal_isValidUrl(property)) {\r\n        throw new ValidPropertyUrlExpectedError(property);\r\n    }\r\n    const predicateIri = internal_toIriString(property);\r\n    const langStrings = (_b = (_a = thing.predicates[predicateIri]) === null || _a === void 0 ? void 0 : _a.langStrings) !== null && _b !== void 0 ? _b : {};\r\n    const locales = Object.keys(langStrings);\r\n    if (locales.length > 0) {\r\n        const nonEmptyLocale = locales.find((locale) => Array.isArray(langStrings[locale]) && langStrings[locale].length > 0);\r\n        if (typeof nonEmptyLocale === \"string\") {\r\n            return DataFactory.literal(langStrings[nonEmptyLocale][0], nonEmptyLocale);\r\n        }\r\n    }\r\n    const otherLiterals = (_d = (_c = thing.predicates[predicateIri]) === null || _c === void 0 ? void 0 : _c.literals) !== null && _d !== void 0 ? _d : {};\r\n    const dataTypes = Object.keys(otherLiterals);\r\n    if (dataTypes.length > 0) {\r\n        const nonEmptyDataType = dataTypes.find((dataType) => Array.isArray(otherLiterals[dataType]) &&\r\n            otherLiterals[dataType].length > 0);\r\n        if (typeof nonEmptyDataType === \"string\") {\r\n            return DataFactory.literal(otherLiterals[nonEmptyDataType][0], DataFactory.namedNode(nonEmptyDataType));\r\n        }\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * @param thing The [[Thing]] to read the Literal values from.\r\n * @param property The given Property for which you want the Literal values.\r\n * @returns The Literal values for the given Property.\r\n * @ignore This should not be needed due to the other get*All() functions. If you do find yourself needing it, please file a feature request for your use case.\r\n * @see https://rdf.js.org/data-model-spec/#literal-interface\r\n */\r\nfunction getLiteralAll(thing, property) {\r\n    var _a, _b, _c, _d;\r\n    internal_throwIfNotThing(thing);\r\n    if (!internal_isValidUrl(property)) {\r\n        throw new ValidPropertyUrlExpectedError(property);\r\n    }\r\n    const predicateIri = internal_toIriString(property);\r\n    let literals = [];\r\n    const langStrings = (_b = (_a = thing.predicates[predicateIri]) === null || _a === void 0 ? void 0 : _a.langStrings) !== null && _b !== void 0 ? _b : {};\r\n    const locales = Object.keys(langStrings);\r\n    for (const locale of locales) {\r\n        const stringsInLocale = langStrings[locale];\r\n        const localeLiterals = stringsInLocale.map((langString) => DataFactory.literal(langString, locale));\r\n        literals = literals.concat(localeLiterals);\r\n    }\r\n    const otherLiterals = (_d = (_c = thing.predicates[predicateIri]) === null || _c === void 0 ? void 0 : _c.literals) !== null && _d !== void 0 ? _d : {};\r\n    const dataTypes = Object.keys(otherLiterals);\r\n    for (const dataType of dataTypes) {\r\n        const values = otherLiterals[dataType];\r\n        const typeNode = DataFactory.namedNode(dataType);\r\n        const dataTypeLiterals = values.map((value) => DataFactory.literal(value, typeNode));\r\n        literals = literals.concat(dataTypeLiterals);\r\n    }\r\n    return literals;\r\n}\r\n/**\r\n * @param thing The [[Thing]] to read a raw RDF/JS value from.\r\n * @param property The given Property for which you want the raw value.\r\n * @returns A Term for the given Property, if present, or null otherwise.\r\n * @ignore This should not be needed due to the other get*() functions. If you do find yourself needing it, please file a feature request for your use case.\r\n * @see https://rdf.js.org/data-model-spec/\r\n * @since 0.3.0\r\n */\r\nfunction getTerm(thing, property) {\r\n    var _a, _b;\r\n    internal_throwIfNotThing(thing);\r\n    const namedNode = getNamedNode(thing, property);\r\n    if (namedNode !== null) {\r\n        return namedNode;\r\n    }\r\n    const literal = getLiteral(thing, property);\r\n    if (literal !== null) {\r\n        return literal;\r\n    }\r\n    const predicateIri = internal_toIriString(property);\r\n    const blankNodes = (_b = (_a = thing.predicates[predicateIri]) === null || _a === void 0 ? void 0 : _a.blankNodes) !== null && _b !== void 0 ? _b : [];\r\n    if (blankNodes.length > 0) {\r\n        const blankNodeValue = isBlankNodeId(blankNodes[0])\r\n            ? getBlankNodeValue(blankNodes[0])\r\n            : undefined;\r\n        return DataFactory.blankNode(blankNodeValue);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * @param thing The [[Thing]] to read the raw RDF/JS values from.\r\n * @param property The given Property for which you want the raw values.\r\n * @returns The Terms for the given Property.\r\n * @ignore This should not be needed due to the other get*() functions. If you do find yourself needing it, please file a feature request for your use case.\r\n * @see https://rdf.js.org/data-model-spec/\r\n * @since 0.3.0\r\n */\r\nfunction getTermAll(thing, property) {\r\n    var _a, _b;\r\n    internal_throwIfNotThing(thing);\r\n    const namedNodes = getNamedNodeAll(thing, property);\r\n    const literals = getLiteralAll(thing, property);\r\n    const predicateIri = internal_toIriString(property);\r\n    const blankNodeValues = (_b = (_a = thing.predicates[predicateIri]) === null || _a === void 0 ? void 0 : _a.blankNodes) !== null && _b !== void 0 ? _b : [];\r\n    const blankNodes = blankNodeValues.map((rawBlankNode) => {\r\n        const blankNodeName = isBlankNodeId(rawBlankNode)\r\n            ? getBlankNodeValue(rawBlankNode)\r\n            : undefined;\r\n        return DataFactory.blankNode(blankNodeName);\r\n    });\r\n    const terms = namedNodes\r\n        .concat(literals)\r\n        .concat(blankNodes);\r\n    return terms;\r\n}\r\n/**\r\n * @param thing The [Thing]] to read a Literal of the given type from.\r\n * @param property The given Property for which you want the Literal value.\r\n * @param literalType Set type of the Literal data.\r\n * @returns The stringified value for the given Property and type, if present, or null otherwise.\r\n */\r\nfunction getLiteralOfType(thing, property, literalType) {\r\n    var _a, _b, _c, _d;\r\n    if (!internal_isValidUrl(property)) {\r\n        throw new ValidPropertyUrlExpectedError(property);\r\n    }\r\n    const predicateIri = internal_toIriString(property);\r\n    return (_d = (_c = (_b = (_a = thing.predicates[predicateIri]) === null || _a === void 0 ? void 0 : _a.literals) === null || _b === void 0 ? void 0 : _b[literalType]) === null || _c === void 0 ? void 0 : _c[0]) !== null && _d !== void 0 ? _d : null;\r\n}\r\n/**\r\n * @param thing The [Thing]] to read the Literals of the given type from.\r\n * @param property The given Property for which you want the Literal values.\r\n * @param literalType Set type of the Literal data.\r\n * @returns The stringified values for the given Property and type.\r\n */\r\nfunction getLiteralAllOfType(thing, property, literalType) {\r\n    var _a, _b, _c;\r\n    if (!internal_isValidUrl(property)) {\r\n        throw new ValidPropertyUrlExpectedError(property);\r\n    }\r\n    const predicateIri = internal_toIriString(property);\r\n    const literalsOfType = (_c = (_b = (_a = thing.predicates[predicateIri]) === null || _a === void 0 ? void 0 : _a.literals) === null || _b === void 0 ? void 0 : _b[literalType]) !== null && _c !== void 0 ? _c : [];\r\n    return [...literalsOfType];\r\n}\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Extract Quads with a given Subject from a [[SolidDataset]] into a [[Thing]].\r\n *\r\n * @param solidDataset The [[SolidDataset]] to extract the [[Thing]] from.\r\n * @param thingUrl The URL of the desired [[Thing]].\r\n * @param options Not yet implemented.\r\n */\r\nfunction getThing(solidDataset, thingUrl, options = {}) {\r\n    var _a;\r\n    if (!internal_isValidUrl(thingUrl)) {\r\n        throw new ValidThingUrlExpectedError(thingUrl);\r\n    }\r\n    const graph = typeof options.scope !== \"undefined\"\r\n        ? internal_toIriString(options.scope)\r\n        : \"default\";\r\n    const thingsByIri = (_a = solidDataset.graphs[graph]) !== null && _a !== void 0 ? _a : {};\r\n    const thingIri = internal_toIriString(thingUrl);\r\n    const resolvedThingIri = isLocalNodeIri(thingIri) && hasServerResourceInfo(solidDataset)\r\n        ? resolveLocalIri(getLocalNodeName(thingIri), getSourceUrl(solidDataset))\r\n        : thingIri;\r\n    const thing = thingsByIri[resolvedThingIri];\r\n    if (typeof thing === \"undefined\") {\r\n        return null;\r\n    }\r\n    return thing;\r\n}\r\n/**\r\n * Get all [[Thing]]s about which a [[SolidDataset]] contains Quads.\r\n *\r\n * @param solidDataset The [[SolidDataset]] to extract the [[Thing]]s from.\r\n * @param options Not yet implemented.\r\n */\r\nfunction getThingAll(solidDataset, options = {}) {\r\n    var _a;\r\n    const graph = typeof options.scope !== \"undefined\"\r\n        ? internal_toIriString(options.scope)\r\n        : \"default\";\r\n    const thingsByIri = (_a = solidDataset.graphs[graph]) !== null && _a !== void 0 ? _a : {};\r\n    return Object.values(thingsByIri).filter((thing) => !isBlankNodeId(thing.url));\r\n}\r\n/**\r\n * Insert a [[Thing]] into a [[SolidDataset]], replacing previous instances of that Thing.\r\n *\r\n * @param solidDataset The SolidDataset to insert a Thing into.\r\n * @param thing The Thing to insert into the given SolidDataset.\r\n * @returns A new SolidDataset equal to the given SolidDataset, but with the given Thing.\r\n */\r\nfunction setThing(solidDataset, thing) {\r\n    var _a;\r\n    const thingIri = isThingLocal(thing) && hasServerResourceInfo(solidDataset)\r\n        ? resolveLocalIri(getLocalNodeName(thing.url), getSourceUrl(solidDataset))\r\n        : thing.url;\r\n    const defaultGraph = solidDataset.graphs.default;\r\n    const updatedDefaultGraph = freeze(Object.assign(Object.assign({}, defaultGraph), { [thingIri]: freeze(Object.assign(Object.assign({}, thing), { url: thingIri })) }));\r\n    const updatedGraphs = freeze(Object.assign(Object.assign({}, solidDataset.graphs), { default: updatedDefaultGraph }));\r\n    const subjectNode = DataFactory.namedNode(thingIri);\r\n    const deletedThingPredicates = (_a = solidDataset.graphs.default[thingIri]) === null || _a === void 0 ? void 0 : _a.predicates;\r\n    const deletions = typeof deletedThingPredicates !== \"undefined\"\r\n        ? subjectToRdfJsQuads(deletedThingPredicates, subjectNode, DataFactory.defaultGraph())\r\n        : [];\r\n    const additions = subjectToRdfJsQuads(thing.predicates, subjectNode, DataFactory.defaultGraph());\r\n    return internal_addAdditionsToChangeLog(internal_addDeletionsToChangeLog(freeze(Object.assign(Object.assign({}, solidDataset), { graphs: updatedGraphs })), deletions), additions);\r\n}\r\n/**\r\n * Remove a Thing from a SolidDataset.\r\n *\r\n * @param solidDataset The SolidDataset to remove a Thing from.\r\n * @param thing The Thing to remove from `solidDataset`.\r\n * @returns A new [[SolidDataset]] equal to the input SolidDataset, excluding the given Thing.\r\n */\r\nfunction removeThing(solidDataset, thing) {\r\n    var _a;\r\n    let thingIri;\r\n    if (isNamedNode(thing)) {\r\n        thingIri = thing.value;\r\n    }\r\n    else if (typeof thing === \"string\") {\r\n        thingIri =\r\n            isLocalNodeIri(thing) && hasServerResourceInfo(solidDataset)\r\n                ? resolveLocalIri(getLocalNodeName(thing), getSourceUrl(solidDataset))\r\n                : thing;\r\n    }\r\n    else if (isThingLocal(thing)) {\r\n        thingIri = thing.url;\r\n    }\r\n    else {\r\n        thingIri = asIri(thing);\r\n    }\r\n    const defaultGraph = solidDataset.graphs.default;\r\n    const updatedDefaultGraph = Object.assign({}, defaultGraph);\r\n    delete updatedDefaultGraph[thingIri];\r\n    const updatedGraphs = freeze(Object.assign(Object.assign({}, solidDataset.graphs), { default: freeze(updatedDefaultGraph) }));\r\n    const subjectNode = DataFactory.namedNode(thingIri);\r\n    const deletedThingPredicates = (_a = solidDataset.graphs.default[thingIri]) === null || _a === void 0 ? void 0 : _a.predicates;\r\n    const deletions = typeof deletedThingPredicates !== \"undefined\"\r\n        ? subjectToRdfJsQuads(deletedThingPredicates, subjectNode, DataFactory.defaultGraph())\r\n        : [];\r\n    return internal_addDeletionsToChangeLog(freeze(Object.assign(Object.assign({}, solidDataset), { graphs: updatedGraphs })), deletions);\r\n}\r\nfunction createThing(options = {}) {\r\n    var _a;\r\n    if (typeof options.url !== \"undefined\") {\r\n        const url = options.url;\r\n        if (!internal_isValidUrl(url)) {\r\n            throw new ValidThingUrlExpectedError(url);\r\n        }\r\n        const thing = freeze({\r\n            type: \"Subject\",\r\n            predicates: freeze({}),\r\n            url: url,\r\n        });\r\n        return thing;\r\n    }\r\n    const name = (_a = options.name) !== null && _a !== void 0 ? _a : generateName();\r\n    const localNodeIri = getLocalNodeIri(name);\r\n    const thing = freeze({\r\n        type: \"Subject\",\r\n        predicates: freeze({}),\r\n        url: localNodeIri,\r\n    });\r\n    return thing;\r\n}\r\n/**\r\n * @param input An value that might be a [[Thing]].\r\n * @returns Whether `input` is a Thing.\r\n * @since 0.2.0\r\n */\r\nfunction isThing(input) {\r\n    return (typeof input === \"object\" &&\r\n        input !== null &&\r\n        typeof input.type === \"string\" &&\r\n        input.type === \"Subject\");\r\n}\r\nfunction asUrl(thing, baseUrl) {\r\n    if (isThingLocal(thing)) {\r\n        if (typeof baseUrl === \"undefined\") {\r\n            throw new Error(\"The URL of a Thing that has not been persisted cannot be determined without a base URL.\");\r\n        }\r\n        return resolveLocalIri(getLocalNodeName(thing.url), baseUrl);\r\n    }\r\n    return thing.url;\r\n}\r\n/** @hidden Alias of [[asUrl]] for those who prefer IRI terminology. */\r\nconst asIri = asUrl;\r\n/**\r\n * Gets a human-readable representation of the given Thing to aid debugging.\r\n *\r\n * Note that changes to the exact format of the return value are not considered a breaking change;\r\n * it is intended to aid in debugging, not as a serialisation method that can be reliably parsed.\r\n *\r\n * @param thing The Thing to get a human-readable representation of.\r\n * @since 0.3.0\r\n */\r\nfunction thingAsMarkdown(thing) {\r\n    let thingAsMarkdown = \"\";\r\n    if (isThingLocal(thing)) {\r\n        thingAsMarkdown += `## Thing (no URL yet — identifier: \\`#${getLocalNodeName(thing.url)}\\`)\\n`;\r\n    }\r\n    else {\r\n        thingAsMarkdown += `## Thing: ${thing.url}\\n`;\r\n    }\r\n    const predicateIris = Object.keys(thing.predicates);\r\n    if (predicateIris.length === 0) {\r\n        thingAsMarkdown += \"\\n<empty>\\n\";\r\n    }\r\n    else {\r\n        for (const predicate of predicateIris) {\r\n            thingAsMarkdown += `\\nProperty: ${predicate}\\n`;\r\n            const values = getTermAll(thing, predicate);\r\n            values.forEach((value) => {\r\n                thingAsMarkdown += `- ${internal_getReadableValue(value)}\\n`;\r\n            });\r\n        }\r\n    }\r\n    return thingAsMarkdown;\r\n}\r\n/**\r\n * @param thing The [[Thing]] of which a URL might or might not be known.\r\n * @return `true` if `thing` has no known URL yet.\r\n * @since 1.7.0\r\n */\r\nfunction isThingLocal(thing) {\r\n    return isLocalNodeIri(thing.url);\r\n}\r\n/**\r\n * This error is thrown when a function expected to receive a [[Thing]] but received something else.\r\n * @since 1.2.0\r\n */\r\nclass ThingExpectedError extends SolidClientError {\r\n    constructor(receivedValue) {\r\n        const message = `Expected a Thing, but received: [${receivedValue}].`;\r\n        super(message);\r\n        this.receivedValue = receivedValue;\r\n    }\r\n}\r\n/**\r\n * This error is thrown when a function expected to receive a valid URL to identify a property but received something else.\r\n */\r\nclass ValidPropertyUrlExpectedError extends SolidClientError {\r\n    constructor(receivedValue) {\r\n        const value = isNamedNode(receivedValue)\r\n            ? receivedValue.value\r\n            : receivedValue;\r\n        const message = `Expected a valid URL to identify a property, but received: [${value}].`;\r\n        super(message);\r\n        this.receivedProperty = value;\r\n    }\r\n}\r\n/**\r\n * This error is thrown when a function expected to receive a valid URL value but received something else.\r\n */\r\nclass ValidValueUrlExpectedError extends SolidClientError {\r\n    constructor(receivedValue) {\r\n        const value = isNamedNode(receivedValue)\r\n            ? receivedValue.value\r\n            : receivedValue;\r\n        const message = `Expected a valid URL value, but received: [${value}].`;\r\n        super(message);\r\n        this.receivedValue = value;\r\n    }\r\n}\r\n/**\r\n * This error is thrown when a function expected to receive a valid URL to identify a [[Thing]] but received something else.\r\n */\r\nclass ValidThingUrlExpectedError extends SolidClientError {\r\n    constructor(receivedValue) {\r\n        const value = isNamedNode(receivedValue)\r\n            ? receivedValue.value\r\n            : receivedValue;\r\n        const message = `Expected a valid URL to identify a Thing, but received: [${value}].`;\r\n        super(message);\r\n        this.receivedValue = value;\r\n    }\r\n}\r\n/**\r\n * Generate a string that can be used as the unique identifier for a Thing\r\n *\r\n * This function works by starting with a date string (so that Things can be\r\n * sorted chronologically), followed by a random number generated by taking a\r\n * random number between 0 and 1, and cutting off the `0.`.\r\n *\r\n * @internal\r\n * @returns An string that's likely to be unique\r\n */\r\nconst generateName = () => {\r\n    return (Date.now().toString() + Math.random().toString().substring(\"0.\".length));\r\n};\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * This function normalizes IRIs as managed by the server to ease accurate comparison.\r\n * @param iri\r\n * @hidden\r\n */\r\nfunction normalizeServerSideIri(iri) {\r\n    const iriObj = new URL(iri);\r\n    iriObj.hash = \"\";\r\n    return iriObj.href;\r\n}\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Initialise a new [[SolidDataset]] in memory.\r\n *\r\n * @returns An empty [[SolidDataset]].\r\n */\r\nfunction createSolidDataset() {\r\n    return freeze({\r\n        type: \"Dataset\",\r\n        graphs: {\r\n            default: {},\r\n        },\r\n    });\r\n}\r\n/**\r\n * @hidden This interface is not exposed yet until we've tried it out in practice.\r\n */\r\nasync function responseToSolidDataset(response, parseOptions = {}) {\r\n    if (internal_isUnsuccessfulResponse(response)) {\r\n        throw new FetchError(`Fetching the SolidDataset at [${response.url}] failed: [${response.status}] [${response.statusText}].`, response);\r\n    }\r\n    const resourceInfo = responseToResourceInfo(response);\r\n    const parsers = Object.assign({ \"text/turtle\": getTurtleParser() }, parseOptions.parsers);\r\n    const contentType = getContentType$1(resourceInfo);\r\n    if (contentType === null) {\r\n        throw new Error(`Could not determine the content type of the Resource at [${getSourceUrl(resourceInfo)}].`);\r\n    }\r\n    const mimeType = contentType.split(\";\")[0];\r\n    const parser = parsers[mimeType];\r\n    if (typeof parser === \"undefined\") {\r\n        throw new Error(`The Resource at [${getSourceUrl(resourceInfo)}] has a MIME type of [${mimeType}], but the only parsers available are for the following MIME types: [${Object.keys(parsers).join(\", \")}].`);\r\n    }\r\n    const data = await response.text();\r\n    const parsingPromise = new Promise((resolve, reject) => {\r\n        let solidDataset = freeze({\r\n            graphs: freeze({ default: freeze({}) }),\r\n            type: \"Dataset\",\r\n        });\r\n        // While Quads without Blank Nodes can be added to the SolidDataset as we\r\n        // encounter them, to parse Quads with Blank Nodes, we'll have to wait until\r\n        // we've seen all the Quads, so that we can reconcile equal Blank Nodes.\r\n        const quadsWithBlankNodes = [];\r\n        const allQuads = [];\r\n        parser.onError((error) => {\r\n            reject(new Error(`Encountered an error parsing the Resource at [${getSourceUrl(resourceInfo)}] with content type [${contentType}]: ${error}`));\r\n        });\r\n        parser.onQuad((quad) => {\r\n            allQuads.push(quad);\r\n            if (quad.subject.termType === \"BlankNode\" ||\r\n                quad.object.termType === \"BlankNode\") {\r\n                // Quads with Blank Nodes will be parsed when all Quads are known,\r\n                // so that equal Blank Nodes can be reconciled:\r\n                quadsWithBlankNodes.push(quad);\r\n            }\r\n            else {\r\n                solidDataset = addRdfJsQuadToDataset(solidDataset, quad);\r\n            }\r\n        });\r\n        parser.onComplete(async () => {\r\n            // If a Resource contains more than this number of Blank Nodes,\r\n            // we consider the detection of chains (O(n^2), I think) to be too\r\n            // expensive, and just incorporate them as regular Blank Nodes with\r\n            // non-deterministic, ad-hoc identifiers into the SolidDataset:\r\n            const maxBlankNodesToDetectChainsFor = 20;\r\n            // Some Blank Nodes only serve to use a set of Quads as the Object for a\r\n            // single Subject. Those Quads will be added to the SolidDataset when\r\n            // their Subject's Blank Node is encountered in the Object position.\r\n            const chainBlankNodes = quadsWithBlankNodes.length <= maxBlankNodesToDetectChainsFor\r\n                ? getChainBlankNodes(quadsWithBlankNodes)\r\n                : [];\r\n            const quadsWithoutChainBlankNodeSubjects = quadsWithBlankNodes.filter((quad) => chainBlankNodes.every((chainBlankNode) => !chainBlankNode.equals(quad.subject)));\r\n            solidDataset = quadsWithoutChainBlankNodeSubjects.reduce((datasetAcc, quad) => addRdfJsQuadToDataset(datasetAcc, quad, {\r\n                otherQuads: allQuads,\r\n                chainBlankNodes: chainBlankNodes,\r\n            }), solidDataset);\r\n            const solidDatasetWithResourceInfo = freeze(Object.assign(Object.assign({}, solidDataset), resourceInfo));\r\n            resolve(solidDatasetWithResourceInfo);\r\n        });\r\n        parser.parse(data, resourceInfo);\r\n    });\r\n    return await parsingPromise;\r\n}\r\n/**\r\n * Fetch a SolidDataset from the given URL. Currently requires the SolidDataset to be available as [Turtle](https://www.w3.org/TR/turtle/).\r\n *\r\n * @param url URL to fetch a [[SolidDataset]] from.\r\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\r\n * @returns Promise resolving to a [[SolidDataset]] containing the data at the given Resource, or rejecting if fetching it failed.\r\n */\r\nasync function getSolidDataset(url, options = internal_defaultFetchOptions) {\r\n    var _a;\r\n    url = internal_toIriString(url);\r\n    const config = Object.assign(Object.assign({}, internal_defaultFetchOptions), options);\r\n    const parserContentTypes = Object.keys((_a = options.parsers) !== null && _a !== void 0 ? _a : {});\r\n    const acceptedContentTypes = parserContentTypes.length > 0\r\n        ? parserContentTypes.join(\", \")\r\n        : \"text/turtle\";\r\n    const response = await config.fetch(url, {\r\n        headers: {\r\n            Accept: acceptedContentTypes,\r\n        },\r\n    });\r\n    if (internal_isUnsuccessfulResponse(response)) {\r\n        throw new FetchError(`Fetching the Resource at [${url}] failed: [${response.status}] [${response.statusText}].`, response);\r\n    }\r\n    const solidDataset = await responseToSolidDataset(response, options);\r\n    return solidDataset;\r\n}\r\n/**\r\n * Create a SPARQL UPDATE Patch request from a [[SolidDataset]] with a changelog.\r\n * @param solidDataset the [[SolidDataset]] that has been locally updated, and that should be persisted.\r\n * @returns an HTTP PATCH request configuration object, aligned with the [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters), containing a SPARQL UPDATE.\r\n * @hidden\r\n */\r\nasync function prepareSolidDatasetUpdate(solidDataset) {\r\n    const deleteStatement = solidDataset.internal_changeLog.deletions.length > 0\r\n        ? `DELETE DATA {${(await triplesToTurtle(solidDataset.internal_changeLog.deletions.map(getNamedNodesForLocalNodes))).trim()}};`\r\n        : \"\";\r\n    const insertStatement = solidDataset.internal_changeLog.additions.length > 0\r\n        ? `INSERT DATA {${(await triplesToTurtle(solidDataset.internal_changeLog.additions.map(getNamedNodesForLocalNodes))).trim()}};`\r\n        : \"\";\r\n    return {\r\n        method: \"PATCH\",\r\n        body: `${deleteStatement} ${insertStatement}`,\r\n        headers: {\r\n            \"Content-Type\": \"application/sparql-update\",\r\n        },\r\n    };\r\n}\r\n/**\r\n * Create a Put request to write a locally created [[SolidDataset]] to a Pod.\r\n * @param solidDataset the [[SolidDataset]] that has been locally updated, and that should be persisted.\r\n * @returns an HTTP PUT request configuration object, aligned with the [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters), containing a serialization of the [[SolidDataset]].\r\n * @hidden\r\n */\r\nasync function prepareSolidDatasetCreation(solidDataset) {\r\n    return {\r\n        method: \"PUT\",\r\n        body: await triplesToTurtle(toRdfJsQuads(solidDataset).map(getNamedNodesForLocalNodes)),\r\n        headers: {\r\n            \"Content-Type\": \"text/turtle\",\r\n            \"If-None-Match\": \"*\",\r\n            Link: `<${ldp.Resource}>; rel=\"type\"`,\r\n        },\r\n    };\r\n}\r\n/**\r\n * Given a SolidDataset, store it in a Solid Pod (overwriting the existing data at the given URL).\r\n *\r\n * A SolidDataset keeps track of the data changes compared to the data in the Pod; i.e.,\r\n * the changelog tracks both the old value and new values of the property being modified. This\r\n * function applies the changes to the current SolidDataset. If the old value specified in the\r\n * changelog does not correspond to the value currently in the Pod, this function will throw an\r\n * error.\r\n * The SolidDataset returned by this function will contain the data sent to the Pod, and a ChangeLog\r\n * up-to-date with the saved data. Note that if the data on the server was modified in between the\r\n * first fetch and saving it, the updated data will not be reflected in the returned SolidDataset.\r\n * To make sure you have the latest data, call [[getSolidDataset]] again after saving the data.\r\n *\r\n * The Solid server will create any intermediary Containers that do not exist yet, so they do not\r\n * need to be created in advance. For example, if the target URL is\r\n * https://example.pod/container/resource and https://example.pod/container/ does not exist yet,\r\n * it will exist after this function resolves successfully.\r\n *\r\n * @param url URL to save `solidDataset` to.\r\n * @param solidDataset The [[SolidDataset]] to save.\r\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\r\n * @returns A Promise resolving to a [[SolidDataset]] containing the stored data, or rejecting if saving it failed.\r\n */\r\nasync function saveSolidDatasetAt(url, solidDataset, options = internal_defaultFetchOptions) {\r\n    url = internal_toIriString(url);\r\n    const config = Object.assign(Object.assign({}, internal_defaultFetchOptions), options);\r\n    const datasetWithChangelog = internal_withChangeLog(solidDataset);\r\n    const requestInit = isUpdate(datasetWithChangelog, url)\r\n        ? await prepareSolidDatasetUpdate(datasetWithChangelog)\r\n        : await prepareSolidDatasetCreation(datasetWithChangelog);\r\n    const response = await config.fetch(url, requestInit);\r\n    if (internal_isUnsuccessfulResponse(response)) {\r\n        const diagnostics = isUpdate(datasetWithChangelog, url)\r\n            ? \"The changes that were sent to the Pod are listed below.\\n\\n\" +\r\n                changeLogAsMarkdown(datasetWithChangelog)\r\n            : \"The SolidDataset that was sent to the Pod is listed below.\\n\\n\" +\r\n                solidDatasetAsMarkdown(datasetWithChangelog);\r\n        throw new FetchError(`Storing the Resource at [${url}] failed: [${response.status}] [${response.statusText}].\\n\\n` +\r\n            diagnostics, response);\r\n    }\r\n    const resourceInfo = Object.assign(Object.assign({}, internal_parseResourceInfo(response)), { isRawData: false });\r\n    const storedDataset = freeze(Object.assign(Object.assign({}, solidDataset), { internal_changeLog: { additions: [], deletions: [] }, internal_resourceInfo: resourceInfo }));\r\n    const storedDatasetWithResolvedIris = resolveLocalIrisInSolidDataset(storedDataset);\r\n    return storedDatasetWithResolvedIris;\r\n}\r\n/**\r\n * Deletes the SolidDataset at a given URL.\r\n *\r\n * If operating on a container, the container must be empty otherwise a 409 CONFLICT will be raised.\r\n *\r\n * @param file The (URL of the) SolidDataset to delete\r\n * @since 0.6.0\r\n */\r\nasync function deleteSolidDataset(solidDataset, options = internal_defaultFetchOptions) {\r\n    const config = Object.assign(Object.assign({}, internal_defaultFetchOptions), options);\r\n    const url = hasResourceInfo(solidDataset)\r\n        ? internal_toIriString(getSourceUrl(solidDataset))\r\n        : internal_toIriString(solidDataset);\r\n    const response = await config.fetch(url, { method: \"DELETE\" });\r\n    if (internal_isUnsuccessfulResponse(response)) {\r\n        throw new FetchError(`Deleting the SolidDataset at [${url}] failed: [${response.status}] [${response.statusText}].`, response);\r\n    }\r\n}\r\n/**\r\n * Create an empty Container at the given URL.\r\n *\r\n * Throws an error if creating the Container failed, e.g. because the current user does not have\r\n * permissions to, or because the Container already exists.\r\n *\r\n * Note that a Solid server will automatically create the necessary Containers when storing a\r\n * Resource; i.e. there is no need to call this function if it is immediately followed by\r\n * [[saveSolidDatasetAt]] or [[overwriteFile]].\r\n *\r\n * @param url URL of the empty Container that is to be created.\r\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\r\n * @since 0.2.0\r\n */\r\nasync function createContainerAt(url, options = internal_defaultFetchOptions) {\r\n    url = internal_toIriString(url);\r\n    url = url.endsWith(\"/\") ? url : url + \"/\";\r\n    const config = Object.assign(Object.assign({}, internal_defaultFetchOptions), options);\r\n    const response = await config.fetch(url, {\r\n        method: \"PUT\",\r\n        headers: {\r\n            Accept: \"text/turtle\",\r\n            \"Content-Type\": \"text/turtle\",\r\n            \"If-None-Match\": \"*\",\r\n            // This header should not be required to create a Container,\r\n            // but ESS currently expects it:\r\n            Link: `<${ldp.BasicContainer}>; rel=\"type\"`,\r\n        },\r\n    });\r\n    if (internal_isUnsuccessfulResponse(response)) {\r\n        if (response.status === 409 &&\r\n            response.statusText === \"Conflict\" &&\r\n            (await response.text()).trim() ===\r\n                internal_NSS_CREATE_CONTAINER_SPEC_NONCOMPLIANCE_DETECTION_ERROR_MESSAGE_TO_WORKAROUND_THEIR_ISSUE_1465) {\r\n            return createContainerWithNssWorkaroundAt(url, options);\r\n        }\r\n        throw new FetchError(`Creating the empty Container at [${url}] failed: [${response.status}] [${response.statusText}].`, response);\r\n    }\r\n    const resourceInfo = internal_parseResourceInfo(response);\r\n    const containerDataset = freeze(Object.assign(Object.assign({}, createSolidDataset()), { internal_changeLog: { additions: [], deletions: [] }, internal_resourceInfo: resourceInfo }));\r\n    return containerDataset;\r\n}\r\n/**\r\n * Unfortunately Node Solid Server does not confirm to the Solid spec when it comes to Container\r\n * creation. When we make the (valid, according to the Solid protocol) request to create a\r\n * Container, NSS responds with the following exact error message. Thus, when we encounter exactly\r\n * this message, we use an NSS-specific workaround ([[createContainerWithNssWorkaroundAt]]). Both\r\n * this constant and that workaround should be removed once the NSS issue has been fixed and\r\n * no versions of NSS with the issue are in common use/supported anymore.\r\n *\r\n * @see https://github.com/solid/node-solid-server/issues/1465\r\n * @internal\r\n */\r\nconst internal_NSS_CREATE_CONTAINER_SPEC_NONCOMPLIANCE_DETECTION_ERROR_MESSAGE_TO_WORKAROUND_THEIR_ISSUE_1465 = \"Can't write file: PUT not supported on containers, use POST instead\";\r\n/**\r\n * Unfortunately Node Solid Server does not confirm to the Solid spec when it comes to Container\r\n * creation. As a workaround, we create a dummy file _inside_ the desired Container (which should\r\n * create the desired Container on the fly), and then delete it again.\r\n *\r\n * @see https://github.com/solid/node-solid-server/issues/1465\r\n */\r\nconst createContainerWithNssWorkaroundAt = async (url, options) => {\r\n    url = internal_toIriString(url);\r\n    const config = Object.assign(Object.assign({}, internal_defaultFetchOptions), options);\r\n    let existingContainer;\r\n    try {\r\n        existingContainer = await getResourceInfo(url, options);\r\n    }\r\n    catch (e) {\r\n        // To create the Container, we'd want it to not exist yet. In other words, we'd expect to get\r\n        // a 404 error here in the happy path - so do nothing if that's the case.\r\n        if (!(e instanceof FetchError) || e.statusCode !== 404) {\r\n            // (But if we get an error other than a 404, just throw that error like we usually would.)\r\n            throw e;\r\n        }\r\n    }\r\n    if (typeof existingContainer !== \"undefined\") {\r\n        throw new Error(`The Container at [${url}] already exists, and therefore cannot be created again.`);\r\n    }\r\n    const dummyUrl = url + \".dummy\";\r\n    const createResponse = await config.fetch(dummyUrl, {\r\n        method: \"PUT\",\r\n        headers: {\r\n            Accept: \"text/turtle\",\r\n            \"Content-Type\": \"text/turtle\",\r\n        },\r\n    });\r\n    if (internal_isUnsuccessfulResponse(createResponse)) {\r\n        throw new FetchError(`Creating the empty Container at [${url}] failed: [${createResponse.status}] [${createResponse.statusText}].`, createResponse);\r\n    }\r\n    await config.fetch(dummyUrl, { method: \"DELETE\" });\r\n    const containerInfoResponse = await config.fetch(url, { method: \"HEAD\" });\r\n    const resourceInfo = internal_parseResourceInfo(containerInfoResponse);\r\n    const containerDataset = freeze(Object.assign(Object.assign({}, createSolidDataset()), { internal_changeLog: { additions: [], deletions: [] }, internal_resourceInfo: resourceInfo }));\r\n    return containerDataset;\r\n};\r\nfunction isSourceIriEqualTo(dataset, iri) {\r\n    return (normalizeServerSideIri(dataset.internal_resourceInfo.sourceIri) ===\r\n        normalizeServerSideIri(iri));\r\n}\r\nfunction isUpdate(solidDataset, url) {\r\n    return (hasChangelog(solidDataset) &&\r\n        hasResourceInfo(solidDataset) &&\r\n        typeof solidDataset.internal_resourceInfo.sourceIri === \"string\" &&\r\n        isSourceIriEqualTo(solidDataset, url));\r\n}\r\n/**\r\n * Given a SolidDataset, store it in a Solid Pod in a new Resource inside a Container.\r\n *\r\n * The Container at the given URL should already exist; if it does not, you can initialise it first\r\n * using [[createContainerAt]], or directly save the SolidDataset at the desired location using\r\n * [[saveSolidDatasetAt]].\r\n *\r\n * This function is primarily useful if the current user does not have access to change existing files in\r\n * a Container, but is allowed to add new files; in other words, they have Append, but not Write\r\n * access to a Container. This is useful in situations where someone wants to allow others to,\r\n * for example, send notifications to their Pod, but not to view or delete existing notifications.\r\n * You can pass a suggestion for the new Resource's name, but the server may decide to give it\r\n * another name — for example, if a Resource with that name already exists inside the given\r\n * Container.\r\n * If the user does have access to write directly to a given location, [[saveSolidDatasetAt]]\r\n * will do the job just fine, and does not require the parent Container to exist in advance.\r\n *\r\n * @param containerUrl URL of the Container in which to create a new Resource.\r\n * @param solidDataset The [[SolidDataset]] to save to a new Resource in the given Container.\r\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\r\n * @returns A Promise resolving to a [[SolidDataset]] containing the saved data. The Promise rejects if the save failed.\r\n */\r\nasync function saveSolidDatasetInContainer(containerUrl, solidDataset, options = internal_defaultFetchOptions) {\r\n    const config = Object.assign(Object.assign({}, internal_defaultFetchOptions), options);\r\n    containerUrl = internal_toIriString(containerUrl);\r\n    const rawTurtle = await triplesToTurtle(toRdfJsQuads(solidDataset).map(getNamedNodesForLocalNodes));\r\n    const headers = {\r\n        \"Content-Type\": \"text/turtle\",\r\n        Link: `<${ldp.Resource}>; rel=\"type\"`,\r\n    };\r\n    if (options.slugSuggestion) {\r\n        headers.slug = options.slugSuggestion;\r\n    }\r\n    const response = await config.fetch(containerUrl, {\r\n        method: \"POST\",\r\n        body: rawTurtle,\r\n        headers: headers,\r\n    });\r\n    if (internal_isUnsuccessfulResponse(response)) {\r\n        throw new FetchError(`Storing the Resource in the Container at [${containerUrl}] failed: [${response.status}] [${response.statusText}].\\n\\n` +\r\n            \"The SolidDataset that was sent to the Pod is listed below.\\n\\n\" +\r\n            solidDatasetAsMarkdown(solidDataset), response);\r\n    }\r\n    const locationHeader = response.headers.get(\"Location\");\r\n    if (locationHeader === null) {\r\n        throw new Error(\"Could not determine the location of the newly saved SolidDataset.\");\r\n    }\r\n    const resourceIri = new URL(locationHeader, response.url).href;\r\n    const resourceInfo = {\r\n        internal_resourceInfo: {\r\n            isRawData: false,\r\n            sourceIri: resourceIri,\r\n        },\r\n    };\r\n    const resourceWithResourceInfo = freeze(Object.assign(Object.assign({}, solidDataset), resourceInfo));\r\n    const resourceWithResolvedIris = resolveLocalIrisInSolidDataset(resourceWithResourceInfo);\r\n    return resourceWithResolvedIris;\r\n}\r\n/**\r\n * Create an empty Container inside the Container at the given URL.\r\n *\r\n * Throws an error if creating the Container failed, e.g. because the current user does not have\r\n * permissions to.\r\n *\r\n * The Container in which to create the new Container should itself already exist.\r\n *\r\n * This function is primarily useful if the current user does not have access to change existing files in\r\n * a Container, but is allowed to add new files; in other words, they have Append, but not Write\r\n * access to a Container. This is useful in situations where someone wants to allow others to,\r\n * for example, send notifications to their Pod, but not to view or delete existing notifications.\r\n * You can pass a suggestion for the new Resource's name, but the server may decide to give it\r\n * another name — for example, if a Resource with that name already exists inside the given\r\n * Container.\r\n * If the user does have access to write directly to a given location, [[createContainerAt]]\r\n * will do the job just fine, and does not require the parent Container to exist in advance.\r\n *\r\n * @param containerUrl URL of the Container in which the empty Container is to be created.\r\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\r\n * @since 0.2.0\r\n */\r\nasync function createContainerInContainer(containerUrl, options = internal_defaultFetchOptions) {\r\n    containerUrl = internal_toIriString(containerUrl);\r\n    const config = Object.assign(Object.assign({}, internal_defaultFetchOptions), options);\r\n    const headers = {\r\n        \"Content-Type\": \"text/turtle\",\r\n        Link: `<${ldp.BasicContainer}>; rel=\"type\"`,\r\n    };\r\n    if (options.slugSuggestion) {\r\n        headers.slug = options.slugSuggestion;\r\n    }\r\n    const response = await config.fetch(containerUrl, {\r\n        method: \"POST\",\r\n        headers: headers,\r\n    });\r\n    if (internal_isUnsuccessfulResponse(response)) {\r\n        throw new FetchError(`Creating an empty Container in the Container at [${containerUrl}] failed: [${response.status}] [${response.statusText}].`, response);\r\n    }\r\n    const locationHeader = response.headers.get(\"Location\");\r\n    if (locationHeader === null) {\r\n        throw new Error(\"Could not determine the location of the newly created Container.\");\r\n    }\r\n    const resourceIri = new URL(locationHeader, response.url).href;\r\n    const resourceInfo = {\r\n        internal_resourceInfo: {\r\n            isRawData: false,\r\n            sourceIri: resourceIri,\r\n        },\r\n    };\r\n    const resourceWithResourceInfo = freeze(Object.assign(Object.assign({}, createSolidDataset()), resourceInfo));\r\n    return resourceWithResourceInfo;\r\n}\r\n/**\r\n * Deletes the Container at a given URL.\r\n *\r\n * @param file The (URL of the) Container to delete\r\n * @since 0.6.0\r\n */\r\nasync function deleteContainer(container, options = internal_defaultFetchOptions) {\r\n    const url = hasResourceInfo(container)\r\n        ? internal_toIriString(getSourceUrl(container))\r\n        : internal_toIriString(container);\r\n    if (!isContainer(container)) {\r\n        throw new Error(`You're trying to delete the Container at [${url}], but Container URLs should end in a \\`/\\`. Are you sure this is a Container?`);\r\n    }\r\n    const config = Object.assign(Object.assign({}, internal_defaultFetchOptions), options);\r\n    const response = await config.fetch(url, { method: \"DELETE\" });\r\n    if (internal_isUnsuccessfulResponse(response)) {\r\n        throw new FetchError(`Deleting the Container at [${url}] failed: [${response.status}] [${response.statusText}].`, response);\r\n    }\r\n}\r\n/**\r\n * Given a [[SolidDataset]] representing a Container (see [[isContainer]]), fetch the URLs of all\r\n * contained resources.\r\n * If the solidDataset given is not a container, or is missing resourceInfo, throw an error.\r\n *\r\n * @param solidDataset The container from which to fetch all contained Resource URLs.\r\n * @returns A list of URLs, each of which points to a contained Resource of the given SolidDataset.\r\n * @since 1.3.0\r\n */\r\nfunction getContainedResourceUrlAll(solidDataset) {\r\n    const container = getThing(solidDataset, getSourceUrl(solidDataset));\r\n    // See https://www.w3.org/TR/2015/REC-ldp-20150226/#h-ldpc-http_post:\r\n    // > a containment triple MUST be added to the state of the LDPC whose subject is the LDPC URI,\r\n    // > whose predicate is ldp:contains and whose object is the URI for the newly created document\r\n    return container !== null ? getIriAll(container, ldp.contains) : [];\r\n}\r\n/**\r\n * Gets a human-readable representation of the given SolidDataset to aid debugging.\r\n *\r\n * Note that changes to the exact format of the return value are not considered a breaking change;\r\n * it is intended to aid in debugging, not as a serialisation method that can be reliably parsed.\r\n *\r\n * @param solidDataset The [[SolidDataset]] to get a human-readable representation of.\r\n * @since 0.3.0\r\n */\r\nfunction solidDatasetAsMarkdown(solidDataset) {\r\n    let readableSolidDataset = \"\";\r\n    if (hasResourceInfo(solidDataset)) {\r\n        readableSolidDataset += `# SolidDataset: ${getSourceUrl(solidDataset)}\\n`;\r\n    }\r\n    else {\r\n        readableSolidDataset += `# SolidDataset (no URL yet)\\n`;\r\n    }\r\n    const things = getThingAll(solidDataset);\r\n    if (things.length === 0) {\r\n        readableSolidDataset += \"\\n<empty>\\n\";\r\n    }\r\n    else {\r\n        things.forEach((thing) => {\r\n            readableSolidDataset += \"\\n\" + thingAsMarkdown(thing);\r\n            if (hasChangelog(solidDataset)) {\r\n                readableSolidDataset +=\r\n                    \"\\n\" + getReadableChangeLogSummary(solidDataset, thing) + \"\\n\";\r\n            }\r\n        });\r\n    }\r\n    return readableSolidDataset;\r\n}\r\n/**\r\n * Gets a human-readable representation of the local changes to a Resource to aid debugging.\r\n *\r\n * Note that changes to the exact format of the return value are not considered a breaking change;\r\n * it is intended to aid in debugging, not as a serialisation method that can be reliably parsed.\r\n *\r\n * @param solidDataset The Resource of which to get a human-readable representation of the changes applied to it locally.\r\n * @since 0.3.0\r\n */\r\nfunction changeLogAsMarkdown(solidDataset) {\r\n    if (!hasResourceInfo(solidDataset)) {\r\n        return \"This is a newly initialized SolidDataset, so there is no source to compare it to.\";\r\n    }\r\n    if (!hasChangelog(solidDataset) ||\r\n        (solidDataset.internal_changeLog.additions.length === 0 &&\r\n            solidDataset.internal_changeLog.deletions.length === 0)) {\r\n        return (`## Changes compared to ${getSourceUrl(solidDataset)}\\n\\n` +\r\n            `This SolidDataset has not been modified since it was fetched from ${getSourceUrl(solidDataset)}.\\n`);\r\n    }\r\n    let readableChangeLog = `## Changes compared to ${getSourceUrl(solidDataset)}\\n`;\r\n    const changeLogsByThingAndProperty = sortChangeLogByThingAndProperty(solidDataset);\r\n    Object.keys(changeLogsByThingAndProperty).forEach((thingUrl) => {\r\n        readableChangeLog += `\\n### Thing: ${thingUrl}\\n`;\r\n        const changeLogByProperty = changeLogsByThingAndProperty[thingUrl];\r\n        Object.keys(changeLogByProperty).forEach((propertyUrl) => {\r\n            readableChangeLog += `\\nProperty: ${propertyUrl}\\n`;\r\n            const deleted = changeLogByProperty[propertyUrl].deleted;\r\n            const added = changeLogByProperty[propertyUrl].added;\r\n            if (deleted.length > 0) {\r\n                readableChangeLog += \"- Removed:\\n\";\r\n                deleted.forEach((deletedValue) => (readableChangeLog += `  - ${internal_getReadableValue(deletedValue)}\\n`));\r\n            }\r\n            if (added.length > 0) {\r\n                readableChangeLog += \"- Added:\\n\";\r\n                added.forEach((addedValue) => (readableChangeLog += `  - ${internal_getReadableValue(addedValue)}\\n`));\r\n            }\r\n        });\r\n    });\r\n    return readableChangeLog;\r\n}\r\nfunction sortChangeLogByThingAndProperty(solidDataset) {\r\n    const changeLogsByThingAndProperty = {};\r\n    solidDataset.internal_changeLog.deletions.forEach((deletion) => {\r\n        var _a, _b;\r\n        var _c;\r\n        const subjectNode = isLocalNode(deletion.subject)\r\n            ? /* istanbul ignore next: Unsaved deletions should be removed from the additions list instead, so this code path shouldn't be hit: */\r\n                resolveIriForLocalNode(deletion.subject, getSourceUrl(solidDataset))\r\n            : deletion.subject;\r\n        if (!isNamedNode(subjectNode) || !isNamedNode(deletion.predicate)) {\r\n            return;\r\n        }\r\n        const thingUrl = internal_toIriString(subjectNode);\r\n        const propertyUrl = internal_toIriString(deletion.predicate);\r\n        (_a = changeLogsByThingAndProperty[thingUrl]) !== null && _a !== void 0 ? _a : (changeLogsByThingAndProperty[thingUrl] = {});\r\n        (_b = (_c = changeLogsByThingAndProperty[thingUrl])[propertyUrl]) !== null && _b !== void 0 ? _b : (_c[propertyUrl] = {\r\n            added: [],\r\n            deleted: [],\r\n        });\r\n        changeLogsByThingAndProperty[thingUrl][propertyUrl].deleted.push(deletion.object);\r\n    });\r\n    solidDataset.internal_changeLog.additions.forEach((addition) => {\r\n        var _a, _b;\r\n        var _c;\r\n        const subjectNode = isLocalNode(addition.subject)\r\n            ? /* istanbul ignore next: setThing already resolves local Subjects when adding them, so this code path should never be hit. */\r\n                resolveIriForLocalNode(addition.subject, getSourceUrl(solidDataset))\r\n            : addition.subject;\r\n        if (!isNamedNode(subjectNode) || !isNamedNode(addition.predicate)) {\r\n            return;\r\n        }\r\n        const thingUrl = internal_toIriString(subjectNode);\r\n        const propertyUrl = internal_toIriString(addition.predicate);\r\n        (_a = changeLogsByThingAndProperty[thingUrl]) !== null && _a !== void 0 ? _a : (changeLogsByThingAndProperty[thingUrl] = {});\r\n        (_b = (_c = changeLogsByThingAndProperty[thingUrl])[propertyUrl]) !== null && _b !== void 0 ? _b : (_c[propertyUrl] = {\r\n            added: [],\r\n            deleted: [],\r\n        });\r\n        changeLogsByThingAndProperty[thingUrl][propertyUrl].added.push(addition.object);\r\n    });\r\n    return changeLogsByThingAndProperty;\r\n}\r\nfunction getReadableChangeLogSummary(solidDataset, thing) {\r\n    const subject = DataFactory.namedNode(thing.url);\r\n    const nrOfAdditions = solidDataset.internal_changeLog.additions.reduce((count, addition) => (addition.subject.equals(subject) ? count + 1 : count), 0);\r\n    const nrOfDeletions = solidDataset.internal_changeLog.deletions.reduce((count, deletion) => (deletion.subject.equals(subject) ? count + 1 : count), 0);\r\n    const additionString = nrOfAdditions === 1\r\n        ? \"1 new value added\"\r\n        : nrOfAdditions + \" new values added\";\r\n    const deletionString = nrOfDeletions === 1 ? \"1 value removed\" : nrOfDeletions + \" values removed\";\r\n    return `(${additionString} / ${deletionString})`;\r\n}\r\nfunction getNamedNodesForLocalNodes(quad) {\r\n    const subject = isNamedNode(quad.subject)\r\n        ? getNamedNodeFromLocalNode(quad.subject)\r\n        : /* istanbul ignore next: We don't allow non-NamedNodes as the Subject, so this code path should never be hit: */\r\n            quad.subject;\r\n    const object = isNamedNode(quad.object)\r\n        ? getNamedNodeFromLocalNode(quad.object)\r\n        : quad.object;\r\n    return DataFactory.quad(subject, quad.predicate, object, quad.graph);\r\n}\r\nfunction getNamedNodeFromLocalNode(node) {\r\n    if (isLocalNodeIri(node.value)) {\r\n        return DataFactory.namedNode(\"#\" + getLocalNodeName(node.value));\r\n    }\r\n    return node;\r\n}\r\nfunction resolveLocalIrisInSolidDataset(solidDataset) {\r\n    const resourceIri = getSourceUrl(solidDataset);\r\n    const defaultGraph = solidDataset.graphs.default;\r\n    const thingIris = Object.keys(defaultGraph);\r\n    const updatedDefaultGraph = thingIris.reduce((graphAcc, thingIri) => {\r\n        const resolvedThing = resolveLocalIrisInThing(graphAcc[thingIri], resourceIri);\r\n        const resolvedThingIri = isLocalNodeIri(thingIri)\r\n            ? `${resourceIri}#${getLocalNodeName(thingIri)}`\r\n            : thingIri;\r\n        const updatedGraph = Object.assign({}, graphAcc);\r\n        delete updatedGraph[thingIri];\r\n        updatedGraph[resolvedThingIri] = resolvedThing;\r\n        return freeze(updatedGraph);\r\n    }, defaultGraph);\r\n    const updatedGraphs = freeze(Object.assign(Object.assign({}, solidDataset.graphs), { default: updatedDefaultGraph }));\r\n    return freeze(Object.assign(Object.assign({}, solidDataset), { graphs: updatedGraphs }));\r\n}\r\nfunction resolveLocalIrisInThing(thing, baseIri) {\r\n    const predicateIris = Object.keys(thing.predicates);\r\n    const updatedPredicates = predicateIris.reduce((predicatesAcc, predicateIri) => {\r\n        var _a;\r\n        const namedNodes = (_a = predicatesAcc[predicateIri].namedNodes) !== null && _a !== void 0 ? _a : [];\r\n        if (namedNodes.every((namedNode) => !isLocalNodeIri(namedNode))) {\r\n            // This Predicate has no local node Objects, so return it unmodified:\r\n            return predicatesAcc;\r\n        }\r\n        const updatedNamedNodes = freeze(namedNodes.map((namedNode) => isLocalNodeIri(namedNode)\r\n            ? `${baseIri}#${getLocalNodeName(namedNode)}`\r\n            : namedNode));\r\n        const updatedPredicate = freeze(Object.assign(Object.assign({}, predicatesAcc[predicateIri]), { namedNodes: updatedNamedNodes }));\r\n        return freeze(Object.assign(Object.assign({}, predicatesAcc), { [predicateIri]: updatedPredicate }));\r\n    }, thing.predicates);\r\n    return freeze(Object.assign(Object.assign({}, thing), { predicates: updatedPredicates, url: isLocalNodeIri(thing.url)\r\n            ? `${baseIri}#${getLocalNodeName(thing.url)}`\r\n            : thing.url }));\r\n}\r\n/**\r\n * Fetch the contents of '.well-known/solid' for a given resource URL.\r\n *\r\n * The contents of the '.well-known/solid' endpoint define the capabilities of the server, and provide their associated endpoints/locations.\r\n * This behaves similarly to the use of '.well-known' endpoints in e.g. (OIDC servers)[https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderConfig]\r\n *\r\n * @param url URL of a Resource.\r\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\r\n * @returns Promise resolving to a [[SolidDataset]] containing the data at '.well-known/solid' for the given Resource, or rejecting if fetching it failed.\r\n * @since 1.12.0\r\n */\r\nasync function getWellKnownSolid(url, options = internal_defaultFetchOptions) {\r\n    const urlString = internal_toIriString(url);\r\n    const resourceMetadata = await getResourceInfo(urlString, options);\r\n    const linkedResources = getLinkedResourceUrlAll(resourceMetadata);\r\n    const rootResources = linkedResources[pim.storage];\r\n    const rootResource = (rootResources === null || rootResources === void 0 ? void 0 : rootResources.length) === 1 ? rootResources[0] : null;\r\n    if (rootResource === null) {\r\n        throw new SolidClientError(`Unable to determine root resource for Resource at [${url}].`);\r\n    }\r\n    const wellKnownSolidUrl = new URL(\".well-known/solid\", rootResource).href;\r\n    return getSolidDataset(wellKnownSolidUrl, Object.assign(Object.assign({}, options), { parsers: {\r\n            \"application/ld+json\": getJsonLdParser(),\r\n        } }));\r\n}\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nconst { Response } = crossFetch;\r\n/**\r\n * ```{warning}\r\n * Do not use this function in production code. For use in **unit tests**.\r\n * ```\r\n *\r\n * This function initialises a new [[SolidDataset]] with metadata as though the\r\n * SolidDataset has been retrieved from the given URL. The mock SolidDataset can be used in\r\n * unit tests that require persisted SolidDatasets; e.g., unit tests that call [[getSourceUrl]].\r\n *\r\n * @param url The URL from which the returned SolidDataset appears to be retrieved.\r\n * @returns A mock SolidDataset that appears to be retrieved from the `url`.\r\n * @since 0.2.0\r\n */\r\nfunction mockSolidDatasetFrom(url) {\r\n    const solidDataset = createSolidDataset();\r\n    const solidDatasetWithResourceInfo = Object.assign(Object.assign({}, solidDataset), { internal_resourceInfo: {\r\n            sourceIri: internal_toIriString(url),\r\n            isRawData: false,\r\n            contentType: \"text/turtle\",\r\n            linkedResources: {},\r\n        } });\r\n    return solidDatasetWithResourceInfo;\r\n}\r\n/**\r\n * ```{warning}\r\n * Do not use this function in production code. For use in **unit tests**.\r\n * ```\r\n *\r\n * This function initialises a new Container [[SolidDataset]] with metadata as though the\r\n * Container has been retrieved from the given URL. The mock SolidDataset can be used in\r\n * unit tests that require persisted Containers; e.g., unit tests that call [[isContainer]].\r\n *\r\n * @param url The URL from which the returned Container appears to be retrieved. The `url` must end in a slash.\r\n * @returns A mock SolidDataset that appears to be retrieved from the `url`.\r\n * @since 0.2.0\r\n */\r\nfunction mockContainerFrom(url) {\r\n    const sourceIri = internal_toIriString(url);\r\n    if (!sourceIri.endsWith(\"/\")) {\r\n        throw new Error(\"A Container's URL should end in a slash. Please update your tests.\");\r\n    }\r\n    return mockSolidDatasetFrom(sourceIri);\r\n}\r\n/**\r\n * ```{warning}\r\n * Do not use this function in production code. For use in **unit tests**.\r\n * ```\r\n *\r\n * This function initialises a new File with metadata as though the\r\n * File has been retrieved from the given URL. The mock File can be used in\r\n * unit tests that require persisted Files; e.g. unit tests that call [[getSourceUrl]].\r\n *\r\n * @param url The URL from which the returned File appears to be retrieved.\r\n * @returns A mock File that appears to be retrieved from the `url`.\r\n * @since 0.2.0\r\n */\r\nfunction mockFileFrom(url, options) {\r\n    const file = new Blob();\r\n    const fileWithResourceInfo = Object.assign(file, {\r\n        internal_resourceInfo: {\r\n            sourceIri: internal_toIriString(url),\r\n            isRawData: true,\r\n            contentType: options === null || options === void 0 ? void 0 : options.contentType,\r\n            linkedResources: {},\r\n        },\r\n    });\r\n    return fileWithResourceInfo;\r\n}\r\n/**\r\n * ```{warning}\r\n * Do not use this function in production code. For use in **unit tests**.\r\n * ```\r\n *\r\n * This function initialises a new Error object with metadata as though the\r\n * it was the result of getting a 404 when trying to fetch the Resource at the\r\n * given URL. The mock Error can be used in unit tests that require functions\r\n * that fetch Resources (like [[getSolidDataset]]) to fail.\r\n *\r\n * @param url The URL of the Resource that could not be fetched according to the error.\r\n * @param statusCode Optional status code (defaults to 404) that caused the error.\r\n * @returns A mock Error that represents not having been able to fetch the Resource at `url` due to a 404 Response.\r\n * @since 1.1.0\r\n */\r\nfunction mockFetchError(fetchedUrl, statusCode = 404) {\r\n    const failedResponse = new Response(undefined, {\r\n        status: statusCode,\r\n    });\r\n    return new FetchError(`Fetching the Resource at [${fetchedUrl}] failed: [${failedResponse.status}] [${failedResponse.statusText}].`, failedResponse);\r\n}\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Create a new Thing with a URL added for a Property.\r\n *\r\n * This preserves existing values for the given Property. To replace them, see [[setUrl]].\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to add a URL value to.\r\n * @param property Property for which to add the given URL value.\r\n * @param url URL to add to `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with the given value added for the given Property.\r\n */\r\nconst addUrl = (thing, property, url) => {\r\n    var _a, _b;\r\n    internal_throwIfNotThing(thing);\r\n    if (!internal_isValidUrl(property)) {\r\n        throw new ValidPropertyUrlExpectedError(property);\r\n    }\r\n    if (!isThing(url) && !internal_isValidUrl(url)) {\r\n        throw new ValidValueUrlExpectedError(url);\r\n    }\r\n    const predicateIri = internal_toIriString(property);\r\n    const existingPredicate = (_a = thing.predicates[predicateIri]) !== null && _a !== void 0 ? _a : {};\r\n    const existingNamedNodes = (_b = existingPredicate.namedNodes) !== null && _b !== void 0 ? _b : [];\r\n    let iriToAdd;\r\n    if (isNamedNode(url)) {\r\n        iriToAdd = url.value;\r\n    }\r\n    else if (typeof url === \"string\") {\r\n        iriToAdd = url;\r\n    }\r\n    else if (isThingLocal(url)) {\r\n        iriToAdd = url.url;\r\n    }\r\n    else {\r\n        iriToAdd = asIri(url);\r\n    }\r\n    const updatedNamedNodes = freeze(existingNamedNodes.concat(internal_toIriString(iriToAdd)));\r\n    const updatedPredicate = freeze(Object.assign(Object.assign({}, existingPredicate), { namedNodes: updatedNamedNodes }));\r\n    const updatedPredicates = freeze(Object.assign(Object.assign({}, thing.predicates), { [predicateIri]: updatedPredicate }));\r\n    const updatedThing = freeze(Object.assign(Object.assign({}, thing), { predicates: updatedPredicates }));\r\n    return updatedThing;\r\n};\r\n/** @hidden Alias for [[addUrl]] for those who prefer IRI terminology. */\r\nconst addIri = addUrl;\r\n/**\r\n * Create a new Thing with a boolean added for a Property.\r\n *\r\n * This preserves existing values for the given Property. To replace them, see [[setBoolean]].\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to add a boolean value to.\r\n * @param property Property for which to add the given boolean value.\r\n * @param value Boolean to add to `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with the given value added for the given Property.\r\n */\r\nconst addBoolean = (thing, property, value) => {\r\n    internal_throwIfNotThing(thing);\r\n    return addLiteralOfType(thing, property, serializeBoolean(value), xmlSchemaTypes.boolean);\r\n};\r\n/**\r\n * Create a new Thing with a datetime added for a Property.\r\n *\r\n * This preserves existing values for the given Property. To replace them, see [[setDatetime]].\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to add a datetime value to.\r\n * @param property Property for which to add the given datetime value.\r\n * @param value Datetime to add to `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with the given value added for the given Property.\r\n */\r\nconst addDatetime = (thing, property, value) => {\r\n    internal_throwIfNotThing(thing);\r\n    return addLiteralOfType(thing, property, serializeDatetime(value), xmlSchemaTypes.dateTime);\r\n};\r\n/**\r\n * Create a new Thing with a date added for a Property.\r\n *\r\n * This preserves existing values for the given Property. To replace them, see [[setDate]].\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to add a date value to.\r\n * @param property Property for which to add the given date value.\r\n * @param value Date to add to `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with the given value added for the given Property.\r\n * @since 1.10.0\r\n */\r\nconst addDate = (thing, property, value) => {\r\n    internal_throwIfNotThing(thing);\r\n    return addLiteralOfType(thing, property, serializeDate(value), xmlSchemaTypes.date);\r\n};\r\n/**\r\n * Create a new Thing with a time added for a Property.\r\n *\r\n * This preserves existing values for the given Property. To replace them, see [[setDatetime]].\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to add a datetime value to.\r\n * @param property Property for which to add the given datetime value.\r\n * @param value time to add to `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with the given value added for the given Property.\r\n * @since 1.10.0\r\n */\r\nconst addTime = (thing, property, value) => {\r\n    internal_throwIfNotThing(thing);\r\n    return addLiteralOfType(thing, property, serializeTime(value), xmlSchemaTypes.time);\r\n};\r\n/**\r\n * Create a new Thing with a decimal added for a Property.\r\n *\r\n * This preserves existing values for the given Property. To replace them, see [[setDecimal]].\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to add a decimal value to.\r\n * @param property Property for which to add the given decimal value.\r\n * @param value Decimal to add to `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with the given value added for the given Property.\r\n */\r\nconst addDecimal = (thing, property, value) => {\r\n    internal_throwIfNotThing(thing);\r\n    return addLiteralOfType(thing, property, serializeDecimal(value), xmlSchemaTypes.decimal);\r\n};\r\n/**\r\n * Create a new Thing with an integer added for a Property.\r\n *\r\n * This preserves existing values for the given Property. To replace them, see [[setInteger]].\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to add an integer value to.\r\n * @param property Property for which to add the given integer value.\r\n * @param value Integer to add to `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with the given value added for the given Property.\r\n */\r\nconst addInteger = (thing, property, value) => {\r\n    internal_throwIfNotThing(thing);\r\n    return addLiteralOfType(thing, property, serializeInteger(value), xmlSchemaTypes.integer);\r\n};\r\n/**\r\n * Create a new Thing with a localised string added for a Property.\r\n *\r\n * This preserves existing values for the given Property. To replace them, see [[setStringWithLocale]].\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to add a localised string value to.\r\n * @param property Property for which to add the given string value.\r\n * @param value String to add to `thing` for the given `property`.\r\n * @param locale Locale of the added string.\r\n * @returns A new Thing equal to the input Thing with the given value added for the given Property.\r\n */\r\nfunction addStringWithLocale(thing, property, value, locale) {\r\n    var _a, _b, _c;\r\n    internal_throwIfNotThing(thing);\r\n    if (!internal_isValidUrl(property)) {\r\n        throw new ValidPropertyUrlExpectedError(property);\r\n    }\r\n    const predicateIri = internal_toIriString(property);\r\n    const normalizedLocale = normalizeLocale(locale);\r\n    const existingPredicate = (_a = thing.predicates[predicateIri]) !== null && _a !== void 0 ? _a : {};\r\n    const existingLangStrings = (_b = existingPredicate.langStrings) !== null && _b !== void 0 ? _b : {};\r\n    const existingStringsInLocale = (_c = existingLangStrings[normalizedLocale]) !== null && _c !== void 0 ? _c : [];\r\n    const updatedStringsInLocale = freeze(existingStringsInLocale.concat(value));\r\n    const updatedLangStrings = freeze(Object.assign(Object.assign({}, existingLangStrings), { [normalizedLocale]: updatedStringsInLocale }));\r\n    const updatedPredicate = freeze(Object.assign(Object.assign({}, existingPredicate), { langStrings: updatedLangStrings }));\r\n    const updatedPredicates = freeze(Object.assign(Object.assign({}, thing.predicates), { [predicateIri]: updatedPredicate }));\r\n    const updatedThing = freeze(Object.assign(Object.assign({}, thing), { predicates: updatedPredicates }));\r\n    return updatedThing;\r\n}\r\n/**\r\n * Create a new Thing with an unlocalised string added for a Property.\r\n *\r\n * This preserves existing values for the given Property. To replace them, see [[setStringNoLocale]].\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to add an unlocalised string value to.\r\n * @param property Property for which to add the given string value.\r\n * @param value String to add to `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with the given value added for the given Property.\r\n */\r\nconst addStringNoLocale = (thing, property, value) => {\r\n    internal_throwIfNotThing(thing);\r\n    return addLiteralOfType(thing, property, value, xmlSchemaTypes.string);\r\n};\r\n/**\r\n * Create a new Thing with a Named Node added for a Property.\r\n *\r\n * This preserves existing values for the given Property. To replace them, see [[setNamedNode]].\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @ignore This should not be needed due to the other add*() functions. If you do find yourself needing it, please file a feature request for your use case.\r\n * @param thing The [[Thing]] to add a Named Node to.\r\n * @param property Property for which to add a value.\r\n * @param value The Named Node to add.\r\n * @returns A new Thing equal to the input Thing with the given value added for the given Property.\r\n */\r\nfunction addNamedNode(thing, property, value) {\r\n    return addUrl(thing, property, value.value);\r\n}\r\n/**\r\n * Create a new Thing with a Literal added for a Property.\r\n *\r\n * This preserves existing values for the given Property. To replace them, see [[setLiteral]].\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @ignore This should not be needed due to the other add*() functions. If you do find yourself needing it, please file a feature request for your use case.\r\n * @param thing The [[Thing]] to add a Literal to.\r\n * @param property Property for which to add a value.\r\n * @param value The Literal to add.\r\n * @returns A new Thing equal to the input Thing with the given value added for the given Property.\r\n */\r\nfunction addLiteral(thing, property, value) {\r\n    internal_throwIfNotThing(thing);\r\n    if (!internal_isValidUrl(property)) {\r\n        throw new ValidPropertyUrlExpectedError(property);\r\n    }\r\n    const typeIri = value.datatype.value;\r\n    if (typeIri === xmlSchemaTypes.langString) {\r\n        return addStringWithLocale(thing, property, value.value, value.language);\r\n    }\r\n    return addLiteralOfType(thing, property, value.value, value.datatype.value);\r\n}\r\n/**\r\n * Creates a new Thing with a Term added for a Property.\r\n *\r\n * This preserves existing values for the given Property. To replace them, see [[setTerm]].\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @ignore This should not be needed due to the other add*() functions. If you do find yourself needing it, please file a feature request for your use case.\r\n * @param thing The [[Thing]] to add a Term to.\r\n * @param property Property for which to add a value.\r\n * @param value The Term to add.\r\n * @returns A new Thing equal to the input Thing with the given value added for the given Property.\r\n * @since 0.3.0\r\n */\r\nfunction addTerm(thing, property, value) {\r\n    var _a, _b;\r\n    if (value.termType === \"NamedNode\") {\r\n        return addNamedNode(thing, property, value);\r\n    }\r\n    if (value.termType === \"Literal\") {\r\n        return addLiteral(thing, property, value);\r\n    }\r\n    if (value.termType === \"BlankNode\") {\r\n        internal_throwIfNotThing(thing);\r\n        if (!internal_isValidUrl(property)) {\r\n            throw new ValidPropertyUrlExpectedError(property);\r\n        }\r\n        const predicateIri = internal_toIriString(property);\r\n        const existingPredicate = (_a = thing.predicates[predicateIri]) !== null && _a !== void 0 ? _a : {};\r\n        const existingBlankNodes = (_b = existingPredicate.blankNodes) !== null && _b !== void 0 ? _b : [];\r\n        const updatedBlankNodes = freeze(existingBlankNodes.concat(getBlankNodeId(value)));\r\n        const updatedPredicate = freeze(Object.assign(Object.assign({}, existingPredicate), { blankNodes: updatedBlankNodes }));\r\n        const updatedPredicates = freeze(Object.assign(Object.assign({}, thing.predicates), { [predicateIri]: updatedPredicate }));\r\n        const updatedThing = freeze(Object.assign(Object.assign({}, thing), { predicates: updatedPredicates }));\r\n        return updatedThing;\r\n    }\r\n    throw new Error(`Term type [${value.termType}] is not supported by @inrupt/solid-client.`);\r\n}\r\nfunction addLiteralOfType(thing, property, value, type) {\r\n    var _a, _b, _c;\r\n    internal_throwIfNotThing(thing);\r\n    if (!internal_isValidUrl(property)) {\r\n        throw new ValidPropertyUrlExpectedError(property);\r\n    }\r\n    const predicateIri = internal_toIriString(property);\r\n    const existingPredicate = (_a = thing.predicates[predicateIri]) !== null && _a !== void 0 ? _a : {};\r\n    const existingLiterals = (_b = existingPredicate.literals) !== null && _b !== void 0 ? _b : {};\r\n    const existingValuesOfType = (_c = existingLiterals[type]) !== null && _c !== void 0 ? _c : [];\r\n    const updatedValuesOfType = freeze(existingValuesOfType.concat(value));\r\n    const updatedLiterals = freeze(Object.assign(Object.assign({}, existingLiterals), { [type]: updatedValuesOfType }));\r\n    const updatedPredicate = freeze(Object.assign(Object.assign({}, existingPredicate), { literals: updatedLiterals }));\r\n    const updatedPredicates = freeze(Object.assign(Object.assign({}, thing.predicates), { [predicateIri]: updatedPredicate }));\r\n    const updatedThing = freeze(Object.assign(Object.assign({}, thing), { predicates: updatedPredicates }));\r\n    return updatedThing;\r\n}\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nfunction removeAll(thing, property) {\r\n    internal_throwIfNotThing(thing);\r\n    if (!internal_isValidUrl(property)) {\r\n        throw new ValidPropertyUrlExpectedError(property);\r\n    }\r\n    const predicateIri = internal_toIriString(property);\r\n    const newPredicates = Object.assign({}, thing.predicates);\r\n    delete newPredicates[predicateIri];\r\n    return freeze(Object.assign(Object.assign({}, thing), { predicates: freeze(newPredicates) }));\r\n}\r\n/**\r\n * Create a new Thing with the given URL removed for the given Property.\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to remove a URL value from.\r\n * @param property Property for which to remove the given URL value.\r\n * @param value URL to remove from `thing` for the given `Property`.\r\n * @returns A new Thing equal to the input Thing with the given value removed for the given Property.\r\n */\r\nconst removeUrl = (thing, property, value) => {\r\n    var _a, _b, _c;\r\n    internal_throwIfNotThing(thing);\r\n    if (!internal_isValidUrl(property)) {\r\n        throw new ValidPropertyUrlExpectedError(property);\r\n    }\r\n    const predicateIri = internal_toIriString(property);\r\n    if (!isThing(value) && !internal_isValidUrl(value)) {\r\n        throw new ValidValueUrlExpectedError(value);\r\n    }\r\n    const iriToRemove = isNamedNode(value)\r\n        ? value.value\r\n        : typeof value === \"string\"\r\n            ? value\r\n            : asIri(value);\r\n    const updatedNamedNodes = freeze((_c = (_b = (_a = thing.predicates[predicateIri]) === null || _a === void 0 ? void 0 : _a.namedNodes) === null || _b === void 0 ? void 0 : _b.filter((namedNode) => namedNode.toLowerCase() !== iriToRemove.toLowerCase())) !== null && _c !== void 0 ? _c : []);\r\n    const updatedPredicate = freeze(Object.assign(Object.assign({}, thing.predicates[predicateIri]), { namedNodes: updatedNamedNodes }));\r\n    const updatedPredicates = freeze(Object.assign(Object.assign({}, thing.predicates), { [predicateIri]: updatedPredicate }));\r\n    return freeze(Object.assign(Object.assign({}, thing), { predicates: updatedPredicates }));\r\n};\r\n/** @hidden Alias of [[removeUrl]] for those who prefer IRI terminology. */\r\nconst removeIri = removeUrl;\r\n/**\r\n * Create a new Thing with the given boolean removed for the given Property.\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to remove a boolean value from.\r\n * @param property Property for which to remove the given boolean value.\r\n * @param value Boolean to remove from `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with the given value removed for the given Property.\r\n */\r\nconst removeBoolean = (thing, property, value) => {\r\n    internal_throwIfNotThing(thing);\r\n    return removeLiteralMatching(thing, property, xmlSchemaTypes.boolean, (foundBoolean) => deserializeBoolean(foundBoolean) === value);\r\n};\r\n/**\r\n * Create a new Thing with the given datetime removed for the given Property.\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to remove a datetime value from.\r\n * @param property Property for which to remove the given datetime value.\r\n * @param value Datetime to remove from `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with the given value removed for the given Property.\r\n */\r\nconst removeDatetime = (thing, property, value) => {\r\n    internal_throwIfNotThing(thing);\r\n    return removeLiteralMatching(thing, property, xmlSchemaTypes.dateTime, (foundDatetime) => { var _a; return ((_a = deserializeDatetime(foundDatetime)) === null || _a === void 0 ? void 0 : _a.getTime()) === value.getTime(); });\r\n};\r\n/**\r\n * Create a new Thing with the given date removed for the given Property.\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to remove a date value from.\r\n * @param property Property for which to remove the given date value.\r\n * @param value Date to remove from `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with the given value removed for the given Property.\r\n * @since 1.10.0\r\n */\r\nconst removeDate = (thing, property, value) => {\r\n    internal_throwIfNotThing(thing);\r\n    return removeLiteralMatching(thing, property, xmlSchemaTypes.date, function (foundDate) {\r\n        const deserializedDate = deserializeDate(foundDate);\r\n        if (deserializedDate) {\r\n            return (deserializedDate.getFullYear() === value.getFullYear() &&\r\n                deserializedDate.getMonth() === value.getMonth() &&\r\n                deserializedDate.getDate() === value.getDate());\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    });\r\n};\r\n/**\r\n * Create a new Thing with the given datetime removed for the given Property.\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to remove a datetime value from.\r\n * @param property Property for which to remove the given datetime value.\r\n * @param value Time to remove from `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with the given value removed for the given Property.\r\n * @since 1.10.0\r\n */\r\nconst removeTime = (thing, property, value) => {\r\n    internal_throwIfNotThing(thing);\r\n    return removeLiteralMatching(thing, property, xmlSchemaTypes.time, function (foundTime) {\r\n        const deserializedTime = deserializeTime(foundTime);\r\n        if (deserializedTime) {\r\n            return (deserializedTime.hour === value.hour &&\r\n                deserializedTime.minute === value.minute &&\r\n                deserializedTime.second === value.second &&\r\n                deserializedTime.millisecond === value.millisecond &&\r\n                deserializedTime.timezoneHourOffset === value.timezoneHourOffset &&\r\n                deserializedTime.timezoneMinuteOffset === value.timezoneMinuteOffset);\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    });\r\n};\r\n/**\r\n * Create a new Thing with the given decimal removed for the given Property.\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to remove a decimal value from.\r\n * @param property Property for which to remove the given decimal value.\r\n * @param value Decimal to remove from `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with the given value removed for the given Property.\r\n */\r\nconst removeDecimal = (thing, property, value) => {\r\n    internal_throwIfNotThing(thing);\r\n    return removeLiteralMatching(thing, property, xmlSchemaTypes.decimal, (foundDecimal) => deserializeDecimal(foundDecimal) === value);\r\n};\r\n/**\r\n * Create a new Thing with the given integer removed for the given Property.\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to remove an integer value from.\r\n * @param property Property for which to remove the given integer value.\r\n * @param value Integer to remove from `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with the given value removed for the given Property.\r\n */\r\nconst removeInteger = (thing, property, value) => {\r\n    internal_throwIfNotThing(thing);\r\n    return removeLiteralMatching(thing, property, xmlSchemaTypes.integer, (foundInteger) => deserializeInteger(foundInteger) === value);\r\n};\r\n/**\r\n * Create a new Thing with the given localised string removed for the given Property.\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to remove a localised string value from.\r\n * @param property Property for which to remove the given localised string value.\r\n * @param value String to remove from `thing` for the given `property`.\r\n * @param locale Locale of the string to remove.\r\n * @returns A new Thing equal to the input Thing with the given value removed for the given Property.\r\n */\r\nfunction removeStringWithLocale(thing, property, value, locale) {\r\n    var _a, _b;\r\n    internal_throwIfNotThing(thing);\r\n    if (!internal_isValidUrl(property)) {\r\n        throw new ValidPropertyUrlExpectedError(property);\r\n    }\r\n    const predicateIri = internal_toIriString(property);\r\n    const existingLangStrings = (_b = (_a = thing.predicates[predicateIri]) === null || _a === void 0 ? void 0 : _a.langStrings) !== null && _b !== void 0 ? _b : {};\r\n    const matchingLocale = Object.keys(existingLangStrings).find((existingLocale) => normalizeLocale(existingLocale) === normalizeLocale(locale) &&\r\n        Array.isArray(existingLangStrings[existingLocale]) &&\r\n        existingLangStrings[existingLocale].length > 0);\r\n    if (typeof matchingLocale !== \"string\") {\r\n        // Nothing to remove.\r\n        return thing;\r\n    }\r\n    const existingStringsInLocale = existingLangStrings[matchingLocale];\r\n    const updatedStringsInLocale = freeze(existingStringsInLocale.filter((existingString) => existingString !== value));\r\n    const updatedLangStrings = freeze(Object.assign(Object.assign({}, existingLangStrings), { [matchingLocale]: updatedStringsInLocale }));\r\n    const updatedPredicate = freeze(Object.assign(Object.assign({}, thing.predicates[predicateIri]), { langStrings: updatedLangStrings }));\r\n    const updatedPredicates = freeze(Object.assign(Object.assign({}, thing.predicates), { [predicateIri]: updatedPredicate }));\r\n    return freeze(Object.assign(Object.assign({}, thing), { predicates: updatedPredicates }));\r\n}\r\n/**\r\n * Create a new Thing with the given unlocalised string removed for the given Property.\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to remove an unlocalised string value from.\r\n * @param property Property for which to remove the given string value.\r\n * @param value String to remove from `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with the given value removed for the given Property.\r\n */\r\nconst removeStringNoLocale = (thing, property, value) => {\r\n    internal_throwIfNotThing(thing);\r\n    return removeLiteralMatching(thing, property, xmlSchemaTypes.string, (foundString) => foundString === value);\r\n};\r\n/**\r\n * @ignore This should not be needed due to the other remove*() functions. If you do find yourself needing it, please file a feature request for your use case.\r\n * @param thing Thing to remove a NamedNode value from.\r\n * @param property Property for which to remove the given NamedNode value.\r\n * @param value NamedNode to remove from `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with the given value removed for the given Property.\r\n */\r\nfunction removeNamedNode(thing, property, value) {\r\n    return removeUrl(thing, property, value.value);\r\n}\r\n/**\r\n * @ignore This should not be needed due to the other remove*() functions. If you do find yourself needing it, please file a feature request for your use case.\r\n * @param thing Thing to remove a Literal value from.\r\n * @param property Property for which to remove the given Literal value.\r\n * @param value Literal to remove from `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with the given value removed for the given Property.\r\n */\r\nfunction removeLiteral(thing, property, value) {\r\n    var _a, _b, _c;\r\n    internal_throwIfNotThing(thing);\r\n    if (!internal_isValidUrl(property)) {\r\n        throw new ValidPropertyUrlExpectedError(property);\r\n    }\r\n    const typeIri = value.datatype.value;\r\n    if (typeIri === xmlSchemaTypes.langString) {\r\n        return removeStringWithLocale(thing, property, value.value, value.language);\r\n    }\r\n    const predicateIri = internal_toIriString(property);\r\n    const existingPredicateValues = (_a = thing.predicates[predicateIri]) !== null && _a !== void 0 ? _a : {};\r\n    const existingLiterals = (_b = existingPredicateValues.literals) !== null && _b !== void 0 ? _b : {};\r\n    const existingValuesOfType = (_c = existingLiterals[typeIri]) !== null && _c !== void 0 ? _c : [];\r\n    const updatedValues = freeze(existingValuesOfType.filter((existingValue) => existingValue !== value.value));\r\n    const updatedLiterals = freeze(Object.assign(Object.assign({}, existingLiterals), { [typeIri]: updatedValues }));\r\n    const updatedPredicate = freeze(Object.assign(Object.assign({}, existingPredicateValues), { literals: updatedLiterals }));\r\n    const updatedPredicates = freeze(Object.assign(Object.assign({}, thing.predicates), { [predicateIri]: updatedPredicate }));\r\n    const updatedThing = freeze(Object.assign(Object.assign({}, thing), { predicates: updatedPredicates }));\r\n    return updatedThing;\r\n}\r\n/**\r\n * @param thing Thing to remove a Literal value from.\r\n * @param property Property for which to remove the given Literal value.\r\n * @param type Data type that the Literal should be stored as.\r\n * @param matcher Function that returns true if the given value is an equivalent serialisation of the value to remove. For example, when removing a `false` boolean, the matcher should return true for both \"0\" and \"false\".\r\n */\r\nfunction removeLiteralMatching(thing, property, type, matcher) {\r\n    var _a, _b, _c;\r\n    if (!internal_isValidUrl(property)) {\r\n        throw new ValidPropertyUrlExpectedError(property);\r\n    }\r\n    const predicateIri = internal_toIriString(property);\r\n    const existingPredicateValues = (_a = thing.predicates[predicateIri]) !== null && _a !== void 0 ? _a : {};\r\n    const existingLiterals = (_b = existingPredicateValues.literals) !== null && _b !== void 0 ? _b : {};\r\n    const existingValuesOfType = (_c = existingLiterals[type]) !== null && _c !== void 0 ? _c : [];\r\n    const updatedValues = freeze(existingValuesOfType.filter((existingValue) => !matcher(existingValue)));\r\n    const updatedLiterals = freeze(Object.assign(Object.assign({}, existingLiterals), { [type]: updatedValues }));\r\n    const updatedPredicate = freeze(Object.assign(Object.assign({}, existingPredicateValues), { literals: updatedLiterals }));\r\n    const updatedPredicates = freeze(Object.assign(Object.assign({}, thing.predicates), { [predicateIri]: updatedPredicate }));\r\n    const updatedThing = freeze(Object.assign(Object.assign({}, thing), { predicates: updatedPredicates }));\r\n    return updatedThing;\r\n}\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Create a new Thing with existing values replaced by the given URL for the given Property.\r\n *\r\n * To preserve existing values, see [[addUrl]].\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to set a URL value on.\r\n * @param property Property for which to set the given URL value.\r\n * @param url URL to set on `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with existing values replaced by the given value for the given Property.\r\n */\r\nconst setUrl = (thing, property, url) => {\r\n    internal_throwIfNotThing(thing);\r\n    if (!internal_isValidUrl(property)) {\r\n        throw new ValidPropertyUrlExpectedError(property);\r\n    }\r\n    if (!isThing(url) && !internal_isValidUrl(url)) {\r\n        throw new ValidValueUrlExpectedError(url);\r\n    }\r\n    return addUrl(removeAll(thing, property), property, url);\r\n};\r\n/** @hidden Alias of [[setUrl]] for those who prefer IRI terminology. */\r\nconst setIri = setUrl;\r\n/**\r\n * Create a new Thing with existing values replaced by the given boolean for the given Property.\r\n *\r\n * To preserve existing values, see [[addBoolean]].\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to set a boolean value on.\r\n * @param property Property for which to set the given boolean value.\r\n * @param value Boolean to set on `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with existing values replaced by the given value for the given Property.\r\n */\r\nconst setBoolean = (thing, property, value) => {\r\n    internal_throwIfNotThing(thing);\r\n    return addBoolean(removeAll(thing, property), property, value);\r\n};\r\n/**\r\n * Create a new Thing with existing values replaced by the given datetime for the given Property.\r\n *\r\n * To preserve existing values, see [[addDatetime]].\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to set an datetime value on.\r\n * @param property Property for which to set the given datetime value.\r\n * @param value Datetime to set on `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with existing values replaced by the given value for the given Property.\r\n */\r\nconst setDatetime = (thing, property, value) => {\r\n    internal_throwIfNotThing(thing);\r\n    return addDatetime(removeAll(thing, property), property, value);\r\n};\r\n/**\r\n * Create a new Thing with existing values replaced by the given date for the given Property.\r\n *\r\n * To preserve existing values, see [[addDate]].\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to set an date value on.\r\n * @param property Property for which to set the given date value.\r\n * @param value Date to set on `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with existing values replaced by the given value for the given Property.\r\n * @since 1.10.0\r\n */\r\nconst setDate = (thing, property, value) => {\r\n    internal_throwIfNotThing(thing);\r\n    return addDate(removeAll(thing, property), property, value);\r\n};\r\n/**\r\n * Create a new Thing with existing values replaced by the given time for the given Property.\r\n *\r\n * To preserve existing values, see [[addTime]].\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to set an time value on.\r\n * @param property Property for which to set the given time value.\r\n * @param value time to set on `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with existing values replaced by the given value for the given Property.\r\n * @since 1.10.0\r\n */\r\nconst setTime = (thing, property, value) => {\r\n    internal_throwIfNotThing(thing);\r\n    return addTime(removeAll(thing, property), property, value);\r\n};\r\n/**\r\n * Create a new Thing with existing values replaced by the given decimal for the given Property.\r\n *\r\n * To preserve existing values, see [[addDecimal]].\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to set a decimal value on.\r\n * @param property Property for which to set the given decimal value.\r\n * @param value Decimal to set on `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with existing values replaced by the given value for the given Property.\r\n */\r\nconst setDecimal = (thing, property, value) => {\r\n    internal_throwIfNotThing(thing);\r\n    return addDecimal(removeAll(thing, property), property, value);\r\n};\r\n/**\r\n * Create a new Thing with existing values replaced by the given integer for the given Property.\r\n *\r\n * To preserve existing values, see [[addInteger]].\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to set an integer value on.\r\n * @param property Property for which to set the given integer value.\r\n * @param value Integer to set on `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with existing values replaced by the given value for the given Property.\r\n */\r\nconst setInteger = (thing, property, value) => {\r\n    internal_throwIfNotThing(thing);\r\n    return addInteger(removeAll(thing, property), property, value);\r\n};\r\n/**\r\n * Create a new Thing with existing values replaced by the given localised string for the given Property.\r\n *\r\n * To preserve existing values, see [[addStringWithLocale]].\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to set a localised string value on.\r\n * @param property Property for which to set the given localised string value.\r\n * @param value Localised string to set on `thing` for the given `property`.\r\n * @param locale Locale of the added string.\r\n * @returns A new Thing equal to the input Thing with existing values replaced by the given value for the given Property.\r\n */\r\nfunction setStringWithLocale(thing, property, value, locale) {\r\n    internal_throwIfNotThing(thing);\r\n    return addStringWithLocale(removeAll(thing, property), property, value, locale);\r\n}\r\n/**\r\n * Create a new Thing with existing values replaced by the given unlocalised string for the given Property.\r\n *\r\n * To preserve existing values, see [[addStringNoLocale]].\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to set an unlocalised string value on.\r\n * @param property Property for which to set the given unlocalised string value.\r\n * @param value Unlocalised string to set on `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with existing values replaced by the given value for the given Property.\r\n */\r\nconst setStringNoLocale = (thing, property, value) => {\r\n    internal_throwIfNotThing(thing);\r\n    return addStringNoLocale(removeAll(thing, property), property, value);\r\n};\r\n/**\r\n * Create a new Thing with existing values replaced by the given Named Node for the given Property.\r\n *\r\n * This replaces existing values for the given Property. To preserve them, see [[addNamedNode]].\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @ignore This should not be needed due to the other set*() functions. If you do find yourself needing it, please file a feature request for your use case.\r\n * @param thing The [[Thing]] to set a NamedNode on.\r\n * @param property Property for which to set the value.\r\n * @param value The NamedNode to set on `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with existing values replaced by the given value for the given Property.\r\n */\r\nfunction setNamedNode(thing, property, value) {\r\n    internal_throwIfNotThing(thing);\r\n    return addNamedNode(removeAll(thing, property), property, value);\r\n}\r\n/**\r\n * Create a new Thing with existing values replaced by the given Literal for the given Property.\r\n *\r\n * This replaces existing values for the given Property. To preserve them, see [[addLiteral]].\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @ignore This should not be needed due to the other set*() functions. If you do find yourself needing it, please file a feature request for your use case.\r\n * @param thing The [[Thing]] to set a Literal on.\r\n * @param property Property for which to set the value.\r\n * @param value The Literal to set on `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with existing values replaced by the given value for the given Property.\r\n */\r\nfunction setLiteral(thing, property, value) {\r\n    internal_throwIfNotThing(thing);\r\n    return addLiteral(removeAll(thing, property), property, value);\r\n}\r\n/**\r\n * Creates a new Thing with existing values replaced by the given Term for the given Property.\r\n *\r\n * This replaces existing values for the given Property. To preserve them, see [[addTerm]].\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @ignore This should not be needed due to the other set*() functions. If you do find yourself needing it, please file a feature request for your use case.\r\n * @param thing The [[Thing]] to set a Term on.\r\n * @param property Property for which to set the value.\r\n * @param value The raw RDF/JS value to set on `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with existing values replaced by the given value for the given Property.\r\n * @since 0.3.0\r\n */\r\nfunction setTerm(thing, property, value) {\r\n    internal_throwIfNotThing(thing);\r\n    if (!internal_isValidUrl(property)) {\r\n        throw new ValidPropertyUrlExpectedError(property);\r\n    }\r\n    return addTerm(removeAll(thing, property), property, value);\r\n}\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Create or modify a [[Thing]], setting multiple properties in a single expresssion.\r\n *\r\n * For example, you can create a new Thing and initialise several properties as follows:\r\n *\r\n *     const me = buildThing()\r\n *       .addUrl(rdf.type, schema.Person)\r\n *       .addStringNoLocale(schema.givenName, \"Vincent\")\r\n *       .build();\r\n *\r\n * Take note of the final call to `.build()` to obtain the actual Thing.\r\n *\r\n * @param init Optionally pass an existing [[Thing]] to modify the properties of. If left empty, `buildThing` will initialise a new Thing.\r\n * @returns a [[ThingBuilder]], a Fluent API that allows you to set multiple properties in a single expression.\r\n * @since 1.9.0\r\n */\r\nfunction buildThing(init = createThing()) {\r\n    let thing = isThing(init) ? init : createThing(init);\r\n    function getAdder(adder) {\r\n        return (property, value) => {\r\n            thing = adder(thing, property, value);\r\n            return builder;\r\n        };\r\n    }\r\n    function getSetter(setter) {\r\n        return (property, value) => {\r\n            thing = setter(thing, property, value);\r\n            return builder;\r\n        };\r\n    }\r\n    function getRemover(remover) {\r\n        return (property, value) => {\r\n            thing = remover(thing, property, value);\r\n            return builder;\r\n        };\r\n    }\r\n    const builder = {\r\n        build: () => thing,\r\n        addUrl: getAdder(addUrl),\r\n        addIri: getAdder(addIri),\r\n        addBoolean: getAdder(addBoolean),\r\n        addDatetime: getAdder(addDatetime),\r\n        addDate: getAdder(addDate),\r\n        addTime: getAdder(addTime),\r\n        addDecimal: getAdder(addDecimal),\r\n        addInteger: getAdder(addInteger),\r\n        addStringNoLocale: getAdder(addStringNoLocale),\r\n        addStringWithLocale: (property, value, locale) => {\r\n            thing = addStringWithLocale(thing, property, value, locale);\r\n            return builder;\r\n        },\r\n        addNamedNode: getAdder(addNamedNode),\r\n        addLiteral: getAdder(addLiteral),\r\n        addTerm: getAdder(addTerm),\r\n        setUrl: getSetter(setUrl),\r\n        setIri: getSetter(setIri),\r\n        setBoolean: getSetter(setBoolean),\r\n        setDatetime: getSetter(setDatetime),\r\n        setDate: getSetter(setDate),\r\n        setTime: getSetter(setTime),\r\n        setDecimal: getSetter(setDecimal),\r\n        setInteger: getSetter(setInteger),\r\n        setStringNoLocale: getSetter(setStringNoLocale),\r\n        setStringWithLocale: (property, value, locale) => {\r\n            thing = setStringWithLocale(thing, property, value, locale);\r\n            return builder;\r\n        },\r\n        setNamedNode: getSetter(setNamedNode),\r\n        setLiteral: getSetter(setLiteral),\r\n        setTerm: getSetter(setTerm),\r\n        removeAll: (property) => {\r\n            thing = removeAll(thing, property);\r\n            return builder;\r\n        },\r\n        removeUrl: getRemover(removeUrl),\r\n        removeIri: getRemover(removeIri),\r\n        removeBoolean: getRemover(removeBoolean),\r\n        removeDatetime: getRemover(removeDatetime),\r\n        removeDate: getRemover(removeDate),\r\n        removeTime: getRemover(removeTime),\r\n        removeDecimal: getRemover(removeDecimal),\r\n        removeInteger: getRemover(removeInteger),\r\n        removeStringNoLocale: getRemover(removeStringNoLocale),\r\n        removeStringWithLocale: (property, value, locale) => buildThing(removeStringWithLocale(thing, property, value, locale)),\r\n        removeNamedNode: getRemover(removeNamedNode),\r\n        removeLiteral: getRemover(removeLiteral),\r\n    };\r\n    return builder;\r\n}\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Function for use in unit tests to mock a [[Thing]] with a given URL.\r\n *\r\n * Warning: do not use this function in actual production code.\r\n * This function initialises a new empty Thing and sets its URL to a given URL.\r\n * This is useful to mock a Thing in tests of code that call e.g.\r\n * [[asUrl]].\r\n *\r\n * @param url The URL that the mocked Thing pretends identifies it.\r\n * @returns A new Thing, pretending to be identified by the given URL.\r\n * @since 0.2.0\r\n */\r\nfunction mockThingFrom(url) {\r\n    const iri = internal_toIriString(url);\r\n    const thing = {\r\n        type: \"Subject\",\r\n        predicates: {},\r\n        url: iri,\r\n    };\r\n    return thing;\r\n}\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * @param linkedAccessResource A Resource exposed via the Link header of another Resource with rel=\"acl\".\r\n * @returns Whether that Resource is an ACP ACR or not (in which case it's likely a WAC ACL).\r\n */\r\nfunction isAcr(linkedAccessResource) {\r\n    const relTypeLinks = getLinkedResourceUrlAll(linkedAccessResource)[\"type\"];\r\n    return (Array.isArray(relTypeLinks) &&\r\n        relTypeLinks.includes(acp.AccessControlResource));\r\n}\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * This (currently internal) function fetches the ACL indicated in the [[WithServerResourceInfo]]\r\n * attached to a resource.\r\n *\r\n * @internal\r\n * @param resourceInfo The Resource info with the ACL URL\r\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters).\r\n */\r\nasync function internal_fetchAcl(resourceInfo, options = internal_defaultFetchOptions) {\r\n    if (!hasAccessibleAcl(resourceInfo)) {\r\n        return {\r\n            resourceAcl: null,\r\n            fallbackAcl: null,\r\n        };\r\n    }\r\n    try {\r\n        const resourceAcl = await internal_fetchResourceAcl(resourceInfo, options);\r\n        const acl = resourceAcl === null\r\n            ? {\r\n                resourceAcl: null,\r\n                fallbackAcl: await internal_fetchFallbackAcl(resourceInfo, options),\r\n            }\r\n            : { resourceAcl: resourceAcl, fallbackAcl: null };\r\n        return acl;\r\n    }\r\n    catch (e) {\r\n        /* istanbul ignore else: fetchResourceAcl swallows all non-AclIsAcrErrors */\r\n        if (e instanceof AclIsAcrError) {\r\n            return {\r\n                resourceAcl: null,\r\n                fallbackAcl: null,\r\n            };\r\n        }\r\n        /* istanbul ignore next: fetchResourceAcl swallows all non-AclIsAcrErrors */\r\n        throw e;\r\n    }\r\n}\r\n/** @internal */\r\nasync function internal_fetchResourceAcl(dataset, options = internal_defaultFetchOptions) {\r\n    if (!hasAccessibleAcl(dataset)) {\r\n        return null;\r\n    }\r\n    try {\r\n        const aclSolidDataset = await getSolidDataset(dataset.internal_resourceInfo.aclUrl, options);\r\n        if (isAcr(aclSolidDataset)) {\r\n            throw new AclIsAcrError(dataset, aclSolidDataset);\r\n        }\r\n        return freeze(Object.assign(Object.assign({}, aclSolidDataset), { internal_accessTo: getSourceUrl(dataset) }));\r\n    }\r\n    catch (e) {\r\n        if (e instanceof AclIsAcrError) {\r\n            throw e;\r\n        }\r\n        // Since a Solid server adds a `Link` header to an ACL even if that ACL does not exist,\r\n        // failure to fetch the ACL is expected to happen - we just return `null` and let callers deal\r\n        // with it.\r\n        return null;\r\n    }\r\n}\r\n/** @internal */\r\nasync function internal_fetchFallbackAcl(resource, options = internal_defaultFetchOptions) {\r\n    const resourceUrl = new URL(getSourceUrl(resource));\r\n    const resourcePath = resourceUrl.pathname;\r\n    // Note: we're currently assuming that the Origin is the root of the Pod. However, it is not yet\r\n    //       set in stone that that will always be the case. We might need to check the Container's\r\n    //       metadata at some point in time to check whether it is actually the root of the Pod.\r\n    //       See: https://github.com/solid/specification/issues/153#issuecomment-624630022\r\n    if (resourcePath === \"/\") {\r\n        // We're already at the root, so there's no Container we can retrieve:\r\n        return null;\r\n    }\r\n    const containerPath = internal_getContainerPath(resourcePath);\r\n    const containerIri = new URL(containerPath, resourceUrl.origin).href;\r\n    const containerInfo = await getResourceInfo(containerIri, options);\r\n    if (!hasAccessibleAcl(containerInfo)) {\r\n        // If the current user does not have access to this Container's ACL,\r\n        // we cannot determine whether its ACL is the one that applies. Thus, return null:\r\n        return null;\r\n    }\r\n    const containerAcl = await internal_fetchResourceAcl(containerInfo, options);\r\n    if (containerAcl === null) {\r\n        return internal_fetchFallbackAcl(containerInfo, options);\r\n    }\r\n    return containerAcl;\r\n}\r\n/**\r\n * Given the path to a Resource, get the URL of the Container one level up in the hierarchy.\r\n * @param resourcePath The path of the Resource of which we need to determine the Container's path.\r\n * @hidden For internal use only.\r\n */\r\nfunction internal_getContainerPath(resourcePath) {\r\n    const resourcePathWithoutTrailingSlash = resourcePath.substring(resourcePath.length - 1) === \"/\"\r\n        ? resourcePath.substring(0, resourcePath.length - 1)\r\n        : resourcePath;\r\n    const containerPath = resourcePath.substring(0, resourcePathWithoutTrailingSlash.lastIndexOf(\"/\")) + \"/\";\r\n    return containerPath;\r\n}\r\n/** @internal */\r\nfunction internal_getAclRules(aclDataset) {\r\n    const things = getThingAll(aclDataset);\r\n    return things.filter(isAclRule);\r\n}\r\nfunction isAclRule(thing) {\r\n    return getIriAll(thing, rdf.type).includes(acl.Authorization);\r\n}\r\n/** @internal */\r\nfunction internal_getResourceAclRulesForResource(aclRules, resource) {\r\n    return aclRules.filter((rule) => appliesToResource(rule, resource));\r\n}\r\nfunction appliesToResource(aclRule, resource) {\r\n    return getIriAll(aclRule, acl.accessTo).includes(resource);\r\n}\r\n/** @internal */\r\nfunction internal_getDefaultAclRulesForResource(aclRules, resource) {\r\n    return aclRules.filter((rule) => isDefaultForResource(rule, resource));\r\n}\r\nfunction isDefaultForResource(aclRule, resource) {\r\n    return (getIriAll(aclRule, acl.default).includes(resource) ||\r\n        getIriAll(aclRule, acl.defaultForNew).includes(resource));\r\n}\r\n/** @internal */\r\nfunction internal_getAccess(rule) {\r\n    const ruleAccessModes = getIriAll(rule, acl.mode);\r\n    const writeAccess = ruleAccessModes.includes(internal_accessModeIriStrings.write);\r\n    return writeAccess\r\n        ? {\r\n            read: ruleAccessModes.includes(internal_accessModeIriStrings.read),\r\n            append: true,\r\n            write: true,\r\n            control: ruleAccessModes.includes(internal_accessModeIriStrings.control),\r\n        }\r\n        : {\r\n            read: ruleAccessModes.includes(internal_accessModeIriStrings.read),\r\n            append: ruleAccessModes.includes(internal_accessModeIriStrings.append),\r\n            write: false,\r\n            control: ruleAccessModes.includes(internal_accessModeIriStrings.control),\r\n        };\r\n}\r\n/** @internal */\r\nfunction internal_combineAccessModes(modes) {\r\n    return modes.reduce((accumulator, current) => {\r\n        const writeAccess = accumulator.write || current.write;\r\n        return writeAccess\r\n            ? {\r\n                read: accumulator.read || current.read,\r\n                append: true,\r\n                write: true,\r\n                control: accumulator.control || current.control,\r\n            }\r\n            : {\r\n                read: accumulator.read || current.read,\r\n                append: accumulator.append || current.append,\r\n                write: false,\r\n                control: accumulator.control || current.control,\r\n            };\r\n    }, { read: false, append: false, write: false, control: false });\r\n}\r\n/** @internal */\r\nfunction internal_removeEmptyAclRules(aclDataset) {\r\n    const aclRules = internal_getAclRules(aclDataset);\r\n    const aclRulesToRemove = aclRules.filter(isEmptyAclRule);\r\n    // Is this too clever? It iterates over aclRulesToRemove, one by one removing them from aclDataset.\r\n    const updatedAclDataset = aclRulesToRemove.reduce(removeThing, aclDataset);\r\n    return updatedAclDataset;\r\n}\r\nfunction isEmptyAclRule(aclRule) {\r\n    // If there are Quads in there unrelated to Access Control,\r\n    // this is not an empty ACL rule that can be deleted:\r\n    if (subjectToRdfJsQuads(aclRule.predicates, DataFactory.namedNode(aclRule.url), DataFactory.defaultGraph()).some((quad) => !isAclQuad(quad))) {\r\n        return false;\r\n    }\r\n    // If the rule does not apply to any Resource, it is no longer working:\r\n    if (getIri(aclRule, acl.accessTo) === null &&\r\n        getIri(aclRule, acl.default) === null &&\r\n        getIri(aclRule, acl.defaultForNew) === null) {\r\n        return true;\r\n    }\r\n    // If the rule does not specify Access Modes, it is no longer working:\r\n    if (getIri(aclRule, acl.mode) === null) {\r\n        return true;\r\n    }\r\n    // If the rule does not specify whom it applies to, it is no longer working:\r\n    if (getIri(aclRule, acl.agent) === null &&\r\n        getIri(aclRule, acl.agentGroup) === null &&\r\n        getIri(aclRule, acl.agentClass) === null) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nfunction isAclQuad(quad) {\r\n    const predicate = quad.predicate;\r\n    const object = quad.object;\r\n    if (predicate.equals(DataFactory.namedNode(rdf.type)) &&\r\n        object.equals(DataFactory.namedNode(acl.Authorization))) {\r\n        return true;\r\n    }\r\n    if (predicate.equals(DataFactory.namedNode(acl.accessTo)) ||\r\n        predicate.equals(DataFactory.namedNode(acl.default)) ||\r\n        predicate.equals(DataFactory.namedNode(acl.defaultForNew))) {\r\n        return true;\r\n    }\r\n    if (predicate.equals(DataFactory.namedNode(acl.mode)) &&\r\n        Object.values(internal_accessModeIriStrings).some((mode) => object.equals(DataFactory.namedNode(mode)))) {\r\n        return true;\r\n    }\r\n    if (predicate.equals(DataFactory.namedNode(acl.agent)) ||\r\n        predicate.equals(DataFactory.namedNode(acl.agentGroup)) ||\r\n        predicate.equals(DataFactory.namedNode(acl.agentClass))) {\r\n        return true;\r\n    }\r\n    if (predicate.equals(DataFactory.namedNode(acl.origin))) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * IRIs of potential Access Modes\r\n * @internal\r\n */\r\nconst internal_accessModeIriStrings = {\r\n    read: \"http://www.w3.org/ns/auth/acl#Read\",\r\n    append: \"http://www.w3.org/ns/auth/acl#Append\",\r\n    write: \"http://www.w3.org/ns/auth/acl#Write\",\r\n    control: \"http://www.w3.org/ns/auth/acl#Control\",\r\n};\r\n/** @internal\r\n * This function finds, among a set of ACL rules, the ones granting access to a given entity (the target)\r\n * and identifying it with a specific property (`acl:agent` or `acl:agentGroup`).\r\n * @param aclRules The set of rules to filter\r\n * @param targetIri The IRI of the target\r\n * @param targetType The property linking the rule to the target\r\n */\r\nfunction internal_getAclRulesForIri(aclRules, targetIri, targetType) {\r\n    return aclRules.filter((rule) => getIriAll(rule, targetType).includes(targetIri));\r\n}\r\n/** @internal\r\n * This function transforms a given set of rules into a map associating the IRIs\r\n * of the entities to which permissions are granted by these rules, and the permissions\r\n * granted to them. Additionally, it filters these entities based on the predicate\r\n * that refers to them in the rule.\r\n */\r\nfunction internal_getAccessByIri(aclRules, targetType) {\r\n    const targetIriAccess = {};\r\n    aclRules.forEach((rule) => {\r\n        const ruleTargetIri = getIriAll(rule, targetType);\r\n        const access = internal_getAccess(rule);\r\n        // A rule might apply to multiple agents. If multiple rules apply to the same agent, the Access\r\n        // Modes granted by those rules should be combined:\r\n        ruleTargetIri.forEach((targetIri) => {\r\n            targetIriAccess[targetIri] =\r\n                typeof targetIriAccess[targetIri] === \"undefined\"\r\n                    ? access\r\n                    : internal_combineAccessModes([targetIriAccess[targetIri], access]);\r\n        });\r\n    });\r\n    return targetIriAccess;\r\n}\r\n/**\r\n * Initialises a new ACL Rule that grants some access - but does not yet specify to whom.\r\n *\r\n * @hidden This is an internal utility function that should not be used directly by downstreams.\r\n * @param access Access mode that this Rule will grant\r\n */\r\nfunction internal_initialiseAclRule(access) {\r\n    let newRule = createThing();\r\n    newRule = setIri(newRule, rdf.type, acl.Authorization);\r\n    if (access.read) {\r\n        newRule = addIri(newRule, acl.mode, internal_accessModeIriStrings.read);\r\n    }\r\n    if (access.append && !access.write) {\r\n        newRule = addIri(newRule, acl.mode, internal_accessModeIriStrings.append);\r\n    }\r\n    if (access.write) {\r\n        newRule = addIri(newRule, acl.mode, internal_accessModeIriStrings.write);\r\n    }\r\n    if (access.control) {\r\n        newRule = addIri(newRule, acl.mode, internal_accessModeIriStrings.control);\r\n    }\r\n    return newRule;\r\n}\r\n/**\r\n * Creates a new ACL Rule with the same ACL values as the input ACL Rule, but having a different IRI.\r\n *\r\n * Note that non-ACL values will not be copied over.\r\n *\r\n * @hidden This is an internal utility function that should not be used directly by downstreams.\r\n * @param sourceRule ACL rule to duplicate.\r\n */\r\nfunction internal_duplicateAclRule(sourceRule) {\r\n    let targetRule = createThing();\r\n    targetRule = setIri(targetRule, rdf.type, acl.Authorization);\r\n    function copyIris(inputRule, outputRule, predicate) {\r\n        return getIriAll(inputRule, predicate).reduce((outputRule, iriTarget) => addIri(outputRule, predicate, iriTarget), outputRule);\r\n    }\r\n    targetRule = copyIris(sourceRule, targetRule, acl.accessTo);\r\n    targetRule = copyIris(sourceRule, targetRule, acl.default);\r\n    targetRule = copyIris(sourceRule, targetRule, acl.defaultForNew);\r\n    targetRule = copyIris(sourceRule, targetRule, acl.agent);\r\n    targetRule = copyIris(sourceRule, targetRule, acl.agentGroup);\r\n    targetRule = copyIris(sourceRule, targetRule, acl.agentClass);\r\n    targetRule = copyIris(sourceRule, targetRule, acl.origin);\r\n    targetRule = copyIris(sourceRule, targetRule, acl.mode);\r\n    return targetRule;\r\n}\r\nfunction internal_setAcl(resource, acl) {\r\n    return Object.assign(internal_cloneResource(resource), { internal_acl: acl });\r\n}\r\nconst supportedActorPredicates = [\r\n    acl.agent,\r\n    acl.agentClass,\r\n    acl.agentGroup,\r\n    acl.origin,\r\n];\r\n/**\r\n * Given an ACL Rule, returns two new ACL Rules that cover all the input Rule's use cases,\r\n * except for giving the given Actor access to the given Resource.\r\n *\r\n * @param rule The ACL Rule that should no longer apply for a given Actor to a given Resource.\r\n * @param actor The Actor that should be removed from the Rule for the given Resource.\r\n * @param resourceIri The Resource to which the Rule should no longer apply for the given Actor.\r\n * @returns A tuple with the original ACL Rule without the given Actor, and a new ACL Rule for the given Actor for the remaining Resources, respectively.\r\n */\r\nfunction internal_removeActorFromRule(rule, actor, actorPredicate, resourceIri, ruleType) {\r\n    // If the existing Rule does not apply to the given Actor, we don't need to split up.\r\n    // Without this check, we'd be creating a new rule for the given Actor (ruleForOtherTargets)\r\n    // that would give it access it does not currently have:\r\n    if (!getIriAll(rule, actorPredicate).includes(actor)) {\r\n        const emptyRule = internal_initialiseAclRule({\r\n            read: false,\r\n            append: false,\r\n            write: false,\r\n            control: false,\r\n        });\r\n        return [rule, emptyRule];\r\n    }\r\n    // The existing rule will keep applying to Actors other than the given one:\r\n    const ruleWithoutActor = removeIri(rule, actorPredicate, actor);\r\n    // The actor might have been given other access in the existing rule, so duplicate it...\r\n    let ruleForOtherTargets = internal_duplicateAclRule(rule);\r\n    // ...but remove access to the original Resource...\r\n    ruleForOtherTargets = removeIri(ruleForOtherTargets, ruleType === \"resource\" ? acl.accessTo : acl.default, resourceIri);\r\n    // Prevents the legacy predicate 'acl:defaultForNew' to lead to privilege escalation\r\n    if (ruleType === \"default\") {\r\n        ruleForOtherTargets = removeIri(ruleForOtherTargets, acl.defaultForNew, resourceIri);\r\n    }\r\n    // ...and only apply the new Rule to the given Actor (because the existing Rule covers the others):\r\n    ruleForOtherTargets = setIri(ruleForOtherTargets, actorPredicate, actor);\r\n    supportedActorPredicates\r\n        .filter((predicate) => predicate !== actorPredicate)\r\n        .forEach((predicate) => {\r\n        ruleForOtherTargets = removeAll(ruleForOtherTargets, predicate);\r\n    });\r\n    return [ruleWithoutActor, ruleForOtherTargets];\r\n}\r\n/**\r\n * ```{note}\r\n * This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n * Modifies the resource ACL (Access Control List) to set the Access Modes for the given Agent.\r\n * Specifically, the function returns a new resource ACL initialised with the given ACL and\r\n * new rules for the Actor's access.\r\n *\r\n * If rules for Actor's access already exist in the given ACL, in the returned ACL,\r\n * they are replaced by the new rules.\r\n *\r\n * This function does not modify:\r\n *\r\n * - Access Modes granted indirectly to Actors through other ACL rules, e.g., public or group-specific permissions.\r\n * - Access Modes granted to Actors for the child Resources if the associated Resource is a Container.\r\n * - The original ACL.\r\n *\r\n * @param aclDataset The SolidDataset that contains Access-Control List rules.\r\n * @param actor The Actor to grant specific Access Modes.\r\n * @param access The Access Modes to grant to the Actor for the Resource.\r\n * @returns A new resource ACL initialised with the given `aclDataset` and `access` for the `agent`.\r\n */\r\nfunction internal_setActorAccess$2(aclDataset, access, actorPredicate, accessType, actor) {\r\n    // First make sure that none of the pre-existing rules in the given ACL SolidDataset\r\n    // give the Agent access to the Resource:\r\n    let filteredAcl = aclDataset;\r\n    getThingAll(aclDataset).forEach((aclRule) => {\r\n        // Obtain both the Rule that no longer includes the given Actor,\r\n        // and a new Rule that includes all ACL Quads\r\n        // that do not pertain to the given Actor-Resource combination.\r\n        // Note that usually, the latter will no longer include any meaningful statements;\r\n        // we'll clean them up afterwards.\r\n        const [filteredRule, remainingRule] = internal_removeActorFromRule(aclRule, actor, actorPredicate, aclDataset.internal_accessTo, accessType);\r\n        filteredAcl = setThing(filteredAcl, filteredRule);\r\n        filteredAcl = setThing(filteredAcl, remainingRule);\r\n    });\r\n    // Create a new Rule that only grants the given Actor the given Access Modes:\r\n    let newRule = internal_initialiseAclRule(access);\r\n    newRule = setIri(newRule, accessType === \"resource\" ? acl.accessTo : acl.default, aclDataset.internal_accessTo);\r\n    newRule = setIri(newRule, actorPredicate, actor);\r\n    const updatedAcl = setThing(filteredAcl, newRule);\r\n    // Remove any remaining Rules that do not contain any meaningful statements:\r\n    return internal_removeEmptyAclRules(updatedAcl);\r\n}\r\nfunction internal_setResourceAcl(resource, acl) {\r\n    const newAcl = {\r\n        resourceAcl: acl,\r\n        fallbackAcl: null,\r\n    };\r\n    return internal_setAcl(resource, newAcl);\r\n}\r\nfunction internal_getResourceAcl(resource) {\r\n    return resource.internal_acl.resourceAcl;\r\n}\r\n/**\r\n * This error indicates that, if we're following a Link with rel=\"acl\",\r\n * it does not result in a WAC ACL, but in an ACP ACR.\r\n */\r\nclass AclIsAcrError extends Error {\r\n    constructor(sourceResource, aclResource) {\r\n        super(`[${getSourceIri(sourceResource)}] is governed by Access Control Policies in [${getSourceIri(aclResource)}] rather than by Web Access Control.`);\r\n    }\r\n}\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Verify whether a given SolidDataset was fetched together with its Access Control List.\r\n *\r\n * @param dataset A [[SolidDataset]] that may have its ACLs attached.\r\n * @returns True if `dataset` was fetched together with its ACLs.\r\n */\r\nfunction hasAcl(dataset) {\r\n    const potentialAcl = dataset;\r\n    return typeof potentialAcl.internal_acl === \"object\";\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Verifies whether the given Resource has a resource ACL (Access Control List) attached.\r\n *\r\n * The [[hasResourceAcl]] function checks that:\r\n * - a given Resource has a resource ACL attached, and\r\n * - the user calling [[hasResourceAcl]] has Control access to the Resource.\r\n *\r\n * To retrieve a Resource with its ACLs, see [[getSolidDatasetWithAcl]].\r\n *\r\n * @param resource A Resource that might have an ACL attached.\r\n * @returns `true` if the Resource has a resource ACL attached that is accessible by the user.\r\n */\r\nfunction hasResourceAcl(resource) {\r\n    return (resource.internal_acl.resourceAcl !== null &&\r\n        getSourceUrl(resource) ===\r\n            resource.internal_acl.resourceAcl.internal_accessTo &&\r\n        resource.internal_resourceInfo.aclUrl ===\r\n            getSourceUrl(resource.internal_acl.resourceAcl));\r\n}\r\n/**\r\n * Experimental: fetch a SolidDataset and its associated Access Control List.\r\n *\r\n * This is an experimental function that fetches both a Resource, the linked ACL Resource (if\r\n * available), and the ACL that applies to it if the linked ACL Resource is not available. This can\r\n * result in many HTTP requests being executed, in lieu of the Solid spec mandating servers to\r\n * provide this info in a single request. Therefore, and because this function is still\r\n * experimental, prefer [[getSolidDataset]] instead.\r\n *\r\n * If the Resource does not advertise the ACL Resource (because the authenticated user does not have\r\n * access to it), the `acl` property in the returned value will be null. `acl.resourceAcl` will be\r\n * undefined if the Resource's linked ACL Resource could not be fetched (because it does not exist),\r\n * and `acl.fallbackAcl` will be null if the applicable Container's ACL is not accessible to the\r\n * authenticated user.\r\n *\r\n * @param url URL of the SolidDataset to fetch.\r\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\r\n * @returns A SolidDataset and the ACLs that apply to it, if available to the authenticated user.\r\n */\r\nasync function getSolidDatasetWithAcl(url, options = internal_defaultFetchOptions) {\r\n    const solidDataset = await getSolidDataset(url, options);\r\n    const acl = await internal_fetchAcl(solidDataset, options);\r\n    return internal_setAcl(solidDataset, acl);\r\n}\r\n/**\r\n * ```{note} This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Retrieves a file, its resource ACL (Access Control List) if available,\r\n * and its fallback ACL from a URL and returns them as a blob.\r\n *\r\n * If the user calling the function does not have access to the file's resource ACL,\r\n * [[hasAccessibleAcl]] on the returned blob returns false.\r\n * If the user has access to the file's resource ACL but the resource ACL does not exist,\r\n * [[getResourceAcl]] on the returned blob returns null.\r\n * If the fallback ACL is inaccessible by the user,\r\n * [[getFallbackAcl]] on the returned blob returns null.\r\n *\r\n * ```{tip}\r\n * To retrieve the ACLs, the function results in multiple HTTP requests rather than a single\r\n * request as mandated by the Solid spec. As such, prefer [[getFile]] instead if you do not need the ACL.\r\n * ```\r\n *\r\n * @param url The URL of the fetched file\r\n * @param options Fetching options: a custom fetcher and/or headers.\r\n * @returns A file and its ACLs, if available to the authenticated user, as a blob.\r\n * @since 0.2.0\r\n */\r\nasync function getFileWithAcl(input, options = internal_defaultFetchOptions) {\r\n    const file = await getFile(input, options);\r\n    const acl = await internal_fetchAcl(file, options);\r\n    return internal_setAcl(file, acl);\r\n}\r\n/**\r\n * Experimental: fetch a Resource's metadata and its associated Access Control List.\r\n *\r\n * This is an experimental function that fetches both a Resource's metadata, the linked ACL Resource (if\r\n * available), and the ACL that applies to it if the linked ACL Resource is not available (if accessible). This can\r\n * result in many HTTP requests being executed, in lieu of the Solid spec mandating servers to\r\n * provide this info in a single request.\r\n *\r\n * If the Resource's linked ACL Resource could not be fetched (because it does not exist, or because\r\n * the authenticated user does not have access to it), `acl.resourceAcl` will be `null`. If the\r\n * applicable Container's ACL is not accessible to the authenticated user, `acl.fallbackAcl` will be\r\n * `null`.\r\n *\r\n * @param url URL of the SolidDataset to fetch.\r\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\r\n * @returns A Resource's metadata and the ACLs that apply to the Resource, if available to the authenticated user.\r\n */\r\nasync function getResourceInfoWithAcl(url, options = internal_defaultFetchOptions) {\r\n    const resourceInfo = await getResourceInfo(url, options);\r\n    const acl = await internal_fetchAcl(resourceInfo, options);\r\n    return internal_setAcl(resourceInfo, acl);\r\n}\r\nfunction getResourceAcl(resource) {\r\n    if (!hasResourceAcl(resource)) {\r\n        return null;\r\n    }\r\n    return resource.internal_acl.resourceAcl;\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Verifies whether the given Resource has a fallback ACL (Access Control List) attached.\r\n *\r\n * A fallback ACL for a Resource is inherited from the Resource's parent Container\r\n * (or another of its ancestor Containers) and applies if the Resource does\r\n * not have its own resource ACL.\r\n *\r\n * The [[hasFallbackAcl]] function checks that:\r\n * - a given Resource has a fallback ACL attached, and\r\n * - the user calling [[hasFallbackAcl]] has Control access to the Container\r\n * from which the Resource inherits its ACL.\r\n *\r\n * To retrieve a Resource with its ACLs, see [[getSolidDatasetWithAcl]].\r\n *\r\n * @param resource A [[SolidDataset]] that might have a fallback ACL attached.\r\n *\r\n * @returns `true` if the Resource has a fallback ACL attached that is accessible to the user.\r\n */\r\nfunction hasFallbackAcl(resource) {\r\n    return resource.internal_acl.fallbackAcl !== null;\r\n}\r\nfunction getFallbackAcl(dataset) {\r\n    if (!hasFallbackAcl(dataset)) {\r\n        return null;\r\n    }\r\n    return dataset.internal_acl.fallbackAcl;\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Creates an empty resource ACL (Access Control List) for a given Resource.\r\n *\r\n * @param targetResource A Resource that does not have its own ACL yet (see [[hasResourceAcl]]).\r\n * @returns An empty resource ACL for the given Resource.\r\n */\r\nfunction createAcl(targetResource) {\r\n    const emptyResourceAcl = freeze(Object.assign(Object.assign({}, createSolidDataset()), { internal_accessTo: getSourceUrl(targetResource), internal_resourceInfo: {\r\n            sourceIri: targetResource.internal_resourceInfo.aclUrl,\r\n            isRawData: false,\r\n            linkedResources: {},\r\n        } }));\r\n    return emptyResourceAcl;\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Creates a resource ACL (Access Control List), initialised from the fallback ACL\r\n * inherited from the given Resource's Container (or another of its ancestor Containers).\r\n * That is, the new ACL has the same rules/entries as the fallback ACL that currently\r\n * applies to the Resource.\r\n *\r\n * @param resource A Resource without its own resource ACL (see [[hasResourceAcl]]) but with an accessible fallback ACL (see [[hasFallbackAcl]]).\r\n * @returns A resource ACL initialised with the rules/entries from the Resource's fallback ACL.\r\n */\r\nfunction createAclFromFallbackAcl(resource) {\r\n    const emptyResourceAcl = createAcl(resource);\r\n    const fallbackAclRules = internal_getAclRules(resource.internal_acl.fallbackAcl);\r\n    const defaultAclRules = internal_getDefaultAclRulesForResource(fallbackAclRules, resource.internal_acl.fallbackAcl.internal_accessTo);\r\n    const newAclRules = defaultAclRules.map((rule) => {\r\n        rule = removeAll(rule, acl.default);\r\n        rule = removeAll(rule, acl.defaultForNew);\r\n        rule = setIri(rule, acl.accessTo, getSourceUrl(resource));\r\n        rule = setIri(rule, acl.default, getSourceUrl(resource));\r\n        return rule;\r\n    });\r\n    // Iterate over every ACL Rule we want to import, inserting them into `emptyResourceAcl` one by one:\r\n    const initialisedResourceAcl = newAclRules.reduce(setThing, emptyResourceAcl);\r\n    return initialisedResourceAcl;\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Saves the resource ACL for a Resource.\r\n *\r\n * @param resource The Resource to which the given resource ACL applies.\r\n * @param resourceAcl An [[AclDataset]] whose ACL Rules will apply to `resource`.\r\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\r\n */\r\nasync function saveAclFor(resource, resourceAcl, options = internal_defaultFetchOptions) {\r\n    if (!hasAccessibleAcl(resource)) {\r\n        throw new Error(`Could not determine the location of the ACL for the Resource at [${getSourceUrl(resource)}]; possibly the current user does not have Control access to that Resource. Try calling \\`hasAccessibleAcl()\\` before calling \\`saveAclFor()\\`.`);\r\n    }\r\n    const savedDataset = await saveSolidDatasetAt(resource.internal_resourceInfo.aclUrl, resourceAcl, options);\r\n    const savedAclDataset = Object.assign(Object.assign({}, savedDataset), { internal_accessTo: getSourceUrl(resource) });\r\n    return savedAclDataset;\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Removes the resource ACL (Access Control List) from a Resource.\r\n *\r\n * Once the resource ACL is removed from the Resource, the Resource relies on the\r\n * fallback ACL inherited from the Resource's parent Container (or another of its ancestor Containers).\r\n *\r\n * @param resource The Resource for which you want to delete the ACL.\r\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\r\n */\r\nasync function deleteAclFor(resource, options = internal_defaultFetchOptions) {\r\n    const config = Object.assign(Object.assign({}, internal_defaultFetchOptions), options);\r\n    const response = await config.fetch(resource.internal_resourceInfo.aclUrl, {\r\n        method: \"DELETE\",\r\n    });\r\n    if (!response.ok) {\r\n        throw new Error(`Deleting the ACL of the Resource at [${getSourceUrl(resource)}] failed: [${response.status}] [${response.statusText}].`);\r\n    }\r\n    const storedResource = Object.assign(internal_cloneResource(resource), {\r\n        acl: {\r\n            resourceAcl: null,\r\n        },\r\n    });\r\n    return storedResource;\r\n}\r\n/**\r\n * Given a [[SolidDataset]], verify whether its Access Control List is accessible to the current user.\r\n *\r\n * This should generally only be true for SolidDatasets fetched by\r\n * [[getSolidDatasetWithAcl]].\r\n *\r\n * Please note that the Web Access Control specification is not yet finalised, and hence, this\r\n * function is still experimental and can change in a non-major release.\r\n *\r\n * @param dataset A [[SolidDataset]].\r\n * @returns Whether the given `dataset` has a an ACL that is accessible to the current user.\r\n */\r\nfunction hasAccessibleAcl(dataset) {\r\n    return typeof dataset.internal_resourceInfo.aclUrl === \"string\";\r\n}\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * ```{note}\r\n * This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Returns an Agent's explicitly-granted Access Modes for the given Resource.\r\n *\r\n * The function does not return Access Modes granted indirectly to the Agent through other\r\n * ACL rules, e.g., public or group-specific permissions.\r\n *\r\n * @param resourceInfo Information about the Resource to which the given Agent may have been granted access.\r\n * @param agent WebID of the Agent for which to retrieve what access it has to the Resource.\r\n * @returns Access Modes that have been explicitly granted to the Agent for the given Resource, or `null` if it could not be determined (e.g. because the current user does not have Control access to a given Resource or its Container).\r\n */\r\nfunction getAgentAccess$3(resourceInfo, agent) {\r\n    if (hasResourceAcl(resourceInfo)) {\r\n        return getAgentResourceAccess(resourceInfo.internal_acl.resourceAcl, agent);\r\n    }\r\n    if (hasFallbackAcl(resourceInfo)) {\r\n        return getAgentDefaultAccess(resourceInfo.internal_acl.fallbackAcl, agent);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * ```{note}\r\n * This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n * Returns all explicitly-granted Access Modes per Agent for the given Resource.\r\n *\r\n * The function does not return Access Modes granted indirectly to Agents through other\r\n * ACL rules, e.g., public or group-specific permissions.\r\n *\r\n * @param resourceInfo Information about the Resource to which Agents may have been granted access.\r\n * @returns Access Modes per Agent that have been explicitly granted for the given Resource, or `null` if it could not be determined (e.g. because the current user does not have Control access to a given Resource or its Container).\r\n */\r\nfunction getAgentAccessAll$3(resourceInfo) {\r\n    if (hasResourceAcl(resourceInfo)) {\r\n        const resourceAcl = getResourceAcl(resourceInfo);\r\n        return getAgentResourceAccessAll(resourceAcl);\r\n    }\r\n    if (hasFallbackAcl(resourceInfo)) {\r\n        const fallbackAcl = getFallbackAcl(resourceInfo);\r\n        return getAgentDefaultAccessAll(fallbackAcl);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * ```{note}\r\n * This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Returns the Access Modes explicitly granted to an Agent for the Resource\r\n * associated with an ACL (Access ControlList).\r\n *\r\n * The function does not return:\r\n *\r\n * - Access Modes granted indirectly to the Agent through other ACL rules, e.g., public or group-specific permissions.\r\n * - Access Modes granted to the Agent for the child Resources if the associated Resource is a Container (see [[getAgentDefaultAccess]] instead).\r\n *\r\n * @param aclDataset The SolidDataset that contains ACL rules.\r\n * @param agent WebID of the Agent for which to retrieve what access it has to the Resource.\r\n * @returns Access Modes that have been explicitly granted to an Agent for the Resource associated with an ACL SolidDataset.\r\n */\r\nfunction getAgentResourceAccess(aclDataset, agent) {\r\n    const allRules = internal_getAclRules(aclDataset);\r\n    const resourceRules = internal_getResourceAclRulesForResource(allRules, aclDataset.internal_accessTo);\r\n    const agentResourceRules = getAgentAclRulesForAgent(resourceRules, agent);\r\n    const agentAccessModes = agentResourceRules.map(internal_getAccess);\r\n    return internal_combineAccessModes(agentAccessModes);\r\n}\r\n/**\r\n * ```{note}\r\n * This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Returns the explicitly granted Access Modes per Agent for the Resource associated\r\n * with an ACL (Access Control List).\r\n *\r\n * The function does not return:\r\n *\r\n * - Access Modes granted indirectly to Agents through other ACL rules, e.g., public or group-specific permissions.\r\n * - Access Modes granted to Agents for the child Resources if the associated Resource is a Container.\r\n *\r\n * @param aclDataset The SolidDataset that contains ACL rules.\r\n * @returns Access Modes per Agent that have been explicitly granted for the Resource associated with an ACL SolidDataset.\r\n */\r\nfunction getAgentResourceAccessAll(aclDataset) {\r\n    const allRules = internal_getAclRules(aclDataset);\r\n    const resourceRules = internal_getResourceAclRulesForResource(allRules, aclDataset.internal_accessTo);\r\n    const agentResourceRules = getAgentAclRules(resourceRules);\r\n    return getAccessByAgent(agentResourceRules);\r\n}\r\n/**\r\n * ```{note}\r\n * This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n * Modifies the resource ACL (Access Control List) to set the Access Modes for the given Agent.\r\n * Specifically, the function returns a new resource ACL initialised with the given ACL and\r\n * new rules for the Agent's access.\r\n *\r\n * If rules for Agent's access already exist in the given ACL, in the returned ACL,\r\n * they are replaced by the new rules.\r\n *\r\n * This function does not modify:\r\n *\r\n * - Access Modes granted indirectly to Agents through other ACL rules, e.g., public or group-specific permissions.\r\n * - Access Modes granted to Agents for the child Resources if the associated Resource is a Container.\r\n * - The original ACL.\r\n *\r\n * @param aclDataset The SolidDataset that contains Access-Control List rules.\r\n * @param agent The Agent to grant specific Access Modes.\r\n * @param access The Access Modes to grant to the Agent for the Resource.\r\n * @returns A new resource ACL initialised with the given `aclDataset` and `access` for the `agent`.\r\n */\r\nfunction setAgentResourceAccess$1(aclDataset, agent, access) {\r\n    return internal_setActorAccess$2(aclDataset, access, acl.agent, \"resource\", agent);\r\n}\r\n/**\r\n * ```{note}\r\n * This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Returns an Agent's Access Modes explicitly granted for the children of the\r\n * Container associated with the given ACL (Access Control List).\r\n *\r\n * The function does not return:\r\n * - Access Modes granted indirectly to the Agent through other ACL rules, e.g. public or group-specific permissions.\r\n * - Access Modes granted to the Agent for the Container Resource itself (see [[getAgentResourceAccess]] instead).\r\n *\r\n * @param aclDataset The SolidDataset that contains Access-Control List rules for a certain Container.\r\n * @param agent WebID of the Agent for which to retrieve what access it has to the Container's children.\r\n * @returns Access Modes that have been explicitly granted to an Agent for the children of the Container associated with the given ACL.\r\n */\r\nfunction getAgentDefaultAccess(aclDataset, agent) {\r\n    const allRules = internal_getAclRules(aclDataset);\r\n    const resourceRules = internal_getDefaultAclRulesForResource(allRules, aclDataset.internal_accessTo);\r\n    const agentResourceRules = getAgentAclRulesForAgent(resourceRules, agent);\r\n    const agentAccessModes = agentResourceRules.map(internal_getAccess);\r\n    return internal_combineAccessModes(agentAccessModes);\r\n}\r\n/**\r\n * ```{note}\r\n * This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Returns the Access Modes, per Agent, that have been explicitly granted for the children\r\n * of the Container associated with the given ACL (Access Control List).\r\n *\r\n * The function does not return:\r\n *\r\n * - Access Modes granted indirectly to the Agents through other ACL rules, e.g. public or group-specific permissions.\r\n * - Access Modes granted to the Agents for the Container Resource itself (see [[getAgentResourceAccessAll]] instead).\r\n *\r\n * @param aclDataset The SolidDataset that contains Access-Control List rules.\r\n * @returns Access Modes, per Agent, that have been explicitly granted for the children of the Container associated with the given ACL.\r\n */\r\nfunction getAgentDefaultAccessAll(aclDataset) {\r\n    const allRules = internal_getAclRules(aclDataset);\r\n    const resourceRules = internal_getDefaultAclRulesForResource(allRules, aclDataset.internal_accessTo);\r\n    const agentResourceRules = getAgentAclRules(resourceRules);\r\n    return getAccessByAgent(agentResourceRules);\r\n}\r\n/**\r\n * ```{note}\r\n * This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Modifies the default ACL (Access Control List) to set an Agent's Access Modes for the Container's children.\r\n * Specifically, the function returns a new default ACL initialised with the given ACL and\r\n * new rules for the Agent's access.\r\n *\r\n * If rules already exist for the Agent in the given ACL, in the returned ACL, they are replaced by the new rules.\r\n *\r\n * This function does not modify:\r\n * - Access Modes granted indirectly to the Agent through other ACL rules, e.g., public or group-specific permissions.\r\n * - Access Modes granted to the Agent for the Container Resource itself.\r\n * - The original ACL.\r\n *\r\n * @param aclDataset The SolidDataset that contains Access-Control List rules.\r\n * @param agent The Agent to grant specific Access Modes.\r\n * @param access The Access Modes to grant to the Agent.\r\n * @returns A new default ACL initialised with the given `aclDataset` and `access` for the `agent`.\r\n */\r\nfunction setAgentDefaultAccess(aclDataset, agent, access) {\r\n    return internal_setActorAccess$2(aclDataset, access, acl.agent, \"default\", agent);\r\n}\r\nfunction getAgentAclRulesForAgent(aclRules, agent) {\r\n    return internal_getAclRulesForIri(aclRules, agent, acl.agent);\r\n}\r\nfunction getAgentAclRules(aclRules) {\r\n    return aclRules.filter(isAgentAclRule);\r\n}\r\nfunction isAgentAclRule(aclRule) {\r\n    return getIri(aclRule, acl.agent) !== null;\r\n}\r\nfunction getAccessByAgent(aclRules) {\r\n    return internal_getAccessByIri(aclRules, acl.agent);\r\n}\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * ```{note} This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n * Returns a Group's explicity-granted Access Modes for a given Resource.\r\n *\r\n * The function does not return Access Modes granted indirectly to the Group through other\r\n * ACL rules, e.g., public permissions.\r\n *\r\n * @param resourceInfo Information about the Resource to which the given Group may have been granted access.\r\n * @param group URL of the Group for which to retrieve what access it has to the Resource.\r\n * @returns Access Modes that have been explicitly granted to the `group` for the given Resource, or `null` if it could not be determined (e.g. because the current user does not have Control Access to a given Resource or its Container).\r\n */\r\nfunction getGroupAccess$2(resourceInfo, group) {\r\n    if (hasResourceAcl(resourceInfo)) {\r\n        return getGroupResourceAccess(resourceInfo.internal_acl.resourceAcl, group);\r\n    }\r\n    if (hasFallbackAcl(resourceInfo)) {\r\n        return getGroupDefaultAccess(resourceInfo.internal_acl.fallbackAcl, group);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * ```{note} This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Returns all explicitly-granted Access Modes per Group for the given Resource.\r\n *\r\n * The function does not return Access Modes granted indirectly to the Group through other\r\n * ACL rules, e.g., public permissions.\r\n *\r\n * @param resourceInfo Information about the Resource to which the given Group may have been granted access.\r\n * @returns Access Modes per Group that have been explicitly granted for the given Resource, or `null` if it could not be determined (e.g. because the current user does not have Control Access to a given Resource or its Container).\r\n */\r\nfunction getGroupAccessAll$2(resourceInfo) {\r\n    if (hasResourceAcl(resourceInfo)) {\r\n        const resourceAcl = getResourceAcl(resourceInfo);\r\n        return getGroupResourceAccessAll(resourceAcl);\r\n    }\r\n    if (hasFallbackAcl(resourceInfo)) {\r\n        const fallbackAcl = getFallbackAcl(resourceInfo);\r\n        return getGroupDefaultAccessAll(fallbackAcl);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * ```{note} This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Returns the Access Modes explicitly granted to a Group for the Resource\r\n * associated with an ACL (Access Control List).\r\n *\r\n * The function does not return:\r\n * - Access Modes granted indirectly to the Group through other ACL rules, e.g., public permissions.\r\n * - Access Modes granted to the Group for the child Resources if the associated Resource is a Container\r\n *   (see [[getGroupDefaultAccess]] instead).\r\n *\r\n * @param aclDataset The SolidDataset that contains Access Control List rules.\r\n * @param group URL of the Group for which to retrieve what access it has to the Resource.\r\n * @returns Access Modes explicitly granted to a Group for the Resource associated with an ACL.\r\n */\r\nfunction getGroupResourceAccess(aclDataset, group) {\r\n    const allRules = internal_getAclRules(aclDataset);\r\n    const resourceRules = internal_getResourceAclRulesForResource(allRules, aclDataset.internal_accessTo);\r\n    const groupResourceRules = getGroupAclRuleForGroup(resourceRules, group);\r\n    const groupAccessModes = groupResourceRules.map(internal_getAccess);\r\n    return internal_combineAccessModes(groupAccessModes);\r\n}\r\n/**\r\n * ```{note} This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Returns the explicitly granted Access Modes per Group for the Resource associated\r\n * with an ACL (Access Control List).\r\n *\r\n * The function does not return:\r\n * - Access Modes granted indirectly to the Group through other ACL rules, e.g., public permissions.\r\n * - Access Modes granted to Groups for the child Resources if the associated Resource is a Container.\r\n *\r\n * @param aclDataset The SolidDataset that contains Access Control List rules.\r\n * @returns Access Modes per Group that have been explicitly granted for the Resource associated with an ACL.\r\n */\r\nfunction getGroupResourceAccessAll(aclDataset) {\r\n    const allRules = internal_getAclRules(aclDataset);\r\n    const resourceRules = internal_getResourceAclRulesForResource(allRules, aclDataset.internal_accessTo);\r\n    return getAccessByGroup(resourceRules);\r\n}\r\n/**\r\n * ```{note} This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Returns a Group's Access Modes explicitly granted for the children of the\r\n * Container associated with an ACL (Access ControlList).\r\n *\r\n * The function does not return:\r\n * - Access Modes granted indirectly to the Group through other ACL rules, e.g. public permissions.\r\n * - Access Modes granted to the Group for the Container Resource itself (see [[getGroupResourceAccess]] instead).\r\n *\r\n * @param aclDataset The SolidDataset that contains ACL rules for a certain Container.\r\n * @param group URL of the Group for which to retrieve what access it has to the child Resources of the given Container.\r\n * @returns Access Modes that have been explicitly granted to the Group for the children of the Container associated with the given ACL.\r\n */\r\nfunction getGroupDefaultAccess(aclDataset, group) {\r\n    const allRules = internal_getAclRules(aclDataset);\r\n    const defaultRules = internal_getDefaultAclRulesForResource(allRules, aclDataset.internal_accessTo);\r\n    const groupDefaultRules = getGroupAclRuleForGroup(defaultRules, group);\r\n    const groupAccessModes = groupDefaultRules.map(internal_getAccess);\r\n    return internal_combineAccessModes(groupAccessModes);\r\n}\r\n/**\r\n * ```{note} This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Returns the Access Modes, per Group, that have been explicitly granted for the children\r\n * of the Container associated with the given ACL (Access Control List).\r\n *\r\n * The function does not return:\r\n * - Access Modes granted indirectly to the Groups through other ACL rules, e.g. public permissions.\r\n * - Access Modes granted to the Groups for the Container Resource itself (see [[getGroupResourceAccessAll]] instead).\r\n *\r\n * @param aclDataset The SolidDataset that contains Access Control List rules for a certain Container.\r\n * @returns Access Modes per Group that have been explicitly granted for the children of the Container associated with the given ACL SolidDataset.\r\n */\r\nfunction getGroupDefaultAccessAll(aclDataset) {\r\n    const allRules = internal_getAclRules(aclDataset);\r\n    const defaultRules = internal_getDefaultAclRulesForResource(allRules, aclDataset.internal_accessTo);\r\n    return getAccessByGroup(defaultRules);\r\n}\r\nfunction getGroupAclRuleForGroup(rules, group) {\r\n    return internal_getAclRulesForIri(rules, group, acl.agentGroup);\r\n}\r\nfunction getAccessByGroup(aclRules) {\r\n    return internal_getAccessByIri(aclRules, acl.agentGroup);\r\n}\r\n/**\r\n * ```{note}\r\n * This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n * Modifies the resource ACL (Access Control List) to set the Access Modes for the given Group.\r\n * Specifically, the function returns a new resource ACL initialised with the given ACL and\r\n * new rules for the Group's access.\r\n *\r\n * If rules for Groups's access already exist in the given ACL, in the returned ACL,\r\n * they are replaced by the new rules.\r\n *\r\n * This function does not modify:\r\n *\r\n * - Access Modes granted indirectly to Groups through other ACL rules, e.g., public or Agent-specific permissions.\r\n * - Access Modes granted to Groups for the child Resources if the associated Resource is a Container.\r\n * - The original ACL.\r\n *\r\n * @param aclDataset The SolidDataset that contains Access-Control List rules.\r\n * @param group The Group to grant specific Access Modes.\r\n * @param access The Access Modes to grant to the Group for the Resource.\r\n * @returns A new resource ACL initialised with the given `aclDataset` and `access` for the `group`.\r\n * @since 1.4.0\r\n */\r\nfunction setGroupResourceAccess$1(aclDataset, group, access) {\r\n    return internal_setActorAccess$2(aclDataset, access, acl.agentGroup, \"resource\", group);\r\n}\r\n/**\r\n * ```{note}\r\n * This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Modifies the default ACL (Access Control List) to set a Group's Access Modes for the Container's children.\r\n * Specifically, the function returns a new default ACL initialised with the given ACL and\r\n * new rules for the Group's access.\r\n *\r\n * If rules already exist for the Group in the given ACL, in the returned ACL, they are replaced by the new rules.\r\n *\r\n * This function does not modify:\r\n * - Access Modes granted indirectly to the Group through other ACL rules, e.g., public or Agent-specific permissions.\r\n * - Access Modes granted to the Group for the Container Resource itself.\r\n * - The original ACL.\r\n *\r\n * @param aclDataset The SolidDataset that contains Access-Control List rules.\r\n * @param group The Group to grant specific Access Modes.\r\n * @param access The Access Modes to grant to the Group.\r\n * @returns A new default ACL initialised with the given `aclDataset` and `access` for the `group`.\r\n * @since 1.4.0\r\n */\r\nfunction setGroupDefaultAccess(aclDataset, group, access) {\r\n    return internal_setActorAccess$2(aclDataset, access, acl.agentGroup, \"default\", group);\r\n}\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * ```{note}\r\n * This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Returns the Access Modes granted to the public in general for a Resource.\r\n *\r\n * This function does not return Access Modes granted to specific Agents\r\n * through other ACL (Access Control List) rules, e.g., agent- or group-specific permissions.\r\n *\r\n * @param resourceInfo Information about the Resource to which the given Agent may have been granted access.\r\n * @returns Access Modes granted to the public in general for the Resource, or `null` if it could not be determined (e.g. because the current user does not have Control Access to a given Resource or its Container).\r\n */\r\nfunction getPublicAccess$3(resourceInfo) {\r\n    if (hasResourceAcl(resourceInfo)) {\r\n        return getPublicResourceAccess(resourceInfo.internal_acl.resourceAcl);\r\n    }\r\n    if (hasFallbackAcl(resourceInfo)) {\r\n        return getPublicDefaultAccess(resourceInfo.internal_acl.fallbackAcl);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * ```{note}\r\n * This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Returns the Access Modes granted to the public in general for the Resource\r\n * associated with an ACL (Access Control List).\r\n *\r\n * This function does not return:\r\n * - Access Modes granted to specific Agents through other ACL rules, e.g., agent- or group-specific permissions.\r\n * - Access Modes to child Resources if the associated Resource is a Container (see [[getPublicDefaultAccess]] instead).\r\n *\r\n * @param aclDataset The SolidDataset that contains Access Control List rules.\r\n * @returns Access Modes granted to the public in general for the Resource associated with the `aclDataset`.\r\n */\r\nfunction getPublicResourceAccess(aclDataset) {\r\n    const allRules = internal_getAclRules(aclDataset);\r\n    const resourceRules = internal_getResourceAclRulesForResource(allRules, aclDataset.internal_accessTo);\r\n    const publicResourceRules = getClassAclRulesForClass(resourceRules, foaf.Agent);\r\n    const publicAccessModes = publicResourceRules.map(internal_getAccess);\r\n    return internal_combineAccessModes(publicAccessModes);\r\n}\r\n/**\r\n * ```{note}\r\n * This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Returns the Access Modes granted to the public in general for the child Resources\r\n * of the Container associated with an ACL (Access Control List).\r\n *\r\n * This function does not return:\r\n * - Access Modes granted to Agents through other ACL rules, e.g., agent- or group-specific permissions.\r\n * - Access Modes to the Container Resource itself (see [[getPublicResourceAccess]] instead).\r\n *\r\n * @param aclDataset The SolidDataset that contains Access Control List rules for a certain Container.\r\n * @returns Access Modes granted to the public in general for the children of the Container associated with the given `aclDataset`.\r\n */\r\nfunction getPublicDefaultAccess(aclDataset) {\r\n    const allRules = internal_getAclRules(aclDataset);\r\n    const resourceRules = internal_getDefaultAclRulesForResource(allRules, aclDataset.internal_accessTo);\r\n    const publicResourceRules = getClassAclRulesForClass(resourceRules, foaf.Agent);\r\n    const publicAccessModes = publicResourceRules.map(internal_getAccess);\r\n    return internal_combineAccessModes(publicAccessModes);\r\n}\r\n/**\r\n * ```{note}\r\n * This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Modifies the resource ACL (Access Control List) to set the Access Modes for the public.\r\n * Specifically, the function returns a new resource ACL (Access Control List) initialised\r\n * with the given resource ACL and new rules for the given public access.\r\n *\r\n * If rules for public access already exist in the given ACL, in the *returned* ACL,\r\n * they are replaced by the new rules.\r\n *\r\n * This function does not modify:\r\n * - Access Modes granted to Agents through other ACL rules, e.g., agent- or group-specific permissions.\r\n * - Access Modes to child Resources if the associated Resource is a Container.\r\n * - The original ACL.\r\n *\r\n * @param aclDataset The SolidDataset that contains Access Control List rules.\r\n * @param access The Access Modes to grant to the public.\r\n * @returns A new resource ACL initialised with the given `aclDataset` and public `access`.\r\n */\r\nfunction setPublicResourceAccess$1(aclDataset, access) {\r\n    return internal_setActorAccess$2(aclDataset, access, acl.agentClass, \"resource\", foaf.Agent);\r\n}\r\n/**\r\n * ```{note}\r\n * This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Modifies the default ACL (Access Control List) to set the public's default Access Modes\r\n * to child resources. Specifically, the function returns a new default ACL initialised\r\n * with the given default ACL and new rules for the given public access.\r\n *\r\n * If rules for public access already exist in the given ACL, in the *returned* ACL,\r\n * they are replaced by the new rules.\r\n *\r\n * This function does not modify:\r\n * - Access Modes granted to Agents through other ACL rules, e.g., agent- or group-specific permissions.\r\n * - Access Modes to Container Resource itself.\r\n * - The original ACL.\r\n *\r\n * @param aclDataset The SolidDataset that contains Access Control List rules.\r\n * @param access The Access Modes to grant to the public.\r\n * @returns A new default ACL initialised with the given `aclDataset` and public `access`.\r\n */\r\nfunction setPublicDefaultAccess(aclDataset, access) {\r\n    return internal_setActorAccess$2(aclDataset, access, acl.agentClass, \"default\", foaf.Agent);\r\n}\r\nfunction getClassAclRulesForClass(aclRules, agentClass) {\r\n    return aclRules.filter((rule) => appliesToClass(rule, agentClass));\r\n}\r\nfunction appliesToClass(aclRule, agentClass) {\r\n    return getIriAll(aclRule, acl.agentClass).includes(agentClass);\r\n}\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nfunction setMockAclUrl(resource, aclUrl) {\r\n    const resourceWithAclUrl = Object.assign(internal_cloneResource(resource), {\r\n        internal_resourceInfo: Object.assign(Object.assign({}, resource.internal_resourceInfo), { aclUrl: aclUrl }),\r\n    });\r\n    return resourceWithAclUrl;\r\n}\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * ```{warning}\r\n * Do not use this function in production code. For use in **unit tests** that\r\n * require a [[SolidDataset]] with a resource ACL (Access Control List).\r\n * ```\r\n *\r\n * Initialises a new empty ACL and attaches it to a given [[SolidDataset]] for use\r\n * in **unit tests**; e.g., unit tests that call [[getResourceAcl]].\r\n *\r\n * @param resource The Resource to mock up with a new resource ACL.\r\n * @returns The input Resource with an empty resource ACL attached.\r\n * @since 0.2.0\r\n */\r\nfunction addMockResourceAclTo(resource) {\r\n    var _a;\r\n    const aclUrl = (_a = resource.internal_resourceInfo.aclUrl) !== null && _a !== void 0 ? _a : \"https://your.pod/mock-acl.ttl\";\r\n    const resourceWithAclUrl = Object.assign(internal_cloneResource(resource), {\r\n        internal_resourceInfo: Object.assign(Object.assign({}, resource.internal_resourceInfo), { aclUrl: aclUrl }),\r\n    });\r\n    const aclDataset = createAcl(resourceWithAclUrl);\r\n    const resourceWithResourceAcl = internal_setAcl(resourceWithAclUrl, {\r\n        resourceAcl: aclDataset,\r\n        fallbackAcl: null,\r\n    });\r\n    return resourceWithResourceAcl;\r\n}\r\n/**\r\n *\r\n * ```{warning}\r\n * Do not use this function in production code.  For use in **unit tests** that require a\r\n * [[SolidDataset]] with a fallback ACL (Access Control List).\r\n * ```\r\n *\r\n * Initialises a new empty fallback ACL and attaches it to a given [[SolidDataset]] for use\r\n * in **unit tests**; e.g., unit tests that call [[getFallbackAcl]].\r\n *\r\n * @param resource The Resource to mock up with new fallback ACL.\r\n * @returns The input Resource with an empty fallback ACL attached.\r\n * @since 0.2.0\r\n */\r\nfunction addMockFallbackAclTo(resource) {\r\n    const containerUrl = internal_getContainerPath(getSourceIri(resource));\r\n    const aclUrl = containerUrl + \".acl\";\r\n    const mockContainer = setMockAclUrl(mockContainerFrom(containerUrl), aclUrl);\r\n    const aclDataset = createAcl(mockContainer);\r\n    const resourceWithFallbackAcl = internal_setAcl(internal_cloneResource(resource), {\r\n        resourceAcl: null,\r\n        fallbackAcl: aclDataset,\r\n    });\r\n    return resourceWithFallbackAcl;\r\n}\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nconst rdfJsDataset = rdfJsDatasetModule.dataset;\r\n/**\r\n * Convert an RDF/JS Dataset into a [[SolidDataset]]\r\n *\r\n * Parse an RDF/JS\r\n * {@link https://rdf.js.org/dataset-spec/#datasetcore-interface DatasetCore},\r\n * into a [[SolidDataset]]. Note that, when saving the returned SolidDataset to\r\n * a Solid Pod, only Quads in the Default Graph will be stored.\r\n *\r\n * @param rdfJsDataset The source RDF/JS Dataset.\r\n * @returns A [[SolidDataset]] containing the same data as the given RDF/JS Dataset.\r\n * @since 1.9.0\r\n */\r\nfunction fromRdfJsDataset(rdfJsDataset) {\r\n    const dataset = {\r\n        graphs: { default: {} },\r\n        type: \"Dataset\",\r\n    };\r\n    const quads = Array.from(rdfJsDataset);\r\n    const chainBlankNodes = getChainBlankNodes(quads);\r\n    // Quads with chain Blank Nodes as their Subject will be parsed when those\r\n    // Blank Nodes are referred to in an Object. See `addRdfJsQuadToObjects`.\r\n    const quadsWithoutChainBlankNodeSubjects = quads.filter((quad) => chainBlankNodes.every((chainBlankNode) => !chainBlankNode.equals(quad.subject)));\r\n    return quadsWithoutChainBlankNodeSubjects.reduce((datasetAcc, quad) => addRdfJsQuadToDataset(datasetAcc, quad, {\r\n        otherQuads: quads,\r\n        chainBlankNodes: chainBlankNodes,\r\n    }), dataset);\r\n}\r\n/**\r\n * Convert a [[SolidDataset]] into an RDF/JS Dataset\r\n *\r\n * Export a [[SolidDataset]] into an RDF/JS\r\n * {@link https://rdf.js.org/dataset-spec/#datasetcore-interface DatasetCore}.\r\n *\r\n * @param set A [[SolidDataset]] to export into an RDF/JS Dataset.\r\n * @param options Optional parameter that allows you to pass in your own RDF/JS DataFactory or DatasetCoreFactory.\r\n * @returns An RDF/JS Dataset containing the data from the given SolidDataset.\r\n * @since 1.9.0\r\n */\r\nfunction toRdfJsDataset(set, options = {}) {\r\n    var _a, _b;\r\n    const datasetFactory = (_b = (_a = options.datasetFactory) === null || _a === void 0 ? void 0 : _a.dataset) !== null && _b !== void 0 ? _b : rdfJsDataset;\r\n    return datasetFactory(toRdfJsQuads(set, options));\r\n}\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nfunction getProfileFromProfileDoc(profileDataset, webId) {\r\n    const profile = getThing(profileDataset, webId);\r\n    if (profile === null) {\r\n        throw new Error(`Profile document [${getSourceUrl(profileDataset)}] does not include WebID [${webId}]`);\r\n    }\r\n    return profile;\r\n}\r\n/**\r\n * Set a JWKS IRI associated with a WebID in a profile document.\r\n *\r\n * @param profileDocument The profile document dataset.\r\n * @param webId The WebID associated with the profile document.\r\n * @param jwksIri The JWKS IRI to be set.\r\n * @returns A modified copy of the profile document, with the JWKS IRI set.\r\n * @since 1.12.0\r\n */\r\nfunction setProfileJwks(profileDocument, webId, jwksIri) {\r\n    return setThing(profileDocument, setIri(getProfileFromProfileDoc(profileDocument, webId), security.publicKey, jwksIri));\r\n}\r\n/**\r\n * Look for a JWKS IRI optionally advertized from a profile document.\r\n *\r\n * @param profileDocument The profile document.\r\n * @param webId The WebID featured in the profile document.\r\n * @returns The JWKS IRI associated with the WebID, if any.\r\n * @since 1.12.0\r\n */\r\nfunction getProfileJwksIri(profileDocument, webId) {\r\n    return getUrl(getProfileFromProfileDoc(profileDocument, webId), security.publicKey);\r\n}\r\nconst isJwks = (jwksDocument) => {\r\n    return typeof jwksDocument.keys !== \"undefined\";\r\n};\r\n/**\r\n * Fetch a JWKS at a given IRI, and add the given JWK to the obtained key set.\r\n *\r\n * @param jwk The JWK to add to the set.\r\n * @param jwksIri The IRI where the key set should be looked up.\r\n * @param options @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\r\n * @returns Promise resolving to a JWKS where the given key has been added.\r\n * @since 1.12.0\r\n */\r\nasync function addJwkToJwks(jwk, jwksIri, options = internal_defaultFetchOptions) {\r\n    const config = Object.assign(Object.assign({}, internal_defaultFetchOptions), options);\r\n    const jwksResponse = await config.fetch(jwksIri);\r\n    if (!jwksResponse.ok) {\r\n        throw new Error(`Fetching [${jwksIri}] returned an error: ${jwksResponse.status} ${jwksResponse.statusText}`);\r\n    }\r\n    try {\r\n        const jwksDocument = await jwksResponse.json();\r\n        if (!isJwks(jwksDocument)) {\r\n            throw new Error(`[${jwksIri}] does not dereference to a valid JWKS: ${JSON.stringify(jwksDocument)}`);\r\n        }\r\n        return {\r\n            keys: [...jwksDocument.keys, jwk],\r\n        };\r\n    }\r\n    catch (e) {\r\n        throw new Error(`Parsing the document at [${jwksIri}] failed: ${e}`);\r\n    }\r\n}\r\n/**\r\n * Adds a public key to the JWKS listed in the profile associated to the given WebID.\r\n * Retrieves the profile document for the specified WebID and looks up the associated\r\n * JWKS. Having added the given key to the JWKS, this function overwrites the\r\n * previous JWKS so that the new version is saved. This assumes the JWKS is hosted\r\n * at a read-write IRI, such as in a Solid Pod.\r\n *\r\n * @param publicKey The public key value to set.\r\n * @param webId The WebID whose profile document references the key set to which we wish to add the specified public key.\r\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\r\n * @since 1.12.0\r\n */\r\nasync function addPublicKeyToProfileJwks(publicKey, webId, options = internal_defaultFetchOptions) {\r\n    const profileDataset = await getSolidDataset(webId, {\r\n        fetch: options.fetch,\r\n    });\r\n    if (profileDataset === null) {\r\n        throw new Error(`The profile document associated with WebID [${webId}] could not be retrieved.`);\r\n    }\r\n    const jwksIri = getProfileJwksIri(profileDataset, webId);\r\n    if (jwksIri === null) {\r\n        throw new Error(`No key set is declared for the property [${security.publicKey}] in the profile of [${webId}]`);\r\n    }\r\n    const updatedJwks = await addJwkToJwks(publicKey, jwksIri, options);\r\n    return overwriteFile(jwksIri, new Blob([JSON.stringify(updatedJwks)]), {\r\n        contentType: \"application/json\",\r\n        fetch: options.fetch,\r\n    });\r\n}\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/** @hidden */\r\nfunction internal_getAcr(resource) {\r\n    if (!hasAccessibleAcr(resource)) {\r\n        throw new Error(`An Access Control Resource for [${getSourceUrl(resource)}] is not available. This could be because the current user is not allowed to see it, or because their Pod Server does not support Access Control Resources.`);\r\n    }\r\n    return resource.internal_acp.acr;\r\n}\r\n/** @hidden */\r\nfunction internal_setAcr(resource, acr) {\r\n    return Object.assign(internal_cloneResource(resource), {\r\n        internal_acp: Object.assign(Object.assign({}, resource.internal_acp), { acr: acr }),\r\n    });\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Initialise a new [[Control]].\r\n * @hidden Developers don't need to care about initialising Controls - they can just add Policies directly.\r\n * @deprecated\r\n */\r\nfunction internal_createControl(options) {\r\n    let control = createThing(options);\r\n    control = setIri(control, rdf.type, acp.AccessControl);\r\n    return control;\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Find an [[Control]] with a given URL in a given Resource with an Access Control Resource.\r\n *\r\n * @returns The requested Access Control, or `null` if it could not be found.\r\n * @hidden Developers don't need to care about initialising Controls - they can just add Policies directly.\r\n * @deprecated\r\n */\r\nfunction internal_getControl(withAccessControlResource, url, options) {\r\n    const acr = internal_getAcr(withAccessControlResource);\r\n    const foundThing = getThing(acr, url, options);\r\n    if (foundThing === null ||\r\n        !getIriAll(foundThing, rdf.type).includes(acp.AccessControl)) {\r\n        return null;\r\n    }\r\n    return foundThing;\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Get all [[Control]]s in the Access Control Resource of a given Resource.\r\n * @hidden Developers don't need to care about initialising Controls - they can just add Policies directly.\r\n * @deprecated\r\n */\r\nfunction internal_getControlAll(withAccessControlResource, options) {\r\n    const acr = internal_getAcr(withAccessControlResource);\r\n    const foundThings = getThingAll(acr, options);\r\n    return foundThings.filter((foundThing) => getIriAll(foundThing, rdf.type).includes(acp.AccessControl));\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Insert an [[Control]] into the [[AccessControlResource]] of a Resource, replacing previous\r\n * instances of that Access Control.\r\n *\r\n * @param withAccessControlResource A Resource with the Access Control Resource into which to insert an Access Control.\r\n * @param control The Control to insert into the Access Control Resource.\r\n * @returns The given Resource with a new Access Control Resource equal to the original Access Control Resource, but with the given Access Control.\r\n * @hidden Developers don't need to care about initialising Controls - they can just add Policies directly.\r\n * @deprecated\r\n */\r\nfunction internal_setControl(withAccessControlResource, control) {\r\n    const acr = internal_getAcr(withAccessControlResource);\r\n    const updatedAcr = setThing(acr, control);\r\n    const updatedResource = internal_setAcr(withAccessControlResource, updatedAcr);\r\n    return updatedResource;\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Add a [[Policy]] to an [[Control]] such that that Policy applies to the Resource to which\r\n * the [[Control]] is linked.\r\n *\r\n * @param accessControl The [[Control]] to which the Policy should be added.\r\n * @param policyUrl URL of the Policy that should apply to the Resource to which the [[Control]] is linked.\r\n * @returns A new [[Control]] equal to the given [[Control]], but with the given policy added to it.\r\n * @hidden Developers don't need to care about working with Controls - they can just add Policies to the Resource directly.\r\n * @deprecated\r\n */\r\nfunction internal_addPolicyUrl(accessControl, policyUrl) {\r\n    return addIri(accessControl, acp.apply, policyUrl);\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Get all Policies that apply to the Resource to which the given [[Control]] is linked, and\r\n * which can be removed by anyone with Write access to the Access Control Resource that contains the\r\n * [[Control]].\r\n *\r\n * @param accessControl The [[Control]] of which to get the Policies.\r\n * @returns The Policies that are listed in this [[Control]] as applying to the Resource it is linked to, and as removable by anyone with Write access to the Access Control Resource.\r\n * @hidden Developers don't need to care about working with Controls - they can just add Policies to the Resource directly.\r\n * @deprecated\r\n */\r\nfunction internal_getPolicyUrlAll(accessControl) {\r\n    return getIriAll(accessControl, acp.apply);\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Remove a given Policy that applies to the Resource to which the given [[Control]] is linked,\r\n * and which can be removed by anyone with Write access to the Access Control Resource that contains\r\n * the Access Control.\r\n *\r\n * @param accessControl The [[Control]] of which to remove the Policies.\r\n * @param policyUrl URL of the Policy that should no longer apply to the Resource to which the [[Control]] is linked.\r\n * @returns A new [[Control]] equal to the given [[Control]], but with the given Policy removed from it.\r\n * @hidden Developers don't need to care about working with Controls - they can just add Policies to the Resource directly.\r\n * @deprecated\r\n */\r\nfunction internal_removePolicyUrl(accessControl, policyUrl) {\r\n    return removeIri(accessControl, acp.apply, policyUrl);\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Remove all Policies that apply to the Resource to which the given [[Control]] is linked, and\r\n * which can be removed by anyone with Write access to the Access Control Resource that contains the\r\n * [[Control]].\r\n *\r\n * @param accessControl The [[Control]] of which to remove the Policies.\r\n * @returns A new [[Control]] equal to the given [[Control]], but with all Policies removed from it.\r\n * @hidden Developers don't need to care about working with Controls - they can just add Policies to the Resource directly.\r\n * @deprecated\r\n */\r\nfunction internal_removePolicyUrlAll(accessControl) {\r\n    return removeAll(accessControl, acp.apply);\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Add a [[Policy]] to an [[Control]] such that that Policy applies to the children of the\r\n * Resource to which the [[Control]] is linked.\r\n *\r\n * @param accessControl The [[Control]] to which the Policy should be added.\r\n * @param policyUrl URL of the Policy that should apply to the children of the Resource to which the [[Control]] is linked.\r\n * @returns A new [[Control]] equal to the given [[Control]], but with the given policy added to it as a Member Policy.\r\n * @hidden Developers don't need to care about working with Controls - they can just add Policies to the Resource directly.\r\n * @deprecated\r\n */\r\nfunction internal_addMemberPolicyUrl(accessControl, policyUrl) {\r\n    return addIri(accessControl, acp.applyMembers, policyUrl);\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Get all Policies that apply to the children of the Resource to which the given [[Control]] is\r\n * linked, and which can be removed by anyone with Write access to the Access Control Resource that\r\n * contains the [[Control]].\r\n *\r\n * @param accessControl The [[Control]] of which to get the Policies.\r\n * @returns The Policies that are listed in this [[Control]] as applying to the children of the Resource it is linked to, and as removable by anyone with Write access to the Access Control Resource.\r\n * @hidden Developers don't need to care about working with Controls - they can just add Policies to the Resource directly.\r\n * @deprecated\r\n */\r\nfunction internal_getMemberPolicyUrlAll(accessControl) {\r\n    return getIriAll(accessControl, acp.applyMembers);\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Remove a given Policy that applies to the children of the Resource to which the given Access\r\n * Control is linked, and which can be removed by anyone with Write access to the Access Control\r\n * Resource that contains the Access Control.\r\n *\r\n * @param accessControl The [[Control]] of which to remove the Member Policy.\r\n * @param policyUrl URL of the Member Policy that should no longer apply to the Resource to which the [[Control]] is linked.\r\n * @returns A new [[Control]] equal to the given [[Control]], but with the given Member Policy removed from it.\r\n * @hidden Developers don't need to care about working with Controls - they can just add Policies to the Resource directly.\r\n * @deprecated\r\n */\r\nfunction internal_removeMemberPolicyUrl(accessControl, policyUrl) {\r\n    return removeIri(accessControl, acp.applyMembers, policyUrl);\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Remove all Policies that apply to the children of the Resource to which the given Access Control\r\n * is linked, and which can be removed by anyone with Write access to the Access Control Resource\r\n * that contains the Access Control.\r\n *\r\n * @param accessControl The [[Control]] of which to remove the Member Policies.\r\n * @returns A new [[Control]] equal to the given [[Control]], but with all Member Policies removed from it.\r\n * @hidden Developers don't need to care about working with Controls - they can just add Policies to the Resource directly.\r\n * @deprecated\r\n */\r\nfunction internal_removeMemberPolicyUrlAll(accessControl) {\r\n    return removeAll(accessControl, acp.applyMembers);\r\n}\r\nfunction internal_getInitialisedControl(resourceWithAcr) {\r\n    const allControls = internal_getControlAll(resourceWithAcr);\r\n    return allControls.length === 0 ? internal_createControl() : allControls[0];\r\n}\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Given a Resource, check whether it is governed by Access Policies.\r\n * (Specifically, a Resource that is governed by Access Policies will refer to exactly one Access\r\n * Control Resource, and expose that to users who are allowed to see or modify access to the given\r\n * Resource.)\r\n *\r\n * @param resource Resource which may or may not be governed by Access Policies.\r\n * @returns True if the Resource refers to an Access Control Resource and is hence governed by Access Policies, or false if it does not.\r\n * @since 1.6.0\r\n */\r\nfunction hasLinkedAcr(resource) {\r\n    return (hasServerResourceInfo(resource) &&\r\n        Array.isArray(resource.internal_resourceInfo.linkedResources[acp.accessControl]) &&\r\n        resource.internal_resourceInfo.linkedResources[acp.accessControl].length ===\r\n            1);\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Add a [[Policy]] to an Access Control Resource such that that [[Policy]] applies to the Access\r\n * Control Resource itself, rather than the Resource it governs.\r\n *\r\n * @param resourceWithAcr The Resource with an Access Control Resource to which the ACR Policy should be added.\r\n * @param policyUrl URL of the Policy that should apply to the given Access Control Resource.\r\n * @returns A Resource with a new Access Control Resource equal to the original ACR, but with the given ACR Policy added to it.\r\n * @since 1.6.0\r\n */\r\nfunction addAcrPolicyUrl(resourceWithAcr, policyUrl) {\r\n    var _a;\r\n    const acr = internal_getAcr(resourceWithAcr);\r\n    const acrUrl = getSourceUrl(acr);\r\n    let acrThing = (_a = getThing(acr, acrUrl)) !== null && _a !== void 0 ? _a : createThing({ url: acrUrl });\r\n    acrThing = addIri(acrThing, acp.access, policyUrl);\r\n    const updatedAcr = setThing(acr, acrThing);\r\n    const updatedResource = internal_setAcr(resourceWithAcr, updatedAcr);\r\n    return updatedResource;\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Add a [[Policy]] to a Resource's Access Control Resource such that that\r\n * Policy applies to the Access Control Resources of child Resources.\r\n *\r\n * @param resourceWithAcr The Resource with an Access Control Resource to which the ACR Policy should be added.\r\n * @param policyUrl URL of the Policy that should apply to the given Access Control Resources of children of the Resource.\r\n * @returns A Resource with a new Access Control Resource equal to the original ACR, but with the given ACR Policy added to it.\r\n * @since 1.6.0\r\n */\r\nfunction addMemberAcrPolicyUrl(resourceWithAcr, policyUrl) {\r\n    var _a;\r\n    const acr = internal_getAcr(resourceWithAcr);\r\n    const acrUrl = getSourceUrl(acr);\r\n    let acrThing = (_a = getThing(acr, acrUrl)) !== null && _a !== void 0 ? _a : createThing({ url: acrUrl });\r\n    acrThing = addIri(acrThing, acp.accessMembers, policyUrl);\r\n    const updatedAcr = setThing(acr, acrThing);\r\n    const updatedResource = internal_setAcr(resourceWithAcr, updatedAcr);\r\n    return updatedResource;\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Get the URLs of the Access Policies that apply to an Access Control Resource itself, rather than\r\n * to the Resource it governs.\r\n *\r\n * @param resourceWithAcr The Resource with the Access Control Resource of which to get the URLs of the Policies that govern access to it.\r\n * @returns URLs of the Policies that govern access to the given Access Control Resource.\r\n * @since 1.6.0\r\n */\r\nfunction getAcrPolicyUrlAll(resourceWithAcr) {\r\n    const acr = internal_getAcr(resourceWithAcr);\r\n    const acrUrl = getSourceUrl(acr);\r\n    const acrThing = getThing(acr, acrUrl);\r\n    if (acrThing === null) {\r\n        return [];\r\n    }\r\n    return getIriAll(acrThing, acp.access);\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Get the URLs of the Access Policies that apply to the Access Control Resources of the Resource's\r\n * children.\r\n *\r\n * @param resourceWithAcr The Resource with the Access Control Resource of which to get the URLs of the Policies that govern access to its children.\r\n * @returns URLs of the Policies that govern access to the Access Control Resources of the given Resource's children.\r\n * @since 1.6.0\r\n */\r\nfunction getMemberAcrPolicyUrlAll(resourceWithAcr) {\r\n    const acr = internal_getAcr(resourceWithAcr);\r\n    const acrUrl = getSourceUrl(acr);\r\n    const acrThing = getThing(acr, acrUrl);\r\n    if (acrThing === null) {\r\n        return [];\r\n    }\r\n    return getIriAll(acrThing, acp.accessMembers);\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Stop the URL of a given [[Policy]] from applying to an Access Control Resource itself.\r\n *\r\n * @param resourceWithAcr The Resource with the Access Control Resource to which the given URL of a Policy should no longer apply.\r\n * @param policyUrl The URL of the Policy that should no longer apply.\r\n * @returns A Resource with a new Access Control Resource equal to the original ACR, but with the given ACR Policy removed from it.\r\n * @since 1.6.0\r\n */\r\nfunction removeAcrPolicyUrl(resourceWithAcr, policyUrl) {\r\n    const acr = internal_getAcr(resourceWithAcr);\r\n    const acrUrl = getSourceUrl(acr);\r\n    const acrThing = getThing(acr, acrUrl);\r\n    if (acrThing === null) {\r\n        return resourceWithAcr;\r\n    }\r\n    const updatedAcrThing = removeIri(acrThing, acp.access, policyUrl);\r\n    const updatedAcr = setThing(acr, updatedAcrThing);\r\n    return internal_setAcr(resourceWithAcr, updatedAcr);\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Stop the URL of a given [[Policy]] from applying to the Access Control Resources of the\r\n * Resource's children.\r\n *\r\n * @param resourceWithAcr The Resource with the Access Control Resource to whose children's ACRs the given URL of a Policy should no longer apply.\r\n * @param policyUrl The URL of the Policy that should no longer apply.\r\n * @returns A Resource with a new Access Control Resource equal to the original ACR, but with the given member ACR Policy removed from it.\r\n * @since 1.6.0\r\n */\r\nfunction removeMemberAcrPolicyUrl(resourceWithAcr, policyUrl) {\r\n    const acr = internal_getAcr(resourceWithAcr);\r\n    const acrUrl = getSourceUrl(acr);\r\n    const acrThing = getThing(acr, acrUrl);\r\n    if (acrThing === null) {\r\n        return resourceWithAcr;\r\n    }\r\n    const updatedAcrThing = removeIri(acrThing, acp.accessMembers, policyUrl);\r\n    const updatedAcr = setThing(acr, updatedAcrThing);\r\n    return internal_setAcr(resourceWithAcr, updatedAcr);\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Stop all URL of Access Policies from applying to an Access Control Resource itself.\r\n *\r\n * @param resourceWithAcr The Resource with the Access Control Resource to which no more Policies should apply.\r\n * @returns A Resource with a new Access Control Resource equal to the original ACR, but without any Policy applying to it.\r\n * @since 1.6.0\r\n */\r\nfunction removeAcrPolicyUrlAll(resourceWithAcr) {\r\n    const acr = internal_getAcr(resourceWithAcr);\r\n    const acrUrl = getSourceUrl(acr);\r\n    const acrThing = getThing(acr, acrUrl);\r\n    if (acrThing === null) {\r\n        return resourceWithAcr;\r\n    }\r\n    const updatedAcrThing = removeAll(acrThing, acp.access);\r\n    const updatedAcr = setThing(acr, updatedAcrThing);\r\n    return internal_setAcr(resourceWithAcr, updatedAcr);\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Stop all URL of Access Policies from applying to the Access Control Resources of the Resource's\r\n * children.\r\n *\r\n * @param resourceWithAcr The Resource with the Access Control Resource that should no longer apply Policies to its children's ACRs.\r\n * @returns A Resource with a new Access Control Resource equal to the original ACR, but without any Policy applying to its children's ACRs.\r\n * @since 1.6.0\r\n */\r\nfunction removeMemberAcrPolicyUrlAll(resourceWithAcr) {\r\n    const acr = internal_getAcr(resourceWithAcr);\r\n    const acrUrl = getSourceUrl(acr);\r\n    const acrThing = getThing(acr, acrUrl);\r\n    if (acrThing === null) {\r\n        return resourceWithAcr;\r\n    }\r\n    const updatedAcrThing = removeAll(acrThing, acp.accessMembers);\r\n    const updatedAcr = setThing(acr, updatedAcrThing);\r\n    return internal_setAcr(resourceWithAcr, updatedAcr);\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Add a [[Policy]] to an Access Control Resource such that that [[Policy]] applies to that Resource.\r\n *\r\n * @param resourceWithAcr The Resource to which the ACR Policy should be added.\r\n * @param policyUrl URL of the Policy that should apply to the given Resource.\r\n * @returns A Resource with a new Access Control Resource equal to the original ACR, but with the given Policy added to it.\r\n * @since 1.6.0\r\n */\r\nfunction addPolicyUrl(resourceWithAcr, policyUrl) {\r\n    const control = internal_getInitialisedControl(resourceWithAcr);\r\n    const updatedControl = internal_addPolicyUrl(control, policyUrl);\r\n    const updatedResource = internal_setControl(resourceWithAcr, updatedControl);\r\n    return updatedResource;\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Add a [[Policy]] to a Resource's Access Control Resource such that that\r\n * Policy applies to that Resource's children.\r\n *\r\n * @param resourceWithAcr The Resource to whose Access Control Resource the Policy should be added.\r\n * @param policyUrl URL of the Policy that should apply to the given Resource's children.\r\n * @returns A new Resource equal to the given Resource, but with the given Member Policy added to its Access Control Resource.\r\n * @since 1.6.0\r\n */\r\nfunction addMemberPolicyUrl(resourceWithAcr, policyUrl) {\r\n    const control = internal_getInitialisedControl(resourceWithAcr);\r\n    const updatedControl = internal_addMemberPolicyUrl(control, policyUrl);\r\n    const updatedResource = internal_setControl(resourceWithAcr, updatedControl);\r\n    return updatedResource;\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Get the URLs of the Access Policies that apply to a Resource.\r\n *\r\n * @param resourceWithAcr The Resource with the Access Control Resource of which to get the URLs of the Policies that govern access to it.\r\n * @returns URLs of the Policies that govern access to the given Resource.\r\n * @since 1.6.0\r\n */\r\nfunction getPolicyUrlAll(resourceWithAcr) {\r\n    const controls = internal_getControlAll(resourceWithAcr);\r\n    const policyUrlsByControl = controls.map((control) => internal_getPolicyUrlAll(control));\r\n    const uniquePolicyUrls = new Set();\r\n    policyUrlsByControl.forEach((policyUrls) => {\r\n        policyUrls.forEach((url) => uniquePolicyUrls.add(url));\r\n    });\r\n    return Array.from(uniquePolicyUrls);\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Get the URLs of the Access Policies that apply to a Resource's children.\r\n *\r\n * @param resourceWithAcr The Resource with the Access Control Resource of which to get the URLs of the Policies that govern access to its children.\r\n * @returns URLs of the Policies that govern access to the given Resource's children.\r\n * @since 1.6.0\r\n */\r\nfunction getMemberPolicyUrlAll(resourceWithAcr) {\r\n    const controls = internal_getControlAll(resourceWithAcr);\r\n    const memberPolicyUrlsByControl = controls.map((control) => internal_getMemberPolicyUrlAll(control));\r\n    const uniquePolicyUrls = new Set();\r\n    memberPolicyUrlsByControl.forEach((policyUrls) => {\r\n        policyUrls.forEach((url) => uniquePolicyUrls.add(url));\r\n    });\r\n    return Array.from(uniquePolicyUrls);\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Stop the URL of a given [[Policy]] from applying to a Resource.\r\n *\r\n * @param resourceWithAcr The Resource, with its Access Control Resource, to which the given URL of a Policy should no longer apply.\r\n * @param policyUrl The URL of the Policy that should no longer apply.\r\n * @returns A Resource with a new Access Control Resource equal to the original ACR, but with the given Policy removed from it.\r\n * @since 1.6.0\r\n */\r\nfunction removePolicyUrl(resourceWithAcr, policyUrl) {\r\n    const controls = internal_getControlAll(resourceWithAcr);\r\n    const updatedControls = controls.map((control) => internal_removePolicyUrl(control, policyUrl));\r\n    const updatedResource = updatedControls.reduce(internal_setControl, resourceWithAcr);\r\n    return updatedResource;\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Stop the URL of a given [[Policy]] from applying to the Resource's children.\r\n *\r\n * @param resourceWithAcr The Resource with the Access Control Resource to whose children the given URL of a Policy should no longer apply.\r\n * @param policyUrl The URL of the Policy that should no longer apply.\r\n * @returns A Resource with a new Access Control Resource equal to the original ACR, but with the given Member Policy removed from it.\r\n * @since 1.6.0\r\n */\r\nfunction removeMemberPolicyUrl(resourceWithAcr, policyUrl) {\r\n    const controls = internal_getControlAll(resourceWithAcr);\r\n    const updatedControls = controls.map((control) => internal_removeMemberPolicyUrl(control, policyUrl));\r\n    const updatedResource = updatedControls.reduce(internal_setControl, resourceWithAcr);\r\n    return updatedResource;\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Stop all URL of Access Policies from applying to a Resource.\r\n *\r\n * @param resourceWithAcr The Resource, with its Access Control Resource, to which no more Policies should apply.\r\n * @returns A Resource with a new Access Control Resource equal to the original ACR, but without any Policy applying to the Resource.\r\n * @since 1.6.0\r\n */\r\nfunction removePolicyUrlAll(resourceWithAcr) {\r\n    const controls = internal_getControlAll(resourceWithAcr);\r\n    const updatedControls = controls.map((control) => internal_removePolicyUrlAll(control));\r\n    const updatedResource = updatedControls.reduce(internal_setControl, resourceWithAcr);\r\n    return updatedResource;\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Stop all URL of Access Policies from applying to the Resource's children.\r\n *\r\n * @param resourceWithAcr The Resource with the Access Control Resource that should no longer apply Policies to its children.\r\n * @returns A Resource with a new Access Control Resource equal to the original ACR, but without any Policy applying to the Resource's children.\r\n * @since 1.6.0\r\n */\r\nfunction removeMemberPolicyUrlAll(resourceWithAcr) {\r\n    const controls = internal_getControlAll(resourceWithAcr);\r\n    const updatedControls = controls.map((control) => internal_removeMemberPolicyUrlAll(control));\r\n    const updatedResource = updatedControls.reduce(internal_setControl, resourceWithAcr);\r\n    return updatedResource;\r\n}\r\n/**\r\n * Gets a human-readable representation of the given [[Control]] to aid debugging.\r\n *\r\n * Note that changes to the exact format of the return value are not considered a breaking change;\r\n * it is intended to aid in debugging, not as a serialisation method that can be reliably parsed.\r\n *\r\n * @param resourceWithAcr The Resource with an attached Access Control Resource of which you want to get a human-readable representation.\r\n * @since 1.6.0\r\n */\r\nfunction acrAsMarkdown(resourceWithAcr) {\r\n    let markdown = `# Access controls for ${getSourceUrl(resourceWithAcr)}\\n`;\r\n    const policyUrls = getPolicyUrlAll(resourceWithAcr);\r\n    const memberPolicyUrls = getMemberPolicyUrlAll(resourceWithAcr);\r\n    const acrPolicyUrls = getAcrPolicyUrlAll(resourceWithAcr);\r\n    const memberAcrPolicyUrls = getMemberAcrPolicyUrlAll(resourceWithAcr);\r\n    if (policyUrls.length === 0 &&\r\n        memberPolicyUrls.length === 0 &&\r\n        acrPolicyUrls.length === 0 &&\r\n        memberAcrPolicyUrls.length === 0) {\r\n        markdown += \"\\n<no policies specified yet>\\n\";\r\n    }\r\n    if (policyUrls.length > 0) {\r\n        markdown += \"\\nThe following policies apply to this resource:\\n- \";\r\n        markdown += policyUrls.join(\"\\n- \") + \"\\n\";\r\n    }\r\n    if (acrPolicyUrls.length > 0) {\r\n        markdown +=\r\n            \"\\nThe following policies apply to the access control resource for this resource:\\n- \";\r\n        markdown += acrPolicyUrls.join(\"\\n- \") + \"\\n\";\r\n    }\r\n    if (memberPolicyUrls.length > 0) {\r\n        markdown +=\r\n            \"\\nThe following policies apply to the children of this resource:\\n- \";\r\n        markdown += memberPolicyUrls.join(\"\\n- \") + \"\\n\";\r\n    }\r\n    if (memberAcrPolicyUrls.length > 0) {\r\n        markdown +=\r\n            \"\\nThe following policies apply to the access control resources for children of this resource:\\n- \";\r\n        markdown += memberAcrPolicyUrls.join(\"\\n- \") + \"\\n\";\r\n    }\r\n    return markdown;\r\n}\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Fetch a SolidDataset and its associated Access Control Resource (if available to the current user).\r\n *\r\n * @param url URL of the SolidDataset to fetch.\r\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\r\n * @returns A SolidDataset and the ACR that applies to it, if available to the authenticated user.\r\n * @since 1.6.0\r\n */\r\nasync function getSolidDatasetWithAcr(url, options = internal_defaultFetchOptions) {\r\n    const urlString = internal_toIriString(url);\r\n    const config = Object.assign(Object.assign({}, internal_defaultFetchOptions), options);\r\n    const solidDataset = await getSolidDataset(urlString, config);\r\n    const acp = await fetchAcr(solidDataset, config);\r\n    return Object.assign(Object.assign({}, solidDataset), acp);\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Fetch a file and its associated Access Control Resource (if available to the current user).\r\n *\r\n * @param url URL of the file to fetch.\r\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\r\n * @returns A file and the ACR that applies to it, if available to the authenticated user.\r\n * @since 1.6.0\r\n */\r\nasync function getFileWithAcr(url, options = internal_defaultFetchOptions) {\r\n    const urlString = internal_toIriString(url);\r\n    const config = Object.assign(Object.assign({}, internal_defaultFetchOptions), options);\r\n    const file = await getFile(urlString, config);\r\n    const acp = await fetchAcr(file, config);\r\n    return Object.assign(file, acp);\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Retrieve information about a Resource and its associated Access Control Resource (if available to\r\n * the current user), without fetching the Resource itself.\r\n *\r\n * @param url URL of the Resource about which to fetch its information.\r\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\r\n * @returns Metadata describing a Resource, and the ACR that applies to it, if available to the authenticated user.\r\n * @since 1.6.0\r\n */\r\nasync function getResourceInfoWithAcr(url, options = internal_defaultFetchOptions) {\r\n    const urlString = internal_toIriString(url);\r\n    const config = Object.assign(Object.assign({}, internal_defaultFetchOptions), options);\r\n    const resourceInfo = await getResourceInfo(urlString, config);\r\n    const acp = await fetchAcr(resourceInfo, config);\r\n    return Object.assign(Object.assign({}, resourceInfo), acp);\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Fetch a SolidDataset, and:\r\n * - if the Resource is governed by an ACR: its associated Access Control Resource (if available to\r\n *                                          the current user), and all the Access Control Policies\r\n *                                          referred to therein, if available to the current user.\r\n * - if the Resource is governed by an ACL: its associated Resource ACL (if available to the current\r\n *                                          user), or its Fallback ACL if it does not exist.\r\n *\r\n * @param url URL of the SolidDataset to fetch.\r\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\r\n * @returns A SolidDataset and either the ACL access data or the ACR access data, if available to the current user.\r\n * @since 1.6.0\r\n */\r\nasync function getSolidDatasetWithAccessDatasets(url, options = internal_defaultFetchOptions) {\r\n    const urlString = internal_toIriString(url);\r\n    const config = Object.assign(Object.assign({}, internal_defaultFetchOptions), options);\r\n    const solidDataset = await getSolidDataset(urlString, config);\r\n    if (hasAccessibleAcl(solidDataset)) {\r\n        const acl = await internal_fetchAcl(solidDataset, config);\r\n        return internal_setAcl(solidDataset, acl);\r\n    }\r\n    else {\r\n        const acr = await fetchAcr(solidDataset, config);\r\n        return Object.assign(Object.assign({}, solidDataset), acr);\r\n    }\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Fetch a File, and:\r\n * - if the Resource is governed by an ACR: its associated Access Control Resource (if available to\r\n *                                          the current user), and all the Access Control Policies\r\n *                                          referred to therein, if available to the current user.\r\n * - if the Resource is governed by an ACL: its associated Resource ACL (if available to the current\r\n *                                          user), or its Fallback ACL if it does not exist.\r\n *\r\n * @param url URL of the File to fetch.\r\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\r\n * @returns A File and either the ACL access data or the ACR access data, if available to the current user.\r\n * @since 1.6.0\r\n */\r\nasync function getFileWithAccessDatasets(url, options = internal_defaultFetchOptions) {\r\n    const urlString = internal_toIriString(url);\r\n    const config = Object.assign(Object.assign({}, internal_defaultFetchOptions), options);\r\n    const file = await getFile(urlString, config);\r\n    if (hasAccessibleAcl(file)) {\r\n        const acl = await internal_fetchAcl(file, config);\r\n        return internal_setAcl(file, acl);\r\n    }\r\n    else {\r\n        const acr = await fetchAcr(file, config);\r\n        return Object.assign(file, acr);\r\n    }\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Fetch information about a Resource, and:\r\n * - if the Resource is governed by an ACR: its associated Access Control Resource (if available to\r\n *                                          the current user), and all the Access Control Policies\r\n *                                          referred to therein, if available to the current user.\r\n * - if the Resource is governed by an ACL: its associated Resource ACL (if available to the current\r\n *                                          user), or its Fallback ACL if it does not exist.\r\n *\r\n * @param url URL of the Resource information about which to fetch.\r\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\r\n * @returns Information about a Resource and either the ACL access data or the ACR access data, if available to the current user.\r\n * @since 1.6.0\r\n */\r\nasync function getResourceInfoWithAccessDatasets(url, options = internal_defaultFetchOptions) {\r\n    const urlString = internal_toIriString(url);\r\n    const config = Object.assign(Object.assign({}, internal_defaultFetchOptions), options);\r\n    const resourceInfo = await getResourceInfo(urlString, config);\r\n    if (hasAccessibleAcl(resourceInfo)) {\r\n        const acl = await internal_fetchAcl(resourceInfo, config);\r\n        return internal_setAcl(resourceInfo, acl);\r\n    }\r\n    else {\r\n        const acr = await fetchAcr(resourceInfo, config);\r\n        return Object.assign(Object.assign({}, resourceInfo), acr);\r\n    }\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Save a Resource's Access Control Resource.\r\n *\r\n * @param resource Resource with an Access Control Resource that should be saved.\r\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\r\n * @since 1.6.0\r\n */\r\nasync function saveAcrFor(resource, options = internal_defaultFetchOptions) {\r\n    const acr = internal_getAcr(resource);\r\n    const config = Object.assign(Object.assign({}, internal_defaultFetchOptions), options);\r\n    const savedAcr = await saveSolidDatasetAt(getSourceUrl(acr), acr, config);\r\n    return internal_setAcr(resource, savedAcr);\r\n}\r\n/**\r\n * @param resource Resource of which to check whether it has an Access Control Resource attached.\r\n * @returns Boolean representing whether the given Resource has an Access Control Resource attached for use in e.g. [[getPolicyUrlAll]].\r\n * @since 1.6.0\r\n */\r\nfunction hasAccessibleAcr(resource) {\r\n    return (typeof resource.internal_acp === \"object\" &&\r\n        resource.internal_acp !== null &&\r\n        typeof resource.internal_acp.acr === \"object\" &&\r\n        resource.internal_acp.acr !== null);\r\n}\r\nasync function fetchAcr(resource, options) {\r\n    let acrUrl = undefined;\r\n    if (hasLinkedAcr(resource)) {\r\n        // Whereas a Resource can generally have multiple linked Resources for the same relation,\r\n        // it can only have one Access Control Resource for that ACR to be valid.\r\n        // Hence the accessing of [0] directly:\r\n        acrUrl =\r\n            resource.internal_resourceInfo.linkedResources[acp.accessControl][0];\r\n    }\r\n    else if (hasAccessibleAcl(resource)) {\r\n        // The ACP proposal will be updated to expose the Access Control Resource\r\n        // via a Link header with rel=\"acl\", just like WAC. That means that if\r\n        // an ACL is advertised, we can still fetch its metadata — if that indicates\r\n        // that it's actually an ACP Access Control Resource, then we can fetch that\r\n        // instead.\r\n        const aclResourceInfo = await getResourceInfo(resource.internal_resourceInfo.aclUrl, options);\r\n        if (isAcr(aclResourceInfo)) {\r\n            acrUrl = getSourceUrl(aclResourceInfo);\r\n        }\r\n    }\r\n    // If the Resource doesn't advertise an ACR via the old Link header,\r\n    // nor via a rel=\"acl\" header, then return, indicating that no ACR could be\r\n    // fetched:\r\n    if (typeof acrUrl !== \"string\") {\r\n        return {\r\n            internal_acp: {\r\n                acr: null,\r\n            },\r\n        };\r\n    }\r\n    let acr;\r\n    try {\r\n        acr = await getSolidDataset(acrUrl, options);\r\n    }\r\n    catch (e) {\r\n        return {\r\n            internal_acp: {\r\n                acr: null,\r\n            },\r\n        };\r\n    }\r\n    const acrDataset = Object.assign(Object.assign({}, acr), { accessTo: getSourceUrl(resource) });\r\n    const acpInfo = {\r\n        internal_acp: {\r\n            acr: acrDataset,\r\n        },\r\n    };\r\n    return acpInfo;\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * To make it easy to fetch all the relevant Access Policy Resources,\r\n * this function returns all referenced Access Policy Resources referenced in an\r\n * Access Control Resource.\r\n * In other words, if Access Controls refer to different Policies in the same\r\n * Access Policy Resource, this function will only return that Access Policy\r\n * Resource's URL once.\r\n *\r\n * @param withAcr A Resource with an Access Control Resource attached.\r\n * @returns List of all unique Access Policy Resources that are referenced in the given Access Control Resource.\r\n * @since 1.6.0\r\n */\r\nfunction getReferencedPolicyUrlAll(withAcr) {\r\n    const policyUrls = getPolicyUrlAll(withAcr)\r\n        .map(normalizeServerSideIri)\r\n        .concat(getMemberPolicyUrlAll(withAcr).map(normalizeServerSideIri))\r\n        .concat(getAcrPolicyUrlAll(withAcr).map(normalizeServerSideIri))\r\n        .concat(getMemberAcrPolicyUrlAll(withAcr).map(normalizeServerSideIri));\r\n    const uniqueUrls = Array.from(new Set(policyUrls));\r\n    return uniqueUrls;\r\n}\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * NOTE: Don't export for now (i.e. if exported, should this be `isAcpRule()` so\r\n * as not to clash with `isAclRule()`.\r\n *\r\n * @param thing the [[Thing]] to check to see if it's an ACP rule or not\r\n */\r\nfunction isRule(thing) {\r\n    return getIriAll(thing, rdf.type).includes(acp.Rule);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Add a rule that refines the scope of a given the [[Policy]]. If an agent\r\n * requesting access to a resource is **not** present in **any** of the \"All Of\" rules,\r\n * they will not be granted access.\r\n *\r\n * Also see [[addAnyOfRuleUrl]] and [[addNoneOfRuleUrl]].\r\n *\r\n * @param policy The [[Policy]] to which the rule should be added.\r\n * @param rule The rule to add to the policy.\r\n * @returns A new [[Policy]] clone of the original one, with the new rule added.\r\n * @since 1.6.0\r\n */\r\nfunction addAllOfRuleUrl(policy, rule) {\r\n    return addIri(policy, acp.allOf, rule);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Removes a rule that refines the scope of a given the [[Policy]]. If an agent\r\n * requesting access to a resource is **not** present in **any** of the \"All Of\" rules,\r\n * they will not be granted access.\r\n * @param policy The [[Policy]] from which the rule should be removed.\r\n * @param rule The rule to remove from the policy.\r\n * @returns A new [[Policy]] clone of the original one, with the rule removed.\r\n * @since 1.6.0\r\n */\r\nfunction removeAllOfRuleUrl(policy, rule) {\r\n    return removeIri(policy, acp.allOf, rule);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Overwrites the rule refining the scope of a given the [[Policy]]. If an agent\r\n * requesting access to a resource is **not** present in **any** of the \"All Of\" rules,\r\n * they will not be granted access.\r\n * @param policy The [[Policy]] to which the rule should be added.\r\n * @param rules The rules the policy requires.\r\n * @returns A new [[Policy]] clone of the original one, with the \"All Of\" rules replaced.\r\n * @since 1.6.0\r\n */\r\nfunction setAllOfRuleUrl(policy, rule) {\r\n    return setIri(policy, acp.allOf, rule);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Get the \"All Of\" [[Rule]]s for the given [[Policy]]\r\n * @param policy The [[policy]] from which the rules should be read.\r\n * @returns A list of the \"All Of\" [[Rule]]s\r\n * @since 1.6.0\r\n */\r\nfunction getAllOfRuleUrlAll(policy) {\r\n    return getIriAll(policy, acp.allOf);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Add a rule that extends the scope of a given the [[Policy]]. If an agent\r\n * requesting access to a resource is present in **any** of the \"Any Of\" rules,\r\n * they will be granted access.\r\n *\r\n * Also see [[addAllOfRuleUrl]] and [[addNoneOfRuleUrl]].\r\n *\r\n * @param policy The [[Policy]] to which the rule should be added.\r\n * @param rule The rule to add to the policy.\r\n * @returns A new [[Policy]] clone of the original one, with the new rule added.\r\n * @since 1.6.0\r\n */\r\nfunction addAnyOfRuleUrl(policy, rule) {\r\n    return addIri(policy, acp.anyOf, rule);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Removes a rule that extends the scope of a given the [[Policy]]. If an agent\r\n * requesting access to a resource is present in **any** of the \"Any Of\" rules,\r\n * they will be granted access.\r\n * @param policy The [[Policy]] from which the rule should be removed.\r\n * @param rule The rule to remove from the policy.\r\n * @returns A new [[Policy]] clone of the original one, with the rule removed.\r\n * @since 1.6.0\r\n */\r\nfunction removeAnyOfRuleUrl(policy, rule) {\r\n    return removeIri(policy, acp.anyOf, rule);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Overwrite the rule extending the scope of a given the [[Policy]]. If an agent\r\n * requesting access to a resource is present in **any** of the \"Any Of\" rules,\r\n * they will be granted access.\r\n * @param policy The [[Policy]] to which the rule should be added.\r\n * @param rules The rules the policy accepts.\r\n * @returns A new [[Policy]] clone of the original one, with the \"Any Of\" rules replaced.\r\n * @since 1.6.0\r\n */\r\nfunction setAnyOfRuleUrl(policy, rule) {\r\n    return setIri(policy, acp.anyOf, rule);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Get the \"Any Of\" [[Rule]]s for the given [[Policy]]\r\n * @param policy The [[policy]] from which the rules should be read.\r\n * @returns A list of the \"Any Of\" [[Rule]]s\r\n * @since 1.6.0\r\n */\r\nfunction getAnyOfRuleUrlAll(policy) {\r\n    return getIriAll(policy, acp.anyOf);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Add a rule that restricts the scope of a given the [[Policy]]. If an agent\r\n * requesting access to a resource is present in **any** of the forbidden rules,\r\n * they will **not** be granted access.\r\n *\r\n * Also see [[addAllOfRuleUrl]] and [[addAnyOfRuleUrl]].\r\n *\r\n * @param policy The [[Policy]] to which the rule should be added.\r\n * @param rule The rule to add to the policy.\r\n * @returns A new [[Policy]] clone of the original one, with the new rule added.\r\n * @since 1.6.0\r\n */\r\nfunction addNoneOfRuleUrl(policy, rule) {\r\n    return addIri(policy, acp.noneOf, rule);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Removes a rule that restricts the scope of a given the [[Policy]]. If an agent\r\n * requesting access to a resource is present in **any** of the forbidden rules,\r\n * they will **not** be granted access.\r\n * @param policy The [[Policy]] from which the rule should be removed.\r\n * @param rule The rule to remove from the policy.\r\n * @returns A new [[Policy]] clone of the original one, with the rule removed.\r\n * @since 1.6.0\r\n */\r\nfunction removeNoneOfRuleUrl(policy, rule) {\r\n    return removeIri(policy, acp.noneOf, rule);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Set the rules restrincting the scope of a given the [[Policy]]. If an agent\r\n * requesting access to a resource is present in **any** of the \"None Of\" rules,\r\n * they will not be granted access.\r\n * @param policy The [[Policy]] to which the rule should be added.\r\n * @param rules The rules the policy accepts.\r\n * @returns A new [[Policy]] clone of the original one, with the \"Any Of\" rules replaced.\r\n * @since 1.6.0\r\n */\r\nfunction setNoneOfRuleUrl(policy, rule) {\r\n    return setIri(policy, acp.noneOf, rule);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Get the \"None Of\" [[Rule]]s for the given [[Policy]]\r\n * @param policy The [[policy]] from which the rules should be read.\r\n * @returns A list of the forbidden [[Rule]]s\r\n * @since 1.6.0\r\n */\r\nfunction getNoneOfRuleUrlAll(policy) {\r\n    return getIriAll(policy, acp.noneOf);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Initialise a new, empty [[Rule]].\r\n *\r\n * @param url URL that identifies this [[Rule]].\r\n * @since 1.6.0\r\n */\r\nfunction createRule(url) {\r\n    const stringUrl = internal_toIriString(url);\r\n    let ruleThing = createThing({ url: stringUrl });\r\n    ruleThing = setUrl(ruleThing, rdf.type, acp.Rule);\r\n    return ruleThing;\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Initialise a new, empty [[ResourceRule]] for the given Resource.\r\n *\r\n * @param resourceWithAcr The Resource to which the new Rule is to apply.\r\n * @param name Name that identifies this [[Rule]].\r\n * @since 1.6.0\r\n */\r\nfunction createResourceRuleFor(resourceWithAcr, name) {\r\n    const acr = internal_getAcr(resourceWithAcr);\r\n    const url = new URL(getSourceUrl(acr));\r\n    url.hash = `#${name}`;\r\n    let ruleThing = createThing({ url: url.href });\r\n    ruleThing = setUrl(ruleThing, rdf.type, acp.Rule);\r\n    return ruleThing;\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Get the [[Rule]] with the given URL from an [[SolidDataset]].\r\n *\r\n * @param ruleResource The Resource that contains the given [[Rule]].\r\n * @param url URL that identifies this [[Rule]].\r\n * @returns The requested [[Rule]], if it exists, or `null` if it does not.\r\n * @since 1.6.0\r\n */\r\nfunction getRule(ruleResource, url) {\r\n    const foundThing = getThing(ruleResource, url);\r\n    if (foundThing === null || getUrl(foundThing, rdf.type) !== acp.Rule) {\r\n        return null;\r\n    }\r\n    return foundThing;\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Get the [[ResourceRule]] with the given name from an Resource's Access Control\r\n * Resource.\r\n *\r\n * @param resourceWithAcr The Resource whose Access Control Resource contains the given [[ResourceRule]].\r\n * @param name Name that identifies this [[ResourceRule]].\r\n * @returns The requested [[ResourceRule]], if it exists, or `null` if it does not.\r\n * @since 1.6.0\r\n */\r\nfunction getResourceRule(resourceWithAcr, name) {\r\n    const acr = internal_getAcr(resourceWithAcr);\r\n    const acrUrl = getSourceUrl(acr);\r\n    const url = new URL(acrUrl);\r\n    url.hash = `#${name}`;\r\n    const foundThing = getThing(acr, url.href);\r\n    if (foundThing === null || !isRule(foundThing)) {\r\n        return null;\r\n    }\r\n    return foundThing;\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Gets the [[Rule]]s from a [[SolidDataset]].\r\n *\r\n * @param ruleResource The Resource that contains (zero or more) [[Rule]]s.\r\n * @returns The [[Rule]]s contained in this resource.\r\n * @since 1.6.0\r\n */\r\nfunction getRuleAll(ruleResource) {\r\n    const things = getThingAll(ruleResource);\r\n    return things.filter(isRule);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Gets the [[ResourceRule]]s from a Resource's Access Control Resource.\r\n *\r\n * @param resourceWithAcr The Resource whose Access Control Resource contains (zero or more) [[ResourceRule]]s.\r\n * @returns The [[ResourceRule]]s contained in this Resource's Access Control Resource.\r\n * @since 1.6.0\r\n */\r\nfunction getResourceRuleAll(resourceWithAcr) {\r\n    const acr = internal_getAcr(resourceWithAcr);\r\n    const things = getThingAll(acr);\r\n    return things.filter(isRule);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Removes the given [[Rule]] from the given [[SolidDataset]].\r\n *\r\n * @param ruleResource The Resource that contains (zero or more) [[Rule]]s.\r\n * @returns A new SolidDataset equal to the given Rule Resource, but without the given Rule.\r\n * @since 1.6.0\r\n */\r\nfunction removeRule(ruleResource, rule) {\r\n    return removeThing(ruleResource, rule);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Removes the given [[ResourceRule]] from the given Resource's Access Control Resource.\r\n *\r\n * @param resourceWithAcr The Resource whose Access Control Resource contains (zero or more) [[ResourceRule]]s.\r\n * @returns A new Resource equal to the given Resource, but without the given Rule in its ACR.\r\n * @since 1.6.0\r\n */\r\nfunction removeResourceRule(resourceWithAcr, rule) {\r\n    const acr = internal_getAcr(resourceWithAcr);\r\n    let ruleToRemove;\r\n    if (typeof rule === \"string\") {\r\n        try {\r\n            new URL(rule);\r\n            ruleToRemove = rule;\r\n        }\r\n        catch (e) {\r\n            // If the given Rule to remove is the name of the Rule,\r\n            // resolve it to its full URL — developers usually refer to either the\r\n            // Rule itself, or by its name, as they do not have access to the ACR\r\n            // directly.\r\n            const ruleUrl = new URL(getSourceUrl(acr));\r\n            ruleUrl.hash = `#${rule}`;\r\n            ruleToRemove = ruleUrl.href;\r\n        }\r\n    }\r\n    else if (isNamedNode(rule)) {\r\n        ruleToRemove = internal_toIriString(rule);\r\n    }\r\n    else {\r\n        ruleToRemove = asUrl(rule);\r\n    }\r\n    // Check whether the actual Rule (i.e. with the Rule type) exists:\r\n    const matchingRule = getResourceRule(resourceWithAcr, new URL(ruleToRemove).hash.substring(1));\r\n    if (matchingRule === null) {\r\n        // No such Rule exists yet, so return the Resource+ACR unchanged:\r\n        return resourceWithAcr;\r\n    }\r\n    const updatedAcr = removeThing(acr, matchingRule);\r\n    const updatedResource = internal_setAcr(resourceWithAcr, updatedAcr);\r\n    return updatedResource;\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Insert the given [[Rule]] into the given [[SolidDataset]], replacing previous\r\n * instances of that Rule.\r\n *\r\n * @param ruleResource The Resource that contains (zero or more) [[Rule]]s.\r\n * @returns A new SolidDataset equal to the given Rule Resource, but with the given Rule.\r\n * @since 1.6.0\r\n */\r\nfunction setRule(ruleResource, rule) {\r\n    return setThing(ruleResource, rule);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Insert the given [[ResourceRule]] into the given Resource's Access Control Resource,\r\n * replacing previous instances of that Rule.\r\n *\r\n * @param resourceWithAcr The Resource whose Access Control Resource contains (zero or more) [[ResourceRule]]s.\r\n * @returns A new Resource equal to the given Resource, but with the given Rule in its ACR.\r\n * @since 1.6.0\r\n */\r\nfunction setResourceRule(resourceWithAcr, rule) {\r\n    const acr = internal_getAcr(resourceWithAcr);\r\n    const updatedAcr = setThing(acr, rule);\r\n    const updatedResource = internal_setAcr(resourceWithAcr, updatedAcr);\r\n    return updatedResource;\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * List all the agents a [[Rule]] applies **directly** to. This will not include agents\r\n * that are part of a group the [[Rule]] applies to, nor will it include specific agent\r\n * classes, such as authenticated or public agents.\r\n *\r\n * @param rule The rule from which agents are read.\r\n * @returns A list of the WebIDs of agents included in the rule.\r\n * @since 1.6.0\r\n */\r\nfunction getAgentAll$1(rule) {\r\n    return getIriAll(rule, acp.agent).filter((agent) => agent !== acp.PublicAgent &&\r\n        agent !== acp.AuthenticatedAgent &&\r\n        agent !== acp.CreatorAgent);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Overwrite the agents the [[Rule]] applies to with the provided agents.\r\n *\r\n * @param rule The rule for which agents are set.\r\n * @param agent The agent the rule should apply to.\r\n * @returns A copy of the input rule, applying to a different set of agents.\r\n * @since 1.6.0\r\n */\r\nfunction setAgent$1(rule, agent) {\r\n    // Preserve the special agent classes authenticated and public, which we\r\n    // don't want to overwrite with this function.\r\n    const isPublic = hasPublic$1(rule);\r\n    const isAuthenticated = hasAuthenticated$1(rule);\r\n    const isCreator = hasCreator$1(rule);\r\n    let result = setIri(rule, acp.agent, agent);\r\n    // Restore public and authenticated\r\n    if (isPublic) {\r\n        result = setPublic$1(result);\r\n    }\r\n    if (isAuthenticated) {\r\n        result = setAuthenticated$1(result);\r\n    }\r\n    if (isCreator) {\r\n        result = setCreator$1(result);\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Apply the [[Rule]] to an additional agent.\r\n *\r\n * @param rule The [[Rule]] to be applied to an additional agent.\r\n * @param agent The agent the [[Rule]] should apply to.\r\n * @returns A copy of the [[Rule]], applying to an additional agent.\r\n * @since 1.6.0\r\n */\r\nfunction addAgent$1(rule, agent) {\r\n    return addIri(rule, acp.agent, agent);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Prevent the [[Rule]] from applying to a given agent directly. This will not\r\n * remove the agent from any groups the rule applies to.\r\n *\r\n * @param rule The [[Rule]] that should no longer apply to a given agent.\r\n * @param agent The agent the rule should no longer apply to.\r\n * @returns A copy of the rule, not applying to the given agent.\r\n * @since 1.6.0\r\n */\r\nfunction removeAgent$1(rule, agent) {\r\n    return removeIri(rule, acp.agent, agent);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Lists all the groups a [[Rule]] applies to.\r\n *\r\n * @param rule The rule from which groups are read.\r\n * @returns A list of the [[URL]]'s of groups included in the rule.\r\n * @since 1.6.0\r\n * @deprecated Access Control Policies will no longer support vcard:Group. You can re-use a Rule listing multiple Agents to get the same functionality.\r\n */\r\nfunction getGroupAll(rule) {\r\n    return getIriAll(rule, acp.group);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Overwrite the groups the [[Rule]] applies to with the provided groups.\r\n *\r\n * @param rule The rule for which groups are set.\r\n * @param group The group the rule should apply to.\r\n * @returns A copy of the input rule, applying to a different set of groups.\r\n * @since 1.6.0\r\n * @deprecated Access Control Policies will no longer support vcard:Group. You can re-use a Rule listing multiple Agents to get the same functionality.\r\n */\r\nfunction setGroup(rule, group) {\r\n    return setIri(rule, acp.group, group);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Apply the [[Rule]] to an additional group.\r\n *\r\n * @param rule The [[Rule]] to be applied to an additional group.\r\n * @param agent The group the [[Rule]] should apply to.\r\n * @returns A copy of the [[Rule]], applying to an additional group.\r\n * @since 1.6.0\r\n * @deprecated Access Control Policies will no longer support vcard:Group. You can re-use a Rule listing multiple Agents to get the same functionality.\r\n */\r\nfunction addGroup(rule, group) {\r\n    return addIri(rule, acp.group, group);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Prevent the [[Rule]] from applying to a given group.\r\n *\r\n * @param rule The [[Rule]] that should no longer apply to a given group.\r\n * @param agent The group the rule should no longer apply to.\r\n * @returns A copy of the rule, not applying to the given group.\r\n * @since 1.6.0\r\n * @deprecated Access Control Policies will no longer support vcard:Group. You can re-use a Rule listing multiple Agents to get the same functionality.\r\n */\r\nfunction removeGroup(rule, group) {\r\n    return removeIri(rule, acp.group, group);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Check if the rule applies to any agent.\r\n *\r\n * @param rule The rule checked for public access.\r\n * @returns Whether the rule applies to any agent or not.\r\n * @since 1.6.0\r\n */\r\nfunction hasPublic$1(rule) {\r\n    return (getIriAll(rule, acp.agent).filter((agent) => agent === acp.PublicAgent)\r\n        .length > 0);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Set a Rule to apply to any Agent.\r\n *\r\n * @param rule The rule being modified.\r\n * @returns A copy of the rule, updated to apply to any agent.\r\n * @since 1.6.0\r\n */\r\nfunction setPublic$1(rule) {\r\n    // The second argument should not be part of the function signature,\r\n    // so it's not in the parameter list:\r\n    // eslint-disable-next-line prefer-rest-params\r\n    if (typeof arguments === \"object\" && typeof arguments[1] === \"boolean\") {\r\n        throw new Error(\"The function `setPublic` no longer takes a second parameter. It is now used together with `removePublic` instead.\");\r\n    }\r\n    return addIri(rule, acp.agent, acp.PublicAgent);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Set a Rule to no longer apply to any Agent.\r\n *\r\n * @param rule The rule being modified.\r\n * @returns A copy of the rule, updated to no longer apply to any agent.\r\n * @since 1.6.0\r\n */\r\nfunction removePublic$1(rule) {\r\n    return removeIri(rule, acp.agent, acp.PublicAgent);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Check if the rule applies to any authenticated agent.\r\n *\r\n * @param rule The rule checked for authenticated access.\r\n * @returns Whether the rule applies to any authenticated agent or not.\r\n * @since 1.6.0\r\n */\r\nfunction hasAuthenticated$1(rule) {\r\n    return (getIriAll(rule, acp.agent).filter((agent) => agent === acp.AuthenticatedAgent).length > 0);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Set a Rule to apply to any authenticated Agent.\r\n *\r\n * @param rule The rule being modified.\r\n * @returns A copy of the rule, updated to apply to any authenticated Agent.\r\n * @since 1.6.0\r\n */\r\nfunction setAuthenticated$1(rule) {\r\n    // The second argument should not be part of the function signature,\r\n    // so it's not in the parameter list:\r\n    // eslint-disable-next-line prefer-rest-params\r\n    if (typeof arguments === \"object\" && typeof arguments[1] === \"boolean\") {\r\n        throw new Error(\"The function `setAuthenticated` no longer takes a second parameter. It is now used together with `removeAuthenticated` instead.\");\r\n    }\r\n    return addIri(rule, acp.agent, acp.AuthenticatedAgent);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Set a Rule to no longer apply to any authenticated Agent.\r\n *\r\n * @param rule The rule being modified.\r\n * @returns A copy of the rule, updated to apply/not apply to any authenticated agent.\r\n * @since 1.6.0\r\n */\r\nfunction removeAuthenticated$1(rule) {\r\n    return removeIri(rule, acp.agent, acp.AuthenticatedAgent);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Check if the rule applies to the creator of the Resource.\r\n *\r\n * @param rule The rule checked for authenticated access.\r\n * @returns Whether the rule applies to the creator of the Resource or not.\r\n * @since 1.6.0\r\n */\r\nfunction hasCreator$1(rule) {\r\n    return (getIriAll(rule, acp.agent).filter((agent) => agent === acp.CreatorAgent)\r\n        .length > 0);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Set a Rule to apply to the creator of a Resource.\r\n *\r\n * @param rule The rule being modified.\r\n * @returns A copy of the rule, updated to apply to the creator of a Resource.\r\n * @since 1.6.0\r\n */\r\nfunction setCreator$1(rule) {\r\n    // The second argument should not be part of the function signature,\r\n    // so it's not in the parameter list:\r\n    // eslint-disable-next-line prefer-rest-params\r\n    if (typeof arguments === \"object\" && typeof arguments[1] === \"boolean\") {\r\n        throw new Error(\"The function `setCreator` no longer takes a second parameter. It is now used together with `removeCreator` instead.\");\r\n    }\r\n    return addIri(rule, acp.agent, acp.CreatorAgent);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Set a Rule to no longer apply to the creator of a Resource.\r\n *\r\n * @param rule The rule being modified.\r\n * @returns A copy of the rule, updated to apply/not apply to the creator of a Resource.\r\n * @since 1.6.0\r\n */\r\nfunction removeCreator$1(rule) {\r\n    return removeIri(rule, acp.agent, acp.CreatorAgent);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * List all the clients a [[Rule]] applies **directly** to. This will not include\r\n * specific client classes, such as public clients.\r\n *\r\n * @param rule The rule from which clients are read.\r\n * @returns A list of the WebIDs of clients included in the rule.\r\n * @since 1.6.0\r\n */\r\nfunction getClientAll$1(rule) {\r\n    return getIriAll(rule, acp.client).filter((client) => client !== solid.PublicOidcClient);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Overwrite the clients the [[Rule]] applies to with the provided Client.\r\n *\r\n * @param rule The rule for which clients are set.\r\n * @param client The Client the rule should apply to.\r\n * @returns A copy of the input rule, applying to a different set of Clients.\r\n * @since 1.6.0\r\n */\r\nfunction setClient$1(rule, client) {\r\n    // Preserve the special \"any client\" class, which we\r\n    // don't want to overwrite with this function.\r\n    const anyClientEnabled = hasAnyClient$1(rule);\r\n    let result = setIri(rule, acp.client, client);\r\n    // Restore the \"any client\" class\r\n    if (anyClientEnabled) {\r\n        result = setAnyClient$1(result);\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Apply the [[Rule]] to an additional Client.\r\n *\r\n * @param rule The [[Rule]] to be applied to an additional Client.\r\n * @param client The Client the [[Rule]] should apply to.\r\n * @returns A copy of the [[Rule]], applying to an additional Client.\r\n * @since 1.6.0\r\n */\r\nfunction addClient$1(rule, client) {\r\n    return addIri(rule, acp.client, client);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Prevent the [[Rule]] from applying to a given Client directly.\r\n *\r\n * @param rule The [[Rule]] that should no longer apply to a given Client.\r\n * @param client The Client the rule should no longer apply to.\r\n * @returns A copy of the rule, not applying to the given Client.\r\n * @since 1.6.0\r\n */\r\nfunction removeClient$1(rule, client) {\r\n    return removeIri(rule, acp.client, client);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Check if the rule applies to any client, i.e. all the applications\r\n * regardless of their identifier.\r\n *\r\n * @param rule The rule checked for authenticated access.\r\n * @returns Whether the rule applies to public clients.\r\n * @since 1.6.0\r\n */\r\nfunction hasAnyClient$1(rule) {\r\n    return (getIriAll(rule, acp.client).filter((client) => client === solid.PublicOidcClient).length > 0);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Make the [[Rule]] apply to any client application.\r\n *\r\n * @param rule The rule for which clients are set.\r\n * @returns A copy of the rule, updated to apply to any client\r\n * @since 1.6.0\r\n */\r\nfunction setAnyClient$1(rule) {\r\n    return addIri(rule, acp.client, solid.PublicOidcClient);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Make the [[Rule]] no longer apply to any client application.\r\n *\r\n * @param rule The rule for which clients are set.\r\n * @returns A copy of the rule, updated to no longer apply to any client\r\n * @since 1.6.0\r\n */\r\nfunction removeAnyClient$1(rule) {\r\n    return removeIri(rule, acp.client, solid.PublicOidcClient);\r\n}\r\n/**\r\n * Gets a human-readable representation of the given [[Rule]] to aid debugging.\r\n *\r\n * Note that changes to the exact format of the return value are not considered a breaking change;\r\n * it is intended to aid in debugging, not as a serialisation method that can be reliably parsed.\r\n *\r\n * @param rule The Rule to get a human-readable representation of.\r\n * @since 1.6.0\r\n */\r\nfunction ruleAsMarkdown(rule) {\r\n    let markdown = `## Rule: ${asUrl(rule)}\\n\\n`;\r\n    let targetEnumeration = \"\";\r\n    if (hasPublic$1(rule)) {\r\n        targetEnumeration += \"- Everyone\\n\";\r\n    }\r\n    if (hasAuthenticated$1(rule)) {\r\n        targetEnumeration += \"- All authenticated agents\\n\";\r\n    }\r\n    if (hasCreator$1(rule)) {\r\n        targetEnumeration += \"- The creator of this resource\\n\";\r\n    }\r\n    if (hasAnyClient$1(rule)) {\r\n        targetEnumeration += \"- Users of any client application\\n\";\r\n    }\r\n    const targetAgents = getAgentAll$1(rule);\r\n    if (targetAgents.length > 0) {\r\n        targetEnumeration += \"- The following agents:\\n  - \";\r\n        targetEnumeration += targetAgents.join(\"\\n  - \") + \"\\n\";\r\n    }\r\n    const targetGroups = getGroupAll(rule);\r\n    if (targetGroups.length > 0) {\r\n        targetEnumeration += \"- Members of the following groups:\\n  - \";\r\n        targetEnumeration += targetGroups.join(\"\\n  - \") + \"\\n\";\r\n    }\r\n    const targetClients = getClientAll$1(rule);\r\n    if (targetClients.length > 0) {\r\n        targetEnumeration += \"- Users of the following client applications:\\n  - \";\r\n        targetEnumeration += targetClients.join(\"\\n  - \") + \"\\n\";\r\n    }\r\n    markdown +=\r\n        targetEnumeration.length > 0\r\n            ? \"This rule applies to:\\n\" + targetEnumeration\r\n            : \"<empty>\\n\";\r\n    return markdown;\r\n}\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * @param thing the [[Thing]] to check to see if it's an ACP Policy or not\r\n */\r\nfunction isPolicy(thing) {\r\n    return getIriAll(thing, rdf.type).includes(acp.Policy);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Initialise a new, empty [[Policy]].\r\n *\r\n * @param url URL that identifies this Policy.\r\n * @since 1.6.0\r\n */\r\nfunction createPolicy(url) {\r\n    const stringUrl = internal_toIriString(url);\r\n    let policyThing = createThing({ url: stringUrl });\r\n    policyThing = setUrl(policyThing, rdf.type, acp.Policy);\r\n    return policyThing;\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Get the [[Policy]] with the given URL from an [[SolidDataset]].\r\n *\r\n * @param policyResource The Resource that contains the given Policy.\r\n * @param url URL that identifies this Policy.\r\n * @returns The requested Policy, if it exists, or `null` if it does not.\r\n * @since 1.6.0\r\n */\r\nfunction getPolicy(policyResource, url) {\r\n    const foundThing = getThing(policyResource, url);\r\n    if (foundThing === null || !isPolicy(foundThing)) {\r\n        return null;\r\n    }\r\n    return foundThing;\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Get all [[Policy]]'s in a given [[SolidDataset]].\r\n *\r\n * @param policyResource The Resource that contains Access Policies.\r\n * @since 1.6.0\r\n */\r\nfunction getPolicyAll(policyResource) {\r\n    const foundThings = getThingAll(policyResource);\r\n    const foundPolicies = foundThings.filter((thing) => !isThingLocal(thing) && isPolicy(thing));\r\n    return foundPolicies;\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Remove the given [[Policy]] from the given [[SolidDataset]].\r\n *\r\n * @param policyResource The Resource that contains Access Policies.\r\n * @param policy The Policy to remove from the resource.\r\n * @since 1.6.0\r\n */\r\nfunction removePolicy(policyResource, policy) {\r\n    return removeThing(policyResource, policy);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Insert the given [[Policy]] into the given [[SolidDataset]], replacing previous instances of that Policy.\r\n *\r\n * @param policyResource The Resource that contains Access Policies.\r\n * @param policy The Policy to insert into the Resource.\r\n * @returns A new dataset equal to the given resource, but with the given Policy.\r\n * @since 1.6.0\r\n */\r\nfunction setPolicy(policyResource, policy) {\r\n    return setThing(policyResource, policy);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Given a [[Policy]] and a set of [[AccessModes]], return a new Policy based on the given\r\n * Policy, but with the given Access Modes allowed on it.\r\n *\r\n * @param policy The Policy on which to set the modes to allow.\r\n * @param modes Modes to allow for this Policy.\r\n * @since Not released yet.\r\n */\r\nfunction setAllowModesV2(policy, modes) {\r\n    let newPolicy = removeAll(policy, acp.allow);\r\n    if (modes.read === true) {\r\n        newPolicy = addIri(newPolicy, acp.allow, internal_accessModeIriStrings.read);\r\n    }\r\n    if (modes.append === true) {\r\n        newPolicy = addIri(newPolicy, acp.allow, internal_accessModeIriStrings.append);\r\n    }\r\n    if (modes.write === true) {\r\n        newPolicy = addIri(newPolicy, acp.allow, internal_accessModeIriStrings.write);\r\n    }\r\n    return newPolicy;\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Given a [[Policy]] and a set of [[AccessModes]], return a new Policy based on the given\r\n * Policy, but with the given Access Modes allowed on it.\r\n *\r\n * @param policy The Policy on which to set the modes to allow.\r\n * @param modes Modes to allow for this Policy.\r\n * @since 1.6.0\r\n * @deprecated The Access Control Policies proposal will be updated to use a different vocabulary for allow- and deny-modes. To be compatible with servers that implement that, use [[setAllowModesV2]].\r\n */\r\nfunction setAllowModesV1(policy, modes) {\r\n    let newPolicy = removeAll(policy, acp.allow);\r\n    if (modes.read === true) {\r\n        newPolicy = addIri(newPolicy, acp.allow, acp.Read);\r\n    }\r\n    if (modes.append === true) {\r\n        newPolicy = addIri(newPolicy, acp.allow, acp.Append);\r\n    }\r\n    if (modes.write === true) {\r\n        newPolicy = addIri(newPolicy, acp.allow, acp.Write);\r\n    }\r\n    return newPolicy;\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Given a [[Policy]], return which [[AccessModes]] it allows.\r\n *\r\n * @param policy The Policy for which you want to know the Access Modes it allows.\r\n * @since Not released yet.\r\n */\r\nfunction getAllowModesV2(policy) {\r\n    const allowedModes = getIriAll(policy, acp.allow);\r\n    return {\r\n        read: allowedModes.includes(internal_accessModeIriStrings.read),\r\n        append: allowedModes.includes(internal_accessModeIriStrings.append),\r\n        write: allowedModes.includes(internal_accessModeIriStrings.write),\r\n    };\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Given a [[Policy]], return which [[AccessModes]] it allows.\r\n *\r\n * @param policy The Policy for which you want to know the Access Modes it allows.\r\n * @since 1.6.0\r\n * @deprecated The Access Control Policies proposal will be updated to use a different vocabulary for allow- and deny-modes. To be compatible with servers that implement that, use [[getAllowModesV2]].\r\n */\r\nfunction getAllowModesV1(policy) {\r\n    const allowedModes = getIriAll(policy, acp.allow);\r\n    return {\r\n        read: allowedModes.includes(acp.Read),\r\n        append: allowedModes.includes(acp.Append),\r\n        write: allowedModes.includes(acp.Write),\r\n    };\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Given a [[Policy]] and a set of [[AccessModes]], return a new Policy based on the given\r\n * Policy, but with the given Access Modes disallowed on it.\r\n *\r\n * @param policy The Policy on which to set the modes to disallow.\r\n * @param modes Modes to disallow for this Policy.\r\n * @since Not released yet.\r\n */\r\nfunction setDenyModesV2(policy, modes) {\r\n    let newPolicy = removeAll(policy, acp.deny);\r\n    if (modes.read === true) {\r\n        newPolicy = addIri(newPolicy, acp.deny, internal_accessModeIriStrings.read);\r\n    }\r\n    if (modes.append === true) {\r\n        newPolicy = addIri(newPolicy, acp.deny, internal_accessModeIriStrings.append);\r\n    }\r\n    if (modes.write === true) {\r\n        newPolicy = addIri(newPolicy, acp.deny, internal_accessModeIriStrings.write);\r\n    }\r\n    return newPolicy;\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Given a [[Policy]] and a set of [[AccessModes]], return a new Policy based on the given\r\n * Policy, but with the given Access Modes disallowed on it.\r\n *\r\n * @param policy The Policy on which to set the modes to disallow.\r\n * @param modes Modes to disallow for this Policy.\r\n * @since 1.6.0\r\n * @deprecated The Access Control Policies proposal will be updated to use a different vocabulary for allow- and deny-modes. To be compatible with servers that implement that, use [[setDenyModesV2]].\r\n */\r\nfunction setDenyModesV1(policy, modes) {\r\n    let newPolicy = removeAll(policy, acp.deny);\r\n    if (modes.read === true) {\r\n        newPolicy = addIri(newPolicy, acp.deny, acp.Read);\r\n    }\r\n    if (modes.append === true) {\r\n        newPolicy = addIri(newPolicy, acp.deny, acp.Append);\r\n    }\r\n    if (modes.write === true) {\r\n        newPolicy = addIri(newPolicy, acp.deny, acp.Write);\r\n    }\r\n    return newPolicy;\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Given a [[Policy]], return which [[AccessModes]] it disallows.\r\n *\r\n * @param policy The Policy on which you want to know the Access Modes it disallows.\r\n * @since Not released yet.\r\n */\r\nfunction getDenyModesV2(policy) {\r\n    const deniedModes = getIriAll(policy, acp.deny);\r\n    return {\r\n        read: deniedModes.includes(internal_accessModeIriStrings.read),\r\n        append: deniedModes.includes(internal_accessModeIriStrings.append),\r\n        write: deniedModes.includes(internal_accessModeIriStrings.write),\r\n    };\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Given a [[Policy]], return which [[AccessModes]] it disallows.\r\n *\r\n * @param policy The Policy on which you want to know the Access Modes it disallows.\r\n * @since 1.6.0\r\n * @deprecated The Access Control Policies proposal will be updated to use a different vocabulary for allow- and deny-modes. To be compatible with servers that implement that, use [[getDenyModesV2]].\r\n */\r\nfunction getDenyModesV1(policy) {\r\n    const deniedModes = getIriAll(policy, acp.deny);\r\n    return {\r\n        read: deniedModes.includes(acp.Read),\r\n        append: deniedModes.includes(acp.Append),\r\n        write: deniedModes.includes(acp.Write),\r\n    };\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Initialise a new, empty [[ResourcePolicy]] for the given Resource.\r\n *\r\n * @param resourceWithAcr The Resource to which the Policy is to apply.\r\n * @param name The name that identifies this Policy.\r\n * @since 1.6.0\r\n */\r\nfunction createResourcePolicyFor(resourceWithAcr, name) {\r\n    const acr = internal_getAcr(resourceWithAcr);\r\n    const url = new URL(getSourceUrl(acr));\r\n    url.hash = `#${name}`;\r\n    let policyThing = createThing({ url: url.href });\r\n    policyThing = setUrl(policyThing, rdf.type, acp.Policy);\r\n    return policyThing;\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Get the [[ResourcePolicy]] with the given name that applies to a Resource\r\n * from its Access Control Resource.\r\n *\r\n * @param resourceWithAcr The Resource whose ACR contains the given Policy.\r\n * @param name The name that identifies this Policy.\r\n * @returns The requested Policy, if it exists and applies to the given Resource, or `null` if it does not.\r\n * @since 1.6.0\r\n */\r\nfunction getResourcePolicy(resourceWithAcr, name) {\r\n    const acr = internal_getAcr(resourceWithAcr);\r\n    const acrUrl = getSourceUrl(acr);\r\n    const url = new URL(acrUrl);\r\n    url.hash = `#${name}`;\r\n    const foundThing = getThing(acr, url.href);\r\n    if (!getPolicyUrlAll(resourceWithAcr).includes(url.href) ||\r\n        foundThing === null ||\r\n        !isPolicy(foundThing)) {\r\n        return null;\r\n    }\r\n    return foundThing;\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Get the [[ResourcePolicy]] with the given name that applies to a Resource's\r\n * Access Control Resource from that Access Control Resource.\r\n *\r\n * @param resourceWithAcr The Resource whose ACR contains the given Policy.\r\n * @param name The name that identifies this Policy.\r\n * @returns The requested Policy, if it exists and applies to the Resource's ACR, or `null` if it does not.\r\n * @since 1.6.0\r\n */\r\nfunction getResourceAcrPolicy(resourceWithAcr, name) {\r\n    const acr = internal_getAcr(resourceWithAcr);\r\n    const acrUrl = getSourceUrl(acr);\r\n    const url = new URL(acrUrl);\r\n    url.hash = `#${name}`;\r\n    const foundThing = getThing(acr, url.href);\r\n    if (!getAcrPolicyUrlAll(resourceWithAcr).includes(url.href) ||\r\n        foundThing === null ||\r\n        !isPolicy(foundThing)) {\r\n        return null;\r\n    }\r\n    return foundThing;\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Get all [[ResourcePolicy]]'s that apply to a Resource in its Access Control\r\n * Resource.\r\n *\r\n * @param resourceWithAcr The Resource whose Access Control Resource contains Access Policies applying to it.\r\n * @since 1.6.0\r\n */\r\nfunction getResourcePolicyAll(resourceWithAcr) {\r\n    const acr = internal_getAcr(resourceWithAcr);\r\n    const policyUrls = getPolicyUrlAll(resourceWithAcr);\r\n    const foundThings = policyUrls.map((policyUrl) => getThing(acr, policyUrl));\r\n    const foundPolicies = foundThings.filter((thing) => thing !== null && isPolicy(thing));\r\n    return foundPolicies;\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Get all [[ResourcePolicy]]'s that apply to a given Resource's Access Control\r\n * Resource from that Access Control Resource.\r\n *\r\n * @param resourceWithAcr The Resource whose Access Control Resource contains Access Policies.\r\n * @since 1.6.0\r\n */\r\nfunction getResourceAcrPolicyAll(resourceWithAcr) {\r\n    const acr = internal_getAcr(resourceWithAcr);\r\n    const policyUrls = getAcrPolicyUrlAll(resourceWithAcr);\r\n    const foundThings = policyUrls.map((policyUrl) => getThing(acr, policyUrl));\r\n    const foundPolicies = foundThings.filter((thing) => thing !== null && isPolicy(thing));\r\n    return foundPolicies;\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Remove the given [[ResourcePolicy]] from the given Resource's Access Control\r\n * Resource.\r\n *\r\n * @param resourceWithAcr The Resource whose Access Control Resource contains Access Policies.\r\n * @param policy The Policy to remove from the Resource's Access Control Resource.\r\n * @since 1.6.0\r\n */\r\nfunction removeResourcePolicy(resourceWithAcr, policy) {\r\n    const acr = internal_getAcr(resourceWithAcr);\r\n    let policyToRemove = policy;\r\n    if (typeof policyToRemove === \"string\") {\r\n        try {\r\n            new URL(policyToRemove);\r\n        }\r\n        catch (e) {\r\n            // If the given Policy to remove is the name of the Policy,\r\n            // resolve it to its full URL — developers usually refer to either the\r\n            // Policy itself, or by its name, as they do not have access to the ACR\r\n            // directly.\r\n            const policyUrl = new URL(getSourceUrl(acr));\r\n            policyUrl.hash = `#${policy}`;\r\n            policyToRemove = policyUrl.href;\r\n        }\r\n    }\r\n    let policyUrlString;\r\n    if (typeof policyToRemove === \"string\") {\r\n        policyUrlString = policyToRemove;\r\n    }\r\n    else if (isNamedNode(policyToRemove)) {\r\n        policyUrlString = internal_toIriString(policyToRemove);\r\n    }\r\n    else {\r\n        policyUrlString = asUrl(policyToRemove, getSourceUrl(acr));\r\n    }\r\n    // Check whether the actual Policy (i.e. with the Policy type) exists:\r\n    const matchingRule = getResourcePolicy(resourceWithAcr, new URL(policyUrlString).hash.substring(1));\r\n    if (matchingRule === null) {\r\n        // No such Policy exists yet, so return the Resource+ACR unchanged:\r\n        return resourceWithAcr;\r\n    }\r\n    const updatedAcr = removeThing(acr, policyToRemove);\r\n    const updatedResource = internal_setAcr(resourceWithAcr, updatedAcr);\r\n    return removePolicyUrl(updatedResource, policyUrlString);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Remove the given [[ResourcePolicy]] that applies to a given Resource's Access\r\n * Control Resource from that Access Control Resource.\r\n *\r\n * @param resourceWithAcr The Resource whose Access Control Resource contains Access Policies.\r\n * @param policy The ACR Policy to remove from the Resource's Access Control Resource.\r\n * @since 1.6.0\r\n */\r\nfunction removeResourceAcrPolicy(resourceWithAcr, policy) {\r\n    const acr = internal_getAcr(resourceWithAcr);\r\n    let policyToRemove = policy;\r\n    if (typeof policyToRemove === \"string\") {\r\n        try {\r\n            new URL(policyToRemove);\r\n        }\r\n        catch (e) {\r\n            // If the given Policy to remove is the name of the Policy,\r\n            // resolve it to its full URL — developers usually refer to either the\r\n            // Policy itself, or by its name, as they do not have access to the ACR\r\n            // directly.\r\n            const policyUrl = new URL(getSourceUrl(acr));\r\n            policyUrl.hash = `#${policy}`;\r\n            policyToRemove = policyUrl.href;\r\n        }\r\n    }\r\n    let policyUrlString;\r\n    if (typeof policyToRemove === \"string\") {\r\n        policyUrlString = policyToRemove;\r\n    }\r\n    else if (isNamedNode(policyToRemove)) {\r\n        policyUrlString = internal_toIriString(policyToRemove);\r\n    }\r\n    else {\r\n        policyUrlString = asUrl(policyToRemove, getSourceUrl(acr));\r\n    }\r\n    // Check whether the actual Policy (i.e. with the Policy type) exists:\r\n    const matchingRule = getResourceAcrPolicy(resourceWithAcr, new URL(policyUrlString).hash.substring(1));\r\n    if (matchingRule === null) {\r\n        // No such Policy exists yet, so return the Resource+ACR unchanged:\r\n        return resourceWithAcr;\r\n    }\r\n    const updatedAcr = removeThing(acr, policyToRemove);\r\n    const updatedResource = internal_setAcr(resourceWithAcr, updatedAcr);\r\n    return removeAcrPolicyUrl(updatedResource, policyUrlString);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Insert the given [[ResourcePolicy]] into the given Resource's Acccess Control\r\n * Resource, replacing previous instances of that Policy.\r\n *\r\n * @param resourceWithAcr The Resource whose Access Control Resource contains Access Policies.\r\n * @param policy The Policy to insert into the Resource's Access Control Resource.\r\n * @returns A new Resource equal to the given Resource, but with the given Policy in its Access Control Resource.\r\n * @since 1.6.0\r\n */\r\nfunction setResourcePolicy(resourceWithAcr, policy) {\r\n    const acr = internal_getAcr(resourceWithAcr);\r\n    const updatedAcr = setThing(acr, policy);\r\n    const updatedResource = internal_setAcr(resourceWithAcr, updatedAcr);\r\n    const policyUrl = asUrl(policy, getSourceUrl(acr));\r\n    return addPolicyUrl(updatedResource, policyUrl);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Insert the given [[ResourcePolicy]] into the given Resource's Acccess Control\r\n * Resource, replacing previous instances of that Policy, to apply to the Access\r\n * Control Resource itself.\r\n *\r\n * @param resourceWithAcr The Resource whose Access Control Resource contains Access Policies.\r\n * @param policy The Policy to insert into the Resource's Access Control Resource.\r\n * @returns A new Resource equal to the given Resource, but with the given Policy in its Access Control Resource, applying to that Access Control Resource.\r\n * @since 1.6.0\r\n */\r\nfunction setResourceAcrPolicy(resourceWithAcr, policy) {\r\n    const acr = internal_getAcr(resourceWithAcr);\r\n    const updatedAcr = setThing(acr, policy);\r\n    const updatedResource = internal_setAcr(resourceWithAcr, updatedAcr);\r\n    const policyUrl = asUrl(policy, getSourceUrl(acr));\r\n    return addAcrPolicyUrl(updatedResource, policyUrl);\r\n}\r\n/**\r\n * Gets a human-readable representation of the given [[Policy]] to aid debugging.\r\n *\r\n * Note that changes to the exact format of the return value are not considered a breaking change;\r\n * it is intended to aid in debugging, not as a serialisation method that can be reliably parsed.\r\n *\r\n * @param policy The Policy to get a human-readable representation of.\r\n * @since 1.6.0\r\n */\r\nfunction policyAsMarkdown(policy) {\r\n    function getStatus(allow, deny) {\r\n        if (deny) {\r\n            return \"denied\";\r\n        }\r\n        if (allow) {\r\n            return \"allowed\";\r\n        }\r\n        return \"unspecified\";\r\n    }\r\n    const allowModes = getAllowModesV1(policy);\r\n    const denyModes = getDenyModesV1(policy);\r\n    let markdown = `## Policy: ${asUrl(policy)}\\n\\n`;\r\n    markdown += `- Read: ${getStatus(allowModes.read, denyModes.read)}\\n`;\r\n    markdown += `- Append: ${getStatus(allowModes.append, denyModes.append)}\\n`;\r\n    markdown += `- Write: ${getStatus(allowModes.write, denyModes.write)}\\n`;\r\n    const allOfRules = getAllOfRuleUrlAll(policy);\r\n    const anyOfRules = getAnyOfRuleUrlAll(policy);\r\n    const noneOfRules = getNoneOfRuleUrlAll(policy);\r\n    if (allOfRules.length === 0 &&\r\n        anyOfRules.length === 0 &&\r\n        noneOfRules.length === 0) {\r\n        markdown += \"\\n<no rules specified yet>\\n\";\r\n    }\r\n    if (allOfRules.length > 0) {\r\n        markdown += \"\\nAll of these rules should match:\\n\";\r\n        markdown += \"- \" + allOfRules.join(\"\\n- \") + \"\\n\";\r\n    }\r\n    if (anyOfRules.length > 0) {\r\n        markdown += \"\\nAt least one of these rules should match:\\n\";\r\n        markdown += \"- \" + anyOfRules.join(\"\\n- \") + \"\\n\";\r\n    }\r\n    if (noneOfRules.length > 0) {\r\n        markdown += \"\\nNone of these rules should match:\\n\";\r\n        markdown += \"- \" + noneOfRules.join(\"\\n- \") + \"\\n\";\r\n    }\r\n    return markdown;\r\n}\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n *\r\n * ```{warning}\r\n * Do not use this function in production code.  For use in **unit tests** that require a\r\n * [[AccessControlResource]].\r\n * ```\r\n *\r\n * Initialises a new empty Access Control Resource for a given Resource for use\r\n * in **unit tests**.\r\n *\r\n * @param resourceUrl The URL of the Resource to which the mocked ACR should apply.\r\n * @returns The mocked empty Access Control Resource for the given Resource.\r\n * @since 1.6.0\r\n */\r\nfunction mockAcrFor(resourceUrl) {\r\n    const acrUrl = new URL(\"access-control-resource\", resourceUrl).href;\r\n    const acr = Object.assign(Object.assign({}, mockSolidDatasetFrom(acrUrl)), { accessTo: resourceUrl });\r\n    return acr;\r\n}\r\n/**\r\n * ```{warning}\r\n * Do not use this function in production code.  For use in **unit tests** that require a\r\n * Resource with an [[AccessControlResource]].\r\n * ```\r\n *\r\n * Attaches an Access Control Resource to a given [[SolidDataset]] for use\r\n * in **unit tests**; e.g., unit tests that call [[getPolicyUrlAll]].\r\n *\r\n * @param resource The Resource to mock up with a new resource ACL.\r\n * @param accessControlResource The Access Control Resource to attach to the given Resource.\r\n * @returns The input Resource with an empty resource ACL attached.\r\n * @since 1.6.0\r\n */\r\nfunction addMockAcrTo(resource, accessControlResource = mockAcrFor(getSourceUrl(resource))) {\r\n    const resourceWithAcr = Object.assign(internal_cloneResource(resource), {\r\n        internal_acp: {\r\n            acr: accessControlResource,\r\n            aprs: {},\r\n        },\r\n    });\r\n    return resourceWithAcr;\r\n}\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nconst v2AcpFunctions = {\r\n    getFileWithAccessDatasets,\r\n    getFileWithAcr,\r\n    getReferencedPolicyUrlAll,\r\n    getResourceInfoWithAccessDatasets,\r\n    getResourceInfoWithAcr,\r\n    getSolidDatasetWithAccessDatasets,\r\n    getSolidDatasetWithAcr,\r\n    hasAccessibleAcr,\r\n    saveAcrFor,\r\n};\r\nconst v2ControlFunctions = {\r\n    acrAsMarkdown,\r\n    addAcrPolicyUrl,\r\n    addMemberAcrPolicyUrl,\r\n    addMemberPolicyUrl,\r\n    addPolicyUrl,\r\n    getAcrPolicyUrlAll,\r\n    getMemberAcrPolicyUrlAll,\r\n    getMemberPolicyUrlAll,\r\n    getPolicyUrlAll,\r\n    hasLinkedAcr,\r\n    removeAcrPolicyUrl,\r\n    removeAcrPolicyUrlAll,\r\n    removeMemberAcrPolicyUrl,\r\n    removeMemberAcrPolicyUrlAll,\r\n    removeMemberPolicyUrl,\r\n    removeMemberPolicyUrlAll,\r\n    removePolicyUrl,\r\n    removePolicyUrlAll,\r\n};\r\nconst v2PolicyFunctions = {\r\n    createPolicy,\r\n    getAllowModes: getAllowModesV1,\r\n    getDenyModes: getDenyModesV1,\r\n    getPolicy,\r\n    getPolicyAll,\r\n    policyAsMarkdown,\r\n    removePolicy,\r\n    setAllowModes: setAllowModesV1,\r\n    setDenyModes: setDenyModesV1,\r\n    setPolicy,\r\n};\r\nconst v2RuleFunctions = {\r\n    addAgent: addAgent$1,\r\n    addForbiddenRuleUrl: addNoneOfRuleUrl,\r\n    addGroup,\r\n    addOptionalRuleUrl: addAnyOfRuleUrl,\r\n    addRequiredRuleUrl: addAllOfRuleUrl,\r\n    createRule,\r\n    getAgentAll: getAgentAll$1,\r\n    getForbiddenRuleUrlAll: getNoneOfRuleUrlAll,\r\n    getGroupAll,\r\n    getOptionalRuleUrlAll: getAnyOfRuleUrlAll,\r\n    getRequiredRuleUrlAll: getAllOfRuleUrlAll,\r\n    getRule,\r\n    getRuleAll,\r\n    hasAuthenticated: hasAuthenticated$1,\r\n    hasCreator: hasCreator$1,\r\n    hasPublic: hasPublic$1,\r\n    removeAgent: removeAgent$1,\r\n    removeForbiddenRuleUrl: removeNoneOfRuleUrl,\r\n    removeGroup,\r\n    removeOptionalRuleUrl: removeAnyOfRuleUrl,\r\n    removeRequiredRuleUrl: removeAllOfRuleUrl,\r\n    removeRule,\r\n    ruleAsMarkdown,\r\n    setAgent: setAgent$1,\r\n    setForbiddenRuleUrl: setNoneOfRuleUrl,\r\n    setGroup,\r\n    setOptionalRuleUrl: setAnyOfRuleUrl,\r\n    setRequiredRuleUrl: setAllOfRuleUrl,\r\n    setRule,\r\n};\r\nconst v2MockFunctions = {\r\n    addMockAcrTo,\r\n    mockAcrFor,\r\n};\r\n/* istanbul ignore next Not a supported public API: */\r\n/** @deprecated Replaced by [[setPublic]] */\r\nfunction previousSetPublicSignature(rule, enable) {\r\n    return enable ? setPublic$1(rule) : removePublic$1(rule);\r\n}\r\n/* istanbul ignore next Not a supported public API: */\r\n/** @deprecated Replaced by [[setAuthenticated]] */\r\nfunction previousSetAuthenticatedSignature(rule, enable) {\r\n    return enable ? setAuthenticated$1(rule) : removeAuthenticated$1(rule);\r\n}\r\n/* istanbul ignore next Not a supported public API: */\r\n/** @deprecated Replaced by [[setCreator]] */\r\nfunction previousSetCreatorSignature(rule, enable) {\r\n    return enable ? setCreator$1(rule) : removeCreator$1(rule);\r\n}\r\nconst deprecatedFunctions$1 = {\r\n    /** @deprecated This misspelling was included accidentally. The correct function is [[getForbiddenRuleUrlAll]]. */\r\n    getForbiddenRuleurlAll: getNoneOfRuleUrlAll,\r\n    setPublic: previousSetPublicSignature,\r\n    setAuthenticated: previousSetAuthenticatedSignature,\r\n    setCreator: previousSetCreatorSignature,\r\n};\r\n/**\r\n * @hidden\r\n * @deprecated Replaced by [[acp_v3]].\r\n */\r\nconst acp_v2 = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, v2AcpFunctions), v2ControlFunctions), v2PolicyFunctions), v2RuleFunctions), v2MockFunctions), deprecatedFunctions$1);\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nconst v1AcpFunctions = {\r\n    getFileWithAccessDatasets,\r\n    getFileWithAcr,\r\n    getReferencedPolicyUrlAll,\r\n    getResourceInfoWithAccessDatasets,\r\n    getResourceInfoWithAcr,\r\n    getSolidDatasetWithAccessDatasets,\r\n    getSolidDatasetWithAcr,\r\n    hasAccessibleAcr,\r\n    saveAcrFor,\r\n};\r\nconst v1PolicyFunctions = {\r\n    createPolicy,\r\n    getAllowModes: getAllowModesV1,\r\n    getDenyModes: getDenyModesV1,\r\n    getPolicy,\r\n    getPolicyAll,\r\n    policyAsMarkdown,\r\n    removePolicy,\r\n    setAllowModes: setAllowModesV1,\r\n    setDenyModes: setDenyModesV1,\r\n    setPolicy,\r\n};\r\nconst v1RuleFunctions = {\r\n    addAgent: addAgent$1,\r\n    addForbiddenRuleUrl: addNoneOfRuleUrl,\r\n    addGroup,\r\n    addOptionalRuleUrl: addAnyOfRuleUrl,\r\n    addRequiredRuleUrl: addAllOfRuleUrl,\r\n    createRule,\r\n    getAgentAll: getAgentAll$1,\r\n    getForbiddenRuleUrlAll: getNoneOfRuleUrlAll,\r\n    getGroupAll,\r\n    getOptionalRuleUrlAll: getAnyOfRuleUrlAll,\r\n    getRequiredRuleUrlAll: getAllOfRuleUrlAll,\r\n    getRule,\r\n    getRuleAll,\r\n    hasAuthenticated: hasAuthenticated$1,\r\n    hasCreator: hasCreator$1,\r\n    hasPublic: hasPublic$1,\r\n    removeAgent: removeAgent$1,\r\n    removeForbiddenRuleUrl: removeNoneOfRuleUrl,\r\n    removeGroup,\r\n    removeOptionalRuleUrl: removeAnyOfRuleUrl,\r\n    removeRequiredRuleUrl: removeAllOfRuleUrl,\r\n    removeRule,\r\n    ruleAsMarkdown,\r\n    setAgent: setAgent$1,\r\n    setForbiddenRuleUrl: setNoneOfRuleUrl,\r\n    setGroup,\r\n    setOptionalRuleUrl: setAnyOfRuleUrl,\r\n    setRequiredRuleUrl: setAllOfRuleUrl,\r\n    setRule,\r\n};\r\nconst v1MockFunctions = {\r\n    addMockAcrTo,\r\n    mockAcrFor,\r\n};\r\nconst v1ControlFunctions = {\r\n    hasLinkedAcr,\r\n    addAcrPolicyUrl,\r\n    addMemberAcrPolicyUrl,\r\n    getAcrPolicyUrlAll,\r\n    getMemberAcrPolicyUrlAll,\r\n    removeAcrPolicyUrl,\r\n    removeAcrPolicyUrlAll,\r\n    removeMemberAcrPolicyUrl,\r\n    removeMemberAcrPolicyUrlAll,\r\n};\r\nconst deprecatedFunctions = {\r\n    createControl: internal_createControl,\r\n    getControl: internal_getControl,\r\n    getAllControl: internal_getControlAll,\r\n    getControlAll: internal_getControlAll,\r\n    setControl: internal_setControl,\r\n    removeControl: removeControl,\r\n    addPolicyUrl: internal_addPolicyUrl,\r\n    getPolicyUrlAll: internal_getPolicyUrlAll,\r\n    removePolicyUrl: internal_removePolicyUrl,\r\n    removePolicyUrlAll: internal_removePolicyUrlAll,\r\n    addMemberPolicyUrl: internal_addMemberPolicyUrl,\r\n    getMemberPolicyUrlAll: internal_getMemberPolicyUrlAll,\r\n    removeMemberPolicyUrl: internal_getMemberPolicyUrlAll,\r\n    removeMemberPolicyUrlAll: internal_removeMemberPolicyUrlAll,\r\n    /** @deprecated This misspelling was included accidentally. The correct function is [[getForbiddenRuleUrlAll]]. */\r\n    getForbiddenRuleurlAll: getNoneOfRuleUrlAll,\r\n    setPublic: previousSetPublicSignature,\r\n    setAuthenticated: previousSetAuthenticatedSignature,\r\n    setCreator: previousSetCreatorSignature,\r\n};\r\n/**\r\n * @hidden\r\n * @deprecated Replaced by [[acp_v2]].\r\n */\r\nconst acp_v1 = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, v1AcpFunctions), v1PolicyFunctions), v1RuleFunctions), v1MockFunctions), v1ControlFunctions), deprecatedFunctions);\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Remove an [[Control]] from the [[AccessControlResource]] of a Resource.\r\n *\r\n * @param withAccessControlResource A Resource with the Access Control Resource from which to remove an Access Control.\r\n * @param control The [[Control]] to remove from the given Access Control Resource.\r\n * @returns The given Resource with a new Access Control Resource equal to the original Access Control Resource, excluding the given Access Control.\r\n * @hidden Developers don't need to care about initialising Controls - they can just add Policies directly.\r\n * @deprecated\r\n */\r\nfunction removeControl(withAccessControlResource, control) {\r\n    const acr = internal_getAcr(withAccessControlResource);\r\n    const updatedAcr = removeThing(acr, control);\r\n    const updatedResource = internal_setAcr(withAccessControlResource, updatedAcr);\r\n    return updatedResource;\r\n}\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nconst v3AcpFunctions = {\r\n    getFileWithAccessDatasets,\r\n    getFileWithAcr,\r\n    getReferencedPolicyUrlAll,\r\n    getResourceInfoWithAccessDatasets,\r\n    getResourceInfoWithAcr,\r\n    getSolidDatasetWithAccessDatasets,\r\n    getSolidDatasetWithAcr,\r\n    hasAccessibleAcr,\r\n    saveAcrFor,\r\n};\r\nconst v3ControlFunctions = {\r\n    acrAsMarkdown,\r\n    addAcrPolicyUrl,\r\n    addMemberAcrPolicyUrl,\r\n    addMemberPolicyUrl,\r\n    addPolicyUrl,\r\n    getAcrPolicyUrlAll,\r\n    getMemberAcrPolicyUrlAll,\r\n    getMemberPolicyUrlAll,\r\n    getPolicyUrlAll,\r\n    hasLinkedAcr,\r\n    removeAcrPolicyUrl,\r\n    removeAcrPolicyUrlAll,\r\n    removeMemberAcrPolicyUrl,\r\n    removeMemberAcrPolicyUrlAll,\r\n    removeMemberPolicyUrl,\r\n    removeMemberPolicyUrlAll,\r\n    removePolicyUrl,\r\n    removePolicyUrlAll,\r\n};\r\nconst v3PolicyFunctions = {\r\n    createPolicy,\r\n    getAllowModes: getAllowModesV1,\r\n    getDenyModes: getDenyModesV1,\r\n    getPolicy,\r\n    getPolicyAll,\r\n    policyAsMarkdown,\r\n    removePolicy,\r\n    setAllowModes: setAllowModesV1,\r\n    setDenyModes: setDenyModesV1,\r\n    setPolicy,\r\n    createResourcePolicyFor,\r\n    getResourceAcrPolicy,\r\n    getResourceAcrPolicyAll,\r\n    getResourcePolicy,\r\n    getResourcePolicyAll,\r\n    removeResourceAcrPolicy,\r\n    removeResourcePolicy,\r\n    setResourceAcrPolicy,\r\n    setResourcePolicy,\r\n};\r\nconst v3RuleFunctions = {\r\n    addAgent: addAgent$1,\r\n    addGroup,\r\n    createRule,\r\n    getAgentAll: getAgentAll$1,\r\n    getGroupAll,\r\n    getRule,\r\n    getRuleAll,\r\n    removeAgent: removeAgent$1,\r\n    removeGroup,\r\n    removeRule,\r\n    ruleAsMarkdown,\r\n    setAgent: setAgent$1,\r\n    setGroup,\r\n    setRule,\r\n    addClient: addClient$1,\r\n    getClientAll: getClientAll$1,\r\n    hasAnyClient: hasAnyClient$1,\r\n    removeClient: removeClient$1,\r\n    setAnyClient: setAnyClient$1,\r\n    setClient: setClient$1,\r\n    removeAnyClient: removeAnyClient$1,\r\n    hasAuthenticated: hasAuthenticated$1,\r\n    hasCreator: hasCreator$1,\r\n    hasPublic: hasPublic$1,\r\n    setAuthenticated: setAuthenticated$1,\r\n    setCreator: setCreator$1,\r\n    setPublic: setPublic$1,\r\n    removeAuthenticated: removeAuthenticated$1,\r\n    removeCreator: removeCreator$1,\r\n    removePublic: removePublic$1,\r\n    getAnyOfRuleUrlAll,\r\n    addAnyOfRuleUrl,\r\n    removeAnyOfRuleUrl,\r\n    setAnyOfRuleUrl,\r\n    getAllOfRuleUrlAll,\r\n    addAllOfRuleUrl,\r\n    removeAllOfRuleUrl,\r\n    setAllOfRuleUrl,\r\n    getNoneOfRuleUrlAll,\r\n    addNoneOfRuleUrl,\r\n    removeNoneOfRuleUrl,\r\n    setNoneOfRuleUrl,\r\n    createResourceRuleFor,\r\n    getResourceRule,\r\n    getResourceRuleAll,\r\n    removeResourceRule,\r\n    setResourceRule,\r\n};\r\nconst v3MockFunctions = {\r\n    addMockAcrTo,\r\n    mockAcrFor,\r\n};\r\n/**\r\n * @hidden\r\n * @deprecated Please import directly from the \"acp/*\" modules.\r\n */\r\nconst acp_v3 = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, v3AcpFunctions), v3ControlFunctions), v3PolicyFunctions), v3RuleFunctions), v3MockFunctions);\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * @param thing the [[Thing]] to check to see if it's an ACP Matcher or not\r\n */\r\nfunction isMatcher(thing) {\r\n    return getIriAll(thing, rdf.type).includes(acp.Matcher);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Add a Matcher that refines the scope of a given the [[Policy]]. If an agent\r\n * requesting access to a resource is **not** present in **any** of the \"All Of\" Matchers,\r\n * they will not be granted access.\r\n *\r\n * Also see [[addAnyOfMatcherUrl]] and [[addNoneOfMatcherUrl]].\r\n *\r\n * @param policy The [[Policy]] to which the Matcher should be added.\r\n * @param matcher The Matcher to add to the policy.\r\n * @returns A new [[Policy]] clone of the original one, with the new Matcher added.\r\n * @since Not released yet.\r\n */\r\nfunction addAllOfMatcherUrl(policy, matcher) {\r\n    return addIri(policy, acp.allOf, matcher);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Removes a Matcher that refines the scope of a given the [[Policy]]. If an agent\r\n * requesting access to a resource is **not** present in **any** of the \"All Of\" Matchers,\r\n * they will not be granted access.\r\n * @param policy The [[Policy]] from which the Matcher should be removed.\r\n * @param matcher The Matcher to remove from the policy.\r\n * @returns A new [[Policy]] clone of the original one, with the Matcher removed.\r\n * @since Not released yet.\r\n */\r\nfunction removeAllOfMatcherUrl(policy, matcher) {\r\n    return removeIri(policy, acp.allOf, matcher);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Overwrites the Matcher refining the scope of a given the [[Policy]]. If an agent\r\n * requesting access to a resource is **not** present in **any** of the \"All Of\" Matchers,\r\n * they will not be granted access.\r\n * @param policy The [[Policy]] to which the Matcher should be added.\r\n * @param matcher The Matcher to set for the Policy.\r\n * @returns A new [[Policy]] clone of the original one, with the \"All Of\" Matchers replaced.\r\n * @since Not released yet.\r\n */\r\nfunction setAllOfMatcherUrl(policy, matcher) {\r\n    return setIri(policy, acp.allOf, matcher);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Get the \"All Of\" [[Matcher]]s for the given [[Policy]]\r\n * @param policy The [[policy]] from which the Matchers should be read.\r\n * @returns A list of the \"All Of\" [[Matcher]]s\r\n * @since Not released yet.\r\n */\r\nfunction getAllOfMatcherUrlAll(policy) {\r\n    return getIriAll(policy, acp.allOf);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Add a Matcher that extends the scope of a given the [[Policy]]. If an agent\r\n * requesting access to a resource is present in **any** of the \"Any Of\" Matchers,\r\n * they will be granted access.\r\n *\r\n * Also see [[addAllOfMatcherUrl]] and [[addNoneOfMatcherUrl]].\r\n *\r\n * @param policy The [[Policy]] to which the Matcher should be added.\r\n * @param matcher The Matcher to add to the policy.\r\n * @returns A new [[Policy]] clone of the original one, with the new Matcher added.\r\n * @since Not released yet.\r\n */\r\nfunction addAnyOfMatcherUrl(policy, matcher) {\r\n    return addIri(policy, acp.anyOf, matcher);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Removes a Matcher that extends the scope of a given the [[Policy]]. If an agent\r\n * requesting access to a resource is present in **any** of the \"Any Of\" Matchers,\r\n * they will be granted access.\r\n * @param policy The [[Policy]] from which the Matcher should be removed.\r\n * @param matcher The Matcher to remove from the policy.\r\n * @returns A new [[Policy]] clone of the original one, with the Matcher removed.\r\n * @since Not released yet.\r\n */\r\nfunction removeAnyOfMatcherUrl(policy, matcher) {\r\n    return removeIri(policy, acp.anyOf, matcher);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Overwrite the Matcher extending the scope of a given the [[Policy]]. If an agent\r\n * requesting access to a resource is present in **any** of the \"Any Of\" Matchers,\r\n * they will be granted access.\r\n * @param policy The [[Policy]] to which the Matcher should be added.\r\n * @param matcher The Matcher to set for the Policy.\r\n * @returns A new [[Policy]] clone of the original one, with the \"Any Of\" Matchers replaced.\r\n * @since Not released yet.\r\n */\r\nfunction setAnyOfMatcherUrl(policy, matcher) {\r\n    return setIri(policy, acp.anyOf, matcher);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Get the \"Any Of\" [[Matcher]]s for the given [[Policy]]\r\n * @param policy The [[policy]] from which the Matchers should be read.\r\n * @returns A list of the \"Any Of\" [[Matcher]]s\r\n * @since Not released yet.\r\n */\r\nfunction getAnyOfMatcherUrlAll(policy) {\r\n    return getIriAll(policy, acp.anyOf);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Add a Matcher that restricts the scope of a given the [[Policy]]. If an agent\r\n * requesting access to a resource is matched by another Matcher, but **also**\r\n * by the given Matcher, they will **not** be granted access.\r\n *\r\n * Also see [[addAllOfMatcherUrl]] and [[addAnyOfMatcherUrl]].\r\n *\r\n * @param policy The [[Policy]] to which the Matcher should be added.\r\n * @param matcher The Matcher to add to the policy.\r\n * @returns A new [[Policy]] clone of the original one, with the new Matcher added.\r\n * @since Not released yet.\r\n */\r\nfunction addNoneOfMatcherUrl(policy, matcher) {\r\n    return addIri(policy, acp.noneOf, matcher);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Removes a Matcher that restricts the scope of a given the [[Policy]]. If an agent\r\n * requesting access to a resource is matched by another Matcher, but **also**\r\n * in any of the \"None Of\" Matchers, they will **not** be granted access.\r\n *\r\n * @param policy The [[Policy]] from which the Matcher should be removed.\r\n * @param matcher The Matcher to remove from the policy.\r\n * @returns A new [[Policy]] clone of the original one, with the Matcher removed.\r\n * @since Not released yet.\r\n */\r\nfunction removeNoneOfMatcherUrl(policy, matcher) {\r\n    return removeIri(policy, acp.noneOf, matcher);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Set the Matchers restricting the scope of a given [[Policy]]. If an agent\r\n * requesting access to a resource is matched by another Matcher, but **also**\r\n * by any of the \"None Of\" Matchers, they will not be granted access.\r\n *\r\n * @param policy The [[Policy]] to which the Matcher should be added.\r\n * @param matcher The Matcher to set for the Policy.\r\n * @returns A new [[Policy]] clone of the original one, with the \"None Of\" Matchers replaced.\r\n * @since Not released yet.\r\n */\r\nfunction setNoneOfMatcherUrl(policy, matcher) {\r\n    return setIri(policy, acp.noneOf, matcher);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Get the \"None Of\" [[Matcher]]s for the given [[Policy]]\r\n * @param policy The [[policy]] from which the Matchers should be read.\r\n * @returns A list of the forbidden [[Matcher]]s\r\n * @since Not released yet.\r\n */\r\nfunction getNoneOfMatcherUrlAll(policy) {\r\n    return getIriAll(policy, acp.noneOf);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Initialise a new, empty [[Matcher]].\r\n *\r\n * @param url URL that identifies this [[Matcher]].\r\n * @since Not released yet.\r\n */\r\nfunction createMatcher(url) {\r\n    const stringUrl = internal_toIriString(url);\r\n    let matcherThing = createThing({ url: stringUrl });\r\n    matcherThing = setUrl(matcherThing, rdf.type, acp.Matcher);\r\n    return matcherThing;\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Initialise a new, empty [[ResourceMatcher]] for the given Resource.\r\n *\r\n * @param resourceWithAcr The Resource to which the new Matcher is to apply.\r\n * @param name Name that identifies this [[Matcher]].\r\n * @since Not released yet.\r\n */\r\nfunction createResourceMatcherFor(resourceWithAcr, name) {\r\n    const acr = internal_getAcr(resourceWithAcr);\r\n    const url = new URL(getSourceUrl(acr));\r\n    url.hash = `#${name}`;\r\n    let matcherThing = createThing({ url: url.href });\r\n    matcherThing = setUrl(matcherThing, rdf.type, acp.Matcher);\r\n    return matcherThing;\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Get the [[Matcher]] with the given URL from an [[SolidDataset]].\r\n *\r\n * @param matcherResource The Resource that contains the given [[Matcher]].\r\n * @param url URL that identifies this [[Matcher]].\r\n * @returns The requested [[Matcher]], if it exists, or `null` if it does not.\r\n * @since Not released yet.\r\n */\r\nfunction getMatcher(matcherResource, url) {\r\n    const foundThing = getThing(matcherResource, url);\r\n    if (foundThing === null || !isMatcher(foundThing)) {\r\n        return null;\r\n    }\r\n    return foundThing;\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Get the [[ResourceMatcher]] with the given name from an Resource's Access Control\r\n * Resource.\r\n *\r\n * @param resourceWithAcr The Resource whose Access Control Resource contains the given [[ResourceMatcher]].\r\n * @param name Name that identifies this [[ResourceMatcher]].\r\n * @returns The requested [[ResourceMatcher]], if it exists, or `null` if it does not.\r\n * @since Not released yet.\r\n */\r\nfunction getResourceMatcher(resourceWithAcr, name) {\r\n    const acr = internal_getAcr(resourceWithAcr);\r\n    const acrUrl = getSourceUrl(acr);\r\n    const url = new URL(acrUrl);\r\n    url.hash = `#${name}`;\r\n    const foundThing = getThing(acr, url.href);\r\n    if (foundThing === null || !isMatcher(foundThing)) {\r\n        return null;\r\n    }\r\n    return foundThing;\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Gets the [[Matcher]]s from a [[SolidDataset]].\r\n *\r\n * @param matcherResource The Resource that contains (zero or more) [[Matcher]]s.\r\n * @returns The [[Matcher]]s contained in this resource.\r\n * @since Not released yet.\r\n */\r\nfunction getMatcherAll(matcherResource) {\r\n    const things = getThingAll(matcherResource);\r\n    return things.filter(isMatcher);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Gets the [[ResourceMatcher]]s from a Resource's Access Control Resource.\r\n *\r\n * @param resourceWithAcr The Resource whose Access Control Resource contains (zero or more) [[ResourceMatcher]]s.\r\n * @returns The [[ResourceMatcher]]s contained in this Resource's Access Control Resource.\r\n * @since Not released yet.\r\n */\r\nfunction getResourceMatcherAll(resourceWithAcr) {\r\n    const acr = internal_getAcr(resourceWithAcr);\r\n    const things = getThingAll(acr);\r\n    return things.filter(isMatcher);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Removes the given [[Matcher]] from the given [[SolidDataset]].\r\n *\r\n * @param matcherResource The Resource that contains (zero or more) [[Matcher]]s.\r\n * @returns A new SolidDataset equal to the given Matcher Resource, but without the given Matcher.\r\n * @since Not released yet.\r\n */\r\nfunction removeMatcher(matcherResource, matcher) {\r\n    return removeThing(matcherResource, matcher);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Removes the given [[ResourceMatcher]] from the given Resource's Access Control Resource.\r\n *\r\n * @param resourceWithAcr The Resource whose Access Control Resource contains (zero or more) [[ResourceMatcher]]s.\r\n * @returns A new Resource equal to the given Resource, but without the given Matcher in its ACR.\r\n * @since Not released yet.\r\n */\r\nfunction removeResourceMatcher(resourceWithAcr, matcher) {\r\n    const acr = internal_getAcr(resourceWithAcr);\r\n    let matcherToRemove;\r\n    if (typeof matcher === \"string\") {\r\n        try {\r\n            new URL(matcher);\r\n            matcherToRemove = matcher;\r\n        }\r\n        catch (e) {\r\n            // If the given Matcher to remove is the name of the Matcher,\r\n            // resolve it to its full URL — developers usually refer to either the\r\n            // Matcher itself, or by its name, as they do not have access to the ACR\r\n            // directly.\r\n            const matcherUrl = new URL(getSourceUrl(acr));\r\n            matcherUrl.hash = `#${matcher}`;\r\n            matcherToRemove = matcherUrl.href;\r\n        }\r\n    }\r\n    else if (isNamedNode(matcher)) {\r\n        matcherToRemove = internal_toIriString(matcher);\r\n    }\r\n    else {\r\n        matcherToRemove = asUrl(matcher);\r\n    }\r\n    // Check whether the actual Matcher (i.e. with the Matcher type) exists:\r\n    const matchingMatcher = getResourceMatcher(resourceWithAcr, new URL(matcherToRemove).hash.substring(1));\r\n    if (matchingMatcher === null) {\r\n        // No such Matcher exists yet, so return the Resource+ACR unchanged:\r\n        return resourceWithAcr;\r\n    }\r\n    const updatedAcr = removeThing(acr, matchingMatcher);\r\n    const updatedResource = internal_setAcr(resourceWithAcr, updatedAcr);\r\n    return updatedResource;\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Insert the given [[Matcher]] into the given [[SolidDataset]], replacing previous\r\n * instances of that Matcher.\r\n *\r\n * @param matcherResource The Resource that contains (zero or more) [[Matcher]]s.\r\n * @returns A new SolidDataset equal to the given Matcher Resource, but with the given Matcher.\r\n * @since Not released yet.\r\n */\r\nfunction setMatcher(matcherResource, matcher) {\r\n    return setThing(matcherResource, matcher);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Insert the given [[ResourceMatcher]] into the given Resource's Access Control Resource,\r\n * replacing previous instances of that Matcher.\r\n *\r\n * @param resourceWithAcr The Resource whose Access Control Resource contains (zero or more) [[ResourceMatcher]]s.\r\n * @returns A new Resource equal to the given Resource, but with the given Matcher in its ACR.\r\n * @since Not released yet.\r\n */\r\nfunction setResourceMatcher(resourceWithAcr, matcher) {\r\n    const acr = internal_getAcr(resourceWithAcr);\r\n    const updatedAcr = setThing(acr, matcher);\r\n    const updatedResource = internal_setAcr(resourceWithAcr, updatedAcr);\r\n    return updatedResource;\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * List all the agents a [[Matcher]] applies **directly** to. This will not include agents\r\n * that are matched on a property other than their WebID.\r\n *\r\n * @param matcher The matcher from which agents are read.\r\n * @returns A list of the WebIDs of agents included in the matcher.\r\n * @since Not released yet.\r\n */\r\nfunction getAgentAll(matcher) {\r\n    return getIriAll(matcher, acp.agent).filter((agent) => agent !== acp.PublicAgent &&\r\n        agent !== acp.AuthenticatedAgent &&\r\n        agent !== acp.CreatorAgent);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Overwrite the agents the [[Matcher]] applies to with the provided agents.\r\n *\r\n * @param matcher The matcher for which agents are set.\r\n * @param agent The agent the matcher should apply to.\r\n * @returns A copy of the input matcher, applying to a different set of agents.\r\n * @since Not released yet.\r\n */\r\nfunction setAgent(matcher, agent) {\r\n    // Preserve the special agent classes authenticated and public, which we\r\n    // don't want to overwrite with this function.\r\n    const isPublic = hasPublic(matcher);\r\n    const isAuthenticated = hasAuthenticated(matcher);\r\n    const isCreator = hasCreator(matcher);\r\n    let result = setIri(matcher, acp.agent, agent);\r\n    // Restore public and authenticated\r\n    if (isPublic) {\r\n        result = setPublic(result);\r\n    }\r\n    if (isAuthenticated) {\r\n        result = setAuthenticated(result);\r\n    }\r\n    if (isCreator) {\r\n        result = setCreator(result);\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Apply the [[Matcher]] to an additional agent.\r\n *\r\n * @param matcher The [[Matcher]] to be applied to an additional agent.\r\n * @param agent The agent the [[Matcher]] should apply to.\r\n * @returns A copy of the [[Matcher]], applying to an additional agent.\r\n * @since Not released yet.\r\n */\r\nfunction addAgent(matcher, agent) {\r\n    return addIri(matcher, acp.agent, agent);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Prevent the [[Matcher]] from applying to a given agent directly. This will not\r\n * prevent the agent from matching on other properties than its WebID.\r\n *\r\n * @param matcher The [[Matcher]] that should no longer apply to a given agent.\r\n * @param agent The agent the Matcher should no longer apply to.\r\n * @returns A copy of the Matcher, not applying to the given agent.\r\n * @since Not released yet.\r\n */\r\nfunction removeAgent(matcher, agent) {\r\n    return removeIri(matcher, acp.agent, agent);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Check if the Matcher applies to any agent.\r\n *\r\n * @param matcher The Matcher checked for public access.\r\n * @returns Whether the Matcher applies to any agent or not.\r\n * @since Not released yet.\r\n */\r\nfunction hasPublic(matcher) {\r\n    return (getIriAll(matcher, acp.agent).filter((agent) => agent === acp.PublicAgent)\r\n        .length > 0);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Set a Matcher to apply to any Agent.\r\n *\r\n * @param matcher The Matcher being modified.\r\n * @returns A copy of the Matcher, updated to apply to any agent.\r\n * @since Not released yet.\r\n */\r\nfunction setPublic(matcher) {\r\n    // The second argument should not be part of the function signature,\r\n    // so it's not in the parameter list:\r\n    // eslint-disable-next-line prefer-rest-params\r\n    if (typeof arguments === \"object\" && typeof arguments[1] === \"boolean\") {\r\n        throw new Error(\"The function `setPublic` no longer takes a second parameter. It is now used together with `removePublic` instead.\");\r\n    }\r\n    return addIri(matcher, acp.agent, acp.PublicAgent);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Set a Matcher to no longer apply to any Agent.\r\n *\r\n * @param matcher The Matcher being modified.\r\n * @returns A copy of the Matcher, updated to no longer apply to any agent.\r\n * @since Not released yet.\r\n */\r\nfunction removePublic(matcher) {\r\n    return removeIri(matcher, acp.agent, acp.PublicAgent);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Check if the Matcher applies to any authenticated agent.\r\n *\r\n * @param matcher The Matcher checked for authenticated access.\r\n * @returns Whether the Matcher applies to any authenticated agent or not.\r\n * @since Not released yet.\r\n */\r\nfunction hasAuthenticated(matcher) {\r\n    return (getIriAll(matcher, acp.agent).filter((agent) => agent === acp.AuthenticatedAgent).length > 0);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Set a Matcher to apply to any authenticated Agent.\r\n *\r\n * @param matcher The Matcher being modified.\r\n * @returns A copy of the Matcher, updated to apply to any authenticated Agent.\r\n * @since Not released yet.\r\n */\r\nfunction setAuthenticated(matcher) {\r\n    // The second argument should not be part of the function signature,\r\n    // so it's not in the parameter list:\r\n    // eslint-disable-next-line prefer-rest-params\r\n    if (typeof arguments === \"object\" && typeof arguments[1] === \"boolean\") {\r\n        throw new Error(\"The function `setAuthenticated` no longer takes a second parameter. It is now used together with `removeAuthenticated` instead.\");\r\n    }\r\n    return addIri(matcher, acp.agent, acp.AuthenticatedAgent);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Set a Matcher to no longer apply to any authenticated Agent.\r\n *\r\n * @param matcher The Matcher being modified.\r\n * @returns A copy of the Matcher, updated to apply/not apply to any authenticated agent.\r\n * @since Not released yet.\r\n */\r\nfunction removeAuthenticated(matcher) {\r\n    return removeIri(matcher, acp.agent, acp.AuthenticatedAgent);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Check if the Matcher applies to the creator of the Resource.\r\n *\r\n * @param matcher The Matcher checked for authenticated access.\r\n * @returns Whether the Matcher applies to the creator of the Resource or not.\r\n * @since Not released yet.\r\n */\r\nfunction hasCreator(matcher) {\r\n    return (getIriAll(matcher, acp.agent).filter((agent) => agent === acp.CreatorAgent)\r\n        .length > 0);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Set a Matcher to apply to the creator of a Resource.\r\n *\r\n * @param matcher The Matcher being modified.\r\n * @returns A copy of the Matcher, updated to apply to the creator of a Resource.\r\n * @since Not released yet.\r\n */\r\nfunction setCreator(matcher) {\r\n    // The second argument should not be part of the function signature,\r\n    // so it's not in the parameter list:\r\n    // eslint-disable-next-line prefer-rest-params\r\n    if (typeof arguments === \"object\" && typeof arguments[1] === \"boolean\") {\r\n        throw new Error(\"The function `setCreator` no longer takes a second parameter. It is now used together with `removeCreator` instead.\");\r\n    }\r\n    return addIri(matcher, acp.agent, acp.CreatorAgent);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Set a Matcher to no longer apply to the creator of a Resource.\r\n *\r\n * @param matcher The Matcher being modified.\r\n * @returns A copy of the Matcher, updated to apply/not apply to the creator of a Resource.\r\n * @since Not released yet.\r\n */\r\nfunction removeCreator(matcher) {\r\n    return removeIri(matcher, acp.agent, acp.CreatorAgent);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * List all the clients a [[Matcher]] applies **directly** to. This will not include\r\n * specific client classes, such as public clients.\r\n *\r\n * @param matcher The Matcher from which clients are read.\r\n * @returns A list of the WebIDs of clients included in the Matcher.\r\n * @since Not released yet.\r\n */\r\nfunction getClientAll(matcher) {\r\n    return getIriAll(matcher, acp.client).filter((client) => client !== solid.PublicOidcClient);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Overwrite the clients the [[Matcher]] applies to with the provided Client.\r\n *\r\n * @param matcher The Matcher for which clients are set.\r\n * @param client The Client the Matcher should apply to.\r\n * @returns A copy of the input Matcher, applying to a different set of Clients.\r\n * @since Not released yet.\r\n */\r\nfunction setClient(matcher, client) {\r\n    // Preserve the special \"any client\" class, which we\r\n    // don't want to overwrite with this function.\r\n    const anyClientEnabled = hasAnyClient(matcher);\r\n    let result = setIri(matcher, acp.client, client);\r\n    // Restore the \"any client\" class\r\n    if (anyClientEnabled) {\r\n        result = setAnyClient(result);\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Apply the [[Matcher]] to an additional Client.\r\n *\r\n * @param matcher The [[Matcher]] to be applied to an additional Client.\r\n * @param client The Client the [[Matcher]] should apply to.\r\n * @returns A copy of the [[Matcher]], applying to an additional Client.\r\n * @since Not released yet.\r\n */\r\nfunction addClient(matcher, client) {\r\n    return addIri(matcher, acp.client, client);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Prevent the [[Matcher]] from applying to a given Client directly.\r\n *\r\n * @param matcher The [[Matcher]] that should no longer apply to a given Client.\r\n * @param client The Client the Matcher should no longer apply to.\r\n * @returns A copy of the Matcher, not applying to the given Client.\r\n * @since Not released yet.\r\n */\r\nfunction removeClient(matcher, client) {\r\n    return removeIri(matcher, acp.client, client);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Check if the Matcher applies to any client, i.e. all the applications\r\n * regardless of their identifier.\r\n *\r\n * @param matcher The Matcher checked for authenticated access.\r\n * @returns Whether the Matcher applies to public clients.\r\n * @since Not released yet.\r\n */\r\nfunction hasAnyClient(matcher) {\r\n    return (getIriAll(matcher, acp.client).filter((client) => client === solid.PublicOidcClient).length > 0);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Make the [[Matcher]] apply to any client application.\r\n *\r\n * @param matcher The Matcher for which clients are set.\r\n * @returns A copy of the Matcher, updated to apply to any client\r\n * @since Not released yet.\r\n */\r\nfunction setAnyClient(matcher) {\r\n    return addIri(matcher, acp.client, solid.PublicOidcClient);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Make the [[Matcher]] no longer apply to any client application.\r\n *\r\n * @param matcher The Matcher for which clients are set.\r\n * @returns A copy of the Matcher, updated to no longer apply to any client\r\n * @since Not released yet.\r\n */\r\nfunction removeAnyClient(matcher) {\r\n    return removeIri(matcher, acp.client, solid.PublicOidcClient);\r\n}\r\n/**\r\n * Gets a human-readable representation of the given [[Matcher]] to aid debugging.\r\n *\r\n * Note that changes to the exact format of the return value are not considered a breaking change;\r\n * it is intended to aid in debugging, not as a serialisation method that can be reliably parsed.\r\n *\r\n * @param matcher The Matcher to get a human-readable representation of.\r\n * @since Not released yet.\r\n */\r\nfunction matcherAsMarkdown(matcher) {\r\n    let markdown = `## Matcher: ${asUrl(matcher)}\\n\\n`;\r\n    let targetEnumeration = \"\";\r\n    if (hasPublic(matcher)) {\r\n        targetEnumeration += \"- Everyone\\n\";\r\n    }\r\n    if (hasAuthenticated(matcher)) {\r\n        targetEnumeration += \"- All authenticated agents\\n\";\r\n    }\r\n    if (hasCreator(matcher)) {\r\n        targetEnumeration += \"- The creator of this resource\\n\";\r\n    }\r\n    if (hasAnyClient(matcher)) {\r\n        targetEnumeration += \"- Users of any client application\\n\";\r\n    }\r\n    const targetAgents = getAgentAll(matcher);\r\n    if (targetAgents.length > 0) {\r\n        targetEnumeration += \"- The following agents:\\n  - \";\r\n        targetEnumeration += targetAgents.join(\"\\n  - \") + \"\\n\";\r\n    }\r\n    const targetClients = getClientAll(matcher);\r\n    if (targetClients.length > 0) {\r\n        targetEnumeration += \"- Users of the following client applications:\\n  - \";\r\n        targetEnumeration += targetClients.join(\"\\n  - \") + \"\\n\";\r\n    }\r\n    markdown +=\r\n        targetEnumeration.length > 0\r\n            ? \"This Matcher matches:\\n\" + targetEnumeration\r\n            : \"<empty>\\n\";\r\n    return markdown;\r\n}\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nconst v4AcpFunctions = {\r\n    getFileWithAccessDatasets,\r\n    getFileWithAcr,\r\n    getReferencedPolicyUrlAll,\r\n    getResourceInfoWithAccessDatasets,\r\n    getResourceInfoWithAcr,\r\n    getSolidDatasetWithAccessDatasets,\r\n    getSolidDatasetWithAcr,\r\n    hasAccessibleAcr,\r\n    saveAcrFor,\r\n};\r\nconst v4ControlFunctions = {\r\n    acrAsMarkdown,\r\n    addAcrPolicyUrl,\r\n    addMemberAcrPolicyUrl,\r\n    addMemberPolicyUrl,\r\n    addPolicyUrl,\r\n    getAcrPolicyUrlAll,\r\n    getMemberAcrPolicyUrlAll,\r\n    getMemberPolicyUrlAll,\r\n    getPolicyUrlAll,\r\n    hasLinkedAcr,\r\n    removeAcrPolicyUrl,\r\n    removeAcrPolicyUrlAll,\r\n    removeMemberAcrPolicyUrl,\r\n    removeMemberAcrPolicyUrlAll,\r\n    removeMemberPolicyUrl,\r\n    removeMemberPolicyUrlAll,\r\n    removePolicyUrl,\r\n    removePolicyUrlAll,\r\n};\r\nconst v4PolicyFunctions = {\r\n    createPolicy,\r\n    getAllowModes: getAllowModesV2,\r\n    getDenyModes: getDenyModesV2,\r\n    getPolicy,\r\n    getPolicyAll,\r\n    policyAsMarkdown,\r\n    removePolicy,\r\n    setAllowModes: setAllowModesV2,\r\n    setDenyModes: setDenyModesV2,\r\n    setPolicy,\r\n    createResourcePolicyFor,\r\n    getResourceAcrPolicy,\r\n    getResourceAcrPolicyAll,\r\n    getResourcePolicy,\r\n    getResourcePolicyAll,\r\n    removeResourceAcrPolicy,\r\n    removeResourcePolicy,\r\n    setResourceAcrPolicy,\r\n    setResourcePolicy,\r\n};\r\nconst v4MatcherFunctions = {\r\n    addAgent,\r\n    createMatcher,\r\n    getAgentAll,\r\n    getMatcher,\r\n    getMatcherAll,\r\n    removeAgent,\r\n    removeMatcher,\r\n    matcherAsMarkdown,\r\n    setAgent,\r\n    setMatcher,\r\n    addClient,\r\n    getClientAll,\r\n    hasAnyClient,\r\n    removeClient,\r\n    setAnyClient,\r\n    setClient,\r\n    removeAnyClient,\r\n    hasAuthenticated,\r\n    hasCreator,\r\n    hasPublic,\r\n    setAuthenticated,\r\n    setCreator,\r\n    setPublic,\r\n    removeAuthenticated,\r\n    removeCreator,\r\n    removePublic,\r\n    getAnyOfMatcherUrlAll,\r\n    addAnyOfMatcherUrl,\r\n    removeAnyOfMatcherUrl,\r\n    setAnyOfMatcherUrl,\r\n    getAllOfMatcherUrlAll,\r\n    addAllOfMatcherUrl,\r\n    removeAllOfMatcherUrl,\r\n    setAllOfMatcherUrl,\r\n    getNoneOfMatcherUrlAll,\r\n    addNoneOfMatcherUrl,\r\n    removeNoneOfMatcherUrl,\r\n    setNoneOfMatcherUrl,\r\n    createResourceMatcherFor,\r\n    getResourceMatcher,\r\n    getResourceMatcherAll,\r\n    removeResourceMatcher,\r\n    setResourceMatcher,\r\n};\r\nconst v4MockFunctions = {\r\n    addMockAcrTo,\r\n    mockAcrFor,\r\n};\r\n/**\r\n * @hidden\r\n * @deprecated Please import directly from the \"acp/*\" modules.\r\n */\r\nconst acp_v4 = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, v4AcpFunctions), v4ControlFunctions), v4PolicyFunctions), v4MatcherFunctions), v4MockFunctions);\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nconst knownActorRelations$1 = [acp.agent];\r\n/**\r\n * Get an overview of what access is defined for a given actor in a Resource's Access Control Resource.\r\n *\r\n * This will only return a value if all relevant access is defined in just the Resource's Access\r\n * Control Resource; in other words, if an Access Policy or Access Matcher applies that is re-used for\r\n * other Resources, this function will not be able to determine the access relevant to this actor.\r\n *\r\n * Additionally, this only considers access given _explicitly_ to the given actor, i.e. without\r\n * additional conditions.\r\n *\r\n * In other words, this function will generally understand and return the access as set by\r\n * [[internal_setActorAccess]], but not understand more convoluted Policies.\r\n *\r\n * @param acpData All Access Control Policies and Matchers that apply to a particular Resource.\r\n * @param actorRelation What type of actor (e.g. acp:agent) you want to get the access for.\r\n * @param actor Which instance of the given actor type you want to get the access for.\r\n * @returns What Access modes are granted to the given actor explicitly, or null if it could not be determined.\r\n */\r\nfunction internal_getActorAccess$1(acpData, actorRelation, actor) {\r\n    if (acpData.inaccessibleUrls.length > 0) {\r\n        // If we can't see all access data,\r\n        // we can't reliably determine what access the given actor has:\r\n        return null;\r\n    }\r\n    const applicableAcrPolicies = acpData.acrPolicies.filter((policy) => policyAppliesTo$1(policy, actorRelation, actor, acpData));\r\n    const applicablePolicies = acpData.policies.filter((policy) => policyAppliesTo$1(policy, actorRelation, actor, acpData));\r\n    const initialAccess = {\r\n        read: false,\r\n        append: false,\r\n        write: false,\r\n        controlRead: false,\r\n        controlWrite: false,\r\n    };\r\n    // All allowed reading and writing defined in ACR policies\r\n    // determines whether the `controlRead` and `controlWrite` statuses are `true`.\r\n    const allowedAcrAccess = applicableAcrPolicies.reduce((acc, policy) => {\r\n        const allAllowedAccess = Object.assign({}, acc);\r\n        const allowModes = getAllowModesV2(policy);\r\n        if (allowModes.read) {\r\n            allAllowedAccess.controlRead = true;\r\n        }\r\n        if (allowModes.write) {\r\n            allAllowedAccess.controlWrite = true;\r\n        }\r\n        return allAllowedAccess;\r\n    }, initialAccess);\r\n    // Then allowed reading, appending and writing in regular policies\r\n    // determines whether the respective status is `true`.\r\n    const withAllowedAccess = applicablePolicies.reduce((acc, policy) => {\r\n        const allAllowedAccess = Object.assign({}, acc);\r\n        const allowModes = getAllowModesV2(policy);\r\n        if (allowModes.read) {\r\n            allAllowedAccess.read = true;\r\n        }\r\n        if (allowModes.append) {\r\n            allAllowedAccess.append = true;\r\n        }\r\n        if (allowModes.write) {\r\n            allAllowedAccess.write = true;\r\n        }\r\n        return allAllowedAccess;\r\n    }, allowedAcrAccess);\r\n    // At this point, everything that has been explicitly allowed is true.\r\n    // However, it could still be overridden by access that is explicitly denied.\r\n    // Starting with `controlRead` and `controlWrite`,\r\n    // by inspecting denied reading and writing defined in the ACR policies.\r\n    const withAcrDeniedAccess = applicableAcrPolicies.reduce((acc, policy) => {\r\n        const allDeniedAccess = Object.assign({}, acc);\r\n        const denyModes = getDenyModesV2(policy);\r\n        if (denyModes.read === true) {\r\n            allDeniedAccess.controlRead = false;\r\n        }\r\n        if (denyModes.write === true) {\r\n            allDeniedAccess.controlWrite = false;\r\n        }\r\n        return allDeniedAccess;\r\n    }, withAllowedAccess);\r\n    // And finally, we set to `false` those access modes that are explicitly denied\r\n    // in the regular policies:\r\n    const withDeniedAccess = applicablePolicies.reduce((acc, policy) => {\r\n        const allDeniedAccess = Object.assign({}, acc);\r\n        const denyModes = getDenyModesV2(policy);\r\n        if (denyModes.read === true) {\r\n            allDeniedAccess.read = false;\r\n        }\r\n        if (denyModes.append === true) {\r\n            allDeniedAccess.append = false;\r\n        }\r\n        if (denyModes.write === true) {\r\n            allDeniedAccess.write = false;\r\n        }\r\n        return allDeniedAccess;\r\n    }, withAcrDeniedAccess);\r\n    return withDeniedAccess;\r\n}\r\n/**\r\n * Get an overview of what access is defined for a given Agent in a Resource's Access Control Resource.\r\n *\r\n * This will only return a value if all relevant access is defined in just the Resource's Access\r\n * Control Resource; in other words, if an Access Policy or Access Matcher applies that is re-used for\r\n * other Resources, this function will not be able to determine the access relevant to this Agent.\r\n *\r\n * Additionally, this only considers access given _explicitly_ to the given Agent, i.e. without\r\n * additional conditions.\r\n *\r\n * In other words, this function will generally understand and return the access as set by\r\n * [[internal_setAgentAccess]], but not understand more convoluted Policies.\r\n *\r\n * @param acpData All Access Control Policies and Matchers that apply to a particular Resource.\r\n * @param webId WebID of the Agent you want to get the access for.\r\n * @returns What Access modes are granted to the given Agent explicitly, or null if it could not be determined.\r\n */\r\nfunction internal_getAgentAccess$1(acpData, webId) {\r\n    return internal_getActorAccess$1(acpData, acp.agent, webId);\r\n}\r\n/**\r\n * Get an overview of what access is defined for everybody in a Resource's Access Control Resource.\r\n *\r\n * This will only return a value if all relevant access is defined in just the Resource's Access\r\n * Control Resource; in other words, if an Access Policy or Access Matcher applies that is re-used for\r\n * other Resources, this function will not be able to determine the access relevant to everybody.\r\n *\r\n * Additionally, this only considers access given _explicitly_ to everybody, i.e. without\r\n * additional conditions.\r\n *\r\n * In other words, this function will generally understand and return the access as set by\r\n * [[internal_setPublicAccess]], but not understand more convoluted Policies.\r\n *\r\n * @param acpData All Access Control Policies and Matchers that apply to a particular Resource.\r\n * @returns What Access modes are granted to everyone explicitly, or null if it could not be determined.\r\n */\r\nfunction internal_getPublicAccess$1(acpData) {\r\n    return internal_getActorAccess$1(acpData, acp.agent, acp.PublicAgent);\r\n}\r\nfunction policyAppliesTo$1(policy, actorRelation, actor, acpData) {\r\n    const allowModes = getIriAll(policy, acp.allow);\r\n    const denyModes = getIriAll(policy, acp.deny);\r\n    if (allowModes.length + denyModes.length === 0) {\r\n        // A Policy that does not specify access modes does not do anything:\r\n        return false;\r\n    }\r\n    // Note: the non-null assertions (`!`) here should be valid because\r\n    //       the caller of `policyAppliesTo` should already have validated that\r\n    //       the return value of internal_getPoliciesAndMatchers() did not have any\r\n    //       inaccessible URLs, so we should be able to find every Matcher.\r\n    const allOfMatchers = getAllOfMatcherUrlAll(policy).map((matcherUrl) => acpData.matchers.find((matcher) => asIri(matcher) === matcherUrl));\r\n    const anyOfMatchers = getAnyOfMatcherUrlAll(policy).map((matcherUrl) => acpData.matchers.find((matcher) => asIri(matcher) === matcherUrl));\r\n    const noneOfMatchers = getNoneOfMatcherUrlAll(policy).map((matcherUrl) => acpData.matchers.find((matcher) => asIri(matcher) === matcherUrl));\r\n    // We assume that this Policy applies if this specific actor is mentioned\r\n    // and no further restrictions are in place.\r\n    // (In other words, the Policy may apply to others *in addition to* this\r\n    // actor, but if it applies to this actor *unless* some other condition holds,\r\n    // we cannot be sure whether it will apply to this actor.)\r\n    // This means that:\r\n    return (\r\n    // Every existing allOf Matcher explicitly applies explicitly to this given actor:\r\n    allOfMatchers.every((matcher) => matcherAppliesTo(matcher, actorRelation, actor)) &&\r\n        // If there are anyOf Matchers, at least one applies explicitly to this actor:\r\n        (anyOfMatchers.length === 0 ||\r\n            anyOfMatchers.some((matcher) => matcherAppliesTo(matcher, actorRelation, actor))) &&\r\n        // There is at least one allOf or anyOf Matcher:\r\n        allOfMatchers.length + anyOfMatchers.length > 0 &&\r\n        // No further restrictions are in place that make this sometimes not apply\r\n        // to the given actor:\r\n        noneOfMatchers.length === 0);\r\n}\r\nfunction policyConflictsWith$1(policy, otherAccess) {\r\n    const allowModes = getIriAll(policy, acp.allow);\r\n    const denyModes = getIriAll(policy, acp.deny);\r\n    return ((otherAccess.read === true &&\r\n        denyModes.includes(internal_accessModeIriStrings.read)) ||\r\n        (otherAccess.read === false &&\r\n            allowModes.includes(internal_accessModeIriStrings.read) &&\r\n            !denyModes.includes(internal_accessModeIriStrings.read)) ||\r\n        (otherAccess.append === true &&\r\n            denyModes.includes(internal_accessModeIriStrings.append)) ||\r\n        (otherAccess.append === false &&\r\n            allowModes.includes(internal_accessModeIriStrings.append) &&\r\n            !denyModes.includes(internal_accessModeIriStrings.append)) ||\r\n        (otherAccess.write === true &&\r\n            denyModes.includes(internal_accessModeIriStrings.write)) ||\r\n        (otherAccess.write === false &&\r\n            allowModes.includes(internal_accessModeIriStrings.write) &&\r\n            !denyModes.includes(internal_accessModeIriStrings.write)));\r\n}\r\nfunction matcherAppliesTo(matcher, actorRelation, actor) {\r\n    return getIriAll(matcher, actorRelation).includes(actor);\r\n}\r\n/**\r\n * Get a set of all actors mentioned in an ACR by active Matchers (i.e. that are\r\n * referenced by Policies referenced by the ACR Control, and therefore that\r\n * effectively apply).\r\n *\r\n * @param acpData All Access Control Policies and Matchers that apply to a particular Resource.\r\n * @param actorRelation\r\n */\r\nfunction internal_findActorAll$1(acpData, actorRelation) {\r\n    const actors = new Set();\r\n    // This code could be prettier using flat(), which isn't supported by nodeJS 10.\r\n    // If you read this comment after April 2021, feel free to refactor.\r\n    acpData.matchers.forEach((matcher) => {\r\n        getIriAll(matcher, actorRelation)\r\n            .filter((iri) => ![\r\n            acp.PublicAgent,\r\n            acp.CreatorAgent,\r\n            acp.AuthenticatedAgent,\r\n        ].includes(iri) || actorRelation != acp.agent)\r\n            .forEach((iri) => actors.add(iri));\r\n    });\r\n    return actors;\r\n}\r\n/**\r\n * Iterate through all the actors active for an ACR, and list all of their access.\r\n * @param acpData All Access Control Policies and Matchers that apply to a particular Resource.\r\n * @param actorRelation The type of actor we want to list access for\r\n * @returns A map with each actor access indexed by their URL, or null if some\r\n * external policies are referenced.\r\n */\r\nfunction internal_getActorAccessAll$1(acpData, actorRelation) {\r\n    if (acpData.inaccessibleUrls.length > 0) {\r\n        // If we can't see all access data,\r\n        // we can't reliably determine what access actors of the given type have:\r\n        return null;\r\n    }\r\n    const result = {};\r\n    const actors = internal_findActorAll$1(acpData, actorRelation);\r\n    actors.forEach((iri) => {\r\n        // The type assertion holds, because if internal_getActorAccess were null,\r\n        // we would have returned {} already.\r\n        const access = internal_getActorAccess$1(acpData, actorRelation, iri);\r\n        result[iri] = access;\r\n    });\r\n    return result;\r\n}\r\n/**\r\n * Get an overview of what access are defined for all Agents in a Resource's Access Control Resource.\r\n *\r\n * This will only return a value if all relevant access is defined in just the Resource's Access\r\n * Control Resource; in other words, if an Access Policy or Access Matcher applies that is re-used for\r\n * other Resources, this function will not be able to determine the access relevant to the mentionned\r\n * Agents.\r\n *\r\n * Additionally, this only considers access given _explicitly_ to individual Agents, i.e. without\r\n * additional conditions.\r\n *\r\n * In other words, this function will generally understand and return the access as set by\r\n * [[internal_setAgentAccess]], but not understand more convoluted Policies.\r\n *\r\n * @param acpData All Access Control Policies and Matchers that apply to a particular Resource.\r\n * @returns A map with each Agent's access indexed by their WebID, or null if some\r\n * external policies are referenced.\r\n */\r\nfunction internal_getAgentAccessAll$1(acpData) {\r\n    return internal_getActorAccessAll$1(acpData, acp.agent);\r\n}\r\n/**\r\n * Set access to a Resource for a specific actor.\r\n *\r\n * This function adds the relevant Access Control Policies and Matchers to a\r\n * Resource's Access Control Resource to define the given access for the given\r\n * actor specifically. In other words, it can, for example, add Policies that\r\n * give the general Public Read access to the Resource. However, if other\r\n * Policies specify that everyone is *denied* Read access *except* for a\r\n * particular Agent, then that will be left intact.\r\n * This means that, unless *only* this module's functions are used to manipulate\r\n * access to this Resource, the set access might not be equal to the effective\r\n * access for an agent matching the given actor.\r\n *\r\n * There are a number of preconditions that have to be fulfilled for this\r\n * function to work:\r\n * - Access to the Resource is determined via an Access Control Resource.\r\n * - The Resource's Access Control Resource does not refer to (Policies or Matchers\r\n *   in) other Resources.\r\n * - The current user has access to the Resource's Access Control Resource.\r\n *\r\n * If those conditions do not hold, this function will return `null`.\r\n *\r\n * Additionally, take note that the given access will only be applied to the\r\n * given Resource; if that Resource is a Container, access will have to be set\r\n * for its contained Resources independently.\r\n *\r\n * @param resource Resource that was fetched together with its linked Access Control Resource.\r\n * @param acpData All Access Control Policies and Matchers that apply to a particular Resource.\r\n * @param actorRelation What type of actor (e.g. acp:agent) you want to set the access for.\r\n * @param actor Which instance of the given actor type you want to set the access for.\r\n * @param access What access (read, append, write, controlRead, controlWrite) to set for the given actor. `true` to allow, `false` to deny, and `undefined` to leave unchanged.\r\n * @returns The Resource with the updated Access Control Resource attached, if updated successfully, or `null` if not.\r\n */\r\nfunction internal_setActorAccess$1(resource, acpData, actorRelation, actor, access) {\r\n    var _a, _b, _c, _d, _e;\r\n    if (!hasAccessibleAcr(resource) || acpData.inaccessibleUrls.length > 0) {\r\n        return null;\r\n    }\r\n    // Get the access that currently applies to the given actor\r\n    const existingAccess = internal_getActorAccess$1(acpData, actorRelation, actor);\r\n    /* istanbul ignore if: It returns null if the ACR has inaccessible Policies, which should happen since we already check for that above. */\r\n    if (existingAccess === null) {\r\n        return null;\r\n    }\r\n    // Get all Policies that apply specifically to the given actor\r\n    const applicableAcrPolicies = acpData.acrPolicies.filter((policy) => policyAppliesTo$1(policy, actorRelation, actor, acpData));\r\n    const applicablePolicies = acpData.policies.filter((policy) => policyAppliesTo$1(policy, actorRelation, actor, acpData));\r\n    // We only need to override Policies that define access other than what we want:\r\n    const conflictingAcrPolicies = applicableAcrPolicies.filter((policy) => policyConflictsWith$1(policy, {\r\n        read: access.controlRead,\r\n        write: access.controlWrite,\r\n    }));\r\n    const conflictingPolicies = applicablePolicies.filter((policy) => policyConflictsWith$1(policy, {\r\n        read: access.read,\r\n        append: access.append,\r\n        write: access.write,\r\n    }));\r\n    // For every Policy that applies specifically to the given Actor, but _also_\r\n    // to another actor (i.e. that applies using an anyOf Matcher, or a Matcher that\r\n    // mentions both the given and another actor)...\r\n    const otherActorAcrPolicies = conflictingAcrPolicies.filter((acrPolicy) => policyHasOtherActors$1(acrPolicy, actorRelation, actor, acpData));\r\n    const otherActorPolicies = conflictingPolicies.filter((policy) => policyHasOtherActors$1(policy, actorRelation, actor, acpData));\r\n    // ...check what access the current actor would have if we removed them...\r\n    const acpDataWithPoliciesExcluded = Object.assign(Object.assign({}, acpData), { acrPolicies: acpData.acrPolicies.filter((acrPolicy) => !otherActorAcrPolicies.includes(acrPolicy)), policies: acpData.policies.filter((policy) => !otherActorPolicies.includes(policy)) });\r\n    const remainingAccess = internal_getActorAccess$1(acpDataWithPoliciesExcluded, actorRelation, actor);\r\n    /* istanbul ignore if: It returns null if the ACR has inaccessible Policies, which should happen since we already check for that at the start. */\r\n    if (remainingAccess === null) {\r\n        return null;\r\n    }\r\n    // ...add copies of those Policies and their Matchers, but excluding the given actor...\r\n    let updatedResource = resource;\r\n    otherActorAcrPolicies.forEach((acrPolicy) => {\r\n        const [policyCopy, matcherCopies] = copyPolicyExcludingActor$1(acrPolicy, resource, acpData, actorRelation, actor);\r\n        updatedResource = setResourceAcrPolicy(updatedResource, policyCopy);\r\n        updatedResource = matcherCopies.reduce(setResourceMatcher, updatedResource);\r\n    });\r\n    otherActorPolicies.forEach((policy) => {\r\n        const [policyCopy, matcherCopies] = copyPolicyExcludingActor$1(policy, resource, acpData, actorRelation, actor);\r\n        updatedResource = setResourcePolicy(updatedResource, policyCopy);\r\n        updatedResource = matcherCopies.reduce(setResourceMatcher, updatedResource);\r\n    });\r\n    // ...add a new Policy that applies the given access,\r\n    // and the previously applying access for access modes that were undefined...\r\n    const newMatcherName = `matcher_${encodeURIComponent(`${actorRelation}_${actor}`)}`;\r\n    let newMatcher = createResourceMatcherFor(resource, newMatcherName);\r\n    newMatcher = setIri(newMatcher, actorRelation, actor);\r\n    const newControlReadAccess = (_a = access.controlRead) !== null && _a !== void 0 ? _a : existingAccess.controlRead;\r\n    const newControlWriteAccess = (_b = access.controlWrite) !== null && _b !== void 0 ? _b : existingAccess.controlWrite;\r\n    let acrPoliciesToUnapply = otherActorAcrPolicies;\r\n    // Only replace existing Policies if the defined access actually changes:\r\n    if (newControlReadAccess !== remainingAccess.controlRead ||\r\n        newControlWriteAccess !== remainingAccess.controlWrite) {\r\n        const newAcrPolicyName = `acr_policy` +\r\n            `_${encodeURIComponent(`${actorRelation}_${actor}`)}` +\r\n            `_${Date.now()}_${Math.random()}`;\r\n        let newAcrPolicy = createResourcePolicyFor(resource, newAcrPolicyName);\r\n        newAcrPolicy = setAllowModesV2(newAcrPolicy, {\r\n            read: newControlReadAccess === true,\r\n            append: false,\r\n            write: newControlWriteAccess === true,\r\n        });\r\n        newAcrPolicy = addIri(newAcrPolicy, acp.allOf, newMatcher);\r\n        updatedResource = setResourceAcrPolicy(updatedResource, newAcrPolicy);\r\n        updatedResource = setResourceMatcher(updatedResource, newMatcher);\r\n        // If we don't have to set new access, we only need to unapply the\r\n        // ACR Policies that applied to both the given actor and other actors\r\n        // (because they have been replaced by clones not mentioning the given\r\n        // actor). Hence `policiesToUnApply` is initialised to `otherActorPolicies`.\r\n        // However, if we're in this if branch, that means we also had to replace\r\n        // Policies that defined access for just this actor, so we'll have to remove\r\n        // all Policies mentioning this actor:\r\n        acrPoliciesToUnapply = conflictingAcrPolicies;\r\n    }\r\n    const newReadAccess = (_c = access.read) !== null && _c !== void 0 ? _c : existingAccess.read;\r\n    const newAppendAccess = (_d = access.append) !== null && _d !== void 0 ? _d : existingAccess.append;\r\n    const newWriteAccess = (_e = access.write) !== null && _e !== void 0 ? _e : existingAccess.write;\r\n    let policiesToUnapply = otherActorPolicies;\r\n    // Only replace existing Policies if the defined access actually changes:\r\n    if (newReadAccess !== remainingAccess.read ||\r\n        newAppendAccess !== remainingAccess.append ||\r\n        newWriteAccess !== remainingAccess.write) {\r\n        const newPolicyName = `policy` +\r\n            `_${encodeURIComponent(`${actorRelation}_${actor}`)}` +\r\n            `_${Date.now()}_${Math.random()}`;\r\n        let newPolicy = createResourcePolicyFor(resource, newPolicyName);\r\n        newPolicy = setAllowModesV2(newPolicy, {\r\n            read: newReadAccess === true,\r\n            append: newAppendAccess === true,\r\n            write: newWriteAccess === true,\r\n        });\r\n        newPolicy = addIri(newPolicy, acp.allOf, newMatcher);\r\n        updatedResource = setResourcePolicy(updatedResource, newPolicy);\r\n        updatedResource = setResourceMatcher(updatedResource, newMatcher);\r\n        // If we don't have to set new access, we only need to unapply the\r\n        // Policies that applied to both the given actor and other actors (because\r\n        // they have been replaced by clones not mentioning the given actor). Hence\r\n        // `policiesToUnApply` is initialised to `otherActorPolicies`.\r\n        // However, if we're in this if branch, that means we also had to replace\r\n        // Policies that defined access for just this actor, so we'll have to remove\r\n        // all Policies mentioning this actor:\r\n        policiesToUnapply = conflictingPolicies;\r\n    }\r\n    // ...then remove existing Policy URLs that mentioned both the given actor\r\n    // and other actors from the given Resource and apply the new ones (but do not\r\n    // remove the actual old Policies - they might still apply to other Resources!).\r\n    acrPoliciesToUnapply.forEach((previouslyApplicableAcrPolicy) => {\r\n        updatedResource = removeAcrPolicyUrl(updatedResource, asIri(previouslyApplicableAcrPolicy));\r\n    });\r\n    policiesToUnapply.forEach((previouslyApplicablePolicy) => {\r\n        updatedResource = removePolicyUrl(updatedResource, asIri(previouslyApplicablePolicy));\r\n    });\r\n    return updatedResource;\r\n}\r\n/**\r\n * Set access to a Resource for a specific Agent.\r\n *\r\n * This function adds the relevant Access Control Policies and Matchers to a\r\n * Resource's Access Control Resource to define the given access for the given\r\n * Agent specifically. In other words, it can, for example, add Policies that\r\n * give a particular Agent Read access to the Resource. However, if other\r\n * Policies specify that that Agent is *denied* Read access *except* if they\r\n * match on some other characteristic, then that will be left intact.\r\n * This means that, unless *only* this function is used to manipulate access to\r\n * this Resource, the set access might not be equal to the effective access for\r\n * the given Agent.\r\n *\r\n * There are a number of preconditions that have to be fulfilled for this\r\n * function to work:\r\n * - Access to the Resource is determined via an Access Control Resource.\r\n * - The Resource's Access Control Resource does not refer to (Policies or Matchers\r\n *   in) other Resources.\r\n * - The current user has access to the Resource's Access Control Resource.\r\n *\r\n * If those conditions do not hold, this function will return `null`.\r\n *\r\n * Additionally, take note that the given access will only be applied to the\r\n * given Resource; if that Resource is a Container, access will have to be set\r\n * for its contained Resources independently.\r\n *\r\n * @param resource Resource that was fetched together with its linked Access Control Resource.\r\n * @param acpData All Access Control Policies and Matchers that apply to a particular Resource.\r\n * @param webId Which Agent you want to set the access for.\r\n * @param access What access (read, append, write, controlRead, controlWrite) to set for the given Agent. `true` to allow, `false` to deny, and `undefined` to leave unchanged.\r\n * @returns The Resource with the updated Access Control Resource attached, if updated successfully, or `null` if not.\r\n */\r\nfunction internal_setAgentAccess$1(resource, acpData, webId, access) {\r\n    return internal_setActorAccess$1(resource, acpData, acp.agent, webId, access);\r\n}\r\n/**\r\n * Set access to a Resource for everybody.\r\n *\r\n * This function adds the relevant Access Control Policies and Matchers to a\r\n * Resource's Access Control Resource to define the given access for everybody\r\n * specifically. In other words, it can, for example, add Policies that\r\n * give everybody Read access to the Resource. However, if other\r\n * Policies specify that everybody is *denied* Read access *except* if they're\r\n * a particular Agent, then that will be left intact.\r\n * This means that, unless *only* this module's functions are used to manipulate\r\n * access to this Resource, the set access might not be equal to the effective\r\n * access for a particular Agent.\r\n *\r\n * There are a number of preconditions that have to be fulfilled for this\r\n * function to work:\r\n * - Access to the Resource is determined via an Access Control Resource.\r\n * - The Resource's Access Control Resource does not refer to (Policies or Matchers\r\n *   in) other Resources.\r\n * - The current user has access to the Resource's Access Control Resource.\r\n *\r\n * If those conditions do not hold, this function will return `null`.\r\n *\r\n * Additionally, take note that the given access will only be applied to the\r\n * given Resource; if that Resource is a Container, access will have to be set\r\n * for its contained Resources independently.\r\n *\r\n * @param resource Resource that was fetched together with its linked Access Control Resource.\r\n * @param acpData All Access Control Policies and Matchers that apply to a particular Resource.\r\n * @param access What access (read, append, write, controlRead, controlWrite) to set for everybody. `true` to allow, `false` to deny, and `undefined` to leave unchanged.\r\n * @returns The Resource with the updated Access Control Resource attached, if updated successfully, or `null` if not.\r\n */\r\nfunction internal_setPublicAccess$1(resource, acpData, access) {\r\n    return internal_setActorAccess$1(resource, acpData, acp.agent, acp.PublicAgent, access);\r\n}\r\nfunction policyHasOtherActors$1(policy, actorRelation, actor, acpData) {\r\n    // Note: the non-null assertions (`!`) here should be valid because\r\n    //       the caller of `policyHasOtherActors` should already have validated\r\n    //       that the return value of internal_getPoliciesAndMatchers() did not have\r\n    //       any inaccessible URLs, so we should be able to find every Matcher.\r\n    const allOfMatchers = getIriAll(policy, acp.allOf).map((matcherUrl) => acpData.matchers.find((matcher) => asIri(matcher) === matcherUrl));\r\n    const allOfMatchersHaveOtherActors = allOfMatchers.some((matcher) => {\r\n        return matcherHasOtherActors(matcher, actorRelation, actor);\r\n    });\r\n    const anyOfMatchers = getIriAll(policy, acp.anyOf).map((matcherUrl) => acpData.matchers.find((matcher) => asIri(matcher) === matcherUrl));\r\n    const anyOfMatchersHaveOtherActors = anyOfMatchers.some((matcher) => {\r\n        return matcherHasOtherActors(matcher, actorRelation, actor);\r\n    });\r\n    /* istanbul ignore next This function only gets called after policyAppliesTo, which already filters out all noneOf Matchers */\r\n    const noneOfMatchers = getIriAll(policy, acp.noneOf).map((matcherUrl) => acpData.matchers.find((matcher) => asIri(matcher) === matcherUrl));\r\n    /* istanbul ignore next This function only gets called after policyAppliesTo, which already filters out all noneOf Matchers */\r\n    const noneOfMatchersHaveOtherActors = noneOfMatchers.some((matcher) => {\r\n        return matcherHasOtherActors(matcher, actorRelation, actor);\r\n    });\r\n    return (allOfMatchersHaveOtherActors ||\r\n        anyOfMatchersHaveOtherActors ||\r\n        noneOfMatchersHaveOtherActors);\r\n}\r\nfunction matcherHasOtherActors(matcher, actorRelation, actor) {\r\n    const otherActors = [];\r\n    knownActorRelations$1.forEach((knownActorRelation) => {\r\n        const otherActorsWithThisRelation = getIriAll(matcher, knownActorRelation).filter((applicableActor) => applicableActor !== actor || knownActorRelation !== actorRelation);\r\n        // Unfortunately Node 10 does not support `.flat()` yet, hence the use of `push`:\r\n        otherActors.push(...otherActorsWithThisRelation);\r\n    });\r\n    return otherActors.length > 0;\r\n}\r\nfunction copyPolicyExcludingActor$1(inputPolicy, resourceWithAcr, acpData, actorRelationToExclude, actorToExclude) {\r\n    const newIriSuffix = \"_copy_without\" +\r\n        `_${encodeURIComponent(actorRelationToExclude)}_${actorToExclude}` +\r\n        `_${Date.now()}_${Math.random()}`;\r\n    // Create new Matchers for the Policy, excluding the given Actor\r\n    const newAllOfMatchers = copyMatchersExcludingActor(getIriAll(inputPolicy, acp.allOf), resourceWithAcr, acpData, newIriSuffix, actorRelationToExclude, actorToExclude);\r\n    const newAnyOfMatchers = copyMatchersExcludingActor(getIriAll(inputPolicy, acp.anyOf), resourceWithAcr, acpData, newIriSuffix, actorRelationToExclude, actorToExclude);\r\n    const newNoneOfMatchers = copyMatchersExcludingActor(getIriAll(inputPolicy, acp.noneOf), resourceWithAcr, acpData, newIriSuffix, actorRelationToExclude, actorToExclude);\r\n    // Create a new Policy with the new Matchers\r\n    let newPolicy = createResourcePolicyFor(resourceWithAcr, encodeURI(asIri(inputPolicy)) + newIriSuffix);\r\n    getIriAll(inputPolicy, acp.allow).forEach((allowMode) => {\r\n        newPolicy = addIri(newPolicy, acp.allow, allowMode);\r\n    });\r\n    getIriAll(inputPolicy, acp.deny).forEach((denyMode) => {\r\n        newPolicy = addIri(newPolicy, acp.deny, denyMode);\r\n    });\r\n    newAllOfMatchers.forEach((newMatcher) => {\r\n        newPolicy = addIri(newPolicy, acp.allOf, newMatcher);\r\n    });\r\n    newAnyOfMatchers.forEach((newMatcher) => {\r\n        newPolicy = addIri(newPolicy, acp.anyOf, newMatcher);\r\n    });\r\n    /* istanbul ignore next Policies listing noneOf Matchers are left alone (because they do not unambiguously apply to the given actor always), so there will usually not be any noneOf Matchers to copy. */\r\n    newNoneOfMatchers.forEach((newMatcher) => {\r\n        newPolicy = addIri(newPolicy, acp.noneOf, newMatcher);\r\n    });\r\n    return [\r\n        newPolicy,\r\n        newAllOfMatchers.concat(newAnyOfMatchers).concat(newNoneOfMatchers),\r\n    ];\r\n}\r\n/** Creates clones of all the Matchers identified by `matcherIris` in `acpData`, excluding the given Actor */\r\nfunction copyMatchersExcludingActor(matcherIris, resourceWithAcr, acpData, iriSuffix, actorRelationToExclude, actorToExclude) {\r\n    return matcherIris\r\n        .map((matcherIri) => {\r\n        const matcher = acpData.matchers.find((matcher) => asIri(matcher) === matcherIri);\r\n        /* istanbul ignore if: getPoliciesAndMatchers should already have fetched all referenced Matchers, so this should never be true: */\r\n        if (typeof matcher === \"undefined\") {\r\n            return null;\r\n        }\r\n        let newMatcher = createResourceMatcherFor(resourceWithAcr, encodeURI(asIri(matcher)) + iriSuffix);\r\n        let listsOtherActors = false;\r\n        knownActorRelations$1.forEach((knownActorRelation) => {\r\n            getIriAll(matcher, knownActorRelation).forEach((targetActor) => {\r\n                if (knownActorRelation === actorRelationToExclude &&\r\n                    targetActor === actorToExclude) {\r\n                    return;\r\n                }\r\n                listsOtherActors = true;\r\n                newMatcher = addIri(newMatcher, knownActorRelation, targetActor);\r\n            });\r\n        });\r\n        return listsOtherActors ? newMatcher : null;\r\n    })\r\n        .filter(isNotNull$1);\r\n}\r\nfunction isNotNull$1(value) {\r\n    return value !== null;\r\n}\r\nasync function internal_getPoliciesAndMatchers(resource, options = internal_defaultFetchOptions) {\r\n    const acrPolicyUrls = getAcrPolicyUrlAll(resource);\r\n    const policyUrls = getPolicyUrlAll(resource);\r\n    const allPolicyResourceUrls = getResourceUrls$1(acrPolicyUrls).concat(getResourceUrls$1(policyUrls));\r\n    const policyResources = await getResources$1(allPolicyResourceUrls, options);\r\n    const acrPolicies = getThingsFromResources$1(acrPolicyUrls, policyResources).filter(isNotNull$1);\r\n    const policies = getThingsFromResources$1(policyUrls, policyResources).filter(isNotNull$1);\r\n    const matcherUrlSet = new Set();\r\n    acrPolicies.forEach((acrPolicy) => {\r\n        const referencedMatcherUrls = getReferencedMatcherUrls(acrPolicy);\r\n        referencedMatcherUrls.forEach((matcherUrl) => {\r\n            matcherUrlSet.add(matcherUrl);\r\n        });\r\n    });\r\n    policies.forEach((policy) => {\r\n        const referencedMatcherUrls = getReferencedMatcherUrls(policy);\r\n        referencedMatcherUrls.forEach((matcherUrl) => {\r\n            matcherUrlSet.add(matcherUrl);\r\n        });\r\n    });\r\n    const matcherUrls = Array.from(matcherUrlSet);\r\n    const matcherResourceUrls = matcherUrls.map((matcherUrl) => getResourceUrl$1(matcherUrl));\r\n    const unfetchedMatcherResourceUrls = matcherResourceUrls.filter((matcherResourceUrl) => !allPolicyResourceUrls.includes(matcherResourceUrl));\r\n    const matcherResources = await getResources$1(unfetchedMatcherResourceUrls, options);\r\n    const allResources = Object.assign(Object.assign({}, policyResources), matcherResources);\r\n    const matchers = getThingsFromResources$1(matcherUrls, allResources).filter(isNotNull$1);\r\n    const inaccessibleUrls = Object.keys(allResources).filter((resourceUrl) => allResources[resourceUrl] === null);\r\n    return {\r\n        inaccessibleUrls: inaccessibleUrls,\r\n        acrPolicies: acrPolicies,\r\n        policies: policies,\r\n        matchers: matchers,\r\n    };\r\n}\r\nfunction getResourceUrl$1(thingUrl) {\r\n    const thingUrlObject = new URL(thingUrl);\r\n    thingUrlObject.hash = \"\";\r\n    return thingUrlObject.href;\r\n}\r\nfunction getResourceUrls$1(thingUrls) {\r\n    const resourceUrls = [];\r\n    thingUrls.forEach((thingUrl) => {\r\n        const resourceUrl = getResourceUrl$1(thingUrl);\r\n        if (!resourceUrls.includes(resourceUrl)) {\r\n            resourceUrls.push(resourceUrl);\r\n        }\r\n    });\r\n    return resourceUrls;\r\n}\r\nasync function getResources$1(resourceUrls, options) {\r\n    const uniqueResourceUrls = Array.from(new Set(resourceUrls));\r\n    const resources = {};\r\n    await Promise.all(uniqueResourceUrls.map(async (resourceUrl) => {\r\n        try {\r\n            const resource = await getSolidDataset(resourceUrl, options);\r\n            resources[resourceUrl] = resource;\r\n        }\r\n        catch (e) {\r\n            resources[resourceUrl] = null;\r\n        }\r\n    }));\r\n    return resources;\r\n}\r\nfunction getThingsFromResources$1(thingUrls, resources) {\r\n    return thingUrls.map((thingUrl) => {\r\n        const resourceUrl = getResourceUrl$1(thingUrl);\r\n        const resource = resources[resourceUrl];\r\n        if (!resource) {\r\n            return null;\r\n        }\r\n        return getThing(resource, thingUrl);\r\n    });\r\n}\r\nfunction getReferencedMatcherUrls(policy) {\r\n    return getAllOfMatcherUrlAll(policy)\r\n        .concat(getAnyOfMatcherUrlAll(policy))\r\n        .concat(getNoneOfMatcherUrlAll(policy));\r\n}\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nfunction universalAccessToAcl(newAccess, previousAccess) {\r\n    var _a, _b, _c, _d;\r\n    // Universal access is aligned on ACP, which means there is a distinction between\r\n    // controlRead and controlWrite. This split doesn't exist in WAC, which is why\r\n    // the type for the input variable of this function is a restriction on the\r\n    // universal Access type.\r\n    if (newAccess.controlRead !== newAccess.controlWrite) {\r\n        throw new Error(\"For Pods using Web Access Control, controlRead and controlWrite must be equal.\");\r\n    }\r\n    return {\r\n        read: (_a = newAccess.read) !== null && _a !== void 0 ? _a : previousAccess.read,\r\n        append: (_b = newAccess.append) !== null && _b !== void 0 ? _b : previousAccess.append,\r\n        write: (_c = newAccess.write) !== null && _c !== void 0 ? _c : previousAccess.write,\r\n        control: (_d = newAccess.controlRead) !== null && _d !== void 0 ? _d : previousAccess.control,\r\n    };\r\n}\r\nfunction aclAccessToUniversal(access) {\r\n    // In ACL, denying access to an actor is a notion that doesn't exist, so an\r\n    // access is either granted or not for a given mode.\r\n    // This creates a misalignment with the ACP notion of an access being granted,\r\n    // denied, or simply not mentioned. Here, we convert the boolean vision of\r\n    // ACL into the boolean or undefined vision of ACP.\r\n    return {\r\n        read: access.read,\r\n        write: access.write,\r\n        append: access.append,\r\n        controlRead: access.control,\r\n        controlWrite: access.control,\r\n    };\r\n}\r\nasync function getActorAccess(resource, actor, accessEvaluationCallback, options) {\r\n    const resourceAcl = await internal_fetchAcl(resource, options);\r\n    const wacAccess = accessEvaluationCallback(internal_setAcl(resource, resourceAcl), actor);\r\n    if (wacAccess === null) {\r\n        return null;\r\n    }\r\n    return aclAccessToUniversal(wacAccess);\r\n}\r\nasync function getActorClassAccess(resource, accessEvaluationCallback, options) {\r\n    const resourceAcl = await internal_fetchAcl(resource, options);\r\n    const wacAccess = accessEvaluationCallback(internal_setAcl(resource, resourceAcl));\r\n    if (wacAccess === null) {\r\n        return null;\r\n    }\r\n    return aclAccessToUniversal(wacAccess);\r\n}\r\nasync function getActorAccessAll(resource, accessEvaluationCallback, options) {\r\n    const resourceAcl = await internal_fetchAcl(resource, options);\r\n    const wacAgentAccess = accessEvaluationCallback(internal_setAcl(resource, resourceAcl));\r\n    if (wacAgentAccess === null) {\r\n        return null;\r\n    }\r\n    const result = {};\r\n    for (const [webId, wacAccess] of Object.entries(wacAgentAccess)) {\r\n        result[webId] = aclAccessToUniversal(wacAccess);\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * For a given Resource, look up its metadata, and read the Access permissions\r\n * granted to the given Agent.\r\n *\r\n * Note that this only lists permissions granted to the given Agent individually,\r\n * and will not exhaustively list modes the given Agent may have access to because\r\n * they apply to everyone, or because they apply to the Agent through a group for\r\n * instance.\r\n *\r\n * @param resource The URL of the Resource for which we want to list Access\r\n * @param agent The Agent for which the Access is granted\r\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\r\n * @returns What Access modes are granted to the given Agent explicitly, or null if it could not be determined.\r\n */\r\nfunction getAgentAccess$2(resource, agent, options = internal_defaultFetchOptions) {\r\n    return getActorAccess(resource, agent, getAgentAccess$3, options);\r\n}\r\n/**\r\n * For a given Resource, look up its metadata, and read the Access permissions\r\n * granted to the given Group.\r\n *\r\n * Note that this only lists permissions granted to the given Group individually,\r\n * and will not exhaustively list modes the given Group may have access to because\r\n * they apply to everyone, or because they apply to the Group through another\r\n * Group that may contain it for instance.\r\n *\r\n * @param resource The URL of the Resource for which we want to list Access\r\n * @param group The Group for which the Access is granted\r\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\r\n * @returns What Access modes are granted to the given Group explicitly, or null if it could not be determined.\r\n */\r\nfunction getGroupAccess$1(resource, group, options = internal_defaultFetchOptions) {\r\n    return getActorAccess(resource, group, getGroupAccess$2, options);\r\n}\r\n/**\r\n * For a given Resource, look up its metadata, and read the Access permissions\r\n * granted to everyone.\r\n *\r\n * Note that this only lists permissions explicitly granted to everyone as a whole,\r\n * and will not exhaustively list modes any individual Agent or Group may have\r\n * access to because they specifically apply to them only.\r\n *\r\n * @param resource The URL of the Resource for which we want to list public Access\r\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\r\n * @returns What Access modes are granted to the everyone explicitly, or null if it could not be determined.\r\n */\r\nfunction getPublicAccess$2(resource, options = internal_defaultFetchOptions) {\r\n    return getActorClassAccess(resource, getPublicAccess$3, options);\r\n}\r\n/**\r\n * For a given Resource, look up its metadata, and read the Access permissions\r\n * granted explicitly to each individual Agent.\r\n *\r\n * Note that this only lists permissions granted to each Agent individually,\r\n * and will not exhaustively list modes any Agent may have access to because\r\n * they apply to everyone, or because they apply to an Agent through a group for\r\n * instance.\r\n *\r\n * @param resource The URL of the Resource for which we want to list Agents Access\r\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\r\n * @returns A map of Agent WebIDs and the access granted to them, or null if it could not be determined.\r\n */\r\nfunction getAgentAccessAll$2(resource, options = internal_defaultFetchOptions) {\r\n    return getActorAccessAll(resource, getAgentAccessAll$3, options);\r\n}\r\n/**\r\n * For a given Resource, look up its metadata, and read the Access permissions\r\n * granted explicitly to each individual Group.\r\n *\r\n * Note that this only lists permissions granted to each Group individually,\r\n * and will not exhaustively list modes any Group may have access to because\r\n * they apply individually to all of the Agents in the Group, or to everyone\r\n * for instance.\r\n *\r\n * @param resource The URL of the Resource for which we want to list Agents Access\r\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\r\n * @returns A map of Group URLs and the access granted to them, or null if it could not be determined.\r\n */\r\nfunction getGroupAccessAll$1(resource, options = internal_defaultFetchOptions) {\r\n    return getActorAccessAll(resource, getGroupAccessAll$2, options);\r\n}\r\nasync function prepareResourceAcl(resource, options) {\r\n    if (!hasAccessibleAcl(resource)) {\r\n        return null;\r\n    }\r\n    const acl = await internal_fetchAcl(resource, options);\r\n    const resourceWithAcl = internal_setAcl(resource, acl);\r\n    let resourceAcl;\r\n    if (hasResourceAcl(resourceWithAcl)) {\r\n        // This is the simple case, where the Resource ACL we need to update already\r\n        // exists.\r\n        resourceAcl = internal_getResourceAcl(resourceWithAcl);\r\n    }\r\n    else if (hasFallbackAcl(resourceWithAcl)) {\r\n        // In this case, the Resource ACL needs to be created first, and then updated.\r\n        resourceAcl = createAclFromFallbackAcl(resourceWithAcl);\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n    return internal_setResourceAcl(resourceWithAcl, resourceAcl);\r\n}\r\nasync function saveUpdatedAcl(resource, acl, options) {\r\n    let savedAcl = null;\r\n    try {\r\n        savedAcl = await saveAclFor(resource, acl, options);\r\n        return internal_setResourceAcl(resource, savedAcl);\r\n    }\r\n    catch (e) {\r\n        return null;\r\n    }\r\n}\r\nasync function setActorClassAccess(resource, access, getAccess, setAccess, options) {\r\n    const resourceWithOldAcl = await prepareResourceAcl(resource, options);\r\n    if (resourceWithOldAcl === null) {\r\n        return null;\r\n    }\r\n    const resourceAcl = getResourceAcl(resourceWithOldAcl);\r\n    const currentAccess = getAccess(resourceWithOldAcl);\r\n    const wacAccess = universalAccessToAcl(access, currentAccess);\r\n    const updatedResourceAcl = setAccess(resourceAcl, wacAccess);\r\n    return await saveUpdatedAcl(resourceWithOldAcl, updatedResourceAcl, options);\r\n}\r\nasync function setActorAccess(resource, actor, access, getAccess, setAccess, options) {\r\n    const resourceWithOldAcl = await prepareResourceAcl(resource, options);\r\n    if (resourceWithOldAcl === null) {\r\n        return null;\r\n    }\r\n    const currentAccess = getAccess(resourceWithOldAcl, actor);\r\n    const resourceAcl = getResourceAcl(resourceWithOldAcl);\r\n    const wacAccess = universalAccessToAcl(access, currentAccess);\r\n    const updatedResourceAcl = setAccess(resourceAcl, actor, wacAccess);\r\n    return await saveUpdatedAcl(resourceWithOldAcl, updatedResourceAcl, options);\r\n}\r\n/**\r\n * Set the Access modes for a given Agent to a given Resource.\r\n *\r\n * Important note: if the target resource did not have a Resource ACL, and its\r\n * Access was regulated by its Fallback ACL, said Fallback ACL is copied to create\r\n * a new Resource ACL. This has the side effect that the next time the Fallback\r\n * ACL is updated, the changes _will not impact_ the target resource.\r\n *\r\n * If the target Resource's Access mode cannot be determined, e.g. the user does\r\n * not have Read and Write access to the target Resource's ACL, or to its\r\n * fallback ACL if it does not have a Resource ACL, then `null` is returned.\r\n *\r\n * @param resource The Resource for which Access is being set\r\n * @param agent The Agent for whom Access is being set\r\n * @param access The Access being set\r\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\r\n * @returns The Resource, with its ACL updated, or null if the new Access could not\r\n * be set.\r\n */\r\nasync function setAgentResourceAccess(resource, agent, access, options = internal_defaultFetchOptions) {\r\n    return await setActorAccess(resource, agent, access, getAgentAccess$3, setAgentResourceAccess$1, options);\r\n}\r\n/**\r\n * Set the Access modes for a given Group to a given Resource.\r\n *\r\n * Important note: if the target resource did not have a Resource ACL, and its\r\n * Access was regulated by its Fallback ACL, said Fallback ACL is copied to create\r\n * a new Resource ACL. This has the side effect that the next time the Fallback\r\n * ACL is updated, the changes _will not impact_ the target resource.\r\n *\r\n * If the target Resource's Access mode cannot be determined, e.g. the user does\r\n * not have Read and Write access to the target Resource's ACL, or to its\r\n * fallback ACL if it does not have a Resource ACL, then `null` is returned.\r\n *\r\n * @param resource The Resource for which Access is being set\r\n * @param agent The Group for which Access is being set\r\n * @param access The Access being set\r\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\r\n * @returns The Resource, with its ACL updated, or null if the new Access could not\r\n * be set.\r\n */\r\nasync function setGroupResourceAccess(resource, group, access, options = internal_defaultFetchOptions) {\r\n    return await setActorAccess(resource, group, access, getGroupAccess$2, setGroupResourceAccess$1, options);\r\n}\r\n/**\r\n * Set the Access modes for everyone to a given Resource.\r\n *\r\n * Important note: if the target resource did not have a Resource ACL, and its\r\n * Access was regulated by its Fallback ACL, said Fallback ACL is copied to create\r\n * a new Resource ACL. This has the side effect that the next time the Fallback\r\n * ACL is updated, the changes _will not impact_ the target resource.\r\n *\r\n * If the target Resource's Access mode cannot be determined, e.g. the user does\r\n * not have Read and Write access to the target Resource's ACL, or to its\r\n * fallback ACL if it does not have a Resource ACL, then `null` is returned.\r\n *\r\n * @param resource The Resource for which Access is being set\r\n * @param access The Access being set\r\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\r\n * @returns The Resource, with its ACL updated, or null if the new Access could not\r\n * be set.\r\n */\r\nasync function setPublicResourceAccess(resource, access, options = internal_defaultFetchOptions) {\r\n    return await setActorClassAccess(resource, access, getPublicAccess$3, setPublicResourceAccess$1, options);\r\n}\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nconst knownActorRelations = [acp.agent, acp.group];\r\n/**\r\n * Get an overview of what access is defined for a given actor in a Resource's Access Control Resource.\r\n *\r\n * This will only return a value if all relevant access is defined in just the Resource's Access\r\n * Control Resource; in other words, if an Access Policy or Access Rule applies that is re-used for\r\n * other Resources, this function will not be able to determine the access relevant to this actor.\r\n *\r\n * Additionally, this only considers access given _explicitly_ to the given actor, i.e. without\r\n * additional conditions.\r\n *\r\n * In other words, this function will generally understand and return the access as set by\r\n * [[internal_setActorAccess]], but not understand more convoluted Policies.\r\n *\r\n * @param acpData All Access Control Policies and Rules that apply to a particular Resource.\r\n * @param actorRelation What type of actor (e.g. acp:agent or acp:group) you want to get the access for.\r\n * @param actor Which instance of the given actor type you want to get the access for.\r\n * @returns What Access modes are granted to the given actor explicitly, or null if it could not be determined.\r\n */\r\nfunction internal_getActorAccess(acpData, actorRelation, actor) {\r\n    if (acpData.inaccessibleUrls.length > 0) {\r\n        // If we can't see all access data,\r\n        // we can't reliably determine what access the given actor has:\r\n        return null;\r\n    }\r\n    const applicableAcrPolicies = acpData.acrPolicies.filter((policy) => policyAppliesTo(policy, actorRelation, actor, acpData));\r\n    const applicablePolicies = acpData.policies.filter((policy) => policyAppliesTo(policy, actorRelation, actor, acpData));\r\n    const initialAccess = {\r\n        read: false,\r\n        append: false,\r\n        write: false,\r\n        controlRead: false,\r\n        controlWrite: false,\r\n    };\r\n    // All allowed reading and writing defined in ACR policies\r\n    // determines whether the `controlRead` and `controlWrite` statuses are `true`.\r\n    const allowedAcrAccess = applicableAcrPolicies.reduce((acc, policy) => {\r\n        const allAllowedAccess = Object.assign({}, acc);\r\n        const allowModes = getAllowModesV1(policy);\r\n        if (allowModes.read) {\r\n            allAllowedAccess.controlRead = true;\r\n        }\r\n        if (allowModes.write) {\r\n            allAllowedAccess.controlWrite = true;\r\n        }\r\n        return allAllowedAccess;\r\n    }, initialAccess);\r\n    // Then allowed reading, appending and writing in regular policies\r\n    // determines whether the respective status is `true`.\r\n    const withAllowedAccess = applicablePolicies.reduce((acc, policy) => {\r\n        const allAllowedAccess = Object.assign({}, acc);\r\n        const allowModes = getAllowModesV1(policy);\r\n        if (allowModes.read) {\r\n            allAllowedAccess.read = true;\r\n        }\r\n        if (allowModes.append) {\r\n            allAllowedAccess.append = true;\r\n        }\r\n        if (allowModes.write) {\r\n            allAllowedAccess.write = true;\r\n        }\r\n        return allAllowedAccess;\r\n    }, allowedAcrAccess);\r\n    // At this point, everything that has been explicitly allowed is true.\r\n    // However, it could still be overridden by access that is explicitly denied.\r\n    // Starting with `controlRead` and `controlWrite`,\r\n    // by inspecting denied reading and writing defined in the ACR policies.\r\n    const withAcrDeniedAccess = applicableAcrPolicies.reduce((acc, policy) => {\r\n        const allDeniedAccess = Object.assign({}, acc);\r\n        const denyModes = getDenyModesV1(policy);\r\n        if (denyModes.read === true) {\r\n            allDeniedAccess.controlRead = false;\r\n        }\r\n        if (denyModes.write === true) {\r\n            allDeniedAccess.controlWrite = false;\r\n        }\r\n        return allDeniedAccess;\r\n    }, withAllowedAccess);\r\n    // And finally, we set to `false` those access modes that are explicitly denied\r\n    // in the regular policies:\r\n    const withDeniedAccess = applicablePolicies.reduce((acc, policy) => {\r\n        const allDeniedAccess = Object.assign({}, acc);\r\n        const denyModes = getDenyModesV1(policy);\r\n        if (denyModes.read === true) {\r\n            allDeniedAccess.read = false;\r\n        }\r\n        if (denyModes.append === true) {\r\n            allDeniedAccess.append = false;\r\n        }\r\n        if (denyModes.write === true) {\r\n            allDeniedAccess.write = false;\r\n        }\r\n        return allDeniedAccess;\r\n    }, withAcrDeniedAccess);\r\n    return withDeniedAccess;\r\n}\r\n/**\r\n * Get an overview of what access is defined for a given Agent in a Resource's Access Control Resource.\r\n *\r\n * This will only return a value if all relevant access is defined in just the Resource's Access\r\n * Control Resource; in other words, if an Access Policy or Access Rule applies that is re-used for\r\n * other Resources, this function will not be able to determine the access relevant to this Agent.\r\n *\r\n * Additionally, this only considers access given _explicitly_ to the given Agent, i.e. without\r\n * additional conditions.\r\n *\r\n * In other words, this function will generally understand and return the access as set by\r\n * [[internal_setAgentAccess]], but not understand more convoluted Policies.\r\n *\r\n * @param acpData All Access Control Policies and Rules that apply to a particular Resource.\r\n * @param webId WebID of the Agent you want to get the access for.\r\n * @returns What Access modes are granted to the given Agent explicitly, or null if it could not be determined.\r\n */\r\nfunction internal_getAgentAccess(acpData, webId) {\r\n    return internal_getActorAccess(acpData, acp.agent, webId);\r\n}\r\n/**\r\n * Get an overview of what access is defined for a given Group in a Resource's Access Control Resource.\r\n *\r\n * This will only return a value if all relevant access is defined in just the Resource's Access\r\n * Control Resource; in other words, if an Access Policy or Access Rule applies that is re-used for\r\n * other Resources, this function will not be able to determine the access relevant to this Group.\r\n *\r\n * Additionally, this only considers access given _explicitly_ to the given Group, i.e. without\r\n * additional conditions.\r\n *\r\n * In other words, this function will generally understand and return the access as set by\r\n * [[internal_setGroupAccess]], but not understand more convoluted Policies.\r\n *\r\n * @param acpData All Access Control Policies and Rules that apply to a particular Resource.\r\n * @param groupUrl URL of the Group you want to get the access for.\r\n * @returns What Access modes are granted to the given Group explicitly, or null if it could not be determined.\r\n */\r\nfunction internal_getGroupAccess(acpData, groupUrl) {\r\n    return internal_getActorAccess(acpData, acp.group, groupUrl);\r\n}\r\n/**\r\n * Get an overview of what access is defined for everybody in a Resource's Access Control Resource.\r\n *\r\n * This will only return a value if all relevant access is defined in just the Resource's Access\r\n * Control Resource; in other words, if an Access Policy or Access Rule applies that is re-used for\r\n * other Resources, this function will not be able to determine the access relevant to everybody.\r\n *\r\n * Additionally, this only considers access given _explicitly_ to everybody, i.e. without\r\n * additional conditions.\r\n *\r\n * In other words, this function will generally understand and return the access as set by\r\n * [[internal_setPublicAccess]], but not understand more convoluted Policies.\r\n *\r\n * @param acpData All Access Control Policies and Rules that apply to a particular Resource.\r\n * @returns What Access modes are granted to everyone explicitly, or null if it could not be determined.\r\n */\r\nfunction internal_getPublicAccess(acpData) {\r\n    return internal_getActorAccess(acpData, acp.agent, acp.PublicAgent);\r\n}\r\nfunction policyAppliesTo(policy, actorRelation, actor, acpData) {\r\n    const allowModes = getIriAll(policy, acp.allow);\r\n    const denyModes = getIriAll(policy, acp.deny);\r\n    if (allowModes.length + denyModes.length === 0) {\r\n        // A Policy that does not specify access modes does not do anything:\r\n        return false;\r\n    }\r\n    // Note: the non-null assertions (`!`) here should be valid because\r\n    //       the caller of `policyAppliesTo` should already have validated that\r\n    //       the return value of internal_getPoliciesAndRules() did not have any\r\n    //       inaccessible URLs, so we should be able to find every Rule.\r\n    const allOfRules = getAllOfRuleUrlAll(policy).map((ruleUrl) => acpData.rules.find((rule) => asIri(rule) === ruleUrl));\r\n    const anyOfRules = getAnyOfRuleUrlAll(policy).map((ruleUrl) => acpData.rules.find((rule) => asIri(rule) === ruleUrl));\r\n    const noneOfRules = getNoneOfRuleUrlAll(policy).map((ruleUrl) => acpData.rules.find((rule) => asIri(rule) === ruleUrl));\r\n    // We assume that this Policy applies if this specific actor is mentioned\r\n    // and no further restrictions are in place.\r\n    // (In other words, the Policy may apply to others *in addition to* this\r\n    // actor, but if it applies to this actor *unless* some other condition holds,\r\n    // we cannot be sure whether it will apply to this actor.)\r\n    // This means that:\r\n    return (\r\n    // Every existing allOf Rule explicitly applies explicitly to this given actor:\r\n    allOfRules.every((rule) => ruleAppliesTo(rule, actorRelation, actor)) &&\r\n        // If there are anyOf Rules, at least one applies explicitly to this actor:\r\n        (anyOfRules.length === 0 ||\r\n            anyOfRules.some((rule) => ruleAppliesTo(rule, actorRelation, actor))) &&\r\n        // No further restrictions are in place that make this sometimes not apply\r\n        // to the given actor:\r\n        noneOfRules.length === 0);\r\n}\r\nfunction policyConflictsWith(policy, otherAccess) {\r\n    const allowModes = getIriAll(policy, acp.allow);\r\n    const denyModes = getIriAll(policy, acp.deny);\r\n    return ((otherAccess.read === true && denyModes.includes(acp.Read)) ||\r\n        (otherAccess.read === false &&\r\n            allowModes.includes(acp.Read) &&\r\n            !denyModes.includes(acp.Read)) ||\r\n        (otherAccess.append === true && denyModes.includes(acp.Append)) ||\r\n        (otherAccess.append === false &&\r\n            allowModes.includes(acp.Append) &&\r\n            !denyModes.includes(acp.Append)) ||\r\n        (otherAccess.write === true && denyModes.includes(acp.Write)) ||\r\n        (otherAccess.write === false &&\r\n            allowModes.includes(acp.Write) &&\r\n            !denyModes.includes(acp.Write)));\r\n}\r\nfunction ruleAppliesTo(rule, actorRelation, actor) {\r\n    // A Rule that does not list *any* actor matches for everyone:\r\n    let isEmpty = true;\r\n    knownActorRelations.forEach((knownActorRelation) => {\r\n        isEmpty && (isEmpty = getIri(rule, knownActorRelation) === null);\r\n    });\r\n    return isEmpty || getIriAll(rule, actorRelation).includes(actor);\r\n}\r\n/**\r\n * Get a set of all actors mentioned in an ACR by active Rules (i.e. that are\r\n * referenced by Policies referenced by the ACR Control, and therefore that\r\n * effectively apply).\r\n *\r\n * @param acpData All Access Control Policies and Rules that apply to a particular Resource.\r\n * @param actorRelation\r\n */\r\nfunction internal_findActorAll(acpData, actorRelation) {\r\n    const actors = new Set();\r\n    // This code could be prettier using flat(), which isn't supported by nodeJS 10.\r\n    // If you read this comment after April 2021, feel free to refactor.\r\n    acpData.rules.forEach((rule) => {\r\n        getIriAll(rule, actorRelation)\r\n            .filter((iri) => ![\r\n            acp.PublicAgent,\r\n            acp.CreatorAgent,\r\n            acp.AuthenticatedAgent,\r\n        ].includes(iri) || actorRelation != acp.agent)\r\n            .forEach((iri) => actors.add(iri));\r\n    });\r\n    return actors;\r\n}\r\n/**\r\n * Iterate through all the actors active for an ACR, and list all of their access.\r\n * @param acpData All Access Control Policies and Rules that apply to a particular Resource.\r\n * @param actorRelation The type of actor we want to list access for\r\n * @returns A map with each actor access indexed by their URL, or null if some\r\n * external policies are referenced.\r\n */\r\nfunction internal_getActorAccessAll(acpData, actorRelation) {\r\n    if (acpData.inaccessibleUrls.length > 0) {\r\n        // If we can't see all access data,\r\n        // we can't reliably determine what access actors of the given type have:\r\n        return null;\r\n    }\r\n    const result = {};\r\n    const actors = internal_findActorAll(acpData, actorRelation);\r\n    actors.forEach((iri) => {\r\n        // The type assertion holds, because if internal_getActorAccess were null,\r\n        // we would have returned {} already.\r\n        const access = internal_getActorAccess(acpData, actorRelation, iri);\r\n        result[iri] = access;\r\n    });\r\n    return result;\r\n}\r\n/**\r\n * Get an overview of what access are defined for all Groups in a Resource's Access Control Resource.\r\n *\r\n * This will only return a value if all relevant access is defined in just the Resource's Access\r\n * Control Resource; in other words, if an Access Policy or Access Rule applies that is re-used for\r\n * other Resources, this function will not be able to determine the access relevant to the mentionned\r\n * Groups.\r\n *\r\n * Additionally, this only considers access given _explicitly_ to individual Groups, i.e. without\r\n * additional conditions.\r\n *\r\n * In other words, this function will generally understand and return the access as set by\r\n * [[internal_setAgentAccess]], but not understand more convoluted Policies.\r\n *\r\n * @param acpData All Access Control Policies and Rules that apply to a particular Resource.\r\n * @returns A map with each Group's access indexed by their URL, or null if some\r\n * external policies are referenced.\r\n */\r\nfunction internal_getGroupAccessAll(acpData) {\r\n    return internal_getActorAccessAll(acpData, acp.group);\r\n}\r\n/**\r\n * Get an overview of what access are defined for all Agents in a Resource's Access Control Resource.\r\n *\r\n * This will only return a value if all relevant access is defined in just the Resource's Access\r\n * Control Resource; in other words, if an Access Policy or Access Rule applies that is re-used for\r\n * other Resources, this function will not be able to determine the access relevant to the mentionned\r\n * Agents.\r\n *\r\n * Additionally, this only considers access given _explicitly_ to individual Agents, i.e. without\r\n * additional conditions.\r\n *\r\n * In other words, this function will generally understand and return the access as set by\r\n * [[internal_setAgentAccess]], but not understand more convoluted Policies.\r\n *\r\n * @param acpData All Access Control Policies and Rules that apply to a particular Resource.\r\n * @returns A map with each Agent's access indexed by their WebID, or null if some\r\n * external policies are referenced.\r\n */\r\nfunction internal_getAgentAccessAll(acpData) {\r\n    return internal_getActorAccessAll(acpData, acp.agent);\r\n}\r\n/**\r\n * Set access to a Resource for a specific actor.\r\n *\r\n * This function adds the relevant Access Control Policies and Rules to a\r\n * Resource's Access Control Resource to define the given access for the given\r\n * actor specifically. In other words, it can, for example, add Policies that\r\n * give a particular Group Read access to the Resource. However, if other\r\n * Policies specify that everyone in that Group is *denied* Read access *except*\r\n * for a particular Agent, then that will be left intact.\r\n * This means that, unless *only* this module's functions are used to manipulate\r\n * access to this Resource, the set access might not be equal to the effective\r\n * access for an agent matching the given actor.\r\n *\r\n * There are a number of preconditions that have to be fulfilled for this\r\n * function to work:\r\n * - Access to the Resource is determined via an Access Control Resource.\r\n * - The Resource's Access Control Resource does not refer to (Policies or Rules\r\n *   in) other Resources.\r\n * - The current user has access to the Resource's Access Control Resource.\r\n *\r\n * If those conditions do not hold, this function will return `null`.\r\n *\r\n * Additionally, take note that the given access will only be applied to the\r\n * given Resource; if that Resource is a Container, access will have to be set\r\n * for its contained Resources independently.\r\n *\r\n * @param resource Resource that was fetched together with its linked Access Control Resource.\r\n * @param acpData All Access Control Policies and Rules that apply to a particular Resource.\r\n * @param actorRelation What type of actor (e.g. acp:agent or acp:group) you want to set the access for.\r\n * @param actor Which instance of the given actor type you want to set the access for.\r\n * @param access What access (read, append, write, controlRead, controlWrite) to set for the given actor. `true` to allow, `false` to deny, and `undefined` to leave unchanged.\r\n * @returns The Resource with the updated Access Control Resource attached, if updated successfully, or `null` if not.\r\n */\r\nfunction internal_setActorAccess(resource, acpData, actorRelation, actor, access) {\r\n    var _a, _b, _c, _d, _e;\r\n    if (!hasAccessibleAcr(resource) || acpData.inaccessibleUrls.length > 0) {\r\n        return null;\r\n    }\r\n    // Get the access that currently applies to the given actor\r\n    const existingAccess = internal_getActorAccess(acpData, actorRelation, actor);\r\n    /* istanbul ignore if: It returns null if the ACR has inaccessible Policies, which should happen since we already check for that above. */\r\n    if (existingAccess === null) {\r\n        return null;\r\n    }\r\n    // Get all Policies that apply specifically to the given actor\r\n    const applicableAcrPolicies = acpData.acrPolicies.filter((policy) => policyAppliesTo(policy, actorRelation, actor, acpData));\r\n    const applicablePolicies = acpData.policies.filter((policy) => policyAppliesTo(policy, actorRelation, actor, acpData));\r\n    // We only need to override Policies that define access other than what we want:\r\n    const conflictingAcrPolicies = applicableAcrPolicies.filter((policy) => policyConflictsWith(policy, {\r\n        read: access.controlRead,\r\n        write: access.controlWrite,\r\n    }));\r\n    const conflictingPolicies = applicablePolicies.filter((policy) => policyConflictsWith(policy, {\r\n        read: access.read,\r\n        append: access.append,\r\n        write: access.write,\r\n    }));\r\n    // For every Policy that applies specifically to the given Actor, but _also_\r\n    // to another actor (i.e. that applies using an anyOf Rule, or a Rule that\r\n    // mentions both the given and another actor)...\r\n    const otherActorAcrPolicies = conflictingAcrPolicies.filter((acrPolicy) => policyHasOtherActors(acrPolicy, actorRelation, actor, acpData));\r\n    const otherActorPolicies = conflictingPolicies.filter((policy) => policyHasOtherActors(policy, actorRelation, actor, acpData));\r\n    // ...check what access the current actor would have if we removed them...\r\n    const acpDataWithPoliciesExcluded = Object.assign(Object.assign({}, acpData), { acrPolicies: acpData.acrPolicies.filter((acrPolicy) => !otherActorAcrPolicies.includes(acrPolicy)), policies: acpData.policies.filter((policy) => !otherActorPolicies.includes(policy)) });\r\n    const remainingAccess = internal_getActorAccess(acpDataWithPoliciesExcluded, actorRelation, actor);\r\n    /* istanbul ignore if: It returns null if the ACR has inaccessible Policies, which should happen since we already check for that at the start. */\r\n    if (remainingAccess === null) {\r\n        return null;\r\n    }\r\n    // ...add copies of those Policies and their Rules, but excluding the given actor...\r\n    let updatedResource = resource;\r\n    otherActorAcrPolicies.forEach((acrPolicy) => {\r\n        const [policyCopy, ruleCopies] = copyPolicyExcludingActor(acrPolicy, resource, acpData, actorRelation, actor);\r\n        updatedResource = setResourceAcrPolicy(updatedResource, policyCopy);\r\n        updatedResource = ruleCopies.reduce(setResourceRule, updatedResource);\r\n    });\r\n    otherActorPolicies.forEach((policy) => {\r\n        const [policyCopy, ruleCopies] = copyPolicyExcludingActor(policy, resource, acpData, actorRelation, actor);\r\n        updatedResource = setResourcePolicy(updatedResource, policyCopy);\r\n        updatedResource = ruleCopies.reduce(setResourceRule, updatedResource);\r\n    });\r\n    // ...add a new Policy that applies the given access,\r\n    // and the previously applying access for access modes that were undefined...\r\n    const newRuleName = `rule_${encodeURIComponent(`${actorRelation}_${actor}`)}`;\r\n    let newRule = createResourceRuleFor(resource, newRuleName);\r\n    newRule = setIri(newRule, actorRelation, actor);\r\n    const newControlReadAccess = (_a = access.controlRead) !== null && _a !== void 0 ? _a : existingAccess.controlRead;\r\n    const newControlWriteAccess = (_b = access.controlWrite) !== null && _b !== void 0 ? _b : existingAccess.controlWrite;\r\n    let acrPoliciesToUnapply = otherActorAcrPolicies;\r\n    // Only replace existing Policies if the defined access actually changes:\r\n    if (newControlReadAccess !== remainingAccess.controlRead ||\r\n        newControlWriteAccess !== remainingAccess.controlWrite) {\r\n        const newAcrPolicyName = `acr_policy` +\r\n            `_${encodeURIComponent(`${actorRelation}_${actor}`)}` +\r\n            `_${Date.now()}_${Math.random()}`;\r\n        let newAcrPolicy = createResourcePolicyFor(resource, newAcrPolicyName);\r\n        newAcrPolicy = setAllowModesV1(newAcrPolicy, {\r\n            read: newControlReadAccess === true,\r\n            append: false,\r\n            write: newControlWriteAccess === true,\r\n        });\r\n        newAcrPolicy = addIri(newAcrPolicy, acp.allOf, newRule);\r\n        updatedResource = setResourceAcrPolicy(updatedResource, newAcrPolicy);\r\n        updatedResource = setResourceRule(updatedResource, newRule);\r\n        // If we don't have to set new access, we only need to unapply the\r\n        // ACR Policies that applied to both the given actor and other actors\r\n        // (because they have been replaced by clones not mentioning the given\r\n        // actor). Hence `policiesToUnApply` is initialised to `otherActorPolicies`.\r\n        // However, if we're in this if branch, that means we also had to replace\r\n        // Policies that defined access for just this actor, so we'll have to remove\r\n        // all Policies mentioning this actor:\r\n        acrPoliciesToUnapply = conflictingAcrPolicies;\r\n    }\r\n    const newReadAccess = (_c = access.read) !== null && _c !== void 0 ? _c : existingAccess.read;\r\n    const newAppendAccess = (_d = access.append) !== null && _d !== void 0 ? _d : existingAccess.append;\r\n    const newWriteAccess = (_e = access.write) !== null && _e !== void 0 ? _e : existingAccess.write;\r\n    let policiesToUnapply = otherActorPolicies;\r\n    // Only replace existing Policies if the defined access actually changes:\r\n    if (newReadAccess !== remainingAccess.read ||\r\n        newAppendAccess !== remainingAccess.append ||\r\n        newWriteAccess !== remainingAccess.write) {\r\n        const newPolicyName = `policy` +\r\n            `_${encodeURIComponent(`${actorRelation}_${actor}`)}` +\r\n            `_${Date.now()}_${Math.random()}`;\r\n        let newPolicy = createResourcePolicyFor(resource, newPolicyName);\r\n        newPolicy = setAllowModesV1(newPolicy, {\r\n            read: newReadAccess === true,\r\n            append: newAppendAccess === true,\r\n            write: newWriteAccess === true,\r\n        });\r\n        newPolicy = addIri(newPolicy, acp.allOf, newRule);\r\n        updatedResource = setResourcePolicy(updatedResource, newPolicy);\r\n        updatedResource = setResourceRule(updatedResource, newRule);\r\n        // If we don't have to set new access, we only need to unapply the\r\n        // Policies that applied to both the given actor and other actors (because\r\n        // they have been replaced by clones not mentioning the given actor). Hence\r\n        // `policiesToUnApply` is initialised to `otherActorPolicies`.\r\n        // However, if we're in this if branch, that means we also had to replace\r\n        // Policies that defined access for just this actor, so we'll have to remove\r\n        // all Policies mentioning this actor:\r\n        policiesToUnapply = conflictingPolicies;\r\n    }\r\n    // ...then remove existing Policy URLs that mentioned both the given actor\r\n    // and other actors from the given Resource and apply the new ones (but do not\r\n    // remove the actual old Policies - they might still apply to other Resources!).\r\n    acrPoliciesToUnapply.forEach((previouslyApplicableAcrPolicy) => {\r\n        updatedResource = removeAcrPolicyUrl(updatedResource, asIri(previouslyApplicableAcrPolicy));\r\n    });\r\n    policiesToUnapply.forEach((previouslyApplicablePolicy) => {\r\n        updatedResource = removePolicyUrl(updatedResource, asIri(previouslyApplicablePolicy));\r\n    });\r\n    return updatedResource;\r\n}\r\n/**\r\n * Set access to a Resource for a specific Agent.\r\n *\r\n * This function adds the relevant Access Control Policies and Rules to a\r\n * Resource's Access Control Resource to define the given access for the given\r\n * Agent specifically. In other words, it can, for example, add Policies that\r\n * give a particular Agent Read access to the Resource. However, if other\r\n * Policies specify that that Agent is *denied* Read access *except* if they're\r\n * in a particular Group, then that will be left intact.\r\n * This means that, unless *only* this function is used to manipulate access to\r\n * this Resource, the set access might not be equal to the effective access for\r\n * the given Agent.\r\n *\r\n * There are a number of preconditions that have to be fulfilled for this\r\n * function to work:\r\n * - Access to the Resource is determined via an Access Control Resource.\r\n * - The Resource's Access Control Resource does not refer to (Policies or Rules\r\n *   in) other Resources.\r\n * - The current user has access to the Resource's Access Control Resource.\r\n *\r\n * If those conditions do not hold, this function will return `null`.\r\n *\r\n * Additionally, take note that the given access will only be applied to the\r\n * given Resource; if that Resource is a Container, access will have to be set\r\n * for its contained Resources independently.\r\n *\r\n * @param resource Resource that was fetched together with its linked Access Control Resource.\r\n * @param acpData All Access Control Policies and Rules that apply to a particular Resource.\r\n * @param webId Which Agent you want to set the access for.\r\n * @param access What access (read, append, write, controlRead, controlWrite) to set for the given Agent. `true` to allow, `false` to deny, and `undefined` to leave unchanged.\r\n * @returns The Resource with the updated Access Control Resource attached, if updated successfully, or `null` if not.\r\n */\r\nfunction internal_setAgentAccess(resource, acpData, webId, access) {\r\n    return internal_setActorAccess(resource, acpData, acp.agent, webId, access);\r\n}\r\n/**\r\n * Set access to a Resource for a specific Group.\r\n *\r\n * This function adds the relevant Access Control Policies and Rules to a\r\n * Resource's Access Control Resource to define the given access for the given\r\n * Group specifically. In other words, it can, for example, add Policies that\r\n * give a particular Group Read access to the Resource. However, if other\r\n * Policies specify that it is *denied* Read access *except* if they're a\r\n * particular Agent, then that will be left intact.\r\n * This means that, unless *only* this module's functions are used to manipulate\r\n * access to this Resource, the set access might not be equal to the effective\r\n * access for Agents in the given Group.\r\n *\r\n * There are a number of preconditions that have to be fulfilled for this\r\n * function to work:\r\n * - Access to the Resource is determined via an Access Control Resource.\r\n * - The Resource's Access Control Resource does not refer to (Policies or Rules\r\n *   in) other Resources.\r\n * - The current user has access to the Resource's Access Control Resource.\r\n *\r\n * If those conditions do not hold, this function will return `null`.\r\n *\r\n * Additionally, take note that the given access will only be applied to the\r\n * given Resource; if that Resource is a Container, access will have to be set\r\n * for its contained Resources independently.\r\n *\r\n * @param resource Resource that was fetched together with its linked Access Control Resource.\r\n * @param acpData All Access Control Policies and Rules that apply to a particular Resource.\r\n * @param groupUrl Which Group you want to set the access for.\r\n * @param access What access (read, append, write, controlRead, controlWrite) to set for the given Group. `true` to allow, `false` to deny, and `undefined` to leave unchanged.\r\n * @returns The Resource with the updated Access Control Resource attached, if updated successfully, or `null` if not.\r\n */\r\nfunction internal_setGroupAccess(resource, acpData, groupUrl, access) {\r\n    return internal_setActorAccess(resource, acpData, acp.group, groupUrl, access);\r\n}\r\n/**\r\n * Set access to a Resource for everybody.\r\n *\r\n * This function adds the relevant Access Control Policies and Rules to a\r\n * Resource's Access Control Resource to define the given access for everybody\r\n * specifically. In other words, it can, for example, add Policies that\r\n * give everybody Read access to the Resource. However, if other\r\n * Policies specify that everybody is *denied* Read access *except* if they're\r\n * in a particular Group, then that will be left intact.\r\n * This means that, unless *only* this module's functions are used to manipulate\r\n * access to this Resource, the set access might not be equal to the effective\r\n * access for a particular Agent.\r\n *\r\n * There are a number of preconditions that have to be fulfilled for this\r\n * function to work:\r\n * - Access to the Resource is determined via an Access Control Resource.\r\n * - The Resource's Access Control Resource does not refer to (Policies or Rules\r\n *   in) other Resources.\r\n * - The current user has access to the Resource's Access Control Resource.\r\n *\r\n * If those conditions do not hold, this function will return `null`.\r\n *\r\n * Additionally, take note that the given access will only be applied to the\r\n * given Resource; if that Resource is a Container, access will have to be set\r\n * for its contained Resources independently.\r\n *\r\n * @param resource Resource that was fetched together with its linked Access Control Resource.\r\n * @param acpData All Access Control Policies and Rules that apply to a particular Resource.\r\n * @param access What access (read, append, write, controlRead, controlWrite) to set for everybody. `true` to allow, `false` to deny, and `undefined` to leave unchanged.\r\n * @returns The Resource with the updated Access Control Resource attached, if updated successfully, or `null` if not.\r\n */\r\nfunction internal_setPublicAccess(resource, acpData, access) {\r\n    return internal_setActorAccess(resource, acpData, acp.agent, acp.PublicAgent, access);\r\n}\r\nfunction policyHasOtherActors(policy, actorRelation, actor, acpData) {\r\n    // Note: the non-null assertions (`!`) here should be valid because\r\n    //       the caller of `policyHasOtherActors` should already have validated\r\n    //       that the return value of internal_getPoliciesAndRules() did not have\r\n    //       any inaccessible URLs, so we should be able to find every Rule.\r\n    const allOfRules = getIriAll(policy, acp.allOf).map((ruleUrl) => acpData.rules.find((rule) => asIri(rule) === ruleUrl));\r\n    const allOfRulesHaveOtherActors = allOfRules.some((rule) => {\r\n        return ruleHasOtherActors(rule, actorRelation, actor);\r\n    });\r\n    const anyOfRules = getIriAll(policy, acp.anyOf).map((ruleUrl) => acpData.rules.find((rule) => asIri(rule) === ruleUrl));\r\n    const anyOfRulesHaveOtherActors = anyOfRules.some((rule) => {\r\n        return ruleHasOtherActors(rule, actorRelation, actor);\r\n    });\r\n    /* istanbul ignore next This function only gets called after policyAppliesTo, which already filters out all noneOf Rules */\r\n    const noneOfRules = getIriAll(policy, acp.noneOf).map((ruleUrl) => acpData.rules.find((rule) => asIri(rule) === ruleUrl));\r\n    /* istanbul ignore next This function only gets called after policyAppliesTo, which already filters out all noneOf Rules */\r\n    const noneOfRulesHaveOtherActors = noneOfRules.some((rule) => {\r\n        return ruleHasOtherActors(rule, actorRelation, actor);\r\n    });\r\n    return (allOfRulesHaveOtherActors ||\r\n        anyOfRulesHaveOtherActors ||\r\n        noneOfRulesHaveOtherActors);\r\n}\r\nfunction ruleHasOtherActors(rule, actorRelation, actor) {\r\n    const otherActors = [];\r\n    knownActorRelations.forEach((knownActorRelation) => {\r\n        const otherActorsWithThisRelation = getIriAll(rule, knownActorRelation).filter((applicableActor) => applicableActor !== actor || knownActorRelation !== actorRelation);\r\n        // Unfortunately Node 10 does not support `.flat()` yet, hence the use of `push`:\r\n        otherActors.push(...otherActorsWithThisRelation);\r\n    });\r\n    return otherActors.length > 0;\r\n}\r\nfunction copyPolicyExcludingActor(inputPolicy, resourceWithAcr, acpData, actorRelationToExclude, actorToExclude) {\r\n    const newIriSuffix = \"_copy_without\" +\r\n        `_${encodeURIComponent(actorRelationToExclude)}_${actorToExclude}` +\r\n        `_${Date.now()}_${Math.random()}`;\r\n    // Create new Rules for the Policy, excluding the given Actor\r\n    const newAllOfRules = copyRulesExcludingActor(getIriAll(inputPolicy, acp.allOf), resourceWithAcr, acpData, newIriSuffix, actorRelationToExclude, actorToExclude);\r\n    const newAnyOfRules = copyRulesExcludingActor(getIriAll(inputPolicy, acp.anyOf), resourceWithAcr, acpData, newIriSuffix, actorRelationToExclude, actorToExclude);\r\n    const newNoneOfRules = copyRulesExcludingActor(getIriAll(inputPolicy, acp.noneOf), resourceWithAcr, acpData, newIriSuffix, actorRelationToExclude, actorToExclude);\r\n    // Create a new Policy with the new Rules\r\n    let newPolicy = createResourcePolicyFor(resourceWithAcr, encodeURI(asIri(inputPolicy)) + newIriSuffix);\r\n    getIriAll(inputPolicy, acp.allow).forEach((allowMode) => {\r\n        newPolicy = addIri(newPolicy, acp.allow, allowMode);\r\n    });\r\n    getIriAll(inputPolicy, acp.deny).forEach((denyMode) => {\r\n        newPolicy = addIri(newPolicy, acp.deny, denyMode);\r\n    });\r\n    newAllOfRules.forEach((newRule) => {\r\n        newPolicy = addIri(newPolicy, acp.allOf, newRule);\r\n    });\r\n    newAnyOfRules.forEach((newRule) => {\r\n        newPolicy = addIri(newPolicy, acp.anyOf, newRule);\r\n    });\r\n    /* istanbul ignore next Policies listing noneOf Rules are left alone (because they do not unambiguously apply to the given actor always), so there will usually not be any noneOf Rules to copy. */\r\n    newNoneOfRules.forEach((newRule) => {\r\n        newPolicy = addIri(newPolicy, acp.noneOf, newRule);\r\n    });\r\n    return [\r\n        newPolicy,\r\n        newAllOfRules.concat(newAnyOfRules).concat(newNoneOfRules),\r\n    ];\r\n}\r\n/** Creates clones of all the Rules identified by `ruleIris` in `acpData`, excluding the given Actor */\r\nfunction copyRulesExcludingActor(ruleIris, resourceWithAcr, acpData, iriSuffix, actorRelationToExclude, actorToExclude) {\r\n    return ruleIris\r\n        .map((ruleIri) => {\r\n        const rule = acpData.rules.find((rule) => asIri(rule) === ruleIri);\r\n        /* istanbul ignore if: getPoliciesAndRules should already have fetched all referenced Rules, so this should never be true: */\r\n        if (typeof rule === \"undefined\") {\r\n            return null;\r\n        }\r\n        let newRule = createResourceRuleFor(resourceWithAcr, encodeURI(asIri(rule)) + iriSuffix);\r\n        let listsOtherActors = false;\r\n        knownActorRelations.forEach((knownActorRelation) => {\r\n            getIriAll(rule, knownActorRelation).forEach((targetActor) => {\r\n                if (knownActorRelation === actorRelationToExclude &&\r\n                    targetActor === actorToExclude) {\r\n                    return;\r\n                }\r\n                listsOtherActors = true;\r\n                newRule = addIri(newRule, knownActorRelation, targetActor);\r\n            });\r\n        });\r\n        return listsOtherActors ? newRule : null;\r\n    })\r\n        .filter(isNotNull);\r\n}\r\nfunction isNotNull(value) {\r\n    return value !== null;\r\n}\r\nasync function internal_getPoliciesAndRules(resource, options = internal_defaultFetchOptions) {\r\n    const acrPolicyUrls = getAcrPolicyUrlAll(resource);\r\n    const policyUrls = getPolicyUrlAll(resource);\r\n    const allPolicyResourceUrls = getResourceUrls(acrPolicyUrls).concat(getResourceUrls(policyUrls));\r\n    const policyResources = await getResources(allPolicyResourceUrls, options);\r\n    const acrPolicies = getThingsFromResources(acrPolicyUrls, policyResources).filter(isNotNull);\r\n    const policies = getThingsFromResources(policyUrls, policyResources).filter(isNotNull);\r\n    const ruleUrlSet = new Set();\r\n    acrPolicies.forEach((acrPolicy) => {\r\n        const referencedRuleUrls = getReferencedRuleUrls(acrPolicy);\r\n        referencedRuleUrls.forEach((ruleUrl) => {\r\n            ruleUrlSet.add(ruleUrl);\r\n        });\r\n    });\r\n    policies.forEach((policy) => {\r\n        const referencedRuleUrls = getReferencedRuleUrls(policy);\r\n        referencedRuleUrls.forEach((ruleUrl) => {\r\n            ruleUrlSet.add(ruleUrl);\r\n        });\r\n    });\r\n    const ruleUrls = Array.from(ruleUrlSet);\r\n    const ruleResourceUrls = ruleUrls.map((ruleUrl) => getResourceUrl(ruleUrl));\r\n    const unfetchedRuleResourceUrls = ruleResourceUrls.filter((ruleResourceUrl) => !allPolicyResourceUrls.includes(ruleResourceUrl));\r\n    const ruleResources = await getResources(unfetchedRuleResourceUrls, options);\r\n    const allResources = Object.assign(Object.assign({}, policyResources), ruleResources);\r\n    const rules = getThingsFromResources(ruleUrls, allResources).filter(isNotNull);\r\n    const inaccessibleUrls = Object.keys(allResources).filter((resourceUrl) => allResources[resourceUrl] === null);\r\n    return {\r\n        inaccessibleUrls: inaccessibleUrls,\r\n        acrPolicies: acrPolicies,\r\n        policies: policies,\r\n        rules: rules,\r\n    };\r\n}\r\nfunction getResourceUrl(thingUrl) {\r\n    const thingUrlObject = new URL(thingUrl);\r\n    thingUrlObject.hash = \"\";\r\n    return thingUrlObject.href;\r\n}\r\nfunction getResourceUrls(thingUrls) {\r\n    const resourceUrls = [];\r\n    thingUrls.forEach((thingUrl) => {\r\n        const resourceUrl = getResourceUrl(thingUrl);\r\n        if (!resourceUrls.includes(resourceUrl)) {\r\n            resourceUrls.push(resourceUrl);\r\n        }\r\n    });\r\n    return resourceUrls;\r\n}\r\nasync function getResources(resourceUrls, options) {\r\n    const uniqueResourceUrls = Array.from(new Set(resourceUrls));\r\n    const resources = {};\r\n    await Promise.all(uniqueResourceUrls.map(async (resourceUrl) => {\r\n        try {\r\n            const resource = await getSolidDataset(resourceUrl, options);\r\n            resources[resourceUrl] = resource;\r\n        }\r\n        catch (e) {\r\n            resources[resourceUrl] = null;\r\n        }\r\n    }));\r\n    return resources;\r\n}\r\nfunction getThingsFromResources(thingUrls, resources) {\r\n    return thingUrls.map((thingUrl) => {\r\n        const resourceUrl = getResourceUrl(thingUrl);\r\n        const resource = resources[resourceUrl];\r\n        if (!resource) {\r\n            return null;\r\n        }\r\n        return getThing(resource, thingUrl);\r\n    });\r\n}\r\nfunction getReferencedRuleUrls(policy) {\r\n    return getAllOfRuleUrlAll(policy)\r\n        .concat(getAnyOfRuleUrlAll(policy))\r\n        .concat(getNoneOfRuleUrlAll(policy));\r\n}\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Get an overview of what access is defined for a given Agent.\r\n *\r\n * This function works with Solid Pods that implement either the Web Access\r\n * Control spec or the Access Control Policies proposal, with some caveats:\r\n *\r\n * - If access to the given Resource has been set using anything other than the\r\n *   functions in this module, it is possible that it has been set in a way that\r\n *   prevents this function from reliably reading access, in which case it will\r\n *   resolve to `null`.\r\n * - It will only return access specified explicitly for the given Agent. If\r\n *   additional restrictions are set up to apply to the given Agent in a\r\n *   particular situation, those will not be reflected in the return value of\r\n *   this function.\r\n * - It will only return access specified explicitly for the given Resource.\r\n *   In other words, if the Resource is a Container, the returned Access may not\r\n *   apply to contained Resources.\r\n * - If the current user does not have permission to view access for the given\r\n *   Resource, this function will resolve to `null`.\r\n *\r\n * @param resourceUrl URL of the Resource you want to read the access for.\r\n * @param webId WebID of the Agent you want to get the access for.\r\n * @since 1.5.0\r\n */\r\nasync function getAgentAccess$1(resourceUrl, webId, options = internal_defaultFetchOptions) {\r\n    const resourceInfo = await getResourceInfoWithAcr(resourceUrl, options);\r\n    if (hasAccessibleAcr(resourceInfo)) {\r\n        const acpData = await internal_getPoliciesAndRules(resourceInfo, options);\r\n        return internal_getAgentAccess(acpData, webId);\r\n    }\r\n    if (hasAccessibleAcl(resourceInfo)) {\r\n        return await getAgentAccess$2(resourceInfo, webId, options);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Set access to a Resource for a specific Agent.\r\n *\r\n * This function works with Solid Pods that implement either the Web Access\r\n * Control spec or the Access Control Policies proposal, with some caveats:\r\n *\r\n * - If access to the given Resource has been set using anything other than the\r\n *   functions in this module, it is possible that it has been set in a way that\r\n *   prevents this function from reliably setting access, in which case it will\r\n *   resolve to `null`.\r\n * - It will only set access explicitly for the given Agent. In other words,\r\n *   additional restrictions could be present that further restrict or loosen\r\n *   what access the given Agent has in particular circumstances.\r\n * - The provided access will only apply to the given Resource. In other words,\r\n *   if the Resource is a Container, the configured Access may not apply to\r\n *   contained Resources.\r\n * - If the current user does not have permission to view or change access for\r\n *   the given Resource, this function will resolve to `null`.\r\n *\r\n * Additionally, two caveats apply to users with a Pod server that uses WAC:\r\n * - If the Resource did not have an ACL yet, a new one will be initialised.\r\n *   This means that changes to the ACL of a parent Container can no longer\r\n *   affect access people have to this Resource, although existing access will\r\n *   be preserved.\r\n * - Setting different values for `controlRead` and `controlWrite` is not\r\n *   supported, and **will throw an error**. If you expect (some of) your users\r\n *   to have Pods implementing WAC, be sure to pass the same value for both.\r\n *\r\n * @param resourceUrl URL of the Resource you want to change the Agent's access to.\r\n * @param webId WebID of the Agent you want to set access for.\r\n * @param access What access permissions you want to set for the given Agent to the given Resource. Possible properties are `read`, `append`, `write`, `controlRead` and `controlWrite`: set to `true` to allow, to `false` to stop allowing, or `undefined` to leave unchanged. Take note that `controlRead` and `controlWrite` can not have distinct values for a Pod server implementing Web Access Control; trying this will throw an error.\r\n * @returns What access has been set for the given Agent explicitly.\r\n * @since 1.5.0\r\n */\r\nasync function setAgentAccess$1(resourceUrl, webId, access, options = internal_defaultFetchOptions) {\r\n    const resourceInfo = await getResourceInfoWithAcr(resourceUrl, options);\r\n    if (hasAccessibleAcr(resourceInfo)) {\r\n        const acpData = await internal_getPoliciesAndRules(resourceInfo, options);\r\n        const updatedResource = internal_setAgentAccess(resourceInfo, acpData, webId, access);\r\n        if (updatedResource) {\r\n            try {\r\n                await saveAcrFor(updatedResource, options);\r\n                return await getAgentAccess$1(resourceUrl, webId, options);\r\n            }\r\n            catch (e) {\r\n                return null;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    if (hasAccessibleAcl(resourceInfo)) {\r\n        if (access.controlRead != access.controlWrite) {\r\n            throw new Error(`When setting access for a Resource in a Pod implementing Web Access Control (i.e. [${getSourceIri(resourceInfo)}]), ` + \"`controlRead` and `controlWrite` should have the same value.\");\r\n        }\r\n        const wacAccess = access;\r\n        await setAgentResourceAccess(resourceInfo, webId, wacAccess, options);\r\n        return await getAgentAccess$2(resourceInfo, webId, options);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Get an overview of what access is defined for all Agents with respect to a given\r\n * Resource.\r\n *\r\n * This function works with Solid Pods that implement either the Web Access\r\n * Control spec or the Access Control Policies proposal, with some caveats:\r\n *\r\n * - If access to the given Resource has been set using anything other than the\r\n *   functions in this module, it is possible that it has been set in a way that\r\n *   prevents this function from reliably reading access, in which case it will\r\n *   resolve to `null`.\r\n * - It will only return access specified explicitly for the returned Agents. If\r\n *   additional restrictions are set up to apply to the listed Agents in a\r\n *   particular situation, those will not be reflected in the return value of\r\n *   this function.\r\n * - It will only return access specified explicitly for the given Resource.\r\n *   In other words, if the Resource is a Container, the returned Access may not\r\n *   apply to contained Resources.\r\n * - If the current user does not have permission to view access for the given\r\n *   Resource, this function will resolve to `null`.\r\n *\r\n * @param resourceUrl URL of the Resource you want to read the access for.\r\n * @returns The access information to the Resource, grouped by Agent.\r\n * @since 1.5.0\r\n */\r\nasync function getAgentAccessAll$1(resourceUrl, options = internal_defaultFetchOptions) {\r\n    const resourceInfo = await getResourceInfoWithAcr(resourceUrl, options);\r\n    if (hasAccessibleAcr(resourceInfo)) {\r\n        const acpData = await internal_getPoliciesAndRules(resourceInfo, options);\r\n        return internal_getAgentAccessAll(acpData);\r\n    }\r\n    if (hasAccessibleAcl(resourceInfo)) {\r\n        return await getAgentAccessAll$2(resourceInfo, options);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Get an overview of what access is defined for a given Group.\r\n *\r\n * This function works with Solid Pods that implement either the Web Access\r\n * Control spec or the Access Control Policies proposal, with some caveats:\r\n *\r\n * - If access to the given Resource has been set using anything other than the\r\n *   functions in this module, it is possible that it has been set in a way that\r\n *   prevents this function from reliably reading access, in which case it will\r\n *   resolve to `null`.\r\n * - It will only return access specified explicitly for the given Group. If\r\n *   additional restrictions are set up to apply to the given Group in a\r\n *   particular situation, those will not be reflected in the return value of\r\n *   this function.\r\n * - It will only return access specified explicitly for the given Resource.\r\n *   In other words, if the Resource is a Container, the returned Access may not\r\n *   apply to contained Resources.\r\n * - If the current user does not have permission to view access for the given\r\n *   Resource, this function will resolve to `null`.\r\n *\r\n * @param resourceUrl URL of the Resource you want to read the access for.\r\n * @param webId WebID of the Group you want to get the access for.\r\n * @since 1.5.0\r\n * @deprecated Access Control Policies will no longer support vcard:Group. Use the mechanism-specific access API's if you want to define access for groups of people.\r\n */\r\nasync function getGroupAccess(resourceUrl, webId, options = internal_defaultFetchOptions) {\r\n    const resourceInfo = await getResourceInfoWithAcr(resourceUrl, options);\r\n    if (hasAccessibleAcr(resourceInfo)) {\r\n        const acpData = await internal_getPoliciesAndRules(resourceInfo, options);\r\n        return internal_getGroupAccess(acpData, webId);\r\n    }\r\n    if (hasAccessibleAcl(resourceInfo)) {\r\n        return await getGroupAccess$1(resourceInfo, webId, options);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Get an overview of what access is defined for all Groups with respect to a given\r\n * Resource.\r\n *\r\n * This function works with Solid Pods that implement either the Web Access\r\n * Control spec or the Access Control Policies proposal, with some caveats:\r\n *\r\n * - If access to the given Resource has been set using anything other than the\r\n *   functions in this module, it is possible that it has been set in a way that\r\n *   prevents this function from reliably reading access, in which case it will\r\n *   resolve to `null`.\r\n * - It will only return access specified explicitly for the returned Groups. If\r\n *   additional restrictions are set up to apply to the listed Groups in a\r\n *   particular situation, those will not be reflected in the return value of\r\n *   this function.\r\n * - It will only return access specified explicitly for the given Resource.\r\n *   In other words, if the Resource is a Container, the returned Access may not\r\n *   apply to contained Resources.\r\n * - If the current user does not have permission to view access for the given\r\n *   Resource, this function will resolve to `null`.\r\n *\r\n * @param resourceUrl URL of the Resource you want to read the access for.\r\n * @returns The access information to the Resource, sorted by Group.\r\n * @since 1.5.0\r\n * @deprecated Access Control Policies will no longer support vcard:Group. Use the mechanism-specific access API's if you want to define access for groups of people.\r\n */\r\nasync function getGroupAccessAll(resourceUrl, options = internal_defaultFetchOptions) {\r\n    const resourceInfo = await getResourceInfoWithAcr(resourceUrl, options);\r\n    if (hasAccessibleAcr(resourceInfo)) {\r\n        const acpData = await internal_getPoliciesAndRules(resourceInfo, options);\r\n        return internal_getGroupAccessAll(acpData);\r\n    }\r\n    if (hasAccessibleAcl(resourceInfo)) {\r\n        return await getGroupAccessAll$1(resourceInfo, options);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Set access to a Resource for a specific Group.\r\n *\r\n * This function works with Solid Pods that implement either the Web Access\r\n * Control spec or the Access Control Policies proposal, with some caveats:\r\n *\r\n * - If access to the given Resource has been set using anything other than the\r\n *   functions in this module, it is possible that it has been set in a way that\r\n *   prevents this function from reliably setting access, in which case it will\r\n *   resolve to `null`.\r\n * - It will only set access explicitly for the given Group. In other words,\r\n *   additional restrictions could be present that further restrict or loosen\r\n *   what access the given Group has in particular circumstances.\r\n * - The provided access will only apply to the given Resource. In other words,\r\n *   if the Resource is a Container, the configured Access may not apply to\r\n *   contained Resources.\r\n * - If the current user does not have permission to view or change access for\r\n *   the given Resource, this function will resolve to `null`.\r\n *\r\n * Additionally, two caveats apply to users with a Pod server that uses WAC:\r\n * - If the Resource did not have an ACL yet, a new one will be initialised.\r\n *   This means that changes to the ACL of a parent Container can no longer\r\n *   affect access people have to this Resource, although existing access will\r\n *   be preserved.\r\n * - Setting different values for `controlRead` and `controlWrite` is not\r\n *   supported, and **will throw an error**. If you expect (some of) your users\r\n *   to have Pods implementing WAC, be sure to pass the same value for both.\r\n *\r\n * @param resourceUrl URL of the Resource you want to change the Group's access to.\r\n * @param groupUrl URL of the Group you want to set access for.\r\n * @param access What access permissions you want to set for the given Group to the given Resource. Possible properties are `read`, `append`, `write`, `controlRead` and `controlWrite`: set to `true` to allow, to `false` to stop allowing, or `undefined` to leave unchanged. Take note that `controlRead` and `controlWrite` can not have distinct values for a Pod server implementing Web Access Control; trying this will throw an error.\r\n * @returns What access has been set for the given Group explicitly.\r\n * @since 1.5.0\r\n * @deprecated Access Control Policies will no longer support vcard:Group. Use the mechanism-specific access API's if you want to define access for groups of people.\r\n */\r\nasync function setGroupAccess(resourceUrl, groupUrl, access, options = internal_defaultFetchOptions) {\r\n    const resourceInfo = await getResourceInfoWithAcr(resourceUrl, options);\r\n    if (hasAccessibleAcr(resourceInfo)) {\r\n        const acpData = await internal_getPoliciesAndRules(resourceInfo, options);\r\n        const updatedResource = internal_setGroupAccess(resourceInfo, acpData, groupUrl, access);\r\n        if (updatedResource) {\r\n            try {\r\n                await saveAcrFor(updatedResource, options);\r\n                return getGroupAccess(resourceUrl, groupUrl, options);\r\n            }\r\n            catch (e) {\r\n                return null;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    if (hasAccessibleAcl(resourceInfo)) {\r\n        if (access.controlRead != access.controlWrite) {\r\n            throw new Error(`When setting access for a Resource in a Pod implementing Web Access Control (i.e. [${getSourceIri(resourceInfo)}]), ` + \"`controlRead` and `controlWrite` should have the same value.\");\r\n        }\r\n        const wacAccess = access;\r\n        await setGroupResourceAccess(resourceInfo, groupUrl, wacAccess, options);\r\n        return await getGroupAccess$1(resourceInfo, groupUrl, options);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Get an overview of what access is defined for everyone.\r\n *\r\n * This function works with Solid Pods that implement either the Web Access\r\n * Control spec or the Access Control Policies proposal, with some caveats:\r\n *\r\n * - If access to the given Resource has been set using anything other than the\r\n *   functions in this module, it is possible that it has been set in a way that\r\n *   prevents this function from reliably reading access, in which case it will\r\n *   resolve to `null`.\r\n * - It will only return access specified explicitly for everyone. If\r\n *   additional restrictions are set up to apply to users in a particular\r\n *   situation, those will not be reflected in the return value of this\r\n *   function.\r\n * - It will only return access specified explicitly for the given Resource.\r\n *   In other words, if the Resource is a Container, the returned Access may not\r\n *   apply to contained Resources.\r\n * - If the current user does not have permission to view access for the given\r\n *   Resource, this function will resolve to `null`.\r\n *\r\n * @param resourceUrl URL of the Resource you want to read the access for.\r\n * @since 1.5.0\r\n */\r\nasync function getPublicAccess$1(resourceUrl, options = internal_defaultFetchOptions) {\r\n    const resourceInfo = await getResourceInfoWithAcr(resourceUrl, options);\r\n    if (hasAccessibleAcr(resourceInfo)) {\r\n        const acpData = await internal_getPoliciesAndRules(resourceInfo, options);\r\n        return internal_getPublicAccess(acpData);\r\n    }\r\n    if (hasAccessibleAcl(resourceInfo)) {\r\n        return await getPublicAccess$2(resourceInfo, options);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Set access to a Resource for everybody.\r\n *\r\n * This function works with Solid Pods that implement either the Web Access\r\n * Control spec or the Access Control Policies proposal, with some caveats:\r\n *\r\n * - If access to the given Resource has been set using anything other than the\r\n *   functions in this module, it is possible that it has been set in a way that\r\n *   prevents this function from reliably setting access, in which case it will\r\n *   resolve to `null`.\r\n * - It will only set access explicitly for everybody. In other words,\r\n *   additional restrictions could be present that further restrict or loosen\r\n *   what access a user has in particular circumstances.\r\n * - The provided access will only apply to the given Resource. In other words,\r\n *   if the Resource is a Container, the configured Access may not apply to\r\n *   contained Resources.\r\n * - If the current user does not have permission to view or change access for\r\n *   the given Resource, this function will resolve to `null`.\r\n *\r\n * Additionally, two caveats apply to users with a Pod server that uses WAC:\r\n * - If the Resource did not have an ACL yet, a new one will be initialised.\r\n *   This means that changes to the ACL of a parent Container can no longer\r\n *   affect access people have to this Resource, although existing access will\r\n *   be preserved.\r\n * - Setting different values for `controlRead` and `controlWrite` is not\r\n *   supported, and **will throw an error**. If you expect (some of) your users\r\n *   to have Pods implementing WAC, be sure to pass the same value for both.\r\n *\r\n * @param resourceUrl URL of the Resource you want to change public access to.\r\n * @param access What access permissions you want to set for everybody to the given Resource. Possible properties are `read`, `append`, `write`, `controlRead` and `controlWrite`: set to `true` to allow, to `false` to stop allowing, or `undefined` to leave unchanged. Take note that `controlRead` and `controlWrite` can not have distinct values for a Pod server implementing Web Access Control; trying this will throw an error.\r\n * @returns What access has been set for everybody explicitly.\r\n * @since 1.5.0\r\n */\r\nasync function setPublicAccess$1(resourceUrl, access, options = internal_defaultFetchOptions) {\r\n    const resourceInfo = await getResourceInfoWithAcr(resourceUrl, options);\r\n    if (hasAccessibleAcr(resourceInfo)) {\r\n        const acpData = await internal_getPoliciesAndRules(resourceInfo, options);\r\n        const updatedResource = internal_setPublicAccess(resourceInfo, acpData, access);\r\n        if (updatedResource) {\r\n            try {\r\n                await saveAcrFor(updatedResource, options);\r\n                return getPublicAccess$1(resourceUrl, options);\r\n            }\r\n            catch (e) {\r\n                return null;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    if (hasAccessibleAcl(resourceInfo)) {\r\n        if (access.controlRead != access.controlWrite) {\r\n            throw new Error(`When setting access for a Resource in a Pod implementing Web Access Control (i.e. [${getSourceIri(resourceInfo)}]), ` + \"`controlRead` and `controlWrite` should have the same value.\");\r\n        }\r\n        const wacAccess = access;\r\n        await setPublicResourceAccess(resourceInfo, wacAccess, options);\r\n        return await getPublicAccess$2(resourceInfo, options);\r\n    }\r\n    return null;\r\n}\n\nvar universal_v1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  getAgentAccess: getAgentAccess$1,\n  setAgentAccess: setAgentAccess$1,\n  getAgentAccessAll: getAgentAccessAll$1,\n  getGroupAccess: getGroupAccess,\n  getGroupAccessAll: getGroupAccessAll,\n  setGroupAccess: setGroupAccess,\n  getPublicAccess: getPublicAccess$1,\n  setPublicAccess: setPublicAccess$1,\n  getAccessFor: getAccessFor,\n  getAccessForAll: getAccessForAll,\n  setAccessFor: setAccessFor\n});\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\n\nvar universal = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  getAccessFor: getAccessFor,\n  getAccessForAll: getAccessForAll,\n  setAccessFor: setAccessFor,\n  getAgentAccess: getAgentAccess$1,\n  setAgentAccess: setAgentAccess$1,\n  getAgentAccessAll: getAgentAccessAll$1,\n  getGroupAccess: getGroupAccess,\n  getGroupAccessAll: getGroupAccessAll,\n  setGroupAccess: setGroupAccess,\n  getPublicAccess: getPublicAccess$1,\n  setPublicAccess: setPublicAccess$1\n});\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nasync function getAccessFor(resourceUrl, actorType, actor = internal_defaultFetchOptions, options = internal_defaultFetchOptions) {\r\n    if (actorType === \"agent\") {\r\n        if (typeof actor !== \"string\") {\r\n            throw new Error(\"When reading Agent-specific access, the given agent cannot be left undefined.\");\r\n        }\r\n        return await getAgentAccess$1(resourceUrl, actor, options);\r\n    }\r\n    if (actorType === \"group\") {\r\n        if (typeof actor !== \"string\") {\r\n            throw new Error(\"When reading Group-specific access, the given group cannot be left undefined.\");\r\n        }\r\n        return await getGroupAccess(resourceUrl, actor, options);\r\n    }\r\n    if (actorType === \"public\") {\r\n        if (typeof actor === \"string\") {\r\n            throw new Error(`When reading public access, no actor type should be specified (here [${actor}]).`);\r\n        }\r\n        return await getPublicAccess$1(resourceUrl, actor);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Get an overview of what access is defined for a given set of actors: all Agents\r\n * or all Groups.\r\n *\r\n * This function works with Solid Pods that implement either the Web Access\r\n * Control spec or the Access Control Policies proposal, with some caveats:\r\n *\r\n * - If access to the given Resource has been set using anything other than the\r\n *   functions in this module, it is possible that it has been set in a way that\r\n *   prevents this function from reliably reading access, in which case it will\r\n *   resolve to `null`.\r\n * - It will only return access specified explicitly for the given actor (Agent\r\n *   or Group). If additional restrictions are set up to apply to the given Agent\r\n *   in a particular situation, those will not be reflected in the return value\r\n *   of this function.\r\n * - It will only return access specified explicitly for the given Resource.\r\n *   In other words, if the Resource is a Container, the returned Access may not\r\n *   apply to contained Resources.\r\n * - If the current user does not have permission to view access for the given\r\n *   Resource, this function will resolve to `null`.\r\n *\r\n * @param resourceUrl URL of the Resource you want to read the access for.\r\n * @param actorType type of actor whose access is being read.\r\n * @returns What access is set for the given resource, grouped by resp. Agent or Group.\r\n * @since 1.5.0\r\n */\r\nasync function getAccessForAll(resourceUrl, actorType, options = internal_defaultFetchOptions) {\r\n    if (actorType === \"agent\") {\r\n        return await getAgentAccessAll$1(resourceUrl, options);\r\n    }\r\n    if (actorType === \"group\") {\r\n        return await getGroupAccessAll(resourceUrl, options);\r\n    }\r\n    return null;\r\n}\r\nasync function setAccessFor(resourceUrl, actorType, access, actor = internal_defaultFetchOptions, options = internal_defaultFetchOptions) {\r\n    if (actorType === \"agent\") {\r\n        if (typeof actor !== \"string\") {\r\n            throw new Error(\"When writing Agent-specific access, the given agent cannot be left undefined.\");\r\n        }\r\n        return await setAgentAccess$1(resourceUrl, actor, access, options);\r\n    }\r\n    if (actorType === \"group\") {\r\n        if (typeof actor !== \"string\") {\r\n            throw new Error(\"When writing Group-specific access, the given group cannot be left undefined.\");\r\n        }\r\n        return await setGroupAccess(resourceUrl, actor, access, options);\r\n    }\r\n    if (actorType === \"public\") {\r\n        if (typeof actor === \"string\") {\r\n            throw new Error(`When writing public access, no actor type should be specified (here [${actor}]).`);\r\n        }\r\n        return await setPublicAccess$1(resourceUrl, access, actor);\r\n    }\r\n    return null;\r\n}\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Get an overview of what access is defined for a given Agent.\r\n *\r\n * This function works with Solid Pods that implement either the Web Access\r\n * Control spec or the Access Control Policies proposal, with some caveats:\r\n *\r\n * - If access to the given Resource has been set using anything other than the\r\n *   functions in this module, it is possible that it has been set in a way that\r\n *   prevents this function from reliably reading access, in which case it will\r\n *   resolve to `null`.\r\n * - It will only return access specified explicitly for the given Agent. If\r\n *   additional restrictions are set up to apply to the given Agent in a\r\n *   particular situation, those will not be reflected in the return value of\r\n *   this function.\r\n * - It will only return access specified explicitly for the given Resource.\r\n *   In other words, if the Resource is a Container, the returned Access may not\r\n *   apply to contained Resources.\r\n * - If the current user does not have permission to view access for the given\r\n *   Resource, this function will resolve to `null`.\r\n *\r\n * @param resourceUrl URL of the Resource you want to read the access for.\r\n * @param webId WebID of the Agent you want to get the access for.\r\n * @since 1.5.0\r\n */\r\nasync function getAgentAccess(resourceUrl, webId, options = internal_defaultFetchOptions) {\r\n    const resourceInfo = await getResourceInfoWithAcr(resourceUrl, options);\r\n    if (hasAccessibleAcr(resourceInfo)) {\r\n        const acpData = await internal_getPoliciesAndMatchers(resourceInfo, options);\r\n        return internal_getAgentAccess$1(acpData, webId);\r\n    }\r\n    if (hasAccessibleAcl(resourceInfo)) {\r\n        return await getAgentAccess$2(resourceInfo, webId, options);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Set access to a Resource for a specific Agent.\r\n *\r\n * This function works with Solid Pods that implement either the Web Access\r\n * Control spec or the Access Control Policies proposal, with some caveats:\r\n *\r\n * - If access to the given Resource has been set using anything other than the\r\n *   functions in this module, it is possible that it has been set in a way that\r\n *   prevents this function from reliably setting access, in which case it will\r\n *   resolve to `null`.\r\n * - It will only set access explicitly for the given Agent. In other words,\r\n *   additional restrictions could be present that further restrict or loosen\r\n *   what access the given Agent has in particular circumstances.\r\n * - The provided access will only apply to the given Resource. In other words,\r\n *   if the Resource is a Container, the configured Access may not apply to\r\n *   contained Resources.\r\n * - If the current user does not have permission to view or change access for\r\n *   the given Resource, this function will resolve to `null`.\r\n *\r\n * Additionally, two caveats apply to users with a Pod server that uses WAC:\r\n * - If the Resource did not have an ACL yet, a new one will be initialised.\r\n *   This means that changes to the ACL of a parent Container can no longer\r\n *   affect access people have to this Resource, although existing access will\r\n *   be preserved.\r\n * - Setting different values for `controlRead` and `controlWrite` is not\r\n *   supported, and **will throw an error**. If you expect (some of) your users\r\n *   to have Pods implementing WAC, be sure to pass the same value for both.\r\n *\r\n * @param resourceUrl URL of the Resource you want to change the Agent's access to.\r\n * @param webId WebID of the Agent you want to set access for.\r\n * @param access What access permissions you want to set for the given Agent to the given Resource. Possible properties are `read`, `append`, `write`, `controlRead` and `controlWrite`: set to `true` to allow, to `false` to stop allowing, or `undefined` to leave unchanged. Take note that `controlRead` and `controlWrite` can not have distinct values for a Pod server implementing Web Access Control; trying this will throw an error.\r\n * @returns What access has been set for the given Agent explicitly.\r\n * @since 1.5.0\r\n */\r\nasync function setAgentAccess(resourceUrl, webId, access, options = internal_defaultFetchOptions) {\r\n    const resourceInfo = await getResourceInfoWithAcr(resourceUrl, options);\r\n    if (hasAccessibleAcr(resourceInfo)) {\r\n        const acpData = await internal_getPoliciesAndMatchers(resourceInfo, options);\r\n        const updatedResource = internal_setAgentAccess$1(resourceInfo, acpData, webId, access);\r\n        if (updatedResource) {\r\n            try {\r\n                await saveAcrFor(updatedResource, options);\r\n                return await getAgentAccess(resourceUrl, webId, options);\r\n            }\r\n            catch (e) {\r\n                return null;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    if (hasAccessibleAcl(resourceInfo)) {\r\n        if (access.controlRead != access.controlWrite) {\r\n            throw new Error(`When setting access for a Resource in a Pod implementing Web Access Control (i.e. [${getSourceIri(resourceInfo)}]), ` + \"`controlRead` and `controlWrite` should have the same value.\");\r\n        }\r\n        const wacAccess = access;\r\n        await setAgentResourceAccess(resourceInfo, webId, wacAccess, options);\r\n        return await getAgentAccess$2(resourceInfo, webId, options);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Get an overview of what access is defined for all Agents with respect to a given\r\n * Resource.\r\n *\r\n * This function works with Solid Pods that implement either the Web Access\r\n * Control spec or the Access Control Policies proposal, with some caveats:\r\n *\r\n * - If access to the given Resource has been set using anything other than the\r\n *   functions in this module, it is possible that it has been set in a way that\r\n *   prevents this function from reliably reading access, in which case it will\r\n *   resolve to `null`.\r\n * - It will only return access specified explicitly for the returned Agents. If\r\n *   additional restrictions are set up to apply to the listed Agents in a\r\n *   particular situation, those will not be reflected in the return value of\r\n *   this function.\r\n * - It will only return access specified explicitly for the given Resource.\r\n *   In other words, if the Resource is a Container, the returned Access may not\r\n *   apply to contained Resources.\r\n * - If the current user does not have permission to view access for the given\r\n *   Resource, this function will resolve to `null`.\r\n *\r\n * @param resourceUrl URL of the Resource you want to read the access for.\r\n * @returns The access information to the Resource, grouped by Agent.\r\n * @since 1.5.0\r\n */\r\nasync function getAgentAccessAll(resourceUrl, options = internal_defaultFetchOptions) {\r\n    const resourceInfo = await getResourceInfoWithAcr(resourceUrl, options);\r\n    if (hasAccessibleAcr(resourceInfo)) {\r\n        const acpData = await internal_getPoliciesAndMatchers(resourceInfo, options);\r\n        return internal_getAgentAccessAll$1(acpData);\r\n    }\r\n    if (hasAccessibleAcl(resourceInfo)) {\r\n        return await getAgentAccessAll$2(resourceInfo, options);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Get an overview of what access is defined for everyone.\r\n *\r\n * This function works with Solid Pods that implement either the Web Access\r\n * Control spec or the Access Control Policies proposal, with some caveats:\r\n *\r\n * - If access to the given Resource has been set using anything other than the\r\n *   functions in this module, it is possible that it has been set in a way that\r\n *   prevents this function from reliably reading access, in which case it will\r\n *   resolve to `null`.\r\n * - It will only return access specified explicitly for everyone. If\r\n *   additional restrictions are set up to apply to users in a particular\r\n *   situation, those will not be reflected in the return value of this\r\n *   function.\r\n * - It will only return access specified explicitly for the given Resource.\r\n *   In other words, if the Resource is a Container, the returned Access may not\r\n *   apply to contained Resources.\r\n * - If the current user does not have permission to view access for the given\r\n *   Resource, this function will resolve to `null`.\r\n *\r\n * @param resourceUrl URL of the Resource you want to read the access for.\r\n * @since 1.5.0\r\n */\r\nasync function getPublicAccess(resourceUrl, options = internal_defaultFetchOptions) {\r\n    const resourceInfo = await getResourceInfoWithAcr(resourceUrl, options);\r\n    if (hasAccessibleAcr(resourceInfo)) {\r\n        const acpData = await internal_getPoliciesAndMatchers(resourceInfo, options);\r\n        return internal_getPublicAccess$1(acpData);\r\n    }\r\n    if (hasAccessibleAcl(resourceInfo)) {\r\n        return await getPublicAccess$2(resourceInfo, options);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Set access to a Resource for everybody.\r\n *\r\n * This function works with Solid Pods that implement either the Web Access\r\n * Control spec or the Access Control Policies proposal, with some caveats:\r\n *\r\n * - If access to the given Resource has been set using anything other than the\r\n *   functions in this module, it is possible that it has been set in a way that\r\n *   prevents this function from reliably setting access, in which case it will\r\n *   resolve to `null`.\r\n * - It will only set access explicitly for everybody. In other words,\r\n *   additional restrictions could be present that further restrict or loosen\r\n *   what access a user has in particular circumstances.\r\n * - The provided access will only apply to the given Resource. In other words,\r\n *   if the Resource is a Container, the configured Access may not apply to\r\n *   contained Resources.\r\n * - If the current user does not have permission to view or change access for\r\n *   the given Resource, this function will resolve to `null`.\r\n *\r\n * Additionally, two caveats apply to users with a Pod server that uses WAC:\r\n * - If the Resource did not have an ACL yet, a new one will be initialised.\r\n *   This means that changes to the ACL of a parent Container can no longer\r\n *   affect access people have to this Resource, although existing access will\r\n *   be preserved.\r\n * - Setting different values for `controlRead` and `controlWrite` is not\r\n *   supported, and **will throw an error**. If you expect (some of) your users\r\n *   to have Pods implementing WAC, be sure to pass the same value for both.\r\n *\r\n * @param resourceUrl URL of the Resource you want to change public access to.\r\n * @param access What access permissions you want to set for everybody to the given Resource. Possible properties are `read`, `append`, `write`, `controlRead` and `controlWrite`: set to `true` to allow, to `false` to stop allowing, or `undefined` to leave unchanged. Take note that `controlRead` and `controlWrite` can not have distinct values for a Pod server implementing Web Access Control; trying this will throw an error.\r\n * @returns What access has been set for everybody explicitly.\r\n * @since 1.5.0\r\n */\r\nasync function setPublicAccess(resourceUrl, access, options = internal_defaultFetchOptions) {\r\n    const resourceInfo = await getResourceInfoWithAcr(resourceUrl, options);\r\n    if (hasAccessibleAcr(resourceInfo)) {\r\n        const acpData = await internal_getPoliciesAndMatchers(resourceInfo, options);\r\n        const updatedResource = internal_setPublicAccess$1(resourceInfo, acpData, access);\r\n        if (updatedResource) {\r\n            try {\r\n                await saveAcrFor(updatedResource, options);\r\n                return getPublicAccess(resourceUrl, options);\r\n            }\r\n            catch (e) {\r\n                return null;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    if (hasAccessibleAcl(resourceInfo)) {\r\n        if (access.controlRead != access.controlWrite) {\r\n            throw new Error(`When setting access for a Resource in a Pod implementing Web Access Control (i.e. [${getSourceIri(resourceInfo)}]), ` + \"`controlRead` and `controlWrite` should have the same value.\");\r\n        }\r\n        const wacAccess = access;\r\n        await setPublicResourceAccess(resourceInfo, wacAccess, options);\r\n        return await getPublicAccess$2(resourceInfo, options);\r\n    }\r\n    return null;\r\n}\n\nvar universal_v2 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  getAgentAccess: getAgentAccess,\n  setAgentAccess: setAgentAccess,\n  getAgentAccessAll: getAgentAccessAll,\n  getPublicAccess: getPublicAccess,\n  setPublicAccess: setPublicAccess,\n  getAccessFor: getAccessFor,\n  getAccessForAll: getAccessForAll,\n  setAccessFor: setAccessFor\n});\n\nexport { FetchError, SolidClientError, ThingExpectedError, universal as access, universal_v1 as access_v1, universal_v2 as access_v2, acp_v1, acp_v2, acp_v3, acp_v4, addBoolean, addDate, addDatetime, addDecimal, addInteger, addIri, addJwkToJwks, addLiteral, addMockFallbackAclTo, addMockResourceAclTo, addNamedNode, addPublicKeyToProfileJwks, addStringNoLocale, addStringWithLocale, addTerm, addTime, addUrl, asIri, asUrl, buildThing, changeLogAsMarkdown, createAcl, createAclFromFallbackAcl, createContainerAt, createContainerInContainer, createSolidDataset, createThing, deleteAclFor, deleteContainer, deleteFile, deleteSolidDataset, fromRdfJsDataset, getAgentAccess$3 as getAgentAccess, getAgentAccessAll$3 as getAgentAccessAll, getAgentDefaultAccess, getAgentDefaultAccessAll, getAgentResourceAccess, getAgentResourceAccessAll, getBoolean, getBooleanAll, getContainedResourceUrlAll, getContentType$1 as getContentType, getDate, getDateAll, getDatetime, getDatetimeAll, getDecimal, getDecimalAll, getEffectiveAccess, getFallbackAcl, getFile, getFileWithAcl, getGroupAccess$2 as getGroupAccess, getGroupAccessAll$2 as getGroupAccessAll, getGroupDefaultAccess, getGroupDefaultAccessAll, getGroupResourceAccess, getGroupResourceAccessAll, getInteger, getIntegerAll, getIri, getIriAll, getLinkedResourceUrlAll, getLiteral, getLiteralAll, getNamedNode, getNamedNodeAll, getPodOwner, getProfileJwksIri, getPropertyAll, getPublicAccess$3 as getPublicAccess, getPublicDefaultAccess, getPublicResourceAccess, getResourceAcl, getResourceInfo, getResourceInfoWithAcl, getSolidDataset, getSolidDatasetWithAcl, getSourceIri, getSourceUrl, getStringByLocaleAll, getStringNoLocale, getStringNoLocaleAll, getStringWithLocale, getStringWithLocaleAll, getTerm, getTermAll, getThing, getThingAll, getTime, getTimeAll, getUrl, getUrlAll, getWellKnownSolid, hasAccessibleAcl, hasAcl, hasFallbackAcl, hasResourceAcl, hasResourceInfo, hasServerResourceInfo, isContainer, isPodOwner, isRawData, isThing, isThingLocal, mockContainerFrom, mockFetchError, mockFileFrom, mockSolidDatasetFrom, mockThingFrom, overwriteFile, removeAll, removeBoolean, removeDate, removeDatetime, removeDecimal, removeInteger, removeIri, removeLiteral, removeNamedNode, removeStringNoLocale, removeStringWithLocale, removeThing, removeTime, removeUrl, responseToResourceInfo, responseToSolidDataset, saveAclFor, saveFileInContainer, saveSolidDatasetAt, saveSolidDatasetInContainer, setAgentDefaultAccess, setAgentResourceAccess$1 as setAgentResourceAccess, setBoolean, setDate, setDatetime, setDecimal, setGroupDefaultAccess, setGroupResourceAccess$1 as setGroupResourceAccess, setInteger, setIri, setLiteral, setNamedNode, setProfileJwks, setPublicDefaultAccess, setPublicResourceAccess$1 as setPublicResourceAccess, setStringNoLocale, setStringWithLocale, setTerm, setThing, setTime, setUrl, solidDatasetAsMarkdown, thingAsMarkdown, toRdfJsDataset };\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","/*\n * Copyright 2021 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Intended to be used by dependent packages as a common prefix for keys into\n * storage mechanisms (so as to group all keys related to Solid Client Authn\n * within those storage mechanisms, e.g., window.localStorage).\n */\nexport const SOLID_CLIENT_AUTHN_KEY_PREFIX = \"solidClientAuthn:\";\n\n/**\n * Ordered list of signature algorithms, from most preferred to least preferred.\n */\nexport const PREFERRED_SIGNING_ALG = [\"ES256\", \"RS256\"];\n\nexport const EVENTS = {\n  NEW_REFRESH_TOKEN: \"newRefreshToken\",\n  ERROR: \"onError\",\n  SESSION_EXPIRED: \"sessionExpired\",\n  SESSION_EXTENDED: \"sessionExtended\",\n  TIMEOUT_SET: \"timeoutSet\",\n};\n/**\n * We want to refresh a token 5 seconds before it expires.\n */\nexport const REFRESH_BEFORE_EXPIRATION_SECONDS = 5;\n","/*\n * Copyright 2021 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * @hidden\n * The generic Inrupt error class, that simply extends the regular JavaScript\n * [[Error]] object but provides extra capabilities and meta-data (e.g.\n * potentially data from a HTTP response, or with data from an RDF vocabulary\n * (which may be imported locally, or looked up dynamically at runtime)).\n *\n * Error Identifiers\n *   Our error class supports the notion of globally unique, dereferenceable\n *   error identifiers in the form of IRIs.\n *\n * Parameterized error messages\n *   This class supports error messages with positional placeholders that can be\n *   replaced by developer-provided parameter values at runtime.\n *\n * Wrapped Errors (Coming soon!)\n *   Similar to how Java supports the notion of wrapped exceptions, our error\n *   class implementation supports the ability to wrap [[Error]]s.\n *\n * HTTP errors:\n *   This class provides a very convenient means to provide a HTTP response,\n *   the details from which can be appended to error message strings, and the\n *   response itself retrieved directly by consumers of instances of this class.\n * @packageDocumentation\n */\n\nimport { VocabTerm, NamedNode } from \"@inrupt/solid-common-vocab\";\n\nexport default class InruptError extends Error {\n  // For the common case of HTTP errors, we can store the HTTP response to allow\n  // consumers of this error instance to access it directly.\n  // NOTE: we specifically stipulate that we expect the HTTP response to be an\n  // error response!\n  private httpErrorResponse?: Response & { ok: false };\n\n  constructor(\n    messageOrIri: string | NamedNode | VocabTerm,\n    messageParams?: string[],\n    appendErrorIri = true\n  ) {\n    super(\n      typeof messageOrIri === \"string\"\n        ? InruptError.substituteParams(messageOrIri, messageParams)\n        : InruptError.appendErrorIri(\n            InruptError.lookupErrorIri(messageOrIri, messageParams),\n            messageOrIri as NamedNode,\n            appendErrorIri\n          )\n    );\n  }\n\n  /**\n   * Allows us provide a HTTP response, and to specify if we want details from\n   * that response to be appended to our error message string. We also preserve\n   * specific state from that response object to allow consumers of this error\n   * to directly access those if they wish.\n   *\n   * @param httpErrorResponse\n   * @param appendHttpDetails\n   */\n  public httpResponse(\n    httpErrorResponse: Response & { ok: false },\n    appendHttpDetails = true\n  ): InruptError {\n    this.message = InruptError.appendHttpResponseDetails(\n      this.message,\n      httpErrorResponse,\n      appendHttpDetails\n    );\n\n    // Preserve the HTTP response (in case the consumer of this error wishes to\n    // access its details directly themselves).\n    this.httpErrorResponse = httpErrorResponse;\n\n    return this;\n  }\n\n  hasHttpResponse(): boolean {\n    return this.httpErrorResponse !== undefined;\n  }\n\n  getHttpResponse(): (Response & { ok: false }) | undefined {\n    return this.httpErrorResponse;\n  }\n\n  getHttpStatusCode(): number {\n    if (this.httpErrorResponse === undefined) {\n      throw new InruptError(\n        \"This InruptError was not provided with a HTTP response - so we can't get its HTTP Status Code.\"\n      );\n    }\n\n    return this.httpErrorResponse.status;\n  }\n\n  getHttpStatusText(): string {\n    if (this.httpErrorResponse === undefined) {\n      throw new InruptError(\n        \"This InruptError was not provided with a HTTP response - so we can't get its HTTP Status Text!\"\n      );\n    }\n\n    return this.httpErrorResponse.statusText;\n  }\n\n  static determineIfVocabTerm(\n    value: NamedNode | VocabTerm\n  ): value is VocabTerm {\n    if ((value as VocabTerm).strict !== undefined) {\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Given the IRI for an error message term, first check if it's a local\n   * Vocab Term (in which case we expect the error messages (in potentially\n   * multiple languages) to be accessible directly.\n   * If however the IRI is just a raw IRI, then attempt to lookup the term\n   * dynamically by simply de-referencing it and asking for RDF back (which we\n   * then need to parse and extract the relevant message string).\n   *\n   * NOTE: if we find the referenced term, but it has no explicit message\n   * values associated with it (e.g. the term `https://schema.org/Person` would\n   * resolve, but it has no Vocab Term-defined 'message' triples associated with\n   * it), then we return a fixed message string explaining this, but that\n   * includes the error IRI and the provided parameters.\n   *\n   * @param iri the IRI of the error message term from an RDF vocabulary\n   * @param messageParams parameters to replace expected placeholders in the message string\n   */\n  static lookupErrorIri(\n    iri: NamedNode | VocabTerm,\n    messageParams?: string[]\n  ): string {\n    if (InruptError.determineIfVocabTerm(iri)) {\n      const message =\n        messageParams === undefined\n          ? iri.message\n          : iri.messageParams(...messageParams);\n\n      return message === undefined\n        ? `Looked up error message IRI [${iri.value}], but found no message value.`\n        : message;\n    }\n\n    return `Error message looked up at: [${iri.value}]${\n      messageParams === undefined\n        ? \"\"\n        : `, with params [${messageParams.toString()}]`\n    }`;\n  }\n\n  /**\n   * Convenience method to append certain HTTP response details to our error\n   * message (e.g. the HTTP status code, or the status text).\n   *\n   * @param message the message string to append to\n   * @param response the optional HTTP response\n   * @param append flag telling us to append or not\n   */\n  static appendHttpResponseDetails(\n    message: string,\n    response: Response | undefined,\n    append: boolean\n  ): string {\n    if (append && typeof response !== \"undefined\") {\n      return `${message} HTTP details: status code [${response.status}], status text [${response.statusText}].`;\n    }\n\n    return message;\n  }\n\n  /**\n   * Convenience method to append the error term's IRI value to our error\n   * message (which can be a very helpful reference, since it's basically the ID\n   * of the error message itself).\n   *\n   * @param message the message string to append to\n   * @param iri the IRI of the error term\n   * @param append flag telling us to append or not\n   */\n  static appendErrorIri(\n    message: string,\n    iri: NamedNode,\n    append: boolean\n  ): string {\n    return append ? `${message} Error IRI: [${iri.value}].` : message;\n  }\n\n  /**\n   * Scans the specified message returning a copy with all placeholders replaced\n   * with their corresponding parameter value.\n   *\n   * Note: If the number of parameters provided does not exactly match the\n   * number of placeholders, we throw an exception explaining this (as we\n   * consider it a programmer error).\n   *\n   * @param message the message within which to replace placeholders\n   * @param params the parameters to replaces the placeholders\n   */\n  static substituteParams(message: string, params?: string[]): string {\n    let fullMessage = message;\n    if (params !== undefined) {\n      const paramsRequired = message.split(\"{{\").length - 1;\n      if (paramsRequired !== params.length) {\n        throw new Error(\n          `Setting parameters on message [${message}], but it requires [${paramsRequired}] params and we received [${params.length}].`\n        );\n      }\n\n      for (let i = 0; i < params.length; i += 1) {\n        const marker = `{{${i}}}`;\n        fullMessage = fullMessage.replace(marker, params[i]);\n      }\n    }\n\n    return fullMessage;\n  }\n}\n","/*\n * Copyright 2021 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * @hidden\n * @packageDocumentation\n */\n\n/**\n * An abstract class that will select the first handler that can handle certain parameters\n */\nimport IHandleable from \"./IHandleable\";\nimport InruptError from \"../../errors/InruptError\";\n\n/**\n * @hidden\n */\nexport default class AggregateHandler<P extends Array<unknown>, R>\n  implements IHandleable<P, R>\n{\n  constructor(private handleables: IHandleable<P, R>[]) {}\n\n  /**\n   * Helper function that will asynchronously determine the proper handler to use. If multiple\n   * handlers can handle, it will choose the first one in the list\n   * @param params Paramerters to feed to the handler\n   */\n  private async getProperHandler(params: P): Promise<IHandleable<P, R> | null> {\n    // TODO : This function doesn't currently operate as described. Tests need to be written\n\n    // return new Promise<IHandleable<P, R> | null>((resolve, reject) => {\n    //  const resolvedValues: Array<boolean | null> = Array(this.handleables.length).map(() => null)\n    //   let numberResolved = 0\n    //   this.handleables.forEach(async (handleable: IHandleable<P, R>, index: number) => {\n    //     resolvedValues[index] = await handleable.canHandle(...params)\n    //     numberResolved++\n    //     let curResolvedValueIndex = 0\n    //     while (\n    //       resolvedValues[curResolvedValueIndex] !== null ||\n    //       resolvedValues[curResolvedValueIndex] !== undefined\n    //     ) {\n    //       if (resolvedValues[curResolvedValueIndex]) {\n    //         resolve(this.handleables[curResolvedValueIndex])\n    //       }\n    //       curResolvedValueIndex++\n    //     }\n    //   })\n    // })\n\n    const canHandleList = await Promise.all(\n      this.handleables.map((handleable) => handleable.canHandle(...params))\n    );\n\n    for (let i = 0; i < canHandleList.length; i += 1) {\n      if (canHandleList[i]) {\n        return this.handleables[i];\n      }\n    }\n    return null;\n  }\n\n  async canHandle(...params: P): Promise<boolean> {\n    return (await this.getProperHandler(params)) !== null;\n  }\n\n  async handle(...params: P): Promise<R> {\n    const handler = await this.getProperHandler(params);\n    if (handler) {\n      return handler.handle(...params);\n    }\n\n    throw new InruptError(\n      `[${this.constructor.name}] cannot find a suitable handler for: ${params\n        .map((param) => {\n          try {\n            return JSON.stringify(param);\n          } catch (err) {\n            /* eslint-disable  @typescript-eslint/no-explicit-any */\n            return (param as any).toString();\n          }\n        })\n        .join(\", \")}`\n    );\n  }\n}\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nclass JOSEError extends Error {\n    constructor(message) {\n        super(message);\n        this.code = JOSEError.code;\n        this.name = this.constructor.name;\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, this.constructor);\n        }\n    }\n}\nJOSEError.code = 'ERR_JOSE_GENERIC';\nclass JWTClaimValidationFailed extends JOSEError {\n    constructor(message, claim = 'unspecified', reason = 'unspecified') {\n        super(message);\n        this.code = JWTClaimValidationFailed.code;\n        this.claim = claim;\n        this.reason = reason;\n    }\n}\nJWTClaimValidationFailed.code = 'ERR_JWT_CLAIM_VALIDATION_FAILED';\nclass JOSEAlgNotAllowed extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = JOSEAlgNotAllowed.code;\n    }\n}\nJOSEAlgNotAllowed.code = 'ERR_JOSE_ALG_NOT_ALLOWED';\nclass JOSENotSupported extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = JOSENotSupported.code;\n    }\n}\nJOSENotSupported.code = 'ERR_JOSE_NOT_SUPPORTED';\nclass JWEDecryptionFailed extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = JWEDecryptionFailed.code;\n        this.message = 'decryption operation failed';\n    }\n}\nJWEDecryptionFailed.code = 'ERR_JWE_DECRYPTION_FAILED';\nclass JWEInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = JWEInvalid.code;\n    }\n}\nJWEInvalid.code = 'ERR_JWE_INVALID';\nclass JWSInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = JWSInvalid.code;\n    }\n}\nJWSInvalid.code = 'ERR_JWS_INVALID';\nclass JWTInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = JWTInvalid.code;\n    }\n}\nJWTInvalid.code = 'ERR_JWT_INVALID';\nclass JWKInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = JWKInvalid.code;\n    }\n}\nJWKInvalid.code = 'ERR_JWK_INVALID';\nclass JWKSInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = JWKSInvalid.code;\n    }\n}\nJWKSInvalid.code = 'ERR_JWKS_INVALID';\nclass JWKSNoMatchingKey extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = JWKSNoMatchingKey.code;\n        this.message = 'no applicable key found in the JSON Web Key Set';\n    }\n}\nJWKSNoMatchingKey.code = 'ERR_JWKS_NO_MATCHING_KEY';\nclass JWKSMultipleMatchingKeys extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = JWKSMultipleMatchingKeys.code;\n        this.message = 'multiple matching keys found in the JSON Web Key Set';\n    }\n}\nJWKSMultipleMatchingKeys.code = 'ERR_JWKS_MULTIPLE_MATCHING_KEYS';\nclass JWSSignatureVerificationFailed extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = JWSSignatureVerificationFailed.code;\n        this.message = 'signature verification failed';\n    }\n}\nJWSSignatureVerificationFailed.code = 'ERR_JWS_SIGNATURE_VERIFICATION_FAILED';\nclass JWTExpired extends JWTClaimValidationFailed {\n    constructor() {\n        super(...arguments);\n        this.code = JWTExpired.code;\n    }\n}\nJWTExpired.code = 'ERR_JWT_EXPIRED';\n\nconst isDisjoint = (...headers) => {\n    const sources = headers.filter(Boolean);\n    if (sources.length === 0 || sources.length === 1) {\n        return true;\n    }\n    let acc;\n    for (const header of sources) {\n        const parameters = Object.keys(header);\n        if (!acc || acc.size === 0) {\n            acc = new Set(parameters);\n            continue;\n        }\n        for (const parameter of parameters) {\n            if (acc.has(parameter)) {\n                return false;\n            }\n            acc.add(parameter);\n        }\n    }\n    return true;\n};\n\nfunction isObjectLike(value) {\n    return typeof value === 'object' && value !== null;\n}\nfunction isObject(input) {\n    if (!isObjectLike(input) || Object.prototype.toString.call(input) !== '[object Object]') {\n        return false;\n    }\n    if (Object.getPrototypeOf(input) === null) {\n        return true;\n    }\n    let proto = input;\n    while (Object.getPrototypeOf(proto) !== null) {\n        proto = Object.getPrototypeOf(proto);\n    }\n    return Object.getPrototypeOf(input) === proto;\n}\n\nconst encoder = new TextEncoder();\nconst decoder = new TextDecoder();\nconst MAX_INT32 = 2 ** 32;\nfunction concat(...buffers) {\n    const size = buffers.reduce((acc, { length }) => acc + length, 0);\n    const buf = new Uint8Array(size);\n    let i = 0;\n    buffers.forEach((buffer) => {\n        buf.set(buffer, i);\n        i += buffer.length;\n    });\n    return buf;\n}\nfunction p2s(alg, p2sInput) {\n    return concat(encoder.encode(alg), new Uint8Array([0]), p2sInput);\n}\nfunction writeUInt32BE(buf, value, offset) {\n    if (value < 0 || value >= MAX_INT32) {\n        throw new RangeError(`value must be >= 0 and <= ${MAX_INT32 - 1}. Received ${value}`);\n    }\n    buf.set([value >>> 24, value >>> 16, value >>> 8, value & 0xff], offset);\n}\nfunction uint64be(value) {\n    const high = Math.floor(value / MAX_INT32);\n    const low = value % MAX_INT32;\n    const buf = new Uint8Array(8);\n    writeUInt32BE(buf, high, 0);\n    writeUInt32BE(buf, low, 4);\n    return buf;\n}\nfunction uint32be(value) {\n    const buf = new Uint8Array(4);\n    writeUInt32BE(buf, value);\n    return buf;\n}\nfunction lengthAndInput(input) {\n    return concat(uint32be(input.length), input);\n}\nasync function concatKdf(digest, secret, bits, value) {\n    const iterations = Math.ceil((bits >> 3) / 32);\n    let res;\n    for (let iter = 1; iter <= iterations; iter++) {\n        const buf = new Uint8Array(4 + secret.length + value.length);\n        buf.set(uint32be(iter));\n        buf.set(secret, 4);\n        buf.set(value, 4 + secret.length);\n        if (!res) {\n            res = await digest('sha256', buf);\n        }\n        else {\n            res = concat(res, await digest('sha256', buf));\n        }\n    }\n    res = res.slice(0, bits >> 3);\n    return res;\n}\n\nfunction getGlobal() {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    throw new Error('unable to locate global object');\n}\nvar globalThis$1 = getGlobal();\n\nconst encode$1 = (input) => {\n    let unencoded = input;\n    if (typeof unencoded === 'string') {\n        unencoded = encoder.encode(unencoded);\n    }\n    const CHUNK_SIZE = 0x8000;\n    const arr = [];\n    for (let i = 0; i < unencoded.length; i += CHUNK_SIZE) {\n        arr.push(String.fromCharCode.apply(null, unencoded.subarray(i, i + CHUNK_SIZE)));\n    }\n    const base64string = globalThis$1.btoa(arr.join(''));\n    return base64string.replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n};\nconst decode$1 = (input) => {\n    let encoded = input;\n    if (encoded instanceof Uint8Array) {\n        encoded = decoder.decode(encoded);\n    }\n    encoded = encoded.replace(/-/g, '+').replace(/_/g, '/').replace(/\\s/g, '');\n    try {\n        return new Uint8Array(globalThis$1\n            .atob(encoded)\n            .split('')\n            .map((c) => c.charCodeAt(0)));\n    }\n    catch (_a) {\n        throw new TypeError('The input to be decoded is not correctly encoded.');\n    }\n};\n\nconst bitLengths$1 = new Map([\n    ['A128CBC-HS256', 128],\n    ['A128GCM', 96],\n    ['A128GCMKW', 96],\n    ['A192CBC-HS384', 128],\n    ['A192GCM', 96],\n    ['A192GCMKW', 96],\n    ['A256CBC-HS512', 128],\n    ['A256GCM', 96],\n    ['A256GCMKW', 96],\n]);\nconst factory$1 = (random) => (alg) => {\n    const bitLength = bitLengths$1.get(alg);\n    if (!bitLength) {\n        throw new JOSENotSupported(`Unsupported JWE Algorithm: ${alg}`);\n    }\n    return random(new Uint8Array(bitLength >> 3));\n};\n\nconst checkIvLength = (enc, iv) => {\n    if (iv.length << 3 !== bitLengths$1.get(enc)) {\n        throw new JWEInvalid('Invalid Initialization Vector length');\n    }\n};\n\nvar crypto = globalThis$1.crypto;\nfunction isCryptoKey(key) {\n    if (typeof globalThis$1.CryptoKey === 'undefined') {\n        return false;\n    }\n    return key != null && key instanceof globalThis$1.CryptoKey;\n}\n\nconst checkCekLength = (enc, cek) => {\n    let expected;\n    switch (enc) {\n        case 'A128CBC-HS256':\n        case 'A192CBC-HS384':\n        case 'A256CBC-HS512':\n            expected = parseInt(enc.substr(-3), 10);\n            if (!(cek instanceof Uint8Array)) {\n                throw new TypeError(`${enc} content encryption requires Uint8Array as key input`);\n            }\n            break;\n        case 'A128GCM':\n        case 'A192GCM':\n        case 'A256GCM':\n            expected = parseInt(enc.substr(1, 3), 10);\n            break;\n        default:\n            throw new JOSENotSupported(`Content Encryption Algorithm ${enc} is not supported either by JOSE or your javascript runtime`);\n    }\n    if (cek instanceof Uint8Array) {\n        if (cek.length << 3 !== expected) {\n            throw new JWEInvalid('Invalid Content Encryption Key length');\n        }\n        return;\n    }\n    if (isCryptoKey(cek)) {\n        const { length } = cek.algorithm;\n        if (length !== expected) {\n            throw new JWEInvalid('Invalid Content Encryption Key length');\n        }\n        return;\n    }\n    throw new TypeError('Invalid Content Encryption Key type');\n};\n\nconst timingSafeEqual = (a, b) => {\n    if (!(a instanceof Uint8Array)) {\n        throw new TypeError('First argument must be a buffer');\n    }\n    if (!(b instanceof Uint8Array)) {\n        throw new TypeError('Second argument must be a buffer');\n    }\n    if (a.length !== b.length) {\n        throw new TypeError('Input buffers must have the same length');\n    }\n    const len = a.length;\n    let out = 0;\n    let i = -1;\n    while (++i < len) {\n        out |= a[i] ^ b[i];\n    }\n    return out === 0;\n};\n\nvar invalidKeyInput = (actual, ...types) => {\n    let msg = 'Key must be ';\n    if (types.length > 2) {\n        const last = types.pop();\n        msg += `one of type ${types.join(', ')}, or ${last}.`;\n    }\n    else if (types.length === 2) {\n        msg += `one of type ${types[0]} or ${types[1]}.`;\n    }\n    else {\n        msg += `of type ${types[0]}.`;\n    }\n    if (actual == null) {\n        msg += ` Received ${actual}`;\n    }\n    else if (typeof actual === 'function' && actual.name) {\n        msg += ` Received function ${actual.name}`;\n    }\n    else if (typeof actual === 'object' && actual != null) {\n        if (actual.constructor && actual.constructor.name) {\n            msg += ` Received an instance of ${actual.constructor.name}`;\n        }\n    }\n    return msg;\n};\n\nasync function cbcDecrypt(enc, cek, ciphertext, iv, tag, aad) {\n    const keySize = parseInt(enc.substr(1, 3), 10);\n    const encKey = await crypto.subtle.importKey('raw', cek.subarray(keySize >> 3), 'AES-CBC', false, ['decrypt']);\n    const macKey = await crypto.subtle.importKey('raw', cek.subarray(0, keySize >> 3), {\n        hash: { name: `SHA-${keySize << 1}` },\n        name: 'HMAC',\n    }, false, ['sign']);\n    const macData = concat(aad, iv, ciphertext, uint64be(aad.length << 3));\n    const expectedTag = new Uint8Array((await crypto.subtle.sign('HMAC', macKey, macData)).slice(0, keySize >> 3));\n    let macCheckPassed;\n    try {\n        macCheckPassed = timingSafeEqual(tag, expectedTag);\n    }\n    catch (_a) {\n    }\n    if (!macCheckPassed) {\n        throw new JWEDecryptionFailed();\n    }\n    let plaintext;\n    try {\n        plaintext = new Uint8Array(await crypto.subtle.decrypt({ iv, name: 'AES-CBC' }, encKey, ciphertext));\n    }\n    catch (_b) {\n    }\n    if (!plaintext) {\n        throw new JWEDecryptionFailed();\n    }\n    return plaintext;\n}\nasync function gcmDecrypt(cek, ciphertext, iv, tag, aad) {\n    const encKey = cek instanceof Uint8Array\n        ? await crypto.subtle.importKey('raw', cek, 'AES-GCM', false, ['decrypt'])\n        : cek;\n    try {\n        return new Uint8Array(await crypto.subtle.decrypt({\n            additionalData: aad,\n            iv,\n            name: 'AES-GCM',\n            tagLength: 128,\n        }, encKey, concat(ciphertext, tag)));\n    }\n    catch (_a) {\n        throw new JWEDecryptionFailed();\n    }\n}\nconst decrypt$2 = async (enc, cek, ciphertext, iv, tag, aad) => {\n    if (!isCryptoKey(cek) && !(cek instanceof Uint8Array)) {\n        throw new TypeError(invalidKeyInput(cek, 'CryptoKey', 'Uint8Array'));\n    }\n    checkCekLength(enc, cek);\n    checkIvLength(enc, iv);\n    switch (enc) {\n        case 'A128CBC-HS256':\n        case 'A192CBC-HS384':\n        case 'A256CBC-HS512':\n            return cbcDecrypt(enc, cek, ciphertext, iv, tag, aad);\n        case 'A128GCM':\n        case 'A192GCM':\n        case 'A256GCM':\n            return gcmDecrypt(cek, ciphertext, iv, tag, aad);\n        default:\n            throw new JOSENotSupported('unsupported JWE Content Encryption Algorithm');\n    }\n};\n\nconst inflate = async () => {\n    throw new JOSENotSupported('JWE \"zip\" (Compression Algorithm) Header Parameter is not supported by your javascript runtime. You need to use the `inflateRaw` decrypt option to provide Inflate Raw implementation, e.g. using the \"pako\" module.');\n};\nconst deflate = async () => {\n    throw new JOSENotSupported('JWE \"zip\" (Compression Algorithm) Header Parameter is not supported by your javascript runtime.');\n};\n\nconst bogusWebCrypto = [\n    { hash: { name: 'SHA-256' }, name: 'HMAC' },\n    true,\n    ['sign'],\n];\n\nfunction checkKeySize(key, alg) {\n    if (key.algorithm.length !== parseInt(alg.substr(1, 3), 10)) {\n        throw new TypeError(`invalid key size for alg: ${alg}`);\n    }\n}\nfunction getCryptoKey$2(key, usage) {\n    if (isCryptoKey(key)) {\n        return key;\n    }\n    if (key instanceof Uint8Array) {\n        return crypto.subtle.importKey('raw', key, 'AES-KW', true, [usage]);\n    }\n    throw new TypeError(invalidKeyInput(key, 'CryptoKey', 'Uint8Array'));\n}\nconst wrap$1 = async (alg, key, cek) => {\n    const cryptoKey = await getCryptoKey$2(key, 'wrapKey');\n    checkKeySize(cryptoKey, alg);\n    const cryptoKeyCek = await crypto.subtle.importKey('raw', cek, ...bogusWebCrypto);\n    return new Uint8Array(await crypto.subtle.wrapKey('raw', cryptoKeyCek, cryptoKey, 'AES-KW'));\n};\nconst unwrap$1 = async (alg, key, encryptedKey) => {\n    const cryptoKey = await getCryptoKey$2(key, 'unwrapKey');\n    checkKeySize(cryptoKey, alg);\n    const cryptoKeyCek = await crypto.subtle.unwrapKey('raw', encryptedKey, cryptoKey, 'AES-KW', ...bogusWebCrypto);\n    return new Uint8Array(await crypto.subtle.exportKey('raw', cryptoKeyCek));\n};\n\nconst digest = async (algorithm, data) => {\n    const subtleDigest = `SHA-${algorithm.substr(-3)}`;\n    return new Uint8Array(await crypto.subtle.digest(subtleDigest, data));\n};\n\nconst deriveKey = async (publicKey, privateKey, algorithm, keyLength, apu = new Uint8Array(0), apv = new Uint8Array(0)) => {\n    if (!isCryptoKey(publicKey)) {\n        throw new TypeError(invalidKeyInput(publicKey, 'CryptoKey'));\n    }\n    if (!isCryptoKey(privateKey)) {\n        throw new TypeError(invalidKeyInput(privateKey, 'CryptoKey'));\n    }\n    const value = concat(lengthAndInput(encoder.encode(algorithm)), lengthAndInput(apu), lengthAndInput(apv), uint32be(keyLength));\n    if (!privateKey.usages.includes('deriveBits')) {\n        throw new TypeError('ECDH-ES private key \"usages\" must include \"deriveBits\"');\n    }\n    const sharedSecret = new Uint8Array(await crypto.subtle.deriveBits({\n        name: 'ECDH',\n        public: publicKey,\n    }, privateKey, Math.ceil(parseInt(privateKey.algorithm.namedCurve.substr(-3), 10) / 8) <<\n        3));\n    return concatKdf(digest, sharedSecret, keyLength, value);\n};\nconst generateEpk = async (key) => {\n    if (!isCryptoKey(key)) {\n        throw new TypeError(invalidKeyInput(key, 'CryptoKey'));\n    }\n    return (await crypto.subtle.generateKey({ name: 'ECDH', namedCurve: key.algorithm.namedCurve }, true, ['deriveBits'])).privateKey;\n};\nconst ecdhAllowed = (key) => {\n    if (!isCryptoKey(key)) {\n        throw new TypeError(invalidKeyInput(key, 'CryptoKey'));\n    }\n    return ['P-256', 'P-384', 'P-521'].includes(key.algorithm.namedCurve);\n};\n\nconst random$1 = crypto.getRandomValues.bind(crypto);\n\nfunction checkP2s(p2s) {\n    if (!(p2s instanceof Uint8Array) || p2s.length < 8) {\n        throw new JWEInvalid('PBES2 Salt Input must be 8 or more octets');\n    }\n}\n\nfunction getCryptoKey$1(key) {\n    if (key instanceof Uint8Array) {\n        return crypto.subtle.importKey('raw', key, 'PBKDF2', false, ['deriveBits']);\n    }\n    if (isCryptoKey(key)) {\n        return key;\n    }\n    throw new TypeError(invalidKeyInput(key, 'CryptoKey', 'Uint8Array'));\n}\nconst encrypt$2 = async (alg, key, cek, p2c = Math.floor(Math.random() * 2049) + 2048, p2s$1 = random$1(new Uint8Array(16))) => {\n    checkP2s(p2s$1);\n    const salt = p2s(alg, p2s$1);\n    const keylen = parseInt(alg.substr(13, 3), 10);\n    const subtleAlg = {\n        hash: { name: `SHA-${alg.substr(8, 3)}` },\n        iterations: p2c,\n        name: 'PBKDF2',\n        salt,\n    };\n    const wrapAlg = {\n        length: keylen,\n        name: 'AES-KW',\n    };\n    const cryptoKey = await getCryptoKey$1(key);\n    let derived;\n    if (cryptoKey.usages.includes('deriveBits')) {\n        derived = new Uint8Array(await crypto.subtle.deriveBits(subtleAlg, cryptoKey, keylen));\n    }\n    else if (cryptoKey.usages.includes('deriveKey')) {\n        derived = await crypto.subtle.deriveKey(subtleAlg, cryptoKey, wrapAlg, false, ['wrapKey']);\n    }\n    else {\n        throw new TypeError('PBKDF2 key \"usages\" must include \"deriveBits\" or \"deriveKey\"');\n    }\n    const encryptedKey = await wrap$1(alg.substr(-6), derived, cek);\n    return { encryptedKey, p2c, p2s: encode$1(p2s$1) };\n};\nconst decrypt$1 = async (alg, key, encryptedKey, p2c, p2s$1) => {\n    checkP2s(p2s$1);\n    const salt = p2s(alg, p2s$1);\n    const keylen = parseInt(alg.substr(13, 3), 10);\n    const subtleAlg = {\n        hash: { name: `SHA-${alg.substr(8, 3)}` },\n        iterations: p2c,\n        name: 'PBKDF2',\n        salt,\n    };\n    const wrapAlg = {\n        length: keylen,\n        name: 'AES-KW',\n    };\n    const cryptoKey = await getCryptoKey$1(key);\n    let derived;\n    if (cryptoKey.usages.includes('deriveBits')) {\n        derived = new Uint8Array(await crypto.subtle.deriveBits(subtleAlg, cryptoKey, keylen));\n    }\n    else if (cryptoKey.usages.includes('deriveKey')) {\n        derived = await crypto.subtle.deriveKey(subtleAlg, cryptoKey, wrapAlg, false, ['unwrapKey']);\n    }\n    else {\n        throw new TypeError('PBKDF2 key \"usages\" must include \"deriveBits\" or \"deriveKey\"');\n    }\n    return unwrap$1(alg.substr(-6), derived, encryptedKey);\n};\n\nfunction subtleRsaEs(alg) {\n    switch (alg) {\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512':\n            return 'RSA-OAEP';\n        default:\n            throw new JOSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);\n    }\n}\n\nvar checkKeyLength = (alg, key) => {\n    if (alg.startsWith('HS')) {\n        const bitlen = parseInt(alg.substr(-3), 10);\n        const { length } = key.algorithm;\n        if (typeof length !== 'number' || length < bitlen) {\n            throw new TypeError(`${alg} requires symmetric keys to be ${bitlen} bits or larger`);\n        }\n    }\n    if (alg.startsWith('RS') || alg.startsWith('PS')) {\n        const { modulusLength } = key.algorithm;\n        if (typeof modulusLength !== 'number' || modulusLength < 2048) {\n            throw new TypeError(`${alg} requires key modulusLength to be 2048 bits or larger`);\n        }\n    }\n};\n\nconst encrypt$1 = async (alg, key, cek) => {\n    if (!isCryptoKey(key)) {\n        throw new TypeError(invalidKeyInput(key, 'CryptoKey'));\n    }\n    checkKeyLength(alg, key);\n    if (key.usages.includes('encrypt')) {\n        return new Uint8Array(await crypto.subtle.encrypt(subtleRsaEs(alg), key, cek));\n    }\n    if (key.usages.includes('wrapKey')) {\n        const cryptoKeyCek = await crypto.subtle.importKey('raw', cek, ...bogusWebCrypto);\n        return new Uint8Array(await crypto.subtle.wrapKey('raw', cryptoKeyCek, key, subtleRsaEs(alg)));\n    }\n    throw new TypeError('RSA-OAEP key \"usages\" must include \"encrypt\" or \"wrapKey\" for this operation');\n};\nconst decrypt = async (alg, key, encryptedKey) => {\n    if (!isCryptoKey(key)) {\n        throw new TypeError(invalidKeyInput(key, 'CryptoKey'));\n    }\n    checkKeyLength(alg, key);\n    if (key.usages.includes('decrypt')) {\n        return new Uint8Array(await crypto.subtle.decrypt(subtleRsaEs(alg), key, encryptedKey));\n    }\n    if (key.usages.includes('unwrapKey')) {\n        const cryptoKeyCek = await crypto.subtle.unwrapKey('raw', encryptedKey, key, subtleRsaEs(alg), ...bogusWebCrypto);\n        return new Uint8Array(await crypto.subtle.exportKey('raw', cryptoKeyCek));\n    }\n    throw new TypeError('RSA-OAEP key \"usages\" must include \"decrypt\" or \"unwrapKey\" for this operation');\n};\n\nasync function cbcEncrypt(enc, plaintext, cek, iv, aad) {\n    const keySize = parseInt(enc.substr(1, 3), 10);\n    const encKey = await crypto.subtle.importKey('raw', cek.subarray(keySize >> 3), 'AES-CBC', false, ['encrypt']);\n    const macKey = await crypto.subtle.importKey('raw', cek.subarray(0, keySize >> 3), {\n        hash: { name: `SHA-${keySize << 1}` },\n        name: 'HMAC',\n    }, false, ['sign']);\n    const ciphertext = new Uint8Array(await crypto.subtle.encrypt({\n        iv,\n        name: 'AES-CBC',\n    }, encKey, plaintext));\n    const macData = concat(aad, iv, ciphertext, uint64be(aad.length << 3));\n    const tag = new Uint8Array((await crypto.subtle.sign('HMAC', macKey, macData)).slice(0, keySize >> 3));\n    return { ciphertext, tag };\n}\nasync function gcmEncrypt(plaintext, cek, iv, aad) {\n    const encKey = cek instanceof Uint8Array\n        ? await crypto.subtle.importKey('raw', cek, 'AES-GCM', false, ['encrypt'])\n        : cek;\n    const encrypted = new Uint8Array(await crypto.subtle.encrypt({\n        additionalData: aad,\n        iv,\n        name: 'AES-GCM',\n        tagLength: 128,\n    }, encKey, plaintext));\n    const tag = encrypted.slice(-16);\n    const ciphertext = encrypted.slice(0, -16);\n    return { ciphertext, tag };\n}\nconst encrypt = async (enc, plaintext, cek, iv, aad) => {\n    if (!isCryptoKey(cek) && !(cek instanceof Uint8Array)) {\n        throw new TypeError(invalidKeyInput(cek, 'CryptoKey', 'Uint8Array'));\n    }\n    checkCekLength(enc, cek);\n    checkIvLength(enc, iv);\n    switch (enc) {\n        case 'A128CBC-HS256':\n        case 'A192CBC-HS384':\n        case 'A256CBC-HS512':\n            return cbcEncrypt(enc, plaintext, cek, iv, aad);\n        case 'A128GCM':\n        case 'A192GCM':\n        case 'A256GCM':\n            return gcmEncrypt(plaintext, cek, iv, aad);\n        default:\n            throw new JOSENotSupported('unsupported JWE Content Encryption Algorithm');\n    }\n};\n\nconst generateIv$1 = factory$1(random$1);\nconst wrap = async (alg, key, cek, iv) => {\n    const jweAlgorithm = alg.substr(0, 7);\n    iv || (iv = generateIv$1(jweAlgorithm));\n    const { ciphertext: encryptedKey, tag } = await encrypt(jweAlgorithm, cek, key, iv, new Uint8Array(0));\n    return { encryptedKey, iv: encode$1(iv), tag: encode$1(tag) };\n};\nconst unwrap = async (alg, key, encryptedKey, iv, tag) => {\n    const jweAlgorithm = alg.substr(0, 7);\n    return decrypt$2(jweAlgorithm, key, encryptedKey, iv, tag, new Uint8Array(0));\n};\n\nconst bitLengths = new Map([\n    ['A128CBC-HS256', 256],\n    ['A128GCM', 128],\n    ['A192CBC-HS384', 384],\n    ['A192GCM', 192],\n    ['A256CBC-HS512', 512],\n    ['A256GCM', 256],\n]);\nconst factory = (random) => (alg) => {\n    const bitLength = bitLengths.get(alg);\n    if (!bitLength) {\n        throw new JOSENotSupported(`Unsupported JWE Algorithm: ${alg}`);\n    }\n    return random(new Uint8Array(bitLength >> 3));\n};\n\nfunction subtleMapping(jwk) {\n    let algorithm;\n    let keyUsages;\n    switch (jwk.kty) {\n        case 'oct': {\n            switch (jwk.alg) {\n                case 'HS256':\n                case 'HS384':\n                case 'HS512':\n                    algorithm = { name: 'HMAC', hash: { name: `SHA-${jwk.alg.substr(-3)}` } };\n                    keyUsages = ['sign', 'verify'];\n                    break;\n                case 'A128CBC-HS256':\n                case 'A192CBC-HS384':\n                case 'A256CBC-HS512':\n                    throw new JOSENotSupported(`${jwk.alg} keys cannot be imported as CryptoKey instances`);\n                case 'A128GCM':\n                case 'A192GCM':\n                case 'A256GCM':\n                case 'A128GCMKW':\n                case 'A192GCMKW':\n                case 'A256GCMKW':\n                    algorithm = { name: 'AES-GCM' };\n                    keyUsages = ['encrypt', 'decrypt'];\n                    break;\n                case 'A128KW':\n                case 'A192KW':\n                case 'A256KW':\n                    algorithm = { name: 'AES-KW' };\n                    keyUsages = ['wrapKey', 'unwrapKey'];\n                    break;\n                case 'PBES2-HS256+A128KW':\n                case 'PBES2-HS384+A192KW':\n                case 'PBES2-HS512+A256KW':\n                    algorithm = { name: 'PBKDF2' };\n                    keyUsages = ['deriveBits'];\n                    break;\n                default:\n                    throw new JOSENotSupported('unsupported or invalid JWK \"alg\" (Algorithm) Parameter value');\n            }\n            break;\n        }\n        case 'RSA': {\n            switch (jwk.alg) {\n                case 'PS256':\n                case 'PS384':\n                case 'PS512':\n                    algorithm = { name: 'RSA-PSS', hash: { name: `SHA-${jwk.alg.substr(-3)}` } };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'RS256':\n                case 'RS384':\n                case 'RS512':\n                    algorithm = { name: 'RSASSA-PKCS1-v1_5', hash: { name: `SHA-${jwk.alg.substr(-3)}` } };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'RSA-OAEP':\n                case 'RSA-OAEP-256':\n                case 'RSA-OAEP-384':\n                case 'RSA-OAEP-512':\n                    algorithm = {\n                        name: 'RSA-OAEP',\n                        hash: { name: `SHA-${parseInt(jwk.alg.substr(-3), 10) || 1}` },\n                    };\n                    keyUsages = jwk.d ? ['decrypt', 'unwrapKey'] : ['encrypt', 'wrapKey'];\n                    break;\n                default:\n                    throw new JOSENotSupported('unsupported or invalid JWK \"alg\" (Algorithm) Parameter value');\n            }\n            break;\n        }\n        case 'EC': {\n            switch (jwk.alg) {\n                case 'ES256':\n                case 'ES384':\n                case 'ES512':\n                    algorithm = { name: 'ECDSA', namedCurve: jwk.crv };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ECDH-ES':\n                case 'ECDH-ES+A128KW':\n                case 'ECDH-ES+A192KW':\n                case 'ECDH-ES+A256KW':\n                    algorithm = { name: 'ECDH', namedCurve: jwk.crv };\n                    keyUsages = jwk.d ? ['deriveBits'] : [];\n                    break;\n                default:\n                    throw new JOSENotSupported('unsupported or invalid JWK \"alg\" (Algorithm) Parameter value');\n            }\n            break;\n        }\n        default:\n            throw new JOSENotSupported('unsupported or invalid JWK \"kty\" (Key Type) Parameter value');\n    }\n    return { algorithm, keyUsages };\n}\nconst parse = async (jwk) => {\n    var _a, _b;\n    const { algorithm, keyUsages } = subtleMapping(jwk);\n    let format = 'jwk';\n    let keyData = { ...jwk };\n    delete keyData.alg;\n    if (algorithm.name === 'PBKDF2') {\n        format = 'raw';\n        keyData = decode$1(jwk.k);\n    }\n    return crypto.subtle.importKey(format, keyData, algorithm, (_a = jwk.ext) !== null && _a !== void 0 ? _a : false, (_b = jwk.key_ops) !== null && _b !== void 0 ? _b : keyUsages);\n};\n\nasync function parseJwk(jwk, alg, octAsKeyObject) {\n    if (!isObject(jwk)) {\n        throw new TypeError('JWK must be an object');\n    }\n    alg || (alg = jwk.alg);\n    if (typeof alg !== 'string' || !alg) {\n        throw new TypeError('\"alg\" argument is required when \"jwk.alg\" is not present');\n    }\n    switch (jwk.kty) {\n        case 'oct':\n            if (typeof jwk.k !== 'string' || !jwk.k) {\n                throw new TypeError('missing \"k\" (Key Value) Parameter value');\n            }\n            octAsKeyObject !== null && octAsKeyObject !== void 0 ? octAsKeyObject : (octAsKeyObject = jwk.ext !== true);\n            if (octAsKeyObject) {\n                return parse({ ...jwk, alg, ext: false });\n            }\n            return decode$1(jwk.k);\n        case 'RSA':\n            if (jwk.oth !== undefined) {\n                throw new JOSENotSupported('RSA JWK \"oth\" (Other Primes Info) Parameter value is not supported');\n            }\n        case 'EC':\n        case 'OKP':\n            return parse({ ...jwk, alg });\n        default:\n            throw new JOSENotSupported('unsupported \"kty\" (Key Type) Parameter value');\n    }\n}\n\nconst checkKeyType = (alg, key, usage) => {\n    if (!(key instanceof Uint8Array) && !(key === null || key === void 0 ? void 0 : key.type)) {\n        throw new TypeError(invalidKeyInput(key, 'KeyObject', 'CryptoKey', 'Uint8Array'));\n    }\n    if (alg.startsWith('HS') ||\n        alg === 'dir' ||\n        alg.startsWith('PBES2') ||\n        alg.match(/^A\\d{3}(?:GCM)?KW$/)) {\n        if (key instanceof Uint8Array || key.type === 'secret') {\n            return;\n        }\n        throw new TypeError('CryptoKey or KeyObject instances for symmetric algorithms must be of type \"secret\"');\n    }\n    if (key instanceof Uint8Array) {\n        throw new TypeError(invalidKeyInput(key, 'KeyObject', 'CryptoKey'));\n    }\n    if (key.type === 'secret') {\n        throw new TypeError('CryptoKey or KeyObject instances for asymmetric algorithms must not be of type \"secret\"');\n    }\n    if (usage === 'sign' && key.type === 'public') {\n        throw new TypeError('CryptoKey or KeyObject instances for asymmetric algorithm signing must be of type \"private\"');\n    }\n    if (usage === 'decrypt' && key.type === 'public') {\n        throw new TypeError('CryptoKey or KeyObject instances for asymmetric algorithm decryption must be of type \"private\"');\n    }\n};\n\nfunction assertEnryptedKey(encryptedKey) {\n    if (!encryptedKey) {\n        throw new JWEInvalid('JWE Encrypted Key missing');\n    }\n}\nfunction assertHeaderParameter(joseHeader, parameter, name) {\n    if (joseHeader[parameter] === undefined) {\n        throw new JWEInvalid(`JOSE Header ${name} (${parameter}) missing`);\n    }\n}\nasync function decryptKeyManagement(alg, key, encryptedKey, joseHeader) {\n    checkKeyType(alg, key, 'decrypt');\n    switch (alg) {\n        case 'dir': {\n            if (encryptedKey !== undefined) {\n                throw new JWEInvalid('Encountered unexpected JWE Encrypted Key');\n            }\n            return key;\n        }\n        case 'ECDH-ES':\n            if (encryptedKey !== undefined) {\n                throw new JWEInvalid('Encountered unexpected JWE Encrypted Key');\n            }\n        case 'ECDH-ES+A128KW':\n        case 'ECDH-ES+A192KW':\n        case 'ECDH-ES+A256KW': {\n            assertHeaderParameter(joseHeader, 'epk', 'Ephemeral Public Key');\n            if (!ecdhAllowed(key)) {\n                throw new JOSENotSupported('ECDH-ES with the provided key is not allowed or not supported by your javascript runtime');\n            }\n            const epk = await parseJwk(joseHeader.epk, alg);\n            let partyUInfo;\n            let partyVInfo;\n            if (joseHeader.apu !== undefined)\n                partyUInfo = decode$1(joseHeader.apu);\n            if (joseHeader.apv !== undefined)\n                partyVInfo = decode$1(joseHeader.apv);\n            const sharedSecret = await deriveKey(epk, key, alg === 'ECDH-ES' ? joseHeader.enc : alg, parseInt(alg.substr(-5, 3), 10) || bitLengths.get(joseHeader.enc), partyUInfo, partyVInfo);\n            if (alg === 'ECDH-ES') {\n                return sharedSecret;\n            }\n            assertEnryptedKey(encryptedKey);\n            const kwAlg = alg.substr(-6);\n            return unwrap$1(kwAlg, sharedSecret, encryptedKey);\n        }\n        case 'RSA1_5':\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512': {\n            assertEnryptedKey(encryptedKey);\n            return decrypt(alg, key, encryptedKey);\n        }\n        case 'PBES2-HS256+A128KW':\n        case 'PBES2-HS384+A192KW':\n        case 'PBES2-HS512+A256KW': {\n            assertEnryptedKey(encryptedKey);\n            assertHeaderParameter(joseHeader, 'p2c', 'PBES2 Count');\n            assertHeaderParameter(joseHeader, 'p2s', 'PBES2 Salt');\n            const { p2c } = joseHeader;\n            const p2s = decode$1(joseHeader.p2s);\n            return decrypt$1(alg, key, encryptedKey, p2c, p2s);\n        }\n        case 'A128KW':\n        case 'A192KW':\n        case 'A256KW': {\n            assertEnryptedKey(encryptedKey);\n            return unwrap$1(alg, key, encryptedKey);\n        }\n        case 'A128GCMKW':\n        case 'A192GCMKW':\n        case 'A256GCMKW': {\n            assertEnryptedKey(encryptedKey);\n            assertHeaderParameter(joseHeader, 'iv', 'Initialization Vector');\n            assertHeaderParameter(joseHeader, 'tag', 'Authentication Tag');\n            const iv = decode$1(joseHeader.iv);\n            const tag = decode$1(joseHeader.tag);\n            return unwrap(alg, key, encryptedKey, iv, tag);\n        }\n        default: {\n            throw new JOSENotSupported('unsupported or invalid \"alg\" (JWE Algorithm) header value');\n        }\n    }\n}\n\nfunction validateCrit(Err, recognizedDefault, recognizedOption, protectedHeader, joseHeader) {\n    if (joseHeader.crit !== undefined && protectedHeader.crit === undefined) {\n        throw new Err('\"crit\" (Critical) Header Parameter MUST be integrity protected');\n    }\n    if (!protectedHeader || protectedHeader.crit === undefined) {\n        return new Set();\n    }\n    if (!Array.isArray(protectedHeader.crit) ||\n        protectedHeader.crit.length === 0 ||\n        protectedHeader.crit.some((input) => typeof input !== 'string' || input.length === 0)) {\n        throw new Err('\"crit\" (Critical) Header Parameter MUST be an array of non-empty strings when present');\n    }\n    let recognized;\n    if (recognizedOption !== undefined) {\n        recognized = new Map([...Object.entries(recognizedOption), ...recognizedDefault.entries()]);\n    }\n    else {\n        recognized = recognizedDefault;\n    }\n    for (const parameter of protectedHeader.crit) {\n        if (!recognized.has(parameter)) {\n            throw new JOSENotSupported(`Extension Header Parameter \"${parameter}\" is not recognized`);\n        }\n        if (joseHeader[parameter] === undefined) {\n            throw new Err(`Extension Header Parameter \"${parameter}\" is missing`);\n        }\n        else if (recognized.get(parameter) && protectedHeader[parameter] === undefined) {\n            throw new Err(`Extension Header Parameter \"${parameter}\" MUST be integrity protected`);\n        }\n    }\n    return new Set(protectedHeader.crit);\n}\n\nconst validateAlgorithms = (option, algorithms) => {\n    if (algorithms !== undefined &&\n        (!Array.isArray(algorithms) || algorithms.some((s) => typeof s !== 'string'))) {\n        throw new TypeError(`\"${option}\" option must be an array of strings`);\n    }\n    if (!algorithms) {\n        return undefined;\n    }\n    return new Set(algorithms);\n};\n\nconst generateCek$1 = factory(random$1);\nconst checkExtensions$3 = validateCrit.bind(undefined, JWEInvalid, new Map());\nconst checkAlgOption$1 = validateAlgorithms.bind(undefined, 'keyManagementAlgorithms');\nconst checkEncOption = validateAlgorithms.bind(undefined, 'contentEncryptionAlgorithms');\nasync function flattenedDecrypt(jwe, key, options) {\n    var _a;\n    if (!isObject(jwe)) {\n        throw new JWEInvalid('Flattened JWE must be an object');\n    }\n    if (jwe.protected === undefined && jwe.header === undefined && jwe.unprotected === undefined) {\n        throw new JWEInvalid('JOSE Header missing');\n    }\n    if (typeof jwe.iv !== 'string') {\n        throw new JWEInvalid('JWE Initialization Vector missing or incorrect type');\n    }\n    if (typeof jwe.ciphertext !== 'string') {\n        throw new JWEInvalid('JWE Ciphertext missing or incorrect type');\n    }\n    if (typeof jwe.tag !== 'string') {\n        throw new JWEInvalid('JWE Authentication Tag missing or incorrect type');\n    }\n    if (jwe.protected !== undefined && typeof jwe.protected !== 'string') {\n        throw new JWEInvalid('JWE Protected Header incorrect type');\n    }\n    if (jwe.encrypted_key !== undefined && typeof jwe.encrypted_key !== 'string') {\n        throw new JWEInvalid('JWE Encrypted Key incorrect type');\n    }\n    if (jwe.aad !== undefined && typeof jwe.aad !== 'string') {\n        throw new JWEInvalid('JWE AAD incorrect type');\n    }\n    if (jwe.header !== undefined && !isObject(jwe.header)) {\n        throw new JWEInvalid('JWE Shared Unprotected Header incorrect type');\n    }\n    if (jwe.unprotected !== undefined && !isObject(jwe.unprotected)) {\n        throw new JWEInvalid('JWE Per-Recipient Unprotected Header incorrect type');\n    }\n    let parsedProt;\n    if (jwe.protected) {\n        const protectedHeader = decode$1(jwe.protected);\n        try {\n            parsedProt = JSON.parse(decoder.decode(protectedHeader));\n        }\n        catch (_b) {\n            throw new JWEInvalid('JWE Protected Header is invalid');\n        }\n    }\n    if (!isDisjoint(parsedProt, jwe.header, jwe.unprotected)) {\n        throw new JWEInvalid('JWE Protected, JWE Unprotected Header, and JWE Per-Recipient Unprotected Header Parameter names must be disjoint');\n    }\n    const joseHeader = {\n        ...parsedProt,\n        ...jwe.header,\n        ...jwe.unprotected,\n    };\n    checkExtensions$3(options === null || options === void 0 ? void 0 : options.crit, parsedProt, joseHeader);\n    if (joseHeader.zip !== undefined) {\n        if (!parsedProt || !parsedProt.zip) {\n            throw new JWEInvalid('JWE \"zip\" (Compression Algorithm) Header MUST be integrity protected');\n        }\n        if (joseHeader.zip !== 'DEF') {\n            throw new JOSENotSupported('unsupported JWE \"zip\" (Compression Algorithm) Header Parameter value');\n        }\n    }\n    const { alg, enc } = joseHeader;\n    if (typeof alg !== 'string' || !alg) {\n        throw new JWEInvalid('missing JWE Algorithm (alg) in JWE Header');\n    }\n    if (typeof enc !== 'string' || !enc) {\n        throw new JWEInvalid('missing JWE Encryption Algorithm (enc) in JWE Header');\n    }\n    const keyManagementAlgorithms = options && checkAlgOption$1(options.keyManagementAlgorithms);\n    const contentEncryptionAlgorithms = options && checkEncOption(options.contentEncryptionAlgorithms);\n    if (keyManagementAlgorithms && !keyManagementAlgorithms.has(alg)) {\n        throw new JOSEAlgNotAllowed('\"alg\" (Algorithm) Header Parameter not allowed');\n    }\n    if (contentEncryptionAlgorithms && !contentEncryptionAlgorithms.has(enc)) {\n        throw new JOSEAlgNotAllowed('\"enc\" (Encryption Algorithm) Header Parameter not allowed');\n    }\n    let encryptedKey;\n    if (jwe.encrypted_key !== undefined) {\n        encryptedKey = decode$1(jwe.encrypted_key);\n    }\n    if (typeof key === 'function') {\n        key = await key(parsedProt, jwe);\n    }\n    let cek;\n    try {\n        cek = await decryptKeyManagement(alg, key, encryptedKey, joseHeader);\n    }\n    catch (err) {\n        if (err instanceof TypeError) {\n            throw err;\n        }\n        cek = generateCek$1(enc);\n    }\n    const iv = decode$1(jwe.iv);\n    const tag = decode$1(jwe.tag);\n    const protectedHeader = encoder.encode((_a = jwe.protected) !== null && _a !== void 0 ? _a : '');\n    let additionalData;\n    if (jwe.aad !== undefined) {\n        additionalData = concat(protectedHeader, encoder.encode('.'), encoder.encode(jwe.aad));\n    }\n    else {\n        additionalData = protectedHeader;\n    }\n    let plaintext = await decrypt$2(enc, cek, decode$1(jwe.ciphertext), iv, tag, additionalData);\n    if (joseHeader.zip === 'DEF') {\n        plaintext = await ((options === null || options === void 0 ? void 0 : options.inflateRaw) || inflate)(plaintext);\n    }\n    const result = { plaintext };\n    if (jwe.protected !== undefined) {\n        result.protectedHeader = parsedProt;\n    }\n    if (jwe.aad !== undefined) {\n        result.additionalAuthenticatedData = decode$1(jwe.aad);\n    }\n    if (jwe.unprotected !== undefined) {\n        result.sharedUnprotectedHeader = jwe.unprotected;\n    }\n    if (jwe.header !== undefined) {\n        result.unprotectedHeader = jwe.header;\n    }\n    return result;\n}\n\nasync function compactDecrypt(jwe, key, options) {\n    if (jwe instanceof Uint8Array) {\n        jwe = decoder.decode(jwe);\n    }\n    if (typeof jwe !== 'string') {\n        throw new JWEInvalid('Compact JWE must be a string or Uint8Array');\n    }\n    const { 0: protectedHeader, 1: encryptedKey, 2: iv, 3: ciphertext, 4: tag, length, } = jwe.split('.');\n    if (length !== 5) {\n        throw new JWEInvalid('Invalid Compact JWE');\n    }\n    const decrypted = await flattenedDecrypt({\n        ciphertext: (ciphertext || undefined),\n        iv: (iv || undefined),\n        protected: protectedHeader || undefined,\n        tag: (tag || undefined),\n        encrypted_key: encryptedKey || undefined,\n    }, key, options);\n    return { plaintext: decrypted.plaintext, protectedHeader: decrypted.protectedHeader };\n}\n\nconst keyToJWK = async (key) => {\n    if (key instanceof Uint8Array) {\n        return {\n            kty: 'oct',\n            k: encode$1(key),\n        };\n    }\n    if (!isCryptoKey(key)) {\n        throw new TypeError(invalidKeyInput(key, 'CryptoKey', 'Uint8Array'));\n    }\n    if (!key.extractable) {\n        throw new TypeError('non-extractable CryptoKey cannot be exported as a JWK');\n    }\n    const { ext, key_ops, alg, use, ...jwk } = await crypto.subtle.exportKey('jwk', key);\n    return jwk;\n};\n\nasync function fromKeyLike(key) {\n    return keyToJWK(key);\n}\n\nconst generateCek = factory(random$1);\nasync function encryptKeyManagement(alg, enc, key, providedCek, providedParameters = {}) {\n    let encryptedKey;\n    let parameters;\n    let cek;\n    checkKeyType(alg, key, 'encrypt');\n    switch (alg) {\n        case 'dir': {\n            cek = key;\n            break;\n        }\n        case 'ECDH-ES':\n        case 'ECDH-ES+A128KW':\n        case 'ECDH-ES+A192KW':\n        case 'ECDH-ES+A256KW': {\n            if (!ecdhAllowed(key)) {\n                throw new JOSENotSupported('ECDH-ES with the provided key is not allowed or not supported by your javascript runtime');\n            }\n            const { apu, apv } = providedParameters;\n            let { epk: ephemeralKey } = providedParameters;\n            ephemeralKey || (ephemeralKey = await generateEpk(key));\n            const { x, y, crv, kty } = await fromKeyLike(ephemeralKey);\n            const sharedSecret = await deriveKey(key, ephemeralKey, alg === 'ECDH-ES' ? enc : alg, parseInt(alg.substr(-5, 3), 10) || bitLengths.get(enc), apu, apv);\n            parameters = { epk: { x, y, crv, kty } };\n            if (apu)\n                parameters.apu = encode$1(apu);\n            if (apv)\n                parameters.apv = encode$1(apv);\n            if (alg === 'ECDH-ES') {\n                cek = sharedSecret;\n                break;\n            }\n            cek = providedCek || generateCek(enc);\n            const kwAlg = alg.substr(-6);\n            encryptedKey = await wrap$1(kwAlg, sharedSecret, cek);\n            break;\n        }\n        case 'RSA1_5':\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512': {\n            cek = providedCek || generateCek(enc);\n            encryptedKey = await encrypt$1(alg, key, cek);\n            break;\n        }\n        case 'PBES2-HS256+A128KW':\n        case 'PBES2-HS384+A192KW':\n        case 'PBES2-HS512+A256KW': {\n            cek = providedCek || generateCek(enc);\n            const { p2c, p2s } = providedParameters;\n            ({ encryptedKey, ...parameters } = await encrypt$2(alg, key, cek, p2c, p2s));\n            break;\n        }\n        case 'A128KW':\n        case 'A192KW':\n        case 'A256KW': {\n            cek = providedCek || generateCek(enc);\n            encryptedKey = await wrap$1(alg, key, cek);\n            break;\n        }\n        case 'A128GCMKW':\n        case 'A192GCMKW':\n        case 'A256GCMKW': {\n            cek = providedCek || generateCek(enc);\n            const { iv } = providedParameters;\n            ({ encryptedKey, ...parameters } = await wrap(alg, key, cek, iv));\n            break;\n        }\n        default: {\n            throw new JOSENotSupported('unsupported or invalid \"alg\" (JWE Algorithm) header value');\n        }\n    }\n    return { cek, encryptedKey, parameters };\n}\n\nconst generateIv = factory$1(random$1);\nconst checkExtensions$2 = validateCrit.bind(undefined, JWEInvalid, new Map());\nclass FlattenedEncrypt {\n    constructor(plaintext) {\n        this._plaintext = plaintext;\n    }\n    setKeyManagementParameters(parameters) {\n        if (this._keyManagementParameters) {\n            throw new TypeError('setKeyManagementParameters can only be called once');\n        }\n        this._keyManagementParameters = parameters;\n        return this;\n    }\n    setProtectedHeader(protectedHeader) {\n        if (this._protectedHeader) {\n            throw new TypeError('setProtectedHeader can only be called once');\n        }\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    setSharedUnprotectedHeader(sharedUnprotectedHeader) {\n        if (this._sharedUnprotectedHeader) {\n            throw new TypeError('setSharedUnprotectedHeader can only be called once');\n        }\n        this._sharedUnprotectedHeader = sharedUnprotectedHeader;\n        return this;\n    }\n    setUnprotectedHeader(unprotectedHeader) {\n        if (this._unprotectedHeader) {\n            throw new TypeError('setUnprotectedHeader can only be called once');\n        }\n        this._unprotectedHeader = unprotectedHeader;\n        return this;\n    }\n    setAdditionalAuthenticatedData(aad) {\n        this._aad = aad;\n        return this;\n    }\n    setContentEncryptionKey(cek) {\n        if (this._cek) {\n            throw new TypeError('setContentEncryptionKey can only be called once');\n        }\n        this._cek = cek;\n        return this;\n    }\n    setInitializationVector(iv) {\n        if (this._iv) {\n            throw new TypeError('setInitializationVector can only be called once');\n        }\n        this._iv = iv;\n        return this;\n    }\n    async encrypt(key, options) {\n        if (!this._protectedHeader && !this._unprotectedHeader && !this._sharedUnprotectedHeader) {\n            throw new JWEInvalid('either setProtectedHeader, setUnprotectedHeader, or sharedUnprotectedHeader must be called before #encrypt()');\n        }\n        if (!isDisjoint(this._protectedHeader, this._unprotectedHeader, this._sharedUnprotectedHeader)) {\n            throw new JWEInvalid('JWE Shared Protected, JWE Shared Unprotected and JWE Per-Recipient Header Parameter names must be disjoint');\n        }\n        const joseHeader = {\n            ...this._protectedHeader,\n            ...this._unprotectedHeader,\n            ...this._sharedUnprotectedHeader,\n        };\n        checkExtensions$2(options === null || options === void 0 ? void 0 : options.crit, this._protectedHeader, joseHeader);\n        if (joseHeader.zip !== undefined) {\n            if (!this._protectedHeader || !this._protectedHeader.zip) {\n                throw new JWEInvalid('JWE \"zip\" (Compression Algorithm) Header MUST be integrity protected');\n            }\n            if (joseHeader.zip !== 'DEF') {\n                throw new JOSENotSupported('unsupported JWE \"zip\" (Compression Algorithm) Header Parameter value');\n            }\n        }\n        const { alg, enc } = joseHeader;\n        if (typeof alg !== 'string' || !alg) {\n            throw new JWEInvalid('JWE \"alg\" (Algorithm) Header Parameter missing or invalid');\n        }\n        if (typeof enc !== 'string' || !enc) {\n            throw new JWEInvalid('JWE \"enc\" (Encryption Algorithm) Header Parameter missing or invalid');\n        }\n        let encryptedKey;\n        if (alg === 'dir') {\n            if (this._cek) {\n                throw new TypeError('setContentEncryptionKey cannot be called when using Direct Encryption');\n            }\n        }\n        else if (alg === 'ECDH-ES') {\n            if (this._cek) {\n                throw new TypeError('setContentEncryptionKey cannot be called when using Direct Key Agreement');\n            }\n        }\n        let cek;\n        {\n            let parameters;\n            ({ cek, encryptedKey, parameters } = await encryptKeyManagement(alg, enc, key, this._cek, this._keyManagementParameters));\n            if (parameters) {\n                if (!this._protectedHeader) {\n                    this.setProtectedHeader(parameters);\n                }\n                else {\n                    this._protectedHeader = { ...this._protectedHeader, ...parameters };\n                }\n            }\n        }\n        this._iv || (this._iv = generateIv(enc));\n        let additionalData;\n        let protectedHeader;\n        let aadMember;\n        if (this._protectedHeader) {\n            protectedHeader = encoder.encode(encode$1(JSON.stringify(this._protectedHeader)));\n        }\n        else {\n            protectedHeader = encoder.encode('');\n        }\n        if (this._aad) {\n            aadMember = encode$1(this._aad);\n            additionalData = concat(protectedHeader, encoder.encode('.'), encoder.encode(aadMember));\n        }\n        else {\n            additionalData = protectedHeader;\n        }\n        let ciphertext;\n        let tag;\n        if (joseHeader.zip === 'DEF') {\n            const deflated = await ((options === null || options === void 0 ? void 0 : options.deflateRaw) || deflate)(this._plaintext);\n            ({ ciphertext, tag } = await encrypt(enc, deflated, cek, this._iv, additionalData));\n        }\n        else {\n            ({ ciphertext, tag } = await encrypt(enc, this._plaintext, cek, this._iv, additionalData));\n        }\n        const jwe = {\n            ciphertext: encode$1(ciphertext),\n            iv: encode$1(this._iv),\n            tag: encode$1(tag),\n        };\n        if (encryptedKey) {\n            jwe.encrypted_key = encode$1(encryptedKey);\n        }\n        if (aadMember) {\n            jwe.aad = aadMember;\n        }\n        if (this._protectedHeader) {\n            jwe.protected = decoder.decode(protectedHeader);\n        }\n        if (this._sharedUnprotectedHeader) {\n            jwe.unprotected = this._sharedUnprotectedHeader;\n        }\n        if (this._unprotectedHeader) {\n            jwe.header = this._unprotectedHeader;\n        }\n        return jwe;\n    }\n}\n\nclass CompactEncrypt {\n    constructor(plaintext) {\n        this._flattened = new FlattenedEncrypt(plaintext);\n    }\n    setContentEncryptionKey(cek) {\n        this._flattened.setContentEncryptionKey(cek);\n        return this;\n    }\n    setInitializationVector(iv) {\n        this._flattened.setInitializationVector(iv);\n        return this;\n    }\n    setProtectedHeader(protectedHeader) {\n        this._flattened.setProtectedHeader(protectedHeader);\n        return this;\n    }\n    setKeyManagementParameters(parameters) {\n        this._flattened.setKeyManagementParameters(parameters);\n        return this;\n    }\n    async encrypt(key, options) {\n        const jwe = await this._flattened.encrypt(key, options);\n        return [jwe.protected, jwe.encrypted_key, jwe.iv, jwe.ciphertext, jwe.tag].join('.');\n    }\n}\n\nasync function generalDecrypt(jwe, key, options) {\n    if (!isObject(jwe)) {\n        throw new JWEInvalid('General JWE must be an object');\n    }\n    if (!Array.isArray(jwe.recipients) || !jwe.recipients.every(isObject)) {\n        throw new JWEInvalid('JWE Recipients missing or incorrect type');\n    }\n    for (const recipient of jwe.recipients) {\n        try {\n            return await flattenedDecrypt({\n                aad: jwe.aad,\n                ciphertext: jwe.ciphertext,\n                encrypted_key: recipient.encrypted_key,\n                header: recipient.header,\n                iv: jwe.iv,\n                protected: jwe.protected,\n                tag: jwe.tag,\n                unprotected: jwe.unprotected,\n            }, key, options);\n        }\n        catch (_a) {\n        }\n    }\n    throw new JWEDecryptionFailed();\n}\n\nasync function EmbeddedJWK(protectedHeader, token) {\n    const joseHeader = {\n        ...protectedHeader,\n        ...token.header,\n    };\n    if (!isObject(joseHeader.jwk)) {\n        throw new JWSInvalid('\"jwk\" (JSON Web Key) Header Parameter must be a JSON object');\n    }\n    const key = await parseJwk(joseHeader.jwk, joseHeader.alg, true);\n    if (key.type !== 'public') {\n        throw new JWSInvalid('\"jwk\" (JSON Web Key) Header Parameter must be a public key');\n    }\n    return key;\n}\n\nconst check = (value, description) => {\n    if (typeof value !== 'string' || !value) {\n        throw new JWKInvalid(`${description} missing or invalid`);\n    }\n};\nasync function calculateThumbprint(jwk, digestAlgorithm = 'sha256') {\n    if (!isObject(jwk)) {\n        throw new TypeError('JWK must be an object');\n    }\n    let components;\n    switch (jwk.kty) {\n        case 'EC':\n            check(jwk.crv, '\"crv\" (Curve) Parameter');\n            check(jwk.x, '\"x\" (X Coordinate) Parameter');\n            check(jwk.y, '\"y\" (Y Coordinate) Parameter');\n            components = { crv: jwk.crv, kty: jwk.kty, x: jwk.x, y: jwk.y };\n            break;\n        case 'OKP':\n            check(jwk.crv, '\"crv\" (Subtype of Key Pair) Parameter');\n            check(jwk.x, '\"x\" (Public Key) Parameter');\n            components = { crv: jwk.crv, kty: jwk.kty, x: jwk.x };\n            break;\n        case 'RSA':\n            check(jwk.e, '\"e\" (Exponent) Parameter');\n            check(jwk.n, '\"n\" (Modulus) Parameter');\n            components = { e: jwk.e, kty: jwk.kty, n: jwk.n };\n            break;\n        case 'oct':\n            check(jwk.k, '\"k\" (Key Value) Parameter');\n            components = { k: jwk.k, kty: jwk.kty };\n            break;\n        default:\n            throw new JOSENotSupported('\"kty\" (Key Type) Parameter missing or unsupported');\n    }\n    const data = encoder.encode(JSON.stringify(components));\n    return encode$1(await digest(digestAlgorithm, data));\n}\n\nconst fetchJwks = async (url, timeout) => {\n    let controller;\n    if (typeof AbortController === 'function') {\n        controller = new AbortController();\n        setTimeout(() => controller.abort(), timeout);\n    }\n    const response = await globalThis$1.fetch(url.href, {\n        signal: controller ? controller.signal : undefined,\n        redirect: 'manual',\n        referrerPolicy: 'no-referrer',\n        credentials: 'omit',\n        mode: 'cors',\n        method: 'GET',\n    });\n    if (response.status !== 200) {\n        throw new JOSEError('Expected 200 OK from the JSON Web Key Set HTTP response');\n    }\n    try {\n        return await response.json();\n    }\n    catch (_a) {\n        throw new JOSEError('Failed to parse the JSON Web Key Set HTTP response as JSON');\n    }\n};\n\nfunction getKtyFromAlg(alg) {\n    switch (alg.substr(0, 2)) {\n        case 'RS':\n        case 'PS':\n            return 'RSA';\n        case 'ES':\n            return 'EC';\n        case 'Ed':\n            return 'OKP';\n        default:\n            throw new JOSENotSupported('Unsupported \"alg\" value for a JSON Web Key Set');\n    }\n}\nfunction isJWKLike(key) {\n    return isObject(key);\n}\nclass RemoteJWKSet {\n    constructor(url, options) {\n        this._cached = new WeakMap();\n        if (!(url instanceof URL)) {\n            throw new TypeError('url must be an instance of URL');\n        }\n        this._url = new URL(url.href);\n        this._options = { agent: options === null || options === void 0 ? void 0 : options.agent };\n        this._timeoutDuration =\n            typeof (options === null || options === void 0 ? void 0 : options.timeoutDuration) === 'number' ? options === null || options === void 0 ? void 0 : options.timeoutDuration : 5000;\n        this._cooldownDuration =\n            typeof (options === null || options === void 0 ? void 0 : options.cooldownDuration) === 'number' ? options === null || options === void 0 ? void 0 : options.cooldownDuration : 30000;\n    }\n    coolingDown() {\n        if (typeof this._cooldownStarted === 'undefined') {\n            return false;\n        }\n        return Date.now() < this._cooldownStarted + this._cooldownDuration;\n    }\n    async getKey(protectedHeader) {\n        if (!this._jwks) {\n            await this.reload();\n        }\n        const candidates = this._jwks.keys.filter((jwk) => {\n            let candidate = jwk.kty === getKtyFromAlg(protectedHeader.alg);\n            if (candidate && typeof protectedHeader.kid === 'string') {\n                candidate = protectedHeader.kid === jwk.kid;\n            }\n            if (candidate && typeof jwk.alg === 'string') {\n                candidate = protectedHeader.alg === jwk.alg;\n            }\n            if (candidate && typeof jwk.use === 'string') {\n                candidate = jwk.use === 'sig';\n            }\n            if (candidate && Array.isArray(jwk.key_ops)) {\n                candidate = jwk.key_ops.includes('verify');\n            }\n            if (candidate && protectedHeader.alg === 'EdDSA') {\n                candidate = ['Ed25519', 'Ed448'].includes(jwk.crv);\n            }\n            if (candidate) {\n                switch (protectedHeader.alg) {\n                    case 'ES256':\n                        candidate = jwk.crv === 'P-256';\n                        break;\n                    case 'ES256K':\n                        candidate = jwk.crv === 'secp256k1';\n                        break;\n                    case 'ES384':\n                        candidate = jwk.crv === 'P-384';\n                        break;\n                    case 'ES512':\n                        candidate = jwk.crv === 'P-521';\n                        break;\n                }\n            }\n            return candidate;\n        });\n        const { 0: jwk, length } = candidates;\n        if (length === 0) {\n            if (this.coolingDown() === false) {\n                await this.reload();\n                return this.getKey(protectedHeader);\n            }\n            throw new JWKSNoMatchingKey();\n        }\n        else if (length !== 1) {\n            throw new JWKSMultipleMatchingKeys();\n        }\n        if (!this._cached.has(jwk)) {\n            this._cached.set(jwk, {});\n        }\n        const cached = this._cached.get(jwk);\n        if (cached[protectedHeader.alg] === undefined) {\n            const keyObject = (await parseJwk({ ...jwk, alg: protectedHeader.alg }));\n            if (keyObject.type !== 'public') {\n                throw new JWKSInvalid('JSON Web Key Set members must be public keys');\n            }\n            cached[protectedHeader.alg] = keyObject;\n        }\n        return cached[protectedHeader.alg];\n    }\n    async reload() {\n        if (!this._pendingFetch) {\n            this._pendingFetch = fetchJwks(this._url, this._timeoutDuration, this._options)\n                .then((json) => {\n                if (typeof json !== 'object' ||\n                    !json ||\n                    !Array.isArray(json.keys) ||\n                    !json.keys.every(isJWKLike)) {\n                    throw new JWKSInvalid('JSON Web Key Set malformed');\n                }\n                this._jwks = { keys: json.keys };\n                this._cooldownStarted = Date.now();\n                this._pendingFetch = undefined;\n            })\n                .catch((err) => {\n                this._pendingFetch = undefined;\n                throw err;\n            });\n        }\n        await this._pendingFetch;\n    }\n}\nfunction createRemoteJWKSet(url, options) {\n    const set = new RemoteJWKSet(url, options);\n    return set.getKey.bind(set);\n}\n\nfunction subtleDsa(alg) {\n    switch (alg) {\n        case 'HS256':\n            return { hash: { name: 'SHA-256' }, name: 'HMAC' };\n        case 'HS384':\n            return { hash: { name: 'SHA-384' }, name: 'HMAC' };\n        case 'HS512':\n            return { hash: { name: 'SHA-512' }, name: 'HMAC' };\n        case 'PS256':\n            return {\n                hash: { name: 'SHA-256' },\n                name: 'RSA-PSS',\n                saltLength: 256 >> 3,\n            };\n        case 'PS384':\n            return {\n                hash: { name: 'SHA-384' },\n                name: 'RSA-PSS',\n                saltLength: 384 >> 3,\n            };\n        case 'PS512':\n            return {\n                hash: { name: 'SHA-512' },\n                name: 'RSA-PSS',\n                saltLength: 512 >> 3,\n            };\n        case 'RS256':\n            return { hash: { name: 'SHA-256' }, name: 'RSASSA-PKCS1-v1_5' };\n        case 'RS384':\n            return { hash: { name: 'SHA-384' }, name: 'RSASSA-PKCS1-v1_5' };\n        case 'RS512':\n            return { hash: { name: 'SHA-512' }, name: 'RSASSA-PKCS1-v1_5' };\n        case 'ES256':\n            return { hash: { name: 'SHA-256' }, name: 'ECDSA', namedCurve: 'P-256' };\n        case 'ES384':\n            return { hash: { name: 'SHA-384' }, name: 'ECDSA', namedCurve: 'P-384' };\n        case 'ES512':\n            return { hash: { name: 'SHA-512' }, name: 'ECDSA', namedCurve: 'P-521' };\n        default:\n            throw new JOSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);\n    }\n}\n\nfunction getCryptoKey(alg, key, usage) {\n    if (isCryptoKey(key)) {\n        return key;\n    }\n    if (key instanceof Uint8Array) {\n        if (!alg.startsWith('HS')) {\n            throw new TypeError(invalidKeyInput(key, 'CryptoKey'));\n        }\n        return crypto.subtle.importKey('raw', key, { hash: { name: `SHA-${alg.substr(-3)}` }, name: 'HMAC' }, false, [usage]);\n    }\n    throw new TypeError(invalidKeyInput(key, 'CryptoKey', 'Uint8Array'));\n}\n\nconst sign = async (alg, key, data) => {\n    const cryptoKey = await getCryptoKey(alg, key, 'sign');\n    checkKeyLength(alg, cryptoKey);\n    const signature = await crypto.subtle.sign(subtleDsa(alg), cryptoKey, data);\n    return new Uint8Array(signature);\n};\n\nconst checkExtensions$1 = validateCrit.bind(undefined, JWSInvalid, new Map([['b64', true]]));\nclass FlattenedSign {\n    constructor(payload) {\n        this._payload = payload;\n    }\n    setProtectedHeader(protectedHeader) {\n        if (this._protectedHeader) {\n            throw new TypeError('setProtectedHeader can only be called once');\n        }\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    setUnprotectedHeader(unprotectedHeader) {\n        if (this._unprotectedHeader) {\n            throw new TypeError('setUnprotectedHeader can only be called once');\n        }\n        this._unprotectedHeader = unprotectedHeader;\n        return this;\n    }\n    async sign(key, options) {\n        if (!this._protectedHeader && !this._unprotectedHeader) {\n            throw new JWSInvalid('either setProtectedHeader or setUnprotectedHeader must be called before #sign()');\n        }\n        if (!isDisjoint(this._protectedHeader, this._unprotectedHeader)) {\n            throw new JWSInvalid('JWS Protected and JWS Unprotected Header Parameter names must be disjoint');\n        }\n        const joseHeader = {\n            ...this._protectedHeader,\n            ...this._unprotectedHeader,\n        };\n        const extensions = checkExtensions$1(options === null || options === void 0 ? void 0 : options.crit, this._protectedHeader, joseHeader);\n        let b64 = true;\n        if (extensions.has('b64')) {\n            b64 = this._protectedHeader.b64;\n            if (typeof b64 !== 'boolean') {\n                throw new JWSInvalid('The \"b64\" (base64url-encode payload) Header Parameter must be a boolean');\n            }\n        }\n        const { alg } = joseHeader;\n        if (typeof alg !== 'string' || !alg) {\n            throw new JWSInvalid('JWS \"alg\" (Algorithm) Header Parameter missing or invalid');\n        }\n        checkKeyType(alg, key, 'sign');\n        let payload = this._payload;\n        if (b64) {\n            payload = encoder.encode(encode$1(payload));\n        }\n        let protectedHeader;\n        if (this._protectedHeader) {\n            protectedHeader = encoder.encode(encode$1(JSON.stringify(this._protectedHeader)));\n        }\n        else {\n            protectedHeader = encoder.encode('');\n        }\n        const data = concat(protectedHeader, encoder.encode('.'), payload);\n        const signature = await sign(alg, key, data);\n        const jws = {\n            signature: encode$1(signature),\n            payload: '',\n        };\n        if (b64) {\n            jws.payload = decoder.decode(payload);\n        }\n        if (this._unprotectedHeader) {\n            jws.header = this._unprotectedHeader;\n        }\n        if (this._protectedHeader) {\n            jws.protected = decoder.decode(protectedHeader);\n        }\n        return jws;\n    }\n}\n\nclass CompactSign {\n    constructor(payload) {\n        this._flattened = new FlattenedSign(payload);\n    }\n    setProtectedHeader(protectedHeader) {\n        this._flattened.setProtectedHeader(protectedHeader);\n        return this;\n    }\n    async sign(key, options) {\n        const jws = await this._flattened.sign(key, options);\n        if (jws.payload === undefined) {\n            throw new TypeError('use the flattened module for creating JWS with b64: false');\n        }\n        return `${jws.protected}.${jws.payload}.${jws.signature}`;\n    }\n}\n\nconst verify = async (alg, key, signature, data) => {\n    const cryptoKey = await getCryptoKey(alg, key, 'verify');\n    checkKeyLength(alg, cryptoKey);\n    const algorithm = subtleDsa(alg);\n    try {\n        return await crypto.subtle.verify(algorithm, cryptoKey, signature, data);\n    }\n    catch (_a) {\n        return false;\n    }\n};\n\nconst checkExtensions = validateCrit.bind(undefined, JWSInvalid, new Map([['b64', true]]));\nconst checkAlgOption = validateAlgorithms.bind(undefined, 'algorithms');\nasync function flattenedVerify(jws, key, options) {\n    var _a;\n    if (!isObject(jws)) {\n        throw new JWSInvalid('Flattened JWS must be an object');\n    }\n    if (jws.protected === undefined && jws.header === undefined) {\n        throw new JWSInvalid('Flattened JWS must have either of the \"protected\" or \"header\" members');\n    }\n    if (jws.protected !== undefined && typeof jws.protected !== 'string') {\n        throw new JWSInvalid('JWS Protected Header incorrect type');\n    }\n    if (jws.payload === undefined) {\n        throw new JWSInvalid('JWS Payload missing');\n    }\n    if (typeof jws.signature !== 'string') {\n        throw new JWSInvalid('JWS Signature missing or incorrect type');\n    }\n    if (jws.header !== undefined && !isObject(jws.header)) {\n        throw new JWSInvalid('JWS Unprotected Header incorrect type');\n    }\n    let parsedProt = {};\n    if (jws.protected) {\n        const protectedHeader = decode$1(jws.protected);\n        try {\n            parsedProt = JSON.parse(decoder.decode(protectedHeader));\n        }\n        catch (_b) {\n            throw new JWSInvalid('JWS Protected Header is invalid');\n        }\n    }\n    if (!isDisjoint(parsedProt, jws.header)) {\n        throw new JWSInvalid('JWS Protected and JWS Unprotected Header Parameter names must be disjoint');\n    }\n    const joseHeader = {\n        ...parsedProt,\n        ...jws.header,\n    };\n    const extensions = checkExtensions(options === null || options === void 0 ? void 0 : options.crit, parsedProt, joseHeader);\n    let b64 = true;\n    if (extensions.has('b64')) {\n        b64 = parsedProt.b64;\n        if (typeof b64 !== 'boolean') {\n            throw new JWSInvalid('The \"b64\" (base64url-encode payload) Header Parameter must be a boolean');\n        }\n    }\n    const { alg } = joseHeader;\n    if (typeof alg !== 'string' || !alg) {\n        throw new JWSInvalid('JWS \"alg\" (Algorithm) Header Parameter missing or invalid');\n    }\n    const algorithms = options && checkAlgOption(options.algorithms);\n    if (algorithms && !algorithms.has(alg)) {\n        throw new JOSEAlgNotAllowed('\"alg\" (Algorithm) Header Parameter not allowed');\n    }\n    if (b64) {\n        if (typeof jws.payload !== 'string') {\n            throw new JWSInvalid('JWS Payload must be a string');\n        }\n    }\n    else if (typeof jws.payload !== 'string' && !(jws.payload instanceof Uint8Array)) {\n        throw new JWSInvalid('JWS Payload must be a string or an Uint8Array instance');\n    }\n    if (typeof key === 'function') {\n        key = await key(parsedProt, jws);\n    }\n    checkKeyType(alg, key, 'verify');\n    const data = concat(encoder.encode((_a = jws.protected) !== null && _a !== void 0 ? _a : ''), encoder.encode('.'), typeof jws.payload === 'string' ? encoder.encode(jws.payload) : jws.payload);\n    const signature = decode$1(jws.signature);\n    const verified = await verify(alg, key, signature, data);\n    if (!verified) {\n        throw new JWSSignatureVerificationFailed();\n    }\n    let payload;\n    if (b64) {\n        payload = decode$1(jws.payload);\n    }\n    else if (typeof jws.payload === 'string') {\n        payload = encoder.encode(jws.payload);\n    }\n    else {\n        payload = jws.payload;\n    }\n    const result = { payload };\n    if (jws.protected !== undefined) {\n        result.protectedHeader = parsedProt;\n    }\n    if (jws.header !== undefined) {\n        result.unprotectedHeader = jws.header;\n    }\n    return result;\n}\n\nasync function compactVerify(jws, key, options) {\n    if (jws instanceof Uint8Array) {\n        jws = decoder.decode(jws);\n    }\n    if (typeof jws !== 'string') {\n        throw new JWSInvalid('Compact JWS must be a string or Uint8Array');\n    }\n    const { 0: protectedHeader, 1: payload, 2: signature, length } = jws.split('.');\n    if (length !== 3) {\n        throw new JWSInvalid('Invalid Compact JWS');\n    }\n    const verified = await flattenedVerify({\n        payload: (payload || undefined),\n        protected: protectedHeader || undefined,\n        signature: (signature || undefined),\n    }, key, options);\n    return { payload: verified.payload, protectedHeader: verified.protectedHeader };\n}\n\nconst signatureRef = new WeakMap();\nclass IndividualSignature {\n    setProtectedHeader(protectedHeader) {\n        if (this._protectedHeader) {\n            throw new TypeError('setProtectedHeader can only be called once');\n        }\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    setUnprotectedHeader(unprotectedHeader) {\n        if (this._unprotectedHeader) {\n            throw new TypeError('setUnprotectedHeader can only be called once');\n        }\n        this._unprotectedHeader = unprotectedHeader;\n        return this;\n    }\n    set _protectedHeader(value) {\n        signatureRef.get(this).protectedHeader = value;\n    }\n    get _protectedHeader() {\n        return signatureRef.get(this).protectedHeader;\n    }\n    set _unprotectedHeader(value) {\n        signatureRef.get(this).unprotectedHeader = value;\n    }\n    get _unprotectedHeader() {\n        return signatureRef.get(this).unprotectedHeader;\n    }\n}\nclass GeneralSign {\n    constructor(payload) {\n        this._signatures = [];\n        this._payload = payload;\n    }\n    addSignature(key, options) {\n        const signature = new IndividualSignature();\n        signatureRef.set(signature, { key, options });\n        this._signatures.push(signature);\n        return signature;\n    }\n    async sign() {\n        if (!this._signatures.length) {\n            throw new JWSInvalid('at least one signature must be added');\n        }\n        const jws = {\n            signatures: [],\n            payload: '',\n        };\n        let payloads = new Set();\n        await Promise.all(this._signatures.map(async (sig) => {\n            const { protectedHeader, unprotectedHeader, options, key } = signatureRef.get(sig);\n            const flattened = new FlattenedSign(this._payload);\n            if (protectedHeader) {\n                flattened.setProtectedHeader(protectedHeader);\n            }\n            if (unprotectedHeader) {\n                flattened.setUnprotectedHeader(unprotectedHeader);\n            }\n            const { payload, ...rest } = await flattened.sign(key, options);\n            payloads.add(payload);\n            jws.payload = payload;\n            jws.signatures.push(rest);\n        }));\n        if (payloads.size !== 1) {\n            throw new JWSInvalid('inconsistent use of JWS Unencoded Payload Option (RFC7797)');\n        }\n        return jws;\n    }\n}\n\nasync function generalVerify(jws, key, options) {\n    if (!isObject(jws)) {\n        throw new JWSInvalid('General JWS must be an object');\n    }\n    if (!Array.isArray(jws.signatures) || !jws.signatures.every(isObject)) {\n        throw new JWSInvalid('JWS Signatures missing or incorrect type');\n    }\n    for (const signature of jws.signatures) {\n        try {\n            return await flattenedVerify({\n                header: signature.header,\n                payload: jws.payload,\n                protected: signature.protected,\n                signature: signature.signature,\n            }, key, options);\n        }\n        catch (_a) {\n        }\n    }\n    throw new JWSSignatureVerificationFailed();\n}\n\nvar epoch = (date) => Math.floor(date.getTime() / 1000);\n\nconst minute = 60;\nconst hour = minute * 60;\nconst day = hour * 24;\nconst week = day * 7;\nconst year = day * 365.25;\nconst REGEX = /^(\\d+|\\d+\\.\\d+) ?(seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)$/i;\nvar secs = (str) => {\n    const matched = REGEX.exec(str);\n    if (!matched) {\n        throw new TypeError('Invalid time period format');\n    }\n    const value = parseFloat(matched[1]);\n    const unit = matched[2].toLowerCase();\n    switch (unit) {\n        case 'sec':\n        case 'secs':\n        case 'second':\n        case 'seconds':\n        case 's':\n            return Math.round(value);\n        case 'minute':\n        case 'minutes':\n        case 'min':\n        case 'mins':\n        case 'm':\n            return Math.round(value * minute);\n        case 'hour':\n        case 'hours':\n        case 'hr':\n        case 'hrs':\n        case 'h':\n            return Math.round(value * hour);\n        case 'day':\n        case 'days':\n        case 'd':\n            return Math.round(value * day);\n        case 'week':\n        case 'weeks':\n        case 'w':\n            return Math.round(value * week);\n        default:\n            return Math.round(value * year);\n    }\n};\n\nconst normalizeTyp = (value) => value.toLowerCase().replace(/^application\\//, '');\nconst checkAudiencePresence = (audPayload, audOption) => {\n    if (typeof audPayload === 'string') {\n        return audOption.includes(audPayload);\n    }\n    if (Array.isArray(audPayload)) {\n        return audOption.some(Set.prototype.has.bind(new Set(audPayload)));\n    }\n    return false;\n};\nvar jwtPayload = (protectedHeader, encodedPayload, options = {}) => {\n    const { typ } = options;\n    if (typ &&\n        (typeof protectedHeader.typ !== 'string' ||\n            normalizeTyp(protectedHeader.typ) !== normalizeTyp(typ))) {\n        throw new JWTClaimValidationFailed('unexpected \"typ\" JWT header value', 'typ', 'check_failed');\n    }\n    let payload;\n    try {\n        payload = JSON.parse(decoder.decode(encodedPayload));\n    }\n    catch (_a) {\n    }\n    if (!isObject(payload)) {\n        throw new JWTInvalid('JWT Claims Set must be a top-level JSON object');\n    }\n    const { issuer } = options;\n    if (issuer && !(Array.isArray(issuer) ? issuer : [issuer]).includes(payload.iss)) {\n        throw new JWTClaimValidationFailed('unexpected \"iss\" claim value', 'iss', 'check_failed');\n    }\n    const { subject } = options;\n    if (subject && payload.sub !== subject) {\n        throw new JWTClaimValidationFailed('unexpected \"sub\" claim value', 'sub', 'check_failed');\n    }\n    const { audience } = options;\n    if (audience &&\n        !checkAudiencePresence(payload.aud, typeof audience === 'string' ? [audience] : audience)) {\n        throw new JWTClaimValidationFailed('unexpected \"aud\" claim value', 'aud', 'check_failed');\n    }\n    let tolerance;\n    switch (typeof options.clockTolerance) {\n        case 'string':\n            tolerance = secs(options.clockTolerance);\n            break;\n        case 'number':\n            tolerance = options.clockTolerance;\n            break;\n        case 'undefined':\n            tolerance = 0;\n            break;\n        default:\n            throw new TypeError('Invalid clockTolerance option type');\n    }\n    const { currentDate } = options;\n    const now = epoch(currentDate || new Date());\n    if (payload.iat !== undefined || options.maxTokenAge) {\n        if (typeof payload.iat !== 'number') {\n            throw new JWTClaimValidationFailed('\"iat\" claim must be a number', 'iat', 'invalid');\n        }\n        if (payload.exp === undefined && payload.iat > now + tolerance) {\n            throw new JWTClaimValidationFailed('\"iat\" claim timestamp check failed (it should be in the past)', 'iat', 'check_failed');\n        }\n    }\n    if (payload.nbf !== undefined) {\n        if (typeof payload.nbf !== 'number') {\n            throw new JWTClaimValidationFailed('\"nbf\" claim must be a number', 'nbf', 'invalid');\n        }\n        if (payload.nbf > now + tolerance) {\n            throw new JWTClaimValidationFailed('\"nbf\" claim timestamp check failed', 'nbf', 'check_failed');\n        }\n    }\n    if (payload.exp !== undefined) {\n        if (typeof payload.exp !== 'number') {\n            throw new JWTClaimValidationFailed('\"exp\" claim must be a number', 'exp', 'invalid');\n        }\n        if (payload.exp <= now - tolerance) {\n            throw new JWTExpired('\"exp\" claim timestamp check failed', 'exp', 'check_failed');\n        }\n    }\n    if (options.maxTokenAge) {\n        const age = now - payload.iat;\n        const max = typeof options.maxTokenAge === 'number' ? options.maxTokenAge : secs(options.maxTokenAge);\n        if (age - tolerance > max) {\n            throw new JWTExpired('\"iat\" claim timestamp check failed (too far in the past)', 'iat', 'check_failed');\n        }\n        if (age < 0 - tolerance) {\n            throw new JWTClaimValidationFailed('\"iat\" claim timestamp check failed (it should be in the past)', 'iat', 'check_failed');\n        }\n    }\n    return payload;\n};\n\nasync function jwtDecrypt(jwt, key, options) {\n    const decrypted = await compactDecrypt(jwt, key, options);\n    const payload = jwtPayload(decrypted.protectedHeader, decrypted.plaintext, options);\n    const { protectedHeader } = decrypted;\n    if (protectedHeader.iss !== undefined && protectedHeader.iss !== payload.iss) {\n        throw new JWTClaimValidationFailed('replicated \"iss\" claim header parameter mismatch', 'iss', 'mismatch');\n    }\n    if (protectedHeader.sub !== undefined && protectedHeader.sub !== payload.sub) {\n        throw new JWTClaimValidationFailed('replicated \"sub\" claim header parameter mismatch', 'sub', 'mismatch');\n    }\n    if (protectedHeader.aud !== undefined &&\n        JSON.stringify(protectedHeader.aud) !== JSON.stringify(payload.aud)) {\n        throw new JWTClaimValidationFailed('replicated \"aud\" claim header parameter mismatch', 'aud', 'mismatch');\n    }\n    return { payload, protectedHeader };\n}\n\nclass ProduceJWT {\n    constructor(payload) {\n        if (!isObject(payload)) {\n            throw new TypeError('JWT Claims Set MUST be an object');\n        }\n        this._payload = payload;\n    }\n    setIssuer(issuer) {\n        this._payload = { ...this._payload, iss: issuer };\n        return this;\n    }\n    setSubject(subject) {\n        this._payload = { ...this._payload, sub: subject };\n        return this;\n    }\n    setAudience(audience) {\n        this._payload = { ...this._payload, aud: audience };\n        return this;\n    }\n    setJti(jwtId) {\n        this._payload = { ...this._payload, jti: jwtId };\n        return this;\n    }\n    setNotBefore(input) {\n        if (typeof input === 'number') {\n            this._payload = { ...this._payload, nbf: input };\n        }\n        else {\n            this._payload = { ...this._payload, nbf: epoch(new Date()) + secs(input) };\n        }\n        return this;\n    }\n    setExpirationTime(input) {\n        if (typeof input === 'number') {\n            this._payload = { ...this._payload, exp: input };\n        }\n        else {\n            this._payload = { ...this._payload, exp: epoch(new Date()) + secs(input) };\n        }\n        return this;\n    }\n    setIssuedAt(input) {\n        if (typeof input === 'undefined') {\n            this._payload = { ...this._payload, iat: epoch(new Date()) };\n        }\n        else {\n            this._payload = { ...this._payload, iat: input };\n        }\n        return this;\n    }\n}\n\nclass EncryptJWT extends ProduceJWT {\n    setProtectedHeader(protectedHeader) {\n        if (this._protectedHeader) {\n            throw new TypeError('setProtectedHeader can only be called once');\n        }\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    setKeyManagementParameters(parameters) {\n        if (this._keyManagementParameters) {\n            throw new TypeError('setKeyManagementParameters can only be called once');\n        }\n        this._keyManagementParameters = parameters;\n        return this;\n    }\n    setContentEncryptionKey(cek) {\n        if (this._cek) {\n            throw new TypeError('setContentEncryptionKey can only be called once');\n        }\n        this._cek = cek;\n        return this;\n    }\n    setInitializationVector(iv) {\n        if (this._iv) {\n            throw new TypeError('setInitializationVector can only be called once');\n        }\n        this._iv = iv;\n        return this;\n    }\n    replicateIssuerAsHeader() {\n        this._replicateIssuerAsHeader = true;\n        return this;\n    }\n    replicateSubjectAsHeader() {\n        this._replicateSubjectAsHeader = true;\n        return this;\n    }\n    replicateAudienceAsHeader() {\n        this._replicateAudienceAsHeader = true;\n        return this;\n    }\n    async encrypt(key, options) {\n        const enc = new CompactEncrypt(encoder.encode(JSON.stringify(this._payload)));\n        if (this._replicateIssuerAsHeader) {\n            this._protectedHeader = { ...this._protectedHeader, iss: this._payload.iss };\n        }\n        if (this._replicateSubjectAsHeader) {\n            this._protectedHeader = { ...this._protectedHeader, sub: this._payload.sub };\n        }\n        if (this._replicateAudienceAsHeader) {\n            this._protectedHeader = { ...this._protectedHeader, aud: this._payload.aud };\n        }\n        enc.setProtectedHeader(this._protectedHeader);\n        if (this._iv) {\n            enc.setInitializationVector(this._iv);\n        }\n        if (this._cek) {\n            enc.setContentEncryptionKey(this._cek);\n        }\n        if (this._keyManagementParameters) {\n            enc.setKeyManagementParameters(this._keyManagementParameters);\n        }\n        return enc.encrypt(key, options);\n    }\n}\n\nclass SignJWT extends ProduceJWT {\n    setProtectedHeader(protectedHeader) {\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    async sign(key, options) {\n        var _a;\n        const sig = new CompactSign(encoder.encode(JSON.stringify(this._payload)));\n        sig.setProtectedHeader(this._protectedHeader);\n        if (Array.isArray((_a = this._protectedHeader) === null || _a === void 0 ? void 0 : _a.crit) &&\n            this._protectedHeader.crit.includes('b64') &&\n            this._protectedHeader.b64 === false) {\n            throw new JWTInvalid('JWTs MUST NOT use unencoded payload');\n        }\n        return sig.sign(key, options);\n    }\n}\n\nclass UnsecuredJWT extends ProduceJWT {\n    encode() {\n        const header = encode$1(JSON.stringify({ alg: 'none' }));\n        const payload = encode$1(JSON.stringify(this._payload));\n        return `${header}.${payload}.`;\n    }\n    static decode(jwt, options) {\n        if (typeof jwt !== 'string') {\n            throw new JWTInvalid('Unsecured JWT must be a string');\n        }\n        const { 0: encodedHeader, 1: encodedPayload, 2: signature, length } = jwt.split('.');\n        if (length !== 3 || signature !== '') {\n            throw new JWTInvalid('Invalid Unsecured JWT');\n        }\n        let header;\n        try {\n            header = JSON.parse(decoder.decode(decode$1(encodedHeader)));\n            if (header.alg !== 'none')\n                throw new Error();\n        }\n        catch (_a) {\n            throw new JWTInvalid('Invalid Unsecured JWT');\n        }\n        const payload = jwtPayload(header, decode$1(encodedPayload), options);\n        return { payload, header };\n    }\n}\n\nasync function jwtVerify(jwt, key, options) {\n    var _a;\n    const verified = await compactVerify(jwt, key, options);\n    if (((_a = verified.protectedHeader.crit) === null || _a === void 0 ? void 0 : _a.includes('b64')) && verified.protectedHeader.b64 === false) {\n        throw new JWTInvalid('JWTs MUST NOT use unencoded payload');\n    }\n    const payload = jwtPayload(verified.protectedHeader, verified.payload, options);\n    return { payload, protectedHeader: verified.protectedHeader };\n}\n\nconst encode = encode$1;\nconst decode = decode$1;\n\nfunction decodeProtectedHeader(token) {\n    let protectedB64u;\n    if (typeof token === 'string') {\n        const parts = token.split('.');\n        if (parts.length === 3 || parts.length === 5) {\n            [protectedB64u] = parts;\n        }\n    }\n    else if (typeof token === 'object' && token) {\n        if ('protected' in token) {\n            protectedB64u = token.protected;\n        }\n        else {\n            throw new TypeError('Token does not contain a Protected Header');\n        }\n    }\n    try {\n        if (typeof protectedB64u !== 'string' || !protectedB64u) {\n            throw new Error();\n        }\n        const result = JSON.parse(decoder.decode(decode(protectedB64u)));\n        if (!isObject(result)) {\n            throw new Error();\n        }\n        return result;\n    }\n    catch (_a) {\n        throw new TypeError('Invalid Token or Protected Header formatting');\n    }\n}\n\nasync function generateSecret$1(alg, options) {\n    var _a;\n    let length;\n    let algorithm;\n    let keyUsages;\n    switch (alg) {\n        case 'HS256':\n        case 'HS384':\n        case 'HS512':\n            length = parseInt(alg.substr(-3), 10);\n            algorithm = { name: 'HMAC', hash: { name: `SHA-${length}` }, length };\n            keyUsages = ['sign', 'verify'];\n            break;\n        case 'A128CBC-HS256':\n        case 'A192CBC-HS384':\n        case 'A256CBC-HS512':\n            length = parseInt(alg.substr(-3), 10);\n            return random$1(new Uint8Array(length >> 3));\n        case 'A128KW':\n        case 'A192KW':\n        case 'A256KW':\n            length = parseInt(alg.substring(1, 4), 10);\n            algorithm = { name: 'AES-KW', length };\n            keyUsages = ['wrapKey', 'unwrapKey'];\n            break;\n        case 'A128GCMKW':\n        case 'A192GCMKW':\n        case 'A256GCMKW':\n        case 'A128GCM':\n        case 'A192GCM':\n        case 'A256GCM':\n            length = parseInt(alg.substring(1, 4), 10);\n            algorithm = { name: 'AES-GCM', length };\n            keyUsages = ['encrypt', 'decrypt'];\n            break;\n        default:\n            throw new JOSENotSupported('unsupported or invalid JWK \"alg\" (Algorithm) Parameter value');\n    }\n    return crypto.subtle.generateKey(algorithm, (_a = options === null || options === void 0 ? void 0 : options.extractable) !== null && _a !== void 0 ? _a : false, keyUsages);\n}\nfunction getModulusLengthOption(options) {\n    var _a;\n    const modulusLength = (_a = options === null || options === void 0 ? void 0 : options.modulusLength) !== null && _a !== void 0 ? _a : 2048;\n    if (typeof modulusLength !== 'number' || modulusLength < 2048) {\n        throw new JOSENotSupported('Invalid or unsupported modulusLength option provided, 2048 bits or larger keys must be used');\n    }\n    return modulusLength;\n}\nasync function generateKeyPair$1(alg, options) {\n    var _a, _b;\n    let algorithm;\n    let keyUsages;\n    switch (alg) {\n        case 'PS256':\n        case 'PS384':\n        case 'PS512':\n            algorithm = {\n                name: 'RSA-PSS',\n                hash: { name: `SHA-${alg.substr(-3)}` },\n                publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n                modulusLength: getModulusLengthOption(options),\n            };\n            keyUsages = ['sign', 'verify'];\n            break;\n        case 'RS256':\n        case 'RS384':\n        case 'RS512':\n            algorithm = {\n                name: 'RSASSA-PKCS1-v1_5',\n                hash: { name: `SHA-${alg.substr(-3)}` },\n                publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n                modulusLength: getModulusLengthOption(options),\n            };\n            keyUsages = ['sign', 'verify'];\n            break;\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512':\n            algorithm = {\n                name: 'RSA-OAEP',\n                hash: { name: `SHA-${parseInt(alg.substr(-3), 10) || 1}` },\n                publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n                modulusLength: getModulusLengthOption(options),\n            };\n            keyUsages = ['decrypt', 'unwrapKey', 'encrypt', 'wrapKey'];\n            break;\n        case 'ES256':\n            algorithm = { name: 'ECDSA', namedCurve: 'P-256' };\n            keyUsages = ['sign', 'verify'];\n            break;\n        case 'ES384':\n            algorithm = { name: 'ECDSA', namedCurve: 'P-384' };\n            keyUsages = ['sign', 'verify'];\n            break;\n        case 'ES512':\n            algorithm = { name: 'ECDSA', namedCurve: 'P-521' };\n            keyUsages = ['sign', 'verify'];\n            break;\n        case 'ECDH-ES':\n        case 'ECDH-ES+A128KW':\n        case 'ECDH-ES+A192KW':\n        case 'ECDH-ES+A256KW':\n            algorithm = { name: 'ECDH', namedCurve: (_a = options === null || options === void 0 ? void 0 : options.crv) !== null && _a !== void 0 ? _a : 'P-256' };\n            keyUsages = ['deriveKey', 'deriveBits'];\n            break;\n        default:\n            throw new JOSENotSupported('unsupported or invalid JWK \"alg\" (Algorithm) Parameter value');\n    }\n    return (crypto.subtle.generateKey(algorithm, (_b = options === null || options === void 0 ? void 0 : options.extractable) !== null && _b !== void 0 ? _b : false, keyUsages));\n}\n\nasync function generateKeyPair(alg, options) {\n    return generateKeyPair$1(alg, options);\n}\n\nasync function generateSecret(alg, options) {\n    return generateSecret$1(alg, options);\n}\n\nconst random = random$1;\n\nexports.CompactEncrypt = CompactEncrypt;\nexports.CompactSign = CompactSign;\nexports.EmbeddedJWK = EmbeddedJWK;\nexports.EncryptJWT = EncryptJWT;\nexports.FlattenedEncrypt = FlattenedEncrypt;\nexports.FlattenedSign = FlattenedSign;\nexports.GeneralSign = GeneralSign;\nexports.JOSEAlgNotAllowed = JOSEAlgNotAllowed;\nexports.JOSEError = JOSEError;\nexports.JOSENotSupported = JOSENotSupported;\nexports.JWEDecryptionFailed = JWEDecryptionFailed;\nexports.JWEInvalid = JWEInvalid;\nexports.JWKInvalid = JWKInvalid;\nexports.JWKSInvalid = JWKSInvalid;\nexports.JWKSMultipleMatchingKeys = JWKSMultipleMatchingKeys;\nexports.JWKSNoMatchingKey = JWKSNoMatchingKey;\nexports.JWSInvalid = JWSInvalid;\nexports.JWSSignatureVerificationFailed = JWSSignatureVerificationFailed;\nexports.JWTClaimValidationFailed = JWTClaimValidationFailed;\nexports.JWTExpired = JWTExpired;\nexports.JWTInvalid = JWTInvalid;\nexports.SignJWT = SignJWT;\nexports.UnsecuredJWT = UnsecuredJWT;\nexports.base64UrlDecode = decode;\nexports.base64UrlEncode = encode;\nexports.calculateThumbprint = calculateThumbprint;\nexports.compactDecrypt = compactDecrypt;\nexports.compactVerify = compactVerify;\nexports.createRemoteJWKSet = createRemoteJWKSet;\nexports.decodeProtectedHeader = decodeProtectedHeader;\nexports.flattenedDecrypt = flattenedDecrypt;\nexports.flattenedVerify = flattenedVerify;\nexports.fromKeyLike = fromKeyLike;\nexports.generalDecrypt = generalDecrypt;\nexports.generalVerify = generalVerify;\nexports.generateKeyPair = generateKeyPair;\nexports.generateSecret = generateSecret;\nexports.jwtDecrypt = jwtDecrypt;\nexports.jwtVerify = jwtVerify;\nexports.parseJwk = parseJwk;\nexports.random = random;\n","/*\n * Copyright 2021 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * @hidden\n * @packageDocumentation\n */\n\n// eslint-disable-next-line no-shadow\nimport { fetch } from \"cross-fetch\";\nimport {\n  JWK,\n  JWTPayload,\n  jwtVerify,\n  parseJwk,\n} from \"@inrupt/jose-legacy-modules\";\nimport { EventEmitter } from \"events\";\nimport IHandleable from \"../../../util/handlerPattern/IHandleable\";\nimport { ISessionInfo } from \"../../../sessionInfo/ISessionInfo\";\n\nexport type RedirectResult = ISessionInfo & { fetch: typeof fetch };\nexport type RedirectInput = [string, EventEmitter | undefined];\n\n/**\n * @hidden\n */\ntype IRedirectHandler = IHandleable<\n  // Tuple of the URL to redirect to, an optional event listener for when\n  // we receive a new refresh token, and, an optional onError function:\n  RedirectInput,\n  RedirectResult\n>;\nexport default IRedirectHandler;\n\nexport async function fetchJwks(\n  jwksIri: string,\n  issuerIri: string\n): Promise<JWK> {\n  // FIXME: the following line works, but the underlying network calls don't seem\n  // to be mocked properly by our test code. It would be nicer to replace calls to this\n  // function by the following line and to fix the mocks.\n  // const jwks = createRemoteJWKSet(new URL(jwksIri));\n  const jwksResponse = await fetch(jwksIri);\n  if (jwksResponse.status !== 200) {\n    throw new Error(\n      `Could not fetch JWKS for [${issuerIri}] at [${jwksIri}]: ${jwksResponse.status} ${jwksResponse.statusText}`\n    );\n  }\n  // The JWKS should only contain the current key for the issuer.\n  let jwk: JWK;\n  try {\n    jwk = (await jwksResponse.json()).keys[0] as JWK;\n  } catch (e) {\n    throw new Error(\n      `Malformed JWKS for [${issuerIri}] at [${jwksIri}]: ${e.message}`\n    );\n  }\n  return jwk;\n}\n\n/**\n * Extract a WebID from an ID token payload based on https://github.com/solid/webid-oidc-spec.\n * Note that this does not yet implement the user endpoint lookup, and only checks\n * for `webid` or IRI-like `sub` claims.\n *\n * @param idToken the payload of the ID token from which the WebID can be extracted.\n * @returns a WebID extracted from the ID token.\n * @internal\n */\nexport async function getWebidFromTokenPayload(\n  idToken: string,\n  jwksIri: string,\n  issuerIri: string,\n  clientId: string\n): Promise<string> {\n  const jwk = await fetchJwks(jwksIri, issuerIri);\n  let payload: JWTPayload;\n  try {\n    const { payload: verifiedPayload } = await jwtVerify(\n      idToken,\n      await parseJwk(jwk),\n      {\n        issuer: issuerIri,\n        audience: clientId,\n      }\n    );\n    payload = verifiedPayload;\n  } catch (e) {\n    throw new Error(`ID token verification failed: ${e.stack}`);\n  }\n\n  if (typeof payload.webid === \"string\") {\n    return payload.webid;\n  }\n  if (typeof payload.sub !== \"string\") {\n    throw new Error(\n      `The ID token ${JSON.stringify(\n        payload\n      )} is invalid: it has no 'webid' claim and no 'sub' claim.`\n    );\n  }\n  try {\n    // This parses the 'sub' claim to check if it is a well-formed IRI.\n    // However, the normalized value isn't returned to make sure the WebID is returned\n    // as specified by the Identity Provider.\n    // eslint-disable-next-line no-new\n    new URL(payload.sub);\n    return payload.sub;\n  } catch (e) {\n    throw new Error(\n      `The ID token has no 'webid' claim, and its 'sub' claim of [${payload.sub}] is invalid as a URL - error [${e}].`\n    );\n  }\n}\n","/*\n * Copyright 2021 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Defines the data that should be persisted for each session. This interface\n * is exposed as part of our public API.\n */\nexport interface ISessionInfo {\n  /**\n   * 'true' if the session is currently logged into an associated identity\n   * provider.\n   */\n  isLoggedIn: boolean;\n\n  /**\n   * The WebID if the user is logged into the session, and undefined if not.\n   */\n  webId?: string;\n\n  /**\n   * The WebID of the app, or a \"Public app\" WebID if the app does not provide its own.\n   * undefined until the session is logged in and the app WebID has been verified.\n   */\n  clientAppId?: string;\n\n  /**\n   * A unique identifier for the session.\n   */\n  sessionId: string;\n\n  /**\n   * UNIX timestamp (number of milliseconds since Jan 1st 1970) representing the\n   * time until which this session is valid.\n   */\n  expirationDate?: number;\n}\n\n/**\n * Captures information about sessions that is persisted in storage, but that\n * should not be exposed as part of our public API, and is only used for\n * internal purposes. It is complementary to ISessionInfo when retrieving all\n * information about a stored session, both public and internal.\n */\nexport interface ISessionInternalInfo {\n  /**\n   * The ID token associated with the session (if any).\n   */\n  idToken?: string;\n\n  /**\n   * The refresh token associated with the session (if any).\n   */\n  refreshToken?: string;\n\n  /**\n   * The OIDC issuer that issued the tokens authenticating the session.\n   */\n  issuer?: string;\n\n  /**\n   * The redirect URL registered when initially logging the session in.\n   */\n  redirectUrl?: string;\n\n  /**\n   * For public clients, and Solid Identity Providers that do not support Client\n   * WebIDs, the client secret is still required at the token endpoint.\n   */\n  clientAppSecret?: string;\n\n  /**\n   * The token type used by the session\n   */\n  tokenType?: \"DPoP\" | \"Bearer\";\n}\n\nexport function isSupportedTokenType(\n  token: string | \"DPoP\" | \"Bearer\"\n): token is \"DPoP\" | \"Bearer\" {\n  return typeof token === \"string\" && [\"DPoP\", \"Bearer\"].includes(token);\n}\n","/*\n * Copyright 2021 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * @hidden\n * @packageDocumentation\n */\n\nimport { ISessionInfo, ISessionInternalInfo } from \"./ISessionInfo\";\n\n/**\n * @hidden\n */\nexport interface ISessionInfoManagerOptions {\n  loggedIn?: boolean;\n  webId?: string;\n}\n\n/**\n * @hidden\n */\nexport interface ISessionInfoManager {\n  update(sessionId: string, options: ISessionInfoManagerOptions): Promise<void>;\n  /**\n   * Returns all information about a registered session\n   * @param sessionId\n   */\n  get(\n    sessionId: string\n  ): Promise<(ISessionInfo & ISessionInternalInfo) | undefined>;\n  /**\n   * Returns all information about all registered sessions\n   */\n  getAll(): Promise<(ISessionInfo & ISessionInternalInfo)[]>;\n  /**\n   * Registers a new session, so that its ID can be retrieved.\n   * @param sessionId\n   */\n  register(sessionId: string): Promise<void>;\n  /**\n   * Returns all the registered session IDs. Differs from getAll, which also\n   * returns additional session information.\n   */\n  getRegisteredSessionIdAll(): Promise<string[]>;\n  /**\n   * Deletes all information regarding one session, including its registration.\n   * @param sessionId\n   */\n  clear(sessionId: string): Promise<void>;\n  /**\n   * Deletes all information about all sessions, including their registrations.\n   */\n  clearAll(): Promise<void>;\n}\n\nexport const USER_SESSION_PREFIX = \"solidClientAuthenticationUser\";\n","/*\n * Copyright 2021 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * @hidden\n * @packageDocumentation\n */\n\nimport IStorageUtility from \"../../storage/IStorageUtility\";\nimport ILoginOptions from \"../ILoginOptions\";\nimport { ClientType, IClient } from \"./IClient\";\nimport { IIssuerConfig } from \"./IIssuerConfig\";\n\nexport interface IClientRegistrarOptions {\n  sessionId: string;\n  clientName?: string;\n  redirectUrl?: string;\n  registrationAccessToken?: string;\n}\n\n/**\n * @hidden\n */\nexport interface IClientRegistrar {\n  getClient(\n    options: IClientRegistrarOptions,\n    issuerConfig: IIssuerConfig\n  ): Promise<IClient>;\n}\n\nfunction isValidUrl(url: string): boolean {\n  try {\n    // Here, the URL constructor is just called to parse the given string and\n    // verify if it is a well-formed IRI.\n    // eslint-disable-next-line no-new\n    new URL(url);\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nexport function determineSigningAlg(\n  supported: string[],\n  preferred: string[]\n): string | null {\n  return (\n    preferred.find((signingAlg) => {\n      return supported.includes(signingAlg);\n    }) ?? null\n  );\n}\n\nfunction determineClientType(\n  options: ILoginOptions,\n  issuerConfig: IIssuerConfig\n): ClientType {\n  if (options.clientId !== undefined && !isValidUrl(options.clientId)) {\n    return \"static\";\n  }\n  if (\n    issuerConfig.solidOidcSupported ===\n      \"https://solidproject.org/TR/solid-oidc\" &&\n    options.clientId !== undefined &&\n    isValidUrl(options.clientId)\n  ) {\n    return \"solid-oidc\";\n  }\n  // If no client_id is provided, the client must go through Dynamic Client Registration.\n  // If a client_id is provided and it looks like a URI, yet the Identity Provider\n  // does *not* support Solid-OIDC, then we also perform DCR (and discard the\n  // provided client_id).\n  return \"dynamic\";\n}\n\nexport async function handleRegistration(\n  options: ILoginOptions,\n  issuerConfig: IIssuerConfig,\n  storageUtility: IStorageUtility,\n  clientRegistrar: IClientRegistrar\n): Promise<IClient> {\n  const clientType = determineClientType(options, issuerConfig);\n  if (clientType === \"dynamic\") {\n    return clientRegistrar.getClient(\n      {\n        sessionId: options.sessionId,\n        clientName: options.clientName,\n        redirectUrl: options.redirectUrl,\n      },\n      issuerConfig\n    );\n  }\n  // If a client_id was provided, and the Identity Provider is Solid-OIDC compliant,\n  // or it is not compliant but the client_id isn't an IRI (we assume it has already\n  // been registered with the IdP), then the client registration information needs\n  // to be stored so that it can be retrieved later after redirect.\n  await storageUtility.setForUser(options.sessionId, {\n    // If the client is either static or solid-oidc compliant, its client ID cannot be undefined.\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    clientId: options.clientId!,\n  });\n  if (options.clientSecret) {\n    await storageUtility.setForUser(options.sessionId, {\n      clientSecret: options.clientSecret,\n    });\n  }\n  if (options.clientName) {\n    await storageUtility.setForUser(options.sessionId, {\n      clientName: options.clientName,\n    });\n  }\n  return {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    clientId: options.clientId!,\n    clientSecret: options.clientSecret,\n    clientName: options.clientName,\n    clientType,\n  };\n}\n","/*\n * Copyright 2021 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * @hidden\n * @packageDocumentation\n */\n\n/**\n * A helper class that will validate items taken from local storage\n */\nimport { fromKeyLike } from \"@inrupt/jose-legacy-modules\";\nimport IStorage from \"./IStorage\";\nimport IStorageUtility from \"./IStorageUtility\";\nimport InruptError from \"../errors/InruptError\";\nimport { IIssuerConfig } from \"../login/oidc/IIssuerConfig\";\nimport { IIssuerConfigFetcher } from \"../login/oidc/IIssuerConfigFetcher\";\nimport { KeyPair } from \"../authenticatedFetch/dpopUtils\";\n\nexport type OidcContext = {\n  issuerConfig: IIssuerConfig;\n  codeVerifier?: string;\n  redirectUrl?: string;\n  dpop: boolean;\n};\n\nexport async function getSessionIdFromOauthState(\n  storageUtility: IStorageUtility,\n  oauthState: string\n): Promise<string | undefined> {\n  return storageUtility.getForUser(oauthState, \"sessionId\");\n}\n\n/**\n * Based on the provided state, this looks up contextual information stored\n * before redirecting the user to the OIDC issuer.\n * @param sessionId The state (~ correlation ID) of the OIDC request\n * @param storageUtility\n * @param configFetcher\n * @returns Information stored about the client issuing the request\n */\nexport async function loadOidcContextFromStorage(\n  sessionId: string,\n  storageUtility: IStorageUtility,\n  configFetcher: IIssuerConfigFetcher\n): Promise<OidcContext> {\n  try {\n    const [issuerIri, codeVerifier, storedRedirectIri, dpop] =\n      await Promise.all([\n        storageUtility.getForUser(sessionId, \"issuer\", {\n          errorIfNull: true,\n        }),\n        storageUtility.getForUser(sessionId, \"codeVerifier\"),\n        storageUtility.getForUser(sessionId, \"redirectUrl\"),\n        storageUtility.getForUser(sessionId, \"dpop\", { errorIfNull: true }),\n      ]);\n\n    // Unlike openid-client, this looks up the configuration from storage\n    const issuerConfig = await configFetcher.fetchConfig(issuerIri as string);\n    return {\n      codeVerifier,\n      redirectUrl: storedRedirectIri,\n      issuerConfig,\n      dpop: dpop === \"true\",\n    };\n  } catch (e) {\n    throw new Error(\n      `Failed to retrieve OIDC context from storage associated with session [${sessionId}]: ${e.toString()}`\n    );\n  }\n}\n\n/**\n * Stores information about the session in the provided storage. Note that not\n * all storage are equally secure, and it is strongly advised not to store either\n * the refresh token or the DPoP key in the browser's local storage.\n *\n * @param storageUtility\n * @param sessionId\n * @param idToken\n * @param webId\n * @param isLoggedIn\n * @param refreshToken\n * @param secure\n * @param dpopKey\n */\nexport async function saveSessionInfoToStorage(\n  storageUtility: IStorageUtility,\n  sessionId: string,\n  idToken?: string,\n  webId?: string,\n  isLoggedIn?: string,\n  refreshToken?: string,\n  secure?: boolean,\n  dpopKey?: KeyPair\n): Promise<void> {\n  // TODO: Investigate why this does not work with a Promise.all\n  if (refreshToken !== undefined) {\n    await storageUtility.setForUser(sessionId, { refreshToken }, { secure });\n  }\n  if (idToken !== undefined) {\n    await storageUtility.setForUser(sessionId, { idToken }, { secure });\n  }\n  if (webId !== undefined) {\n    await storageUtility.setForUser(sessionId, { webId }, { secure });\n  }\n  if (isLoggedIn !== undefined) {\n    await storageUtility.setForUser(sessionId, { isLoggedIn }, { secure });\n  }\n  if (dpopKey !== undefined) {\n    await storageUtility.setForUser(\n      sessionId,\n      {\n        publicKey: JSON.stringify(dpopKey.publicKey),\n        privateKey: JSON.stringify(await fromKeyLike(dpopKey.privateKey)),\n      },\n      { secure }\n    );\n  }\n}\n\nexport type ResourceServerSession = {\n  webId: string;\n  sessions: Record<\n    string,\n    {\n      expiration: number;\n    }\n  >;\n};\n\n// TOTEST: this does not handle all possible bad inputs for example what if it's not proper JSON\n/**\n * @hidden\n */\nexport default class StorageUtility implements IStorageUtility {\n  constructor(\n    private secureStorage: IStorage,\n    private insecureStorage: IStorage\n  ) {}\n\n  private getKey(userId: string): string {\n    return `solidClientAuthenticationUser:${userId}`;\n  }\n\n  private RESOURCE_SERVER_SESSION_INFORMATION_KEY =\n    \"tmp-resource-server-session-info\";\n\n  private async getUserData(\n    userId: string,\n    secure?: boolean\n  ): Promise<Record<string, string>> {\n    const stored = await (secure\n      ? this.secureStorage\n      : this.insecureStorage\n    ).get(this.getKey(userId));\n\n    if (stored === undefined) {\n      return {};\n    }\n\n    try {\n      return JSON.parse(stored);\n    } catch (err) {\n      throw new InruptError(\n        `Data for user [${userId}] in [${\n          secure ? \"secure\" : \"unsecure\"\n        }] storage is corrupted - expected valid JSON, but got: ${stored}`\n      );\n    }\n  }\n\n  private async setUserData(\n    userId: string,\n    data: Record<string, string>,\n    secure?: boolean\n  ): Promise<void> {\n    await (secure ? this.secureStorage : this.insecureStorage).set(\n      this.getKey(userId),\n      JSON.stringify(data)\n    );\n  }\n\n  async get(\n    key: string,\n    options?: { errorIfNull?: boolean; secure?: boolean }\n  ): Promise<string | undefined> {\n    const value = await (options?.secure\n      ? this.secureStorage\n      : this.insecureStorage\n    ).get(key);\n    if (value === undefined && options?.errorIfNull) {\n      throw new InruptError(`[${key}] is not stored`);\n    }\n    return value;\n  }\n\n  async set(\n    key: string,\n    value: string,\n    options?: { secure?: boolean }\n  ): Promise<void> {\n    return (options?.secure ? this.secureStorage : this.insecureStorage).set(\n      key,\n      value\n    );\n  }\n\n  async delete(key: string, options?: { secure?: boolean }): Promise<void> {\n    return (options?.secure ? this.secureStorage : this.insecureStorage).delete(\n      key\n    );\n  }\n\n  async getForUser(\n    userId: string,\n    key: string,\n    options?: { errorIfNull?: boolean; secure?: boolean }\n  ): Promise<string | undefined> {\n    const userData = await this.getUserData(userId, options?.secure);\n    let value;\n    if (!userData || !userData[key]) {\n      value = undefined;\n    }\n    value = userData[key];\n    if (value === undefined && options?.errorIfNull) {\n      throw new InruptError(\n        `Field [${key}] for user [${userId}] is not stored`\n      );\n    }\n    return value || undefined;\n  }\n\n  async setForUser(\n    userId: string,\n    values: Record<string, string>,\n    options?: { secure?: boolean }\n  ): Promise<void> {\n    let userData: Record<string, string>;\n    try {\n      userData = await this.getUserData(userId, options?.secure);\n    } catch {\n      // if reading the user data throws, the data is corrupted, and we want to write over it\n      userData = {};\n    }\n\n    await this.setUserData(userId, { ...userData, ...values }, options?.secure);\n  }\n\n  async deleteForUser(\n    userId: string,\n    key: string,\n    options?: { secure?: boolean }\n  ): Promise<void> {\n    const userData = await this.getUserData(userId, options?.secure);\n    delete userData[key];\n    await this.setUserData(userId, userData, options?.secure);\n  }\n\n  async deleteAllUserData(\n    userId: string,\n    options?: { secure?: boolean }\n  ): Promise<void> {\n    await (options?.secure ? this.secureStorage : this.insecureStorage).delete(\n      this.getKey(userId)\n    );\n  }\n\n  async storeResourceServerSessionInfo(\n    webId: string,\n    resourceServerIri: string,\n    expiration: number\n  ): Promise<void> {\n    const sessions: ResourceServerSession = JSON.parse(\n      (await this.insecureStorage.get(\n        this.RESOURCE_SERVER_SESSION_INFORMATION_KEY\n      )) ?? \"{}\"\n    );\n    if (sessions.webId !== webId) {\n      // Clear all previously active sessions.\n      sessions.sessions = {};\n    }\n    sessions.webId = webId;\n    sessions.sessions[resourceServerIri] = {\n      expiration,\n    };\n    await this.insecureStorage.set(\n      this.RESOURCE_SERVER_SESSION_INFORMATION_KEY,\n      JSON.stringify(sessions)\n    );\n  }\n\n  async clearResourceServerSessionInfo(\n    resourceServerIri: string\n  ): Promise<void> {\n    const sessions: ResourceServerSession = JSON.parse(\n      (await this.insecureStorage.get(\n        this.RESOURCE_SERVER_SESSION_INFORMATION_KEY\n      )) ?? \"{}\"\n    );\n    if (sessions.sessions !== undefined) {\n      delete sessions.sessions[resourceServerIri];\n\n      if (Object.keys(sessions.sessions).length === 0) {\n        // If there aren't any active sessions left, the whole object is cleared.\n        await this.insecureStorage.set(\n          this.RESOURCE_SERVER_SESSION_INFORMATION_KEY,\n          \"{}\"\n        );\n      } else {\n        await this.insecureStorage.set(\n          this.RESOURCE_SERVER_SESSION_INFORMATION_KEY,\n          JSON.stringify(sessions)\n        );\n      }\n    }\n  }\n}\n","/*\n * Copyright 2021 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * @hidden\n * @packageDocumentation\n */\n\nimport IStorage from \"./IStorage\";\n\n/**\n * @hidden\n */\nexport default class InMemoryStorage implements IStorage {\n  private map: Record<string, string> = {};\n\n  async get(key: string): Promise<string | undefined> {\n    return this.map[key] || undefined;\n  }\n\n  async set(key: string, value: string): Promise<void> {\n    this.map[key] = value;\n  }\n\n  async delete(key: string): Promise<void> {\n    delete this.map[key];\n  }\n}\n","/*\n * Copyright 2021 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * @hidden\n * @packageDocumentation\n */\n\n/**\n * Error to be triggered when a poor configuration is received\n */\n\n// NOTE: There's a bug with istanbul and typescript that prevents full branch coverages\n// https://github.com/gotwarlost/istanbul/issues/690\n// The workaround is to put istanbul ignore on the constructor\n/**\n * @hidden\n */\nexport default class ConfigurationError extends Error {\n  /* istanbul ignore next */\n  constructor(message: string) {\n    super(message);\n  }\n}\n","/*\n * Copyright 2021 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * @hidden\n * @packageDocumentation\n */\n\n/**\n * Error to be triggered if a method is not implemented\n * @hidden\n */\nexport default class NotImplementedError extends Error {\n  /* istanbul ignore next */\n  constructor(methodName: string) {\n    super(`[${methodName}] is not implemented`);\n  }\n}\n","/*\n * Copyright 2021 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * @hidden\n * @packageDocumentation\n */\n\n/**\n * Error to be triggered when receiving a response missing mandatory elements\n */\n\n// NOTE: There's a bug with istanbul and typescript that prevents full branch coverages\n// https://github.com/gotwarlost/istanbul/issues/690\n// The workaround is to put istanbul ignore on the constructor\n/**\n * @hidden\n */\nexport class InvalidResponseError extends Error {\n  /* istanbul ignore next */\n  constructor(public readonly missingFields: string[]) {\n    super(\n      `Invalid response from OIDC provider: missing fields ${missingFields}`\n    );\n  }\n}\n","/*\n * Copyright 2021 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * @hidden\n * @packageDocumentation\n */\n\n/**\n * Error to be triggered when receiving a response missing mandatory elements\n */\n\n// NOTE: There's a bug with istanbul and typescript that prevents full branch coverages\n// https://github.com/gotwarlost/istanbul/issues/690\n// The workaround is to put istanbul ignore on the constructor\n/**\n * @hidden\n */\nexport class OidcProviderError extends Error {\n  /* istanbul ignore next */\n  constructor(\n    message: string,\n    public readonly error: string,\n    public readonly errorDescription?: string\n  ) {\n    super(message);\n  }\n}\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js'; // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\n\nvar _clockseq; // Previous uuid creation time\n\n\nvar _lastMSecs = 0;\nvar _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || new Array(16);\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    var seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  var msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || stringify(b);\n}\n\nexport default v1;","import validate from './validate.js';\n\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  var v;\n  var arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nexport default parse;","import stringify from './stringify.js';\nimport parse from './parse.js';\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  var bytes = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nexport var DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport var URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function (name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = parse(namespace);\n    }\n\n    if (namespace.length !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    var bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (var i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return stringify(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}","/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  var output = [];\n  var length32 = input.length * 32;\n  var hexTab = '0123456789abcdef';\n\n  for (var i = 0; i < length32; i += 8) {\n    var x = input[i >> 5] >>> i % 32 & 0xff;\n    var hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/**\n * Calculate output length with padding and bit length\n */\n\n\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  var a = 1732584193;\n  var b = -271733879;\n  var c = -1732584194;\n  var d = 271733878;\n\n  for (var i = 0; i < x.length; i += 16) {\n    var olda = a;\n    var oldb = b;\n    var oldc = c;\n    var oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n\n  var length8 = input.length * 8;\n  var output = new Uint32Array(getOutputLength(length8));\n\n  for (var i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  var lsw = (x & 0xffff) + (y & 0xffff);\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\nexport default md5;","import v35 from './v35.js';\nimport md5 from './md5.js';\nvar v3 = v35('v3', 0x30, md5);\nexport default v3;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  var H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  var l = bytes.length / 4 + 2;\n  var N = Math.ceil(l / 16);\n  var M = new Array(N);\n\n  for (var _i = 0; _i < N; ++_i) {\n    var arr = new Uint32Array(16);\n\n    for (var j = 0; j < 16; ++j) {\n      arr[j] = bytes[_i * 64 + j * 4] << 24 | bytes[_i * 64 + j * 4 + 1] << 16 | bytes[_i * 64 + j * 4 + 2] << 8 | bytes[_i * 64 + j * 4 + 3];\n    }\n\n    M[_i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (var _i2 = 0; _i2 < N; ++_i2) {\n    var W = new Uint32Array(80);\n\n    for (var t = 0; t < 16; ++t) {\n      W[t] = M[_i2][t];\n    }\n\n    for (var _t = 16; _t < 80; ++_t) {\n      W[_t] = ROTL(W[_t - 3] ^ W[_t - 8] ^ W[_t - 14] ^ W[_t - 16], 1);\n    }\n\n    var a = H[0];\n    var b = H[1];\n    var c = H[2];\n    var d = H[3];\n    var e = H[4];\n\n    for (var _t2 = 0; _t2 < 80; ++_t2) {\n      var s = Math.floor(_t2 / 20);\n      var T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[_t2] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nexport default sha1;","import v35 from './v35.js';\nimport sha1 from './sha1.js';\nvar v5 = v35('v5', 0x50, sha1);\nexport default v5;","export default '00000000-0000-0000-0000-000000000000';","import validate from './validate.js';\n\nfunction version(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.substr(14, 1), 16);\n}\n\nexport default version;","export { default as v1 } from './v1.js';\nexport { default as v3 } from './v3.js';\nexport { default as v4 } from './v4.js';\nexport { default as v5 } from './v5.js';\nexport { default as NIL } from './nil.js';\nexport { default as version } from './version.js';\nexport { default as validate } from './validate.js';\nexport { default as stringify } from './stringify.js';\nexport { default as parse } from './parse.js';","/*\n * Copyright 2021 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport {\n  JWK,\n  KeyLike,\n  SignJWT,\n  generateKeyPair,\n  fromKeyLike,\n} from \"@inrupt/jose-legacy-modules\";\nimport { v4 } from \"uuid\";\nimport { PREFERRED_SIGNING_ALG } from \"../constant\";\n\n/**\n * Normalizes a URL in order to generate the DPoP token based on a consistent scheme.\n *\n * @param audience The URL to normalize.\n * @returns The normalized URL as a string.\n * @hidden\n */\nfunction removeHashUsernameAndPassword(audience: string): string {\n  const cleanedAudience = new URL(audience);\n  cleanedAudience.hash = \"\";\n  cleanedAudience.username = \"\";\n  cleanedAudience.password = \"\";\n  return cleanedAudience.toString();\n}\n\nexport type KeyPair = {\n  privateKey: KeyLike;\n  publicKey: JWK;\n};\n\n/**\n * Creates a DPoP header according to https://tools.ietf.org/html/draft-fett-oauth-dpop-04,\n * based on the target URL and method, using the provided key.\n *\n * @param audience Target URL.\n * @param method HTTP method allowed.\n * @param key Key used to sign the token.\n * @returns A JWT that can be used as a DPoP Authorization header.\n */\nexport async function createDpopHeader(\n  audience: string,\n  method: string,\n  dpopKey: KeyPair\n): Promise<string> {\n  return new SignJWT({\n    htu: removeHashUsernameAndPassword(audience),\n    htm: method.toUpperCase(),\n    jti: v4(),\n  })\n    .setProtectedHeader({\n      alg: PREFERRED_SIGNING_ALG[0],\n      jwk: dpopKey.publicKey,\n      typ: \"dpop+jwt\",\n    })\n    .setIssuedAt()\n    .sign(dpopKey.privateKey, {});\n}\n\nexport async function generateDpopKeyPair(): Promise<KeyPair> {\n  const { privateKey, publicKey } = await generateKeyPair(\n    PREFERRED_SIGNING_ALG[0]\n  );\n  const dpopKeyPair = {\n    privateKey,\n    publicKey: await fromKeyLike(publicKey),\n  };\n  // The alg property isn't set by fromKeyLike, so set it manually.\n  [dpopKeyPair.publicKey.alg] = PREFERRED_SIGNING_ALG;\n  return dpopKeyPair;\n}\n","/*\n * Copyright 2021 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n// eslint-disable-next-line no-shadow\nimport { fetch } from \"cross-fetch\";\nimport { EventEmitter } from \"events\";\nimport { REFRESH_BEFORE_EXPIRATION_SECONDS, EVENTS } from \"../constant\";\nimport { ITokenRefresher } from \"../login/oidc/refresh/ITokenRefresher\";\nimport { createDpopHeader, KeyPair } from \"./dpopUtils\";\nimport { OidcProviderError } from \"../errors/OidcProviderError\";\nimport { InvalidResponseError } from \"../errors/InvalidResponseError\";\n\nexport type RefreshOptions = {\n  sessionId: string;\n  refreshToken: string;\n  tokenRefresher: ITokenRefresher;\n};\n\n/**\n * If expires_in isn't specified for the access token, we assume its lifetime is\n * 10 minutes.\n */\nexport const DEFAULT_EXPIRATION_TIME_SECONDS = 600;\n\nfunction isExpectedAuthError(statusCode: number): boolean {\n  // As per https://tools.ietf.org/html/rfc7235#section-3.1 and https://tools.ietf.org/html/rfc7235#section-3.1,\n  // a response failing because the provided credentials aren't accepted by the\n  // server can get a 401 or a 403 response.\n  return [401, 403].includes(statusCode);\n}\n\nexport type DpopHeaderPayload = {\n  htu: string;\n  htm: string;\n  jti: string;\n};\n\nasync function buildDpopFetchOptions(\n  targetUrl: string,\n  authToken: string,\n  dpopKey: KeyPair,\n  defaultOptions?: RequestInit\n): Promise<RequestInit> {\n  const options: RequestInit = { ...defaultOptions };\n  options.headers = {\n    ...defaultOptions?.headers,\n    Authorization: `DPoP ${authToken}`,\n    DPoP: await createDpopHeader(\n      targetUrl,\n      defaultOptions?.method ?? \"get\",\n      dpopKey\n    ),\n  };\n  return options;\n}\n\nasync function buildAuthenticatedHeaders(\n  targetUrl: string,\n  authToken: string,\n  dpopKey?: KeyPair,\n  defaultOptions?: RequestInit\n): Promise<RequestInit> {\n  if (dpopKey !== undefined) {\n    return buildDpopFetchOptions(targetUrl, authToken, dpopKey, defaultOptions);\n  }\n  return {\n    ...defaultOptions,\n    headers: {\n      ...defaultOptions?.headers,\n      Authorization: `Bearer ${authToken}`,\n    },\n  };\n}\n\nasync function makeAuthenticatedRequest(\n  unauthFetch: typeof fetch,\n  accessToken: string,\n  url: RequestInfo,\n  defaultRequestInit?: RequestInit,\n  dpopKey?: KeyPair\n) {\n  return unauthFetch(\n    url,\n    await buildAuthenticatedHeaders(\n      url.toString(),\n      accessToken,\n      dpopKey,\n      defaultRequestInit\n    )\n  );\n}\n\nasync function refreshAccessToken(\n  refreshOptions: RefreshOptions,\n  dpopKey?: KeyPair,\n  eventEmitter?: EventEmitter\n): Promise<{ accessToken: string; refreshToken?: string; expiresIn?: number }> {\n  const tokenSet = await refreshOptions.tokenRefresher.refresh(\n    refreshOptions.sessionId,\n    refreshOptions.refreshToken,\n    dpopKey\n  );\n  eventEmitter?.emit(\n    EVENTS.SESSION_EXTENDED,\n    tokenSet.expiresIn ?? DEFAULT_EXPIRATION_TIME_SECONDS\n  );\n  if (typeof tokenSet.refreshToken === \"string\") {\n    eventEmitter?.emit(EVENTS.NEW_REFRESH_TOKEN, tokenSet.refreshToken);\n  }\n  return {\n    accessToken: tokenSet.accessToken,\n    refreshToken: tokenSet.refreshToken,\n    expiresIn: tokenSet.expiresIn,\n  };\n}\n\n/**\n *\n * @param expiresIn Delay until the access token expires.\n * @returns a delay until the access token should be refreshed.\n */\nconst computeRefreshDelay = (expiresIn?: number): number => {\n  if (expiresIn !== undefined) {\n    return expiresIn - REFRESH_BEFORE_EXPIRATION_SECONDS > 0\n      ? // We want to refresh the token 5 seconds before they actually expire.\n        expiresIn - REFRESH_BEFORE_EXPIRATION_SECONDS\n      : expiresIn;\n  }\n  return DEFAULT_EXPIRATION_TIME_SECONDS;\n};\n\n/**\n * @param unauthFetch a regular fetch function, compliant with the WHATWG spec.\n * @param authToken an access token, either a Bearer token or a DPoP one.\n * @param options The option object may contain two objects: the DPoP key token\n * is bound to if applicable, and options to customise token renewal behaviour.\n *\n * @returns A fetch function that adds an appropriate Authorization header with\n * the provided token, and adds a DPoP header if applicable.\n */\nexport async function buildAuthenticatedFetch(\n  unauthFetch: typeof fetch,\n  accessToken: string,\n  options?: {\n    dpopKey?: KeyPair;\n    refreshOptions?: RefreshOptions;\n    expiresIn?: number;\n    eventEmitter?: EventEmitter;\n  }\n): Promise<typeof fetch> {\n  let currentAccessToken = accessToken;\n  let latestTimeout: Parameters<typeof clearTimeout>[0];\n  const currentRefreshOptions: RefreshOptions | undefined =\n    options?.refreshOptions;\n  // Setup the refresh timeout outside of the authenticated fetch, so that\n  // an idle app will not get logged out if it doesn't issue a fetch before\n  // the first expiration date.\n  if (currentRefreshOptions !== undefined) {\n    const proactivelyRefreshToken = async () => {\n      try {\n        const {\n          accessToken: refreshedAccessToken,\n          refreshToken,\n          expiresIn,\n        } = await refreshAccessToken(\n          currentRefreshOptions,\n          // If currentRefreshOptions is defined, options is necessarily defined too.\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          options!.dpopKey,\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          options!.eventEmitter\n        );\n        // Update the tokens in the closure if appropriate.\n        currentAccessToken = refreshedAccessToken;\n        if (refreshToken !== undefined) {\n          currentRefreshOptions.refreshToken = refreshToken;\n        }\n        // Each time the access token is refreshed, we must plan fo the next\n        // refresh iteration.\n        clearTimeout(latestTimeout);\n        latestTimeout = setTimeout(\n          proactivelyRefreshToken,\n          computeRefreshDelay(expiresIn) * 1000\n        );\n        // If currentRefreshOptions is defined, options is necessarily defined too.\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        options!.eventEmitter?.emit(EVENTS.TIMEOUT_SET, latestTimeout);\n      } catch (e) {\n        // It is possible that an underlying library throws an error on refresh flow failure.\n        // If we used a log framework, the error could be logged at the `debug` level,\n        // but otherwise the failure of the refresh flow should not blow up in the user's\n        // face, so we just swallow the error.\n        if (e instanceof OidcProviderError) {\n          // The OIDC provider refused to refresh the access token and returned an error instead.\n          /* istanbul ignore next 100% coverage would require testing that nothing\n              happens here if the emitter is undefined, which is more cumbersome\n              than what it's worth. */\n          options?.eventEmitter?.emit(\n            EVENTS.ERROR,\n            e.error,\n            e.errorDescription\n          );\n          /* istanbul ignore next 100% coverage would require testing that nothing\n            happens here if the emitter is undefined, which is more cumbersome\n            than what it's worth. */\n          options?.eventEmitter?.emit(EVENTS.SESSION_EXPIRED);\n        }\n        if (\n          e instanceof InvalidResponseError &&\n          e.missingFields.includes(\"access_token\")\n        ) {\n          // In this case, the OIDC provider returned a non-standard response, but\n          // did not specify that it was an error. We cannot refresh nonetheless.\n          /* istanbul ignore next 100% coverage would require testing that nothing\n            happens here if the emitter is undefined, which is more cumbersome\n            than what it's worth. */\n          options?.eventEmitter?.emit(EVENTS.SESSION_EXPIRED);\n        }\n      }\n    };\n    latestTimeout = setTimeout(\n      proactivelyRefreshToken,\n      // If currentRefreshOptions is defined, options is necessarily defined too.\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      computeRefreshDelay(options!.expiresIn) * 1000\n    );\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    options!.eventEmitter?.emit(EVENTS.TIMEOUT_SET, latestTimeout);\n  } else if (options !== undefined && options.eventEmitter !== undefined) {\n    // If no refresh options are provided, the session expires when the access token does.\n    const expirationTimeout = setTimeout(() => {\n      // The event emitter is always defined in our code, and it would be tedious\n      // to test for conditions when it is not.\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      options.eventEmitter!.emit(EVENTS.SESSION_EXPIRED);\n    }, computeRefreshDelay(options.expiresIn) * 1000);\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    options.eventEmitter!.emit(EVENTS.TIMEOUT_SET, expirationTimeout);\n  }\n  return async (url, requestInit?): Promise<Response> => {\n    let response = await makeAuthenticatedRequest(\n      unauthFetch,\n      currentAccessToken,\n      url,\n      requestInit,\n      options?.dpopKey\n    );\n\n    const failedButNotExpectedAuthError =\n      !response.ok && !isExpectedAuthError(response.status);\n    if (response.ok || failedButNotExpectedAuthError) {\n      // If there hasn't been a redirection, or if there has been a non-auth related\n      // issue, it should be handled at the application level\n      return response;\n    }\n    const hasBeenRedirected = response.url !== url;\n    if (hasBeenRedirected && options?.dpopKey !== undefined) {\n      // If the request failed for auth reasons, and has been redirected, we should\n      // replay it generating a DPoP header for the rediration target IRI. This\n      // doesn't apply to Bearer tokens, as the Bearer tokens aren't specific\n      // to a given resource and method, while the DPoP header (associated to a\n      // DPoP token) is.\n      response = await makeAuthenticatedRequest(\n        unauthFetch,\n        currentAccessToken,\n        // Replace the original target IRI (`url`) by the redirection target\n        response.url,\n        requestInit,\n        options.dpopKey\n      );\n    }\n    return response;\n  };\n}\n","/*\n * Copyright 2021 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { IStorage, StorageUtility } from \"../..\";\nimport IStorageUtility from \"../IStorageUtility\";\n\nexport const StorageUtilityGetResponse = \"getResponse\";\n\nexport const StorageUtilityMock: IStorageUtility = {\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n  get: async (key: string, options?: { errorIfNull?: boolean }) =>\n    StorageUtilityGetResponse,\n  set: async (key: string, value: string) => {\n    /* do nothing */\n  },\n  delete: async (key: string) => {\n    /* do nothing */\n  },\n  getForUser: async (\n    userId: string,\n    key: string,\n    options?: { errorIfNull?: boolean; secure?: boolean }\n  ) => StorageUtilityGetResponse,\n  setForUser: async (\n    userId: string,\n    values: Record<string, string>,\n    options?: { secure?: boolean }\n  ) => {\n    /* do nothing */\n  },\n  deleteForUser: async (\n    userId: string,\n    key: string,\n    options?: { secure?: boolean }\n  ) => {\n    /* do nothing */\n  },\n  deleteAllUserData: async (userId: string, options?: { secure?: boolean }) => {\n    /* do nothing */\n  },\n  /* eslint-enable @typescript-eslint/no-unused-vars */\n  storeResourceServerSessionInfo: async (\n    _webId: string,\n    _resourceServerIri: string,\n    _sessionExpires: number\n  ): Promise<void> => {\n    // Do nothing\n  },\n  clearResourceServerSessionInfo: async (\n    _resourceServerIri: string\n  ): Promise<void> => {\n    // Do nothing\n  },\n};\n\nexport const mockStorage = (\n  stored: Record<string, string | Record<string, string>>\n): IStorage => {\n  const store = stored;\n  return {\n    get: async (key: string): Promise<string | undefined> => {\n      if (store[key] === undefined) {\n        return undefined;\n      }\n      if (typeof store[key] === \"string\") {\n        return store[key] as string;\n      }\n      return JSON.stringify(store[key]);\n    },\n    set: async (key: string, value: string): Promise<void> => {\n      store[key] = value;\n    },\n    delete: async (key: string): Promise<void> => {\n      delete store[key];\n    },\n  };\n};\n\nexport const mockStorageUtility = (\n  stored: Record<string, string | Record<string, string>>,\n  isSecure = false\n): IStorageUtility => {\n  if (isSecure) {\n    return new StorageUtility(mockStorage(stored), mockStorage({}));\n  }\n  return new StorageUtility(mockStorage({}), mockStorage(stored));\n};\n","/*\n * Copyright 2021 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nexport * from \"./constant\";\n\nexport { default as ILoginInputOptions } from \"./ILoginInputOptions\";\n\nexport { default as ILoginHandler, LoginResult } from \"./login/ILoginHandler\";\nexport { default as ILoginOptions } from \"./login/ILoginOptions\";\n\nexport { default as ILogoutHandler } from \"./logout/ILogoutHandler\";\n\nexport { default as IHandleable } from \"./util/handlerPattern/IHandleable\";\nexport { default as AggregateHandler } from \"./util/handlerPattern/AggregateHandler\";\n\nexport { default as IOidcHandler } from \"./login/oidc/IOidcHandler\";\nexport { default as IOidcOptions } from \"./login/oidc/IOidcOptions\";\n\nexport {\n  default as IRedirectHandler,\n  RedirectInput,\n  RedirectResult,\n  getWebidFromTokenPayload,\n  fetchJwks,\n} from \"./login/oidc/redirectHandler/IRedirectHandler\";\nexport { IRedirector, IRedirectorOptions } from \"./login/oidc/IRedirector\";\n\nexport {\n  ISessionInfo,\n  ISessionInternalInfo,\n  isSupportedTokenType,\n} from \"./sessionInfo/ISessionInfo\";\nexport {\n  ISessionInfoManager,\n  ISessionInfoManagerOptions,\n  USER_SESSION_PREFIX,\n} from \"./sessionInfo/ISessionInfoManager\";\n\nexport { IIssuerConfigFetcher } from \"./login/oidc/IIssuerConfigFetcher\";\nexport { IIssuerConfig } from \"./login/oidc/IIssuerConfig\";\nexport {\n  IClientRegistrar,\n  IClientRegistrarOptions,\n  handleRegistration,\n  determineSigningAlg,\n} from \"./login/oidc/IClientRegistrar\";\nexport { IClient } from \"./login/oidc/IClient\";\n\n// Storage.\nexport { default as IStorage } from \"./storage/IStorage\";\n\n// Utility functions.\nexport { default as IStorageUtility } from \"./storage/IStorageUtility\";\nexport {\n  default as StorageUtility,\n  OidcContext,\n  loadOidcContextFromStorage,\n  saveSessionInfoToStorage,\n  getSessionIdFromOauthState,\n  ResourceServerSession,\n} from \"./storage/StorageUtility\";\nexport { default as InMemoryStorage } from \"./storage/InMemoryStorage\";\n\nexport { default as ConfigurationError } from \"./errors/ConfigurationError\";\nexport { default as NotImplementedError } from \"./errors/NotImplementedError\";\nexport { InvalidResponseError } from \"./errors/InvalidResponseError\";\nexport { OidcProviderError } from \"./errors/OidcProviderError\";\n\nexport {\n  createDpopHeader,\n  KeyPair,\n  generateDpopKeyPair,\n} from \"./authenticatedFetch/dpopUtils\";\n\nexport {\n  buildAuthenticatedFetch,\n  DpopHeaderPayload,\n  RefreshOptions,\n} from \"./authenticatedFetch/fetchFactory\";\n\nexport {\n  ITokenRefresher,\n  TokenEndpointResponse,\n} from \"./login/oidc/refresh/ITokenRefresher\";\n\n// Mocks.\nexport {\n  mockStorage,\n  mockStorageUtility,\n  StorageUtilityMock,\n  StorageUtilityGetResponse,\n} from \"./storage/__mocks__/StorageUtility\";\n","!function t(e,r){if(\"object\"==typeof exports&&\"object\"==typeof module)module.exports=r();else if(\"function\"==typeof define&&define.amd)define([],r);else{var n=r();for(var i in n)(\"object\"==typeof exports?exports:e)[i]=n[i]}}(this,(function(){return function(t){var e={};function r(n){if(e[n])return e[n].exports;var i=e[n]={i:n,l:!1,exports:{}};return t[n].call(i.exports,i,i.exports,r),i.l=!0,i.exports}return r.m=t,r.c=e,r.d=function(t,e,n){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},r.r=function(t){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&\"object\"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:t}),2&e&&\"string\"!=typeof t)for(var i in t)r.d(n,i,function(e){return t[e]}.bind(null,i));return n},r.n=function(t){var e=t&&t.__esModule?function e(){return t.default}:function e(){return t};return r.d(e,\"a\",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p=\"\",r(r.s=22)}([function(t,e,r){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0});var n=function(){function t(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}return function(e,r,n){return r&&t(e.prototype,r),n&&t(e,n),e}}();var i={debug:function t(){},info:function t(){},warn:function t(){},error:function t(){}},o=void 0,s=void 0;(e.Log=function(){function t(){!function e(t,r){if(!(t instanceof r))throw new TypeError(\"Cannot call a class as a function\")}(this,t)}return t.reset=function t(){s=3,o=i},t.debug=function t(){if(s>=4){for(var e=arguments.length,r=Array(e),n=0;n<e;n++)r[n]=arguments[n];o.debug.apply(o,Array.from(r))}},t.info=function t(){if(s>=3){for(var e=arguments.length,r=Array(e),n=0;n<e;n++)r[n]=arguments[n];o.info.apply(o,Array.from(r))}},t.warn=function t(){if(s>=2){for(var e=arguments.length,r=Array(e),n=0;n<e;n++)r[n]=arguments[n];o.warn.apply(o,Array.from(r))}},t.error=function t(){if(s>=1){for(var e=arguments.length,r=Array(e),n=0;n<e;n++)r[n]=arguments[n];o.error.apply(o,Array.from(r))}},n(t,null,[{key:\"NONE\",get:function t(){return 0}},{key:\"ERROR\",get:function t(){return 1}},{key:\"WARN\",get:function t(){return 2}},{key:\"INFO\",get:function t(){return 3}},{key:\"DEBUG\",get:function t(){return 4}},{key:\"level\",get:function t(){return s},set:function t(e){if(!(0<=e&&e<=4))throw new Error(\"Invalid log level\");s=e}},{key:\"logger\",get:function t(){return o},set:function t(e){if(!e.debug&&e.info&&(e.debug=e.info),!(e.debug&&e.info&&e.warn&&e.error))throw new Error(\"Invalid logger\");o=e}}]),t}()).reset()},function(t,e,r){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0});var n=function(){function t(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}return function(e,r,n){return r&&t(e.prototype,r),n&&t(e,n),e}}();var i={setInterval:function(t){function e(e,r){return t.apply(this,arguments)}return e.toString=function(){return t.toString()},e}((function(t,e){return setInterval(t,e)})),clearInterval:function(t){function e(e){return t.apply(this,arguments)}return e.toString=function(){return t.toString()},e}((function(t){return clearInterval(t)}))},o=!1,s=null;e.Global=function(){function t(){!function e(t,r){if(!(t instanceof r))throw new TypeError(\"Cannot call a class as a function\")}(this,t)}return t._testing=function t(){o=!0},t.setXMLHttpRequest=function t(e){s=e},n(t,null,[{key:\"location\",get:function t(){if(!o)return location}},{key:\"localStorage\",get:function t(){if(!o&&\"undefined\"!=typeof window)return localStorage}},{key:\"sessionStorage\",get:function t(){if(!o&&\"undefined\"!=typeof window)return sessionStorage}},{key:\"XMLHttpRequest\",get:function t(){if(!o&&\"undefined\"!=typeof window)return s||XMLHttpRequest}},{key:\"timer\",get:function t(){if(!o)return i}}]),t}()},function(t,e,r){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.MetadataService=void 0;var n=function(){function t(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}return function(e,r,n){return r&&t(e.prototype,r),n&&t(e,n),e}}(),i=r(0),o=r(7);function s(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}var a=\".well-known/openid-configuration\";e.MetadataService=function(){function t(e){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:o.JsonService;if(s(this,t),!e)throw i.Log.error(\"MetadataService: No settings passed to MetadataService\"),new Error(\"settings\");this._settings=e,this._jsonService=new r([\"application/jwk-set+json\"])}return t.prototype.resetSigningKeys=function t(){this._settings=this._settings||{},this._settings.signingKeys=void 0},t.prototype.getMetadata=function t(){var e=this;return this._settings.metadata?(i.Log.debug(\"MetadataService.getMetadata: Returning metadata from settings\"),Promise.resolve(this._settings.metadata)):this.metadataUrl?(i.Log.debug(\"MetadataService.getMetadata: getting metadata from\",this.metadataUrl),this._jsonService.getJson(this.metadataUrl).then((function(t){i.Log.debug(\"MetadataService.getMetadata: json received\");var r=e._settings.metadataSeed||{};return e._settings.metadata=Object.assign({},r,t),e._settings.metadata}))):(i.Log.error(\"MetadataService.getMetadata: No authority or metadataUrl configured on settings\"),Promise.reject(new Error(\"No authority or metadataUrl configured on settings\")))},t.prototype.getIssuer=function t(){return this._getMetadataProperty(\"issuer\")},t.prototype.getAuthorizationEndpoint=function t(){return this._getMetadataProperty(\"authorization_endpoint\")},t.prototype.getUserInfoEndpoint=function t(){return this._getMetadataProperty(\"userinfo_endpoint\")},t.prototype.getTokenEndpoint=function t(){var e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];return this._getMetadataProperty(\"token_endpoint\",e)},t.prototype.getCheckSessionIframe=function t(){return this._getMetadataProperty(\"check_session_iframe\",!0)},t.prototype.getEndSessionEndpoint=function t(){return this._getMetadataProperty(\"end_session_endpoint\",!0)},t.prototype.getRevocationEndpoint=function t(){return this._getMetadataProperty(\"revocation_endpoint\",!0)},t.prototype.getKeysEndpoint=function t(){return this._getMetadataProperty(\"jwks_uri\",!0)},t.prototype._getMetadataProperty=function t(e){var r=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return i.Log.debug(\"MetadataService.getMetadataProperty for: \"+e),this.getMetadata().then((function(t){if(i.Log.debug(\"MetadataService.getMetadataProperty: metadata recieved\"),void 0===t[e]){if(!0===r)return void i.Log.warn(\"MetadataService.getMetadataProperty: Metadata does not contain optional property \"+e);throw i.Log.error(\"MetadataService.getMetadataProperty: Metadata does not contain property \"+e),new Error(\"Metadata does not contain property \"+e)}return t[e]}))},t.prototype.getSigningKeys=function t(){var e=this;return this._settings.signingKeys?(i.Log.debug(\"MetadataService.getSigningKeys: Returning signingKeys from settings\"),Promise.resolve(this._settings.signingKeys)):this._getMetadataProperty(\"jwks_uri\").then((function(t){return i.Log.debug(\"MetadataService.getSigningKeys: jwks_uri received\",t),e._jsonService.getJson(t).then((function(t){if(i.Log.debug(\"MetadataService.getSigningKeys: key set received\",t),!t.keys)throw i.Log.error(\"MetadataService.getSigningKeys: Missing keys on keyset\"),new Error(\"Missing keys on keyset\");return e._settings.signingKeys=t.keys,e._settings.signingKeys}))}))},n(t,[{key:\"metadataUrl\",get:function t(){return this._metadataUrl||(this._settings.metadataUrl?this._metadataUrl=this._settings.metadataUrl:(this._metadataUrl=this._settings.authority,this._metadataUrl&&this._metadataUrl.indexOf(a)<0&&(\"/\"!==this._metadataUrl[this._metadataUrl.length-1]&&(this._metadataUrl+=\"/\"),this._metadataUrl+=a))),this._metadataUrl}}]),t}()},function(t,e,r){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.UrlUtility=void 0;var n=r(0),i=r(1);e.UrlUtility=function(){function t(){!function e(t,r){if(!(t instanceof r))throw new TypeError(\"Cannot call a class as a function\")}(this,t)}return t.addQueryParam=function t(e,r,n){return e.indexOf(\"?\")<0&&(e+=\"?\"),\"?\"!==e[e.length-1]&&(e+=\"&\"),e+=encodeURIComponent(r),e+=\"=\",e+=encodeURIComponent(n)},t.parseUrlFragment=function t(e){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"#\",o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:i.Global;\"string\"!=typeof e&&(e=o.location.href);var s=e.lastIndexOf(r);s>=0&&(e=e.substr(s+1)),\"?\"===r&&(s=e.indexOf(\"#\"))>=0&&(e=e.substr(0,s));for(var a,u={},c=/([^&=]+)=([^&]*)/g,h=0;a=c.exec(e);)if(u[decodeURIComponent(a[1])]=decodeURIComponent(a[2].replace(/\\+/g,\" \")),h++>50)return n.Log.error(\"UrlUtility.parseUrlFragment: response exceeded expected number of parameters\",e),{error:\"Response exceeded expected number of parameters\"};for(var l in u)return u;return{}},t}()},function(t,e,r){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.JoseUtil=void 0;var n=r(26),i=function o(t){return t&&t.__esModule?t:{default:t}}(r(33));e.JoseUtil=(0,i.default)({jws:n.jws,KeyUtil:n.KeyUtil,X509:n.X509,crypto:n.crypto,hextob64u:n.hextob64u,b64tohex:n.b64tohex,AllowedSigningAlgs:n.AllowedSigningAlgs})},function(t,e,r){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.OidcClientSettings=void 0;var n=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t},i=function(){function t(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}return function(e,r,n){return r&&t(e.prototype,r),n&&t(e,n),e}}(),o=r(0),s=r(23),a=r(6),u=r(24),c=r(2);function h(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}var l=\".well-known/openid-configuration\",f=\"id_token\",g=\"openid\",d=\"client_secret_post\";e.OidcClientSettings=function(){function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=e.authority,i=e.metadataUrl,o=e.metadata,l=e.signingKeys,p=e.metadataSeed,v=e.client_id,y=e.client_secret,m=e.response_type,_=void 0===m?f:m,S=e.scope,b=void 0===S?g:S,w=e.redirect_uri,F=e.post_logout_redirect_uri,E=e.client_authentication,x=void 0===E?d:E,A=e.prompt,k=e.display,P=e.max_age,C=e.ui_locales,T=e.acr_values,R=e.resource,I=e.response_mode,D=e.filterProtocolClaims,L=void 0===D||D,N=e.loadUserInfo,U=void 0===N||N,B=e.staleStateAge,O=void 0===B?900:B,j=e.clockSkew,M=void 0===j?300:j,H=e.clockService,V=void 0===H?new s.ClockService:H,K=e.userInfoJwtIssuer,q=void 0===K?\"OP\":K,J=e.mergeClaims,W=void 0!==J&&J,z=e.stateStore,Y=void 0===z?new a.WebStorageStateStore:z,G=e.ResponseValidatorCtor,X=void 0===G?u.ResponseValidator:G,$=e.MetadataServiceCtor,Q=void 0===$?c.MetadataService:$,Z=e.extraQueryParams,tt=void 0===Z?{}:Z,et=e.extraTokenParams,rt=void 0===et?{}:et;h(this,t),this._authority=r,this._metadataUrl=i,this._metadata=o,this._metadataSeed=p,this._signingKeys=l,this._client_id=v,this._client_secret=y,this._response_type=_,this._scope=b,this._redirect_uri=w,this._post_logout_redirect_uri=F,this._client_authentication=x,this._prompt=A,this._display=k,this._max_age=P,this._ui_locales=C,this._acr_values=T,this._resource=R,this._response_mode=I,this._filterProtocolClaims=!!L,this._loadUserInfo=!!U,this._staleStateAge=O,this._clockSkew=M,this._clockService=V,this._userInfoJwtIssuer=q,this._mergeClaims=!!W,this._stateStore=Y,this._validator=new X(this),this._metadataService=new Q(this),this._extraQueryParams=\"object\"===(void 0===tt?\"undefined\":n(tt))?tt:{},this._extraTokenParams=\"object\"===(void 0===rt?\"undefined\":n(rt))?rt:{}}return t.prototype.getEpochTime=function t(){return this._clockService.getEpochTime()},i(t,[{key:\"client_id\",get:function t(){return this._client_id},set:function t(e){if(this._client_id)throw o.Log.error(\"OidcClientSettings.set_client_id: client_id has already been assigned.\"),new Error(\"client_id has already been assigned.\");this._client_id=e}},{key:\"client_secret\",get:function t(){return this._client_secret}},{key:\"response_type\",get:function t(){return this._response_type}},{key:\"scope\",get:function t(){return this._scope}},{key:\"redirect_uri\",get:function t(){return this._redirect_uri}},{key:\"post_logout_redirect_uri\",get:function t(){return this._post_logout_redirect_uri}},{key:\"client_authentication\",get:function t(){return this._client_authentication}},{key:\"prompt\",get:function t(){return this._prompt}},{key:\"display\",get:function t(){return this._display}},{key:\"max_age\",get:function t(){return this._max_age}},{key:\"ui_locales\",get:function t(){return this._ui_locales}},{key:\"acr_values\",get:function t(){return this._acr_values}},{key:\"resource\",get:function t(){return this._resource}},{key:\"response_mode\",get:function t(){return this._response_mode}},{key:\"authority\",get:function t(){return this._authority},set:function t(e){if(this._authority)throw o.Log.error(\"OidcClientSettings.set_authority: authority has already been assigned.\"),new Error(\"authority has already been assigned.\");this._authority=e}},{key:\"metadataUrl\",get:function t(){return this._metadataUrl||(this._metadataUrl=this.authority,this._metadataUrl&&this._metadataUrl.indexOf(l)<0&&(\"/\"!==this._metadataUrl[this._metadataUrl.length-1]&&(this._metadataUrl+=\"/\"),this._metadataUrl+=l)),this._metadataUrl}},{key:\"metadata\",get:function t(){return this._metadata},set:function t(e){this._metadata=e}},{key:\"metadataSeed\",get:function t(){return this._metadataSeed},set:function t(e){this._metadataSeed=e}},{key:\"signingKeys\",get:function t(){return this._signingKeys},set:function t(e){this._signingKeys=e}},{key:\"filterProtocolClaims\",get:function t(){return this._filterProtocolClaims}},{key:\"loadUserInfo\",get:function t(){return this._loadUserInfo}},{key:\"staleStateAge\",get:function t(){return this._staleStateAge}},{key:\"clockSkew\",get:function t(){return this._clockSkew}},{key:\"userInfoJwtIssuer\",get:function t(){return this._userInfoJwtIssuer}},{key:\"mergeClaims\",get:function t(){return this._mergeClaims}},{key:\"stateStore\",get:function t(){return this._stateStore}},{key:\"validator\",get:function t(){return this._validator}},{key:\"metadataService\",get:function t(){return this._metadataService}},{key:\"extraQueryParams\",get:function t(){return this._extraQueryParams},set:function t(e){\"object\"===(void 0===e?\"undefined\":n(e))?this._extraQueryParams=e:this._extraQueryParams={}}},{key:\"extraTokenParams\",get:function t(){return this._extraTokenParams},set:function t(e){\"object\"===(void 0===e?\"undefined\":n(e))?this._extraTokenParams=e:this._extraTokenParams={}}}]),t}()},function(t,e,r){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.WebStorageStateStore=void 0;var n=r(0),i=r(1);function o(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}e.WebStorageStateStore=function(){function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=e.prefix,n=void 0===r?\"oidc.\":r,s=e.store,a=void 0===s?i.Global.localStorage:s;o(this,t),this._store=a,this._prefix=n}return t.prototype.set=function t(e,r){return n.Log.debug(\"WebStorageStateStore.set\",e),e=this._prefix+e,this._store.setItem(e,r),Promise.resolve()},t.prototype.get=function t(e){n.Log.debug(\"WebStorageStateStore.get\",e),e=this._prefix+e;var r=this._store.getItem(e);return Promise.resolve(r)},t.prototype.remove=function t(e){n.Log.debug(\"WebStorageStateStore.remove\",e),e=this._prefix+e;var r=this._store.getItem(e);return this._store.removeItem(e),Promise.resolve(r)},t.prototype.getAllKeys=function t(){n.Log.debug(\"WebStorageStateStore.getAllKeys\");for(var e=[],r=0;r<this._store.length;r++){var i=this._store.key(r);0===i.indexOf(this._prefix)&&e.push(i.substr(this._prefix.length))}return Promise.resolve(e)},t}()},function(t,e,r){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.JsonService=void 0;var n=r(0),i=r(1);function o(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}e.JsonService=function(){function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:i.Global.XMLHttpRequest,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;o(this,t),e&&Array.isArray(e)?this._contentTypes=e.slice():this._contentTypes=[],this._contentTypes.push(\"application/json\"),n&&this._contentTypes.push(\"application/jwt\"),this._XMLHttpRequest=r,this._jwtHandler=n}return t.prototype.getJson=function t(e,r){var i=this;if(!e)throw n.Log.error(\"JsonService.getJson: No url passed\"),new Error(\"url\");return n.Log.debug(\"JsonService.getJson, url: \",e),new Promise((function(t,o){var s=new i._XMLHttpRequest;s.open(\"GET\",e);var a=i._contentTypes,u=i._jwtHandler;s.onload=function(){if(n.Log.debug(\"JsonService.getJson: HTTP response received, status\",s.status),200===s.status){var r=s.getResponseHeader(\"Content-Type\");if(r){var i=a.find((function(t){if(r.startsWith(t))return!0}));if(\"application/jwt\"==i)return void u(s).then(t,o);if(i)try{return void t(JSON.parse(s.responseText))}catch(t){return n.Log.error(\"JsonService.getJson: Error parsing JSON response\",t.message),void o(t)}}o(Error(\"Invalid response Content-Type: \"+r+\", from URL: \"+e))}else o(Error(s.statusText+\" (\"+s.status+\")\"))},s.onerror=function(){n.Log.error(\"JsonService.getJson: network error\"),o(Error(\"Network Error\"))},r&&(n.Log.debug(\"JsonService.getJson: token passed, setting Authorization header\"),s.setRequestHeader(\"Authorization\",\"Bearer \"+r)),s.send()}))},t.prototype.postForm=function t(e,r,i){var o=this;if(!e)throw n.Log.error(\"JsonService.postForm: No url passed\"),new Error(\"url\");return n.Log.debug(\"JsonService.postForm, url: \",e),new Promise((function(t,s){var a=new o._XMLHttpRequest;a.open(\"POST\",e);var u=o._contentTypes;a.onload=function(){if(n.Log.debug(\"JsonService.postForm: HTTP response received, status\",a.status),200!==a.status){if(400===a.status)if(i=a.getResponseHeader(\"Content-Type\"))if(u.find((function(t){if(i.startsWith(t))return!0})))try{var r=JSON.parse(a.responseText);if(r&&r.error)return n.Log.error(\"JsonService.postForm: Error from server: \",r.error),void s(new Error(r.error))}catch(t){return n.Log.error(\"JsonService.postForm: Error parsing JSON response\",t.message),void s(t)}s(Error(a.statusText+\" (\"+a.status+\")\"))}else{var i;if((i=a.getResponseHeader(\"Content-Type\"))&&u.find((function(t){if(i.startsWith(t))return!0})))try{return void t(JSON.parse(a.responseText))}catch(t){return n.Log.error(\"JsonService.postForm: Error parsing JSON response\",t.message),void s(t)}s(Error(\"Invalid response Content-Type: \"+i+\", from URL: \"+e))}},a.onerror=function(){n.Log.error(\"JsonService.postForm: network error\"),s(Error(\"Network Error\"))};var c=\"\";for(var h in r){var l=r[h];l&&(c.length>0&&(c+=\"&\"),c+=encodeURIComponent(h),c+=\"=\",c+=encodeURIComponent(l))}a.setRequestHeader(\"Content-Type\",\"application/x-www-form-urlencoded\"),void 0!==i&&a.setRequestHeader(\"Authorization\",\"Basic \"+btoa(i)),a.send(c)}))},t}()},function(t,e,r){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.SigninRequest=void 0;var n=r(0),i=r(3),o=r(13);e.SigninRequest=function(){function t(e){var r=e.url,s=e.client_id,a=e.redirect_uri,u=e.response_type,c=e.scope,h=e.authority,l=e.data,f=e.prompt,g=e.display,d=e.max_age,p=e.ui_locales,v=e.id_token_hint,y=e.login_hint,m=e.acr_values,_=e.resource,S=e.response_mode,b=e.request,w=e.request_uri,F=e.extraQueryParams,E=e.request_type,x=e.client_secret,A=e.extraTokenParams,k=e.skipUserInfo;if(function P(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),!r)throw n.Log.error(\"SigninRequest.ctor: No url passed\"),new Error(\"url\");if(!s)throw n.Log.error(\"SigninRequest.ctor: No client_id passed\"),new Error(\"client_id\");if(!a)throw n.Log.error(\"SigninRequest.ctor: No redirect_uri passed\"),new Error(\"redirect_uri\");if(!u)throw n.Log.error(\"SigninRequest.ctor: No response_type passed\"),new Error(\"response_type\");if(!c)throw n.Log.error(\"SigninRequest.ctor: No scope passed\"),new Error(\"scope\");if(!h)throw n.Log.error(\"SigninRequest.ctor: No authority passed\"),new Error(\"authority\");var C=t.isOidc(u),T=t.isCode(u);S||(S=t.isCode(u)?\"query\":null),this.state=new o.SigninState({nonce:C,data:l,client_id:s,authority:h,redirect_uri:a,code_verifier:T,request_type:E,response_mode:S,client_secret:x,scope:c,extraTokenParams:A,skipUserInfo:k}),r=i.UrlUtility.addQueryParam(r,\"client_id\",s),r=i.UrlUtility.addQueryParam(r,\"redirect_uri\",a),r=i.UrlUtility.addQueryParam(r,\"response_type\",u),r=i.UrlUtility.addQueryParam(r,\"scope\",c),r=i.UrlUtility.addQueryParam(r,\"state\",this.state.id),C&&(r=i.UrlUtility.addQueryParam(r,\"nonce\",this.state.nonce)),T&&(r=i.UrlUtility.addQueryParam(r,\"code_challenge\",this.state.code_challenge),r=i.UrlUtility.addQueryParam(r,\"code_challenge_method\",\"S256\"));var R={prompt:f,display:g,max_age:d,ui_locales:p,id_token_hint:v,login_hint:y,acr_values:m,resource:_,request:b,request_uri:w,response_mode:S};for(var I in R)R[I]&&(r=i.UrlUtility.addQueryParam(r,I,R[I]));for(var D in F)r=i.UrlUtility.addQueryParam(r,D,F[D]);this.url=r}return t.isOidc=function t(e){return!!e.split(/\\s+/g).filter((function(t){return\"id_token\"===t}))[0]},t.isOAuth=function t(e){return!!e.split(/\\s+/g).filter((function(t){return\"token\"===t}))[0]},t.isCode=function t(e){return!!e.split(/\\s+/g).filter((function(t){return\"code\"===t}))[0]},t}()},function(t,e,r){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.State=void 0;var n=function(){function t(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}return function(e,r,n){return r&&t(e.prototype,r),n&&t(e,n),e}}(),i=r(0),o=function s(t){return t&&t.__esModule?t:{default:t}}(r(14));function a(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}e.State=function(){function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=e.id,n=e.data,i=e.created,s=e.request_type;a(this,t),this._id=r||(0,o.default)(),this._data=n,this._created=\"number\"==typeof i&&i>0?i:parseInt(Date.now()/1e3),this._request_type=s}return t.prototype.toStorageString=function t(){return i.Log.debug(\"State.toStorageString\"),JSON.stringify({id:this.id,data:this.data,created:this.created,request_type:this.request_type})},t.fromStorageString=function e(r){return i.Log.debug(\"State.fromStorageString\"),new t(JSON.parse(r))},t.clearStaleState=function e(r,n){var o=Date.now()/1e3-n;return r.getAllKeys().then((function(e){i.Log.debug(\"State.clearStaleState: got keys\",e);for(var n=[],s=function s(a){var c=e[a];u=r.get(c).then((function(e){var n=!1;if(e)try{var s=t.fromStorageString(e);i.Log.debug(\"State.clearStaleState: got item from key: \",c,s.created),s.created<=o&&(n=!0)}catch(t){i.Log.error(\"State.clearStaleState: Error parsing state for key\",c,t.message),n=!0}else i.Log.debug(\"State.clearStaleState: no item in storage for key: \",c),n=!0;if(n)return i.Log.debug(\"State.clearStaleState: removed item for key: \",c),r.remove(c)})),n.push(u)},a=0;a<e.length;a++){var u;s(a)}return i.Log.debug(\"State.clearStaleState: waiting on promise count:\",n.length),Promise.all(n)}))},n(t,[{key:\"id\",get:function t(){return this._id}},{key:\"data\",get:function t(){return this._data}},{key:\"created\",get:function t(){return this._created}},{key:\"request_type\",get:function t(){return this._request_type}}]),t}()},function(t,e,r){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.OidcClient=void 0;var n=function(){function t(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}return function(e,r,n){return r&&t(e.prototype,r),n&&t(e,n),e}}(),i=r(0),o=r(5),s=r(12),a=r(8),u=r(34),c=r(35),h=r(36),l=r(13),f=r(9);function g(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}e.OidcClient=function(){function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};g(this,t),e instanceof o.OidcClientSettings?this._settings=e:this._settings=new o.OidcClientSettings(e)}return t.prototype.createSigninRequest=function t(){var e=this,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=r.response_type,o=r.scope,s=r.redirect_uri,u=r.data,c=r.state,h=r.prompt,l=r.display,f=r.max_age,g=r.ui_locales,d=r.id_token_hint,p=r.login_hint,v=r.acr_values,y=r.resource,m=r.request,_=r.request_uri,S=r.response_mode,b=r.extraQueryParams,w=r.extraTokenParams,F=r.request_type,E=r.skipUserInfo,x=arguments[1];i.Log.debug(\"OidcClient.createSigninRequest\");var A=this._settings.client_id;n=n||this._settings.response_type,o=o||this._settings.scope,s=s||this._settings.redirect_uri,h=h||this._settings.prompt,l=l||this._settings.display,f=f||this._settings.max_age,g=g||this._settings.ui_locales,v=v||this._settings.acr_values,y=y||this._settings.resource,S=S||this._settings.response_mode,b=b||this._settings.extraQueryParams,w=w||this._settings.extraTokenParams;var k=this._settings.authority;return a.SigninRequest.isCode(n)&&\"code\"!==n?Promise.reject(new Error(\"OpenID Connect hybrid flow is not supported\")):this._metadataService.getAuthorizationEndpoint().then((function(t){i.Log.debug(\"OidcClient.createSigninRequest: Received authorization endpoint\",t);var r=new a.SigninRequest({url:t,client_id:A,redirect_uri:s,response_type:n,scope:o,data:u||c,authority:k,prompt:h,display:l,max_age:f,ui_locales:g,id_token_hint:d,login_hint:p,acr_values:v,resource:y,request:m,request_uri:_,extraQueryParams:b,extraTokenParams:w,request_type:F,response_mode:S,client_secret:e._settings.client_secret,skipUserInfo:E}),P=r.state;return(x=x||e._stateStore).set(P.id,P.toStorageString()).then((function(){return r}))}))},t.prototype.readSigninResponseState=function t(e,r){var n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];i.Log.debug(\"OidcClient.readSigninResponseState\");var o=\"query\"===this._settings.response_mode||!this._settings.response_mode&&a.SigninRequest.isCode(this._settings.response_type),s=o?\"?\":\"#\",c=new u.SigninResponse(e,s);if(!c.state)return i.Log.error(\"OidcClient.readSigninResponseState: No state in response\"),Promise.reject(new Error(\"No state in response\"));r=r||this._stateStore;var h=n?r.remove.bind(r):r.get.bind(r);return h(c.state).then((function(t){if(!t)throw i.Log.error(\"OidcClient.readSigninResponseState: No matching state found in storage\"),new Error(\"No matching state found in storage\");return{state:l.SigninState.fromStorageString(t),response:c}}))},t.prototype.processSigninResponse=function t(e,r){var n=this;return i.Log.debug(\"OidcClient.processSigninResponse\"),this.readSigninResponseState(e,r,!0).then((function(t){var e=t.state,r=t.response;return i.Log.debug(\"OidcClient.processSigninResponse: Received state from storage; validating response\"),n._validator.validateSigninResponse(e,r)}))},t.prototype.createSignoutRequest=function t(){var e=this,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=r.id_token_hint,o=r.data,s=r.state,a=r.post_logout_redirect_uri,u=r.extraQueryParams,h=r.request_type,l=arguments[1];return i.Log.debug(\"OidcClient.createSignoutRequest\"),a=a||this._settings.post_logout_redirect_uri,u=u||this._settings.extraQueryParams,this._metadataService.getEndSessionEndpoint().then((function(t){if(!t)throw i.Log.error(\"OidcClient.createSignoutRequest: No end session endpoint url returned\"),new Error(\"no end session endpoint\");i.Log.debug(\"OidcClient.createSignoutRequest: Received end session endpoint\",t);var r=new c.SignoutRequest({url:t,id_token_hint:n,post_logout_redirect_uri:a,data:o||s,extraQueryParams:u,request_type:h}),f=r.state;return f&&(i.Log.debug(\"OidcClient.createSignoutRequest: Signout request has state to persist\"),(l=l||e._stateStore).set(f.id,f.toStorageString())),r}))},t.prototype.readSignoutResponseState=function t(e,r){var n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];i.Log.debug(\"OidcClient.readSignoutResponseState\");var o=new h.SignoutResponse(e);if(!o.state)return i.Log.debug(\"OidcClient.readSignoutResponseState: No state in response\"),o.error?(i.Log.warn(\"OidcClient.readSignoutResponseState: Response was error: \",o.error),Promise.reject(new s.ErrorResponse(o))):Promise.resolve({state:void 0,response:o});var a=o.state;r=r||this._stateStore;var u=n?r.remove.bind(r):r.get.bind(r);return u(a).then((function(t){if(!t)throw i.Log.error(\"OidcClient.readSignoutResponseState: No matching state found in storage\"),new Error(\"No matching state found in storage\");return{state:f.State.fromStorageString(t),response:o}}))},t.prototype.processSignoutResponse=function t(e,r){var n=this;return i.Log.debug(\"OidcClient.processSignoutResponse\"),this.readSignoutResponseState(e,r,!0).then((function(t){var e=t.state,r=t.response;return e?(i.Log.debug(\"OidcClient.processSignoutResponse: Received state from storage; validating response\"),n._validator.validateSignoutResponse(e,r)):(i.Log.debug(\"OidcClient.processSignoutResponse: No state from storage; skipping validating response\"),r)}))},t.prototype.clearStaleState=function t(e){return i.Log.debug(\"OidcClient.clearStaleState\"),e=e||this._stateStore,f.State.clearStaleState(e,this.settings.staleStateAge)},n(t,[{key:\"_stateStore\",get:function t(){return this.settings.stateStore}},{key:\"_validator\",get:function t(){return this.settings.validator}},{key:\"_metadataService\",get:function t(){return this.settings.metadataService}},{key:\"settings\",get:function t(){return this._settings}},{key:\"metadataService\",get:function t(){return this._metadataService}}]),t}()},function(t,e,r){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.TokenClient=void 0;var n=r(7),i=r(2),o=r(0);function s(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}e.TokenClient=function(){function t(e){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:n.JsonService,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:i.MetadataService;if(s(this,t),!e)throw o.Log.error(\"TokenClient.ctor: No settings passed\"),new Error(\"settings\");this._settings=e,this._jsonService=new r,this._metadataService=new a(this._settings)}return t.prototype.exchangeCode=function t(){var e=this,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};(r=Object.assign({},r)).grant_type=r.grant_type||\"authorization_code\",r.client_id=r.client_id||this._settings.client_id,r.client_secret=r.client_secret||this._settings.client_secret,r.redirect_uri=r.redirect_uri||this._settings.redirect_uri;var n=void 0,i=r._client_authentication||this._settings._client_authentication;return delete r._client_authentication,r.code?r.redirect_uri?r.code_verifier?r.client_id?r.client_secret||\"client_secret_basic\"!=i?(\"client_secret_basic\"==i&&(n=r.client_id+\":\"+r.client_secret,delete r.client_id,delete r.client_secret),this._metadataService.getTokenEndpoint(!1).then((function(t){return o.Log.debug(\"TokenClient.exchangeCode: Received token endpoint\"),e._jsonService.postForm(t,r,n).then((function(t){return o.Log.debug(\"TokenClient.exchangeCode: response received\"),t}))}))):(o.Log.error(\"TokenClient.exchangeCode: No client_secret passed\"),Promise.reject(new Error(\"A client_secret is required\"))):(o.Log.error(\"TokenClient.exchangeCode: No client_id passed\"),Promise.reject(new Error(\"A client_id is required\"))):(o.Log.error(\"TokenClient.exchangeCode: No code_verifier passed\"),Promise.reject(new Error(\"A code_verifier is required\"))):(o.Log.error(\"TokenClient.exchangeCode: No redirect_uri passed\"),Promise.reject(new Error(\"A redirect_uri is required\"))):(o.Log.error(\"TokenClient.exchangeCode: No code passed\"),Promise.reject(new Error(\"A code is required\")))},t.prototype.exchangeRefreshToken=function t(){var e=this,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};(r=Object.assign({},r)).grant_type=r.grant_type||\"refresh_token\",r.client_id=r.client_id||this._settings.client_id,r.client_secret=r.client_secret||this._settings.client_secret;var n=void 0,i=r._client_authentication||this._settings._client_authentication;return delete r._client_authentication,r.refresh_token?r.client_id?(\"client_secret_basic\"==i&&(n=r.client_id+\":\"+r.client_secret,delete r.client_id,delete r.client_secret),this._metadataService.getTokenEndpoint(!1).then((function(t){return o.Log.debug(\"TokenClient.exchangeRefreshToken: Received token endpoint\"),e._jsonService.postForm(t,r,n).then((function(t){return o.Log.debug(\"TokenClient.exchangeRefreshToken: response received\"),t}))}))):(o.Log.error(\"TokenClient.exchangeRefreshToken: No client_id passed\"),Promise.reject(new Error(\"A client_id is required\"))):(o.Log.error(\"TokenClient.exchangeRefreshToken: No refresh_token passed\"),Promise.reject(new Error(\"A refresh_token is required\")))},t}()},function(t,e,r){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.ErrorResponse=void 0;var n=r(0);function i(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}function o(t,e){if(!t)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!e||\"object\"!=typeof e&&\"function\"!=typeof e?t:e}e.ErrorResponse=function(t){function e(){var r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},s=r.error,a=r.error_description,u=r.error_uri,c=r.state,h=r.session_state;if(i(this,e),!s)throw n.Log.error(\"No error passed to ErrorResponse\"),new Error(\"error\");var l=o(this,t.call(this,a||s));return l.name=\"ErrorResponse\",l.error=s,l.error_description=a,l.error_uri=u,l.state=c,l.session_state=h,l}return function r(t,e){if(\"function\"!=typeof e&&null!==e)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,t),e}(Error)},function(t,e,r){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.SigninState=void 0;var n=function(){function t(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}return function(e,r,n){return r&&t(e.prototype,r),n&&t(e,n),e}}(),i=r(0),o=r(9),s=r(4),a=function u(t){return t&&t.__esModule?t:{default:t}}(r(14));function c(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}function h(t,e){if(!t)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!e||\"object\"!=typeof e&&\"function\"!=typeof e?t:e}e.SigninState=function(t){function e(){var r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=r.nonce,i=r.authority,o=r.client_id,u=r.redirect_uri,l=r.code_verifier,f=r.response_mode,g=r.client_secret,d=r.scope,p=r.extraTokenParams,v=r.skipUserInfo;c(this,e);var y=h(this,t.call(this,arguments[0]));if(!0===n?y._nonce=(0,a.default)():n&&(y._nonce=n),!0===l?y._code_verifier=(0,a.default)()+(0,a.default)()+(0,a.default)():l&&(y._code_verifier=l),y.code_verifier){var m=s.JoseUtil.hashString(y.code_verifier,\"SHA256\");y._code_challenge=s.JoseUtil.hexToBase64Url(m)}return y._redirect_uri=u,y._authority=i,y._client_id=o,y._response_mode=f,y._client_secret=g,y._scope=d,y._extraTokenParams=p,y._skipUserInfo=v,y}return function r(t,e){if(\"function\"!=typeof e&&null!==e)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,t),e.prototype.toStorageString=function t(){return i.Log.debug(\"SigninState.toStorageString\"),JSON.stringify({id:this.id,data:this.data,created:this.created,request_type:this.request_type,nonce:this.nonce,code_verifier:this.code_verifier,redirect_uri:this.redirect_uri,authority:this.authority,client_id:this.client_id,response_mode:this.response_mode,client_secret:this.client_secret,scope:this.scope,extraTokenParams:this.extraTokenParams,skipUserInfo:this.skipUserInfo})},e.fromStorageString=function t(r){return i.Log.debug(\"SigninState.fromStorageString\"),new e(JSON.parse(r))},n(e,[{key:\"nonce\",get:function t(){return this._nonce}},{key:\"authority\",get:function t(){return this._authority}},{key:\"client_id\",get:function t(){return this._client_id}},{key:\"redirect_uri\",get:function t(){return this._redirect_uri}},{key:\"code_verifier\",get:function t(){return this._code_verifier}},{key:\"code_challenge\",get:function t(){return this._code_challenge}},{key:\"response_mode\",get:function t(){return this._response_mode}},{key:\"client_secret\",get:function t(){return this._client_secret}},{key:\"scope\",get:function t(){return this._scope}},{key:\"extraTokenParams\",get:function t(){return this._extraTokenParams}},{key:\"skipUserInfo\",get:function t(){return this._skipUserInfo}}]),e}(o.State)},function(t,e,r){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.default=function n(){return(\"undefined\"!=i&&null!==i&&void 0!==i.getRandomValues?o:s)().replace(/-/g,\"\")};var i=\"undefined\"!=typeof window?window.crypto||window.msCrypto:null;function o(){return([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g,(function(t){return(t^i.getRandomValues(new Uint8Array(1))[0]&15>>t/4).toString(16)}))}function s(){return([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g,(function(t){return(t^16*Math.random()>>t/4).toString(16)}))}t.exports=e.default},function(t,e,r){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.User=void 0;var n=function(){function t(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}return function(e,r,n){return r&&t(e.prototype,r),n&&t(e,n),e}}(),i=r(0);e.User=function(){function t(e){var r=e.id_token,n=e.session_state,i=e.access_token,o=e.refresh_token,s=e.token_type,a=e.scope,u=e.profile,c=e.expires_at,h=e.state;!function l(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),this.id_token=r,this.session_state=n,this.access_token=i,this.refresh_token=o,this.token_type=s,this.scope=a,this.profile=u,this.expires_at=c,this.state=h}return t.prototype.toStorageString=function t(){return i.Log.debug(\"User.toStorageString\"),JSON.stringify({id_token:this.id_token,session_state:this.session_state,access_token:this.access_token,refresh_token:this.refresh_token,token_type:this.token_type,scope:this.scope,profile:this.profile,expires_at:this.expires_at})},t.fromStorageString=function e(r){return i.Log.debug(\"User.fromStorageString\"),new t(JSON.parse(r))},n(t,[{key:\"expires_in\",get:function t(){if(this.expires_at){var e=parseInt(Date.now()/1e3);return this.expires_at-e}},set:function t(e){var r=parseInt(e);if(\"number\"==typeof r&&r>0){var n=parseInt(Date.now()/1e3);this.expires_at=n+r}}},{key:\"expired\",get:function t(){var e=this.expires_in;if(void 0!==e)return e<=0}},{key:\"scopes\",get:function t(){return(this.scope||\"\").split(\" \")}}]),t}()},function(t,e,r){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.AccessTokenEvents=void 0;var n=r(0),i=r(46);function o(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}e.AccessTokenEvents=function(){function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=e.accessTokenExpiringNotificationTime,n=void 0===r?60:r,s=e.accessTokenExpiringTimer,a=void 0===s?new i.Timer(\"Access token expiring\"):s,u=e.accessTokenExpiredTimer,c=void 0===u?new i.Timer(\"Access token expired\"):u;o(this,t),this._accessTokenExpiringNotificationTime=n,this._accessTokenExpiring=a,this._accessTokenExpired=c}return t.prototype.load=function t(e){if(e.access_token&&void 0!==e.expires_in){var r=e.expires_in;if(n.Log.debug(\"AccessTokenEvents.load: access token present, remaining duration:\",r),r>0){var i=r-this._accessTokenExpiringNotificationTime;i<=0&&(i=1),n.Log.debug(\"AccessTokenEvents.load: registering expiring timer in:\",i),this._accessTokenExpiring.init(i)}else n.Log.debug(\"AccessTokenEvents.load: canceling existing expiring timer becase we're past expiration.\"),this._accessTokenExpiring.cancel();var o=r+1;n.Log.debug(\"AccessTokenEvents.load: registering expired timer in:\",o),this._accessTokenExpired.init(o)}else this._accessTokenExpiring.cancel(),this._accessTokenExpired.cancel()},t.prototype.unload=function t(){n.Log.debug(\"AccessTokenEvents.unload: canceling existing access token timers\"),this._accessTokenExpiring.cancel(),this._accessTokenExpired.cancel()},t.prototype.addAccessTokenExpiring=function t(e){this._accessTokenExpiring.addHandler(e)},t.prototype.removeAccessTokenExpiring=function t(e){this._accessTokenExpiring.removeHandler(e)},t.prototype.addAccessTokenExpired=function t(e){this._accessTokenExpired.addHandler(e)},t.prototype.removeAccessTokenExpired=function t(e){this._accessTokenExpired.removeHandler(e)},t}()},function(t,e,r){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.Event=void 0;var n=r(0);e.Event=function(){function t(e){!function r(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),this._name=e,this._callbacks=[]}return t.prototype.addHandler=function t(e){this._callbacks.push(e)},t.prototype.removeHandler=function t(e){var r=this._callbacks.findIndex((function(t){return t===e}));r>=0&&this._callbacks.splice(r,1)},t.prototype.raise=function t(){n.Log.debug(\"Event: Raising event: \"+this._name);for(var e=0;e<this._callbacks.length;e++){var r;(r=this._callbacks)[e].apply(r,arguments)}},t}()},function(t,e,r){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.SessionMonitor=void 0;var n=function(){function t(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}return function(e,r,n){return r&&t(e.prototype,r),n&&t(e,n),e}}(),i=r(0),o=r(19),s=r(1);function a(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}e.SessionMonitor=function(){function t(e){var r=this,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:o.CheckSessionIFrame,u=arguments.length>2&&void 0!==arguments[2]?arguments[2]:s.Global.timer;if(a(this,t),!e)throw i.Log.error(\"SessionMonitor.ctor: No user manager passed to SessionMonitor\"),new Error(\"userManager\");this._userManager=e,this._CheckSessionIFrameCtor=n,this._timer=u,this._userManager.events.addUserLoaded(this._start.bind(this)),this._userManager.events.addUserUnloaded(this._stop.bind(this)),Promise.resolve(this._userManager.getUser().then((function(t){t?r._start(t):r._settings.monitorAnonymousSession&&r._userManager.querySessionStatus().then((function(t){var e={session_state:t.session_state};t.sub&&t.sid&&(e.profile={sub:t.sub,sid:t.sid}),r._start(e)})).catch((function(t){i.Log.error(\"SessionMonitor ctor: error from querySessionStatus:\",t.message)}))})).catch((function(t){i.Log.error(\"SessionMonitor ctor: error from getUser:\",t.message)})))}return t.prototype._start=function t(e){var r=this,n=e.session_state;n&&(e.profile?(this._sub=e.profile.sub,this._sid=e.profile.sid,i.Log.debug(\"SessionMonitor._start: session_state:\",n,\", sub:\",this._sub)):(this._sub=void 0,this._sid=void 0,i.Log.debug(\"SessionMonitor._start: session_state:\",n,\", anonymous user\")),this._checkSessionIFrame?this._checkSessionIFrame.start(n):this._metadataService.getCheckSessionIframe().then((function(t){if(t){i.Log.debug(\"SessionMonitor._start: Initializing check session iframe\");var e=r._client_id,o=r._checkSessionInterval,s=r._stopCheckSessionOnError;r._checkSessionIFrame=new r._CheckSessionIFrameCtor(r._callback.bind(r),e,t,o,s),r._checkSessionIFrame.load().then((function(){r._checkSessionIFrame.start(n)}))}else i.Log.warn(\"SessionMonitor._start: No check session iframe found in the metadata\")})).catch((function(t){i.Log.error(\"SessionMonitor._start: Error from getCheckSessionIframe:\",t.message)})))},t.prototype._stop=function t(){var e=this;if(this._sub=void 0,this._sid=void 0,this._checkSessionIFrame&&(i.Log.debug(\"SessionMonitor._stop\"),this._checkSessionIFrame.stop()),this._settings.monitorAnonymousSession)var r=this._timer.setInterval((function(){e._timer.clearInterval(r),e._userManager.querySessionStatus().then((function(t){var r={session_state:t.session_state};t.sub&&t.sid&&(r.profile={sub:t.sub,sid:t.sid}),e._start(r)})).catch((function(t){i.Log.error(\"SessionMonitor: error from querySessionStatus:\",t.message)}))}),1e3)},t.prototype._callback=function t(){var e=this;this._userManager.querySessionStatus().then((function(t){var r=!0;t?t.sub===e._sub?(r=!1,e._checkSessionIFrame.start(t.session_state),t.sid===e._sid?i.Log.debug(\"SessionMonitor._callback: Same sub still logged in at OP, restarting check session iframe; session_state:\",t.session_state):(i.Log.debug(\"SessionMonitor._callback: Same sub still logged in at OP, session state has changed, restarting check session iframe; session_state:\",t.session_state),e._userManager.events._raiseUserSessionChanged())):i.Log.debug(\"SessionMonitor._callback: Different subject signed into OP:\",t.sub):i.Log.debug(\"SessionMonitor._callback: Subject no longer signed into OP\"),r&&(e._sub?(i.Log.debug(\"SessionMonitor._callback: SessionMonitor._callback; raising signed out event\"),e._userManager.events._raiseUserSignedOut()):(i.Log.debug(\"SessionMonitor._callback: SessionMonitor._callback; raising signed in event\"),e._userManager.events._raiseUserSignedIn()))})).catch((function(t){e._sub&&(i.Log.debug(\"SessionMonitor._callback: Error calling queryCurrentSigninSession; raising signed out event\",t.message),e._userManager.events._raiseUserSignedOut())}))},n(t,[{key:\"_settings\",get:function t(){return this._userManager.settings}},{key:\"_metadataService\",get:function t(){return this._userManager.metadataService}},{key:\"_client_id\",get:function t(){return this._settings.client_id}},{key:\"_checkSessionInterval\",get:function t(){return this._settings.checkSessionInterval}},{key:\"_stopCheckSessionOnError\",get:function t(){return this._settings.stopCheckSessionOnError}}]),t}()},function(t,e,r){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.CheckSessionIFrame=void 0;var n=r(0);function i(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}e.CheckSessionIFrame=function(){function t(e,r,n,o){var s=!(arguments.length>4&&void 0!==arguments[4])||arguments[4];i(this,t),this._callback=e,this._client_id=r,this._url=n,this._interval=o||2e3,this._stopOnError=s;var a=n.indexOf(\"/\",n.indexOf(\"//\")+2);this._frame_origin=n.substr(0,a),this._frame=window.document.createElement(\"iframe\"),this._frame.style.visibility=\"hidden\",this._frame.style.position=\"absolute\",this._frame.style.display=\"none\",this._frame.width=0,this._frame.height=0,this._frame.src=n}return t.prototype.load=function t(){var e=this;return new Promise((function(t){e._frame.onload=function(){t()},window.document.body.appendChild(e._frame),e._boundMessageEvent=e._message.bind(e),window.addEventListener(\"message\",e._boundMessageEvent,!1)}))},t.prototype._message=function t(e){e.origin===this._frame_origin&&e.source===this._frame.contentWindow&&(\"error\"===e.data?(n.Log.error(\"CheckSessionIFrame: error message from check session op iframe\"),this._stopOnError&&this.stop()):\"changed\"===e.data?(n.Log.debug(\"CheckSessionIFrame: changed message from check session op iframe\"),this.stop(),this._callback()):n.Log.debug(\"CheckSessionIFrame: \"+e.data+\" message from check session op iframe\"))},t.prototype.start=function t(e){var r=this;if(this._session_state!==e){n.Log.debug(\"CheckSessionIFrame.start\"),this.stop(),this._session_state=e;var i=function t(){r._frame.contentWindow.postMessage(r._client_id+\" \"+r._session_state,r._frame_origin)};i(),this._timer=window.setInterval(i,this._interval)}},t.prototype.stop=function t(){this._session_state=null,this._timer&&(n.Log.debug(\"CheckSessionIFrame.stop\"),window.clearInterval(this._timer),this._timer=null)},t}()},function(t,e,r){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.TokenRevocationClient=void 0;var n=r(0),i=r(2),o=r(1);function s(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}var a=\"access_token\",u=\"refresh_token\";e.TokenRevocationClient=function(){function t(e){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:o.Global.XMLHttpRequest,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:i.MetadataService;if(s(this,t),!e)throw n.Log.error(\"TokenRevocationClient.ctor: No settings provided\"),new Error(\"No settings provided.\");this._settings=e,this._XMLHttpRequestCtor=r,this._metadataService=new a(this._settings)}return t.prototype.revoke=function t(e,r){var i=this,o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:\"access_token\";if(!e)throw n.Log.error(\"TokenRevocationClient.revoke: No token provided\"),new Error(\"No token provided.\");if(o!==a&&o!=u)throw n.Log.error(\"TokenRevocationClient.revoke: Invalid token type\"),new Error(\"Invalid token type.\");return this._metadataService.getRevocationEndpoint().then((function(t){if(t){n.Log.debug(\"TokenRevocationClient.revoke: Revoking \"+o);var s=i._settings.client_id,a=i._settings.client_secret;return i._revoke(t,s,a,e,o)}if(r)throw n.Log.error(\"TokenRevocationClient.revoke: Revocation not supported\"),new Error(\"Revocation not supported\")}))},t.prototype._revoke=function t(e,r,i,o,s){var a=this;return new Promise((function(t,u){var c=new a._XMLHttpRequestCtor;c.open(\"POST\",e),c.onload=function(){n.Log.debug(\"TokenRevocationClient.revoke: HTTP response received, status\",c.status),200===c.status?t():u(Error(c.statusText+\" (\"+c.status+\")\"))},c.onerror=function(){n.Log.debug(\"TokenRevocationClient.revoke: Network Error.\"),u(\"Network Error\")};var h=\"client_id=\"+encodeURIComponent(r);i&&(h+=\"&client_secret=\"+encodeURIComponent(i)),h+=\"&token_type_hint=\"+encodeURIComponent(s),h+=\"&token=\"+encodeURIComponent(o),c.setRequestHeader(\"Content-Type\",\"application/x-www-form-urlencoded\"),c.send(h)}))},t}()},function(t,e,r){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.CordovaPopupWindow=void 0;var n=function(){function t(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}return function(e,r,n){return r&&t(e.prototype,r),n&&t(e,n),e}}(),i=r(0);e.CordovaPopupWindow=function(){function t(e){var r=this;!function n(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),this._promise=new Promise((function(t,e){r._resolve=t,r._reject=e})),this.features=e.popupWindowFeatures||\"location=no,toolbar=no,zoom=no\",this.target=e.popupWindowTarget||\"_blank\",this.redirect_uri=e.startUrl,i.Log.debug(\"CordovaPopupWindow.ctor: redirect_uri: \"+this.redirect_uri)}return t.prototype._isInAppBrowserInstalled=function t(e){return[\"cordova-plugin-inappbrowser\",\"cordova-plugin-inappbrowser.inappbrowser\",\"org.apache.cordova.inappbrowser\"].some((function(t){return e.hasOwnProperty(t)}))},t.prototype.navigate=function t(e){if(e&&e.url){if(!window.cordova)return this._error(\"cordova is undefined\");var r=window.cordova.require(\"cordova/plugin_list\").metadata;if(!1===this._isInAppBrowserInstalled(r))return this._error(\"InAppBrowser plugin not found\");this._popup=cordova.InAppBrowser.open(e.url,this.target,this.features),this._popup?(i.Log.debug(\"CordovaPopupWindow.navigate: popup successfully created\"),this._exitCallbackEvent=this._exitCallback.bind(this),this._loadStartCallbackEvent=this._loadStartCallback.bind(this),this._popup.addEventListener(\"exit\",this._exitCallbackEvent,!1),this._popup.addEventListener(\"loadstart\",this._loadStartCallbackEvent,!1)):this._error(\"Error opening popup window\")}else this._error(\"No url provided\");return this.promise},t.prototype._loadStartCallback=function t(e){0===e.url.indexOf(this.redirect_uri)&&this._success({url:e.url})},t.prototype._exitCallback=function t(e){this._error(e)},t.prototype._success=function t(e){this._cleanup(),i.Log.debug(\"CordovaPopupWindow: Successful response from cordova popup window\"),this._resolve(e)},t.prototype._error=function t(e){this._cleanup(),i.Log.error(e),this._reject(new Error(e))},t.prototype.close=function t(){this._cleanup()},t.prototype._cleanup=function t(){this._popup&&(i.Log.debug(\"CordovaPopupWindow: cleaning up popup\"),this._popup.removeEventListener(\"exit\",this._exitCallbackEvent,!1),this._popup.removeEventListener(\"loadstart\",this._loadStartCallbackEvent,!1),this._popup.close()),this._popup=null},n(t,[{key:\"promise\",get:function t(){return this._promise}}]),t}()},function(t,e,r){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0});var n=r(0),i=r(10),o=r(5),s=r(6),a=r(37),u=r(38),c=r(16),h=r(2),l=r(48),f=r(49),g=r(19),d=r(20),p=r(18),v=r(1),y=r(15),m=r(50);e.default={Version:m.Version,Log:n.Log,OidcClient:i.OidcClient,OidcClientSettings:o.OidcClientSettings,WebStorageStateStore:s.WebStorageStateStore,InMemoryWebStorage:a.InMemoryWebStorage,UserManager:u.UserManager,AccessTokenEvents:c.AccessTokenEvents,MetadataService:h.MetadataService,CordovaPopupNavigator:l.CordovaPopupNavigator,CordovaIFrameNavigator:f.CordovaIFrameNavigator,CheckSessionIFrame:g.CheckSessionIFrame,TokenRevocationClient:d.TokenRevocationClient,SessionMonitor:p.SessionMonitor,Global:v.Global,User:y.User},t.exports=e.default},function(t,e,r){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0});e.ClockService=function(){function t(){!function e(t,r){if(!(t instanceof r))throw new TypeError(\"Cannot call a class as a function\")}(this,t)}return t.prototype.getEpochTime=function t(){return Promise.resolve(Date.now()/1e3|0)},t}()},function(t,e,r){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.ResponseValidator=void 0;var n=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t},i=r(0),o=r(2),s=r(25),a=r(11),u=r(12),c=r(4);function h(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}var l=[\"nonce\",\"at_hash\",\"iat\",\"nbf\",\"exp\",\"aud\",\"iss\",\"c_hash\"];e.ResponseValidator=function(){function t(e){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:o.MetadataService,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:s.UserInfoService,u=arguments.length>3&&void 0!==arguments[3]?arguments[3]:c.JoseUtil,l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:a.TokenClient;if(h(this,t),!e)throw i.Log.error(\"ResponseValidator.ctor: No settings passed to ResponseValidator\"),new Error(\"settings\");this._settings=e,this._metadataService=new r(this._settings),this._userInfoService=new n(this._settings),this._joseUtil=u,this._tokenClient=new l(this._settings)}return t.prototype.validateSigninResponse=function t(e,r){var n=this;return i.Log.debug(\"ResponseValidator.validateSigninResponse\"),this._processSigninParams(e,r).then((function(t){return i.Log.debug(\"ResponseValidator.validateSigninResponse: state processed\"),n._validateTokens(e,t).then((function(t){return i.Log.debug(\"ResponseValidator.validateSigninResponse: tokens validated\"),n._processClaims(e,t).then((function(t){return i.Log.debug(\"ResponseValidator.validateSigninResponse: claims processed\"),t}))}))}))},t.prototype.validateSignoutResponse=function t(e,r){return e.id!==r.state?(i.Log.error(\"ResponseValidator.validateSignoutResponse: State does not match\"),Promise.reject(new Error(\"State does not match\"))):(i.Log.debug(\"ResponseValidator.validateSignoutResponse: state validated\"),r.state=e.data,r.error?(i.Log.warn(\"ResponseValidator.validateSignoutResponse: Response was error\",r.error),Promise.reject(new u.ErrorResponse(r))):Promise.resolve(r))},t.prototype._processSigninParams=function t(e,r){if(e.id!==r.state)return i.Log.error(\"ResponseValidator._processSigninParams: State does not match\"),Promise.reject(new Error(\"State does not match\"));if(!e.client_id)return i.Log.error(\"ResponseValidator._processSigninParams: No client_id on state\"),Promise.reject(new Error(\"No client_id on state\"));if(!e.authority)return i.Log.error(\"ResponseValidator._processSigninParams: No authority on state\"),Promise.reject(new Error(\"No authority on state\"));if(this._settings.authority){if(this._settings.authority&&this._settings.authority!==e.authority)return i.Log.error(\"ResponseValidator._processSigninParams: authority mismatch on settings vs. signin state\"),Promise.reject(new Error(\"authority mismatch on settings vs. signin state\"))}else this._settings.authority=e.authority;if(this._settings.client_id){if(this._settings.client_id&&this._settings.client_id!==e.client_id)return i.Log.error(\"ResponseValidator._processSigninParams: client_id mismatch on settings vs. signin state\"),Promise.reject(new Error(\"client_id mismatch on settings vs. signin state\"))}else this._settings.client_id=e.client_id;return i.Log.debug(\"ResponseValidator._processSigninParams: state validated\"),r.state=e.data,r.error?(i.Log.warn(\"ResponseValidator._processSigninParams: Response was error\",r.error),Promise.reject(new u.ErrorResponse(r))):e.nonce&&!r.id_token?(i.Log.error(\"ResponseValidator._processSigninParams: Expecting id_token in response\"),Promise.reject(new Error(\"No id_token in response\"))):!e.nonce&&r.id_token?(i.Log.error(\"ResponseValidator._processSigninParams: Not expecting id_token in response\"),Promise.reject(new Error(\"Unexpected id_token in response\"))):e.code_verifier&&!r.code?(i.Log.error(\"ResponseValidator._processSigninParams: Expecting code in response\"),Promise.reject(new Error(\"No code in response\"))):!e.code_verifier&&r.code?(i.Log.error(\"ResponseValidator._processSigninParams: Not expecting code in response\"),Promise.reject(new Error(\"Unexpected code in response\"))):(r.scope||(r.scope=e.scope),Promise.resolve(r))},t.prototype._processClaims=function t(e,r){var n=this;if(r.isOpenIdConnect){if(i.Log.debug(\"ResponseValidator._processClaims: response is OIDC, processing claims\"),r.profile=this._filterProtocolClaims(r.profile),!0!==e.skipUserInfo&&this._settings.loadUserInfo&&r.access_token)return i.Log.debug(\"ResponseValidator._processClaims: loading user info\"),this._userInfoService.getClaims(r.access_token).then((function(t){return i.Log.debug(\"ResponseValidator._processClaims: user info claims received from user info endpoint\"),t.sub!==r.profile.sub?(i.Log.error(\"ResponseValidator._processClaims: sub from user info endpoint does not match sub in id_token\"),Promise.reject(new Error(\"sub from user info endpoint does not match sub in id_token\"))):(r.profile=n._mergeClaims(r.profile,t),i.Log.debug(\"ResponseValidator._processClaims: user info claims received, updated profile:\",r.profile),r)}));i.Log.debug(\"ResponseValidator._processClaims: not loading user info\")}else i.Log.debug(\"ResponseValidator._processClaims: response is not OIDC, not processing claims\");return Promise.resolve(r)},t.prototype._mergeClaims=function t(e,r){var i=Object.assign({},e);for(var o in r){var s=r[o];Array.isArray(s)||(s=[s]);for(var a=0;a<s.length;a++){var u=s[a];i[o]?Array.isArray(i[o])?i[o].indexOf(u)<0&&i[o].push(u):i[o]!==u&&(\"object\"===(void 0===u?\"undefined\":n(u))&&this._settings.mergeClaims?i[o]=this._mergeClaims(i[o],u):i[o]=[i[o],u]):i[o]=u}}return i},t.prototype._filterProtocolClaims=function t(e){i.Log.debug(\"ResponseValidator._filterProtocolClaims, incoming claims:\",e);var r=Object.assign({},e);return this._settings._filterProtocolClaims?(l.forEach((function(t){delete r[t]})),i.Log.debug(\"ResponseValidator._filterProtocolClaims: protocol claims filtered\",r)):i.Log.debug(\"ResponseValidator._filterProtocolClaims: protocol claims not filtered\"),r},t.prototype._validateTokens=function t(e,r){return r.code?(i.Log.debug(\"ResponseValidator._validateTokens: Validating code\"),this._processCode(e,r)):r.id_token?r.access_token?(i.Log.debug(\"ResponseValidator._validateTokens: Validating id_token and access_token\"),this._validateIdTokenAndAccessToken(e,r)):(i.Log.debug(\"ResponseValidator._validateTokens: Validating id_token\"),this._validateIdToken(e,r)):(i.Log.debug(\"ResponseValidator._validateTokens: No code to process or id_token to validate\"),Promise.resolve(r))},t.prototype._processCode=function t(e,r){var o=this,s={client_id:e.client_id,client_secret:e.client_secret,code:r.code,redirect_uri:e.redirect_uri,code_verifier:e.code_verifier};return e.extraTokenParams&&\"object\"===n(e.extraTokenParams)&&Object.assign(s,e.extraTokenParams),this._tokenClient.exchangeCode(s).then((function(t){for(var n in t)r[n]=t[n];return r.id_token?(i.Log.debug(\"ResponseValidator._processCode: token response successful, processing id_token\"),o._validateIdTokenAttributes(e,r)):(i.Log.debug(\"ResponseValidator._processCode: token response successful, returning response\"),r)}))},t.prototype._validateIdTokenAttributes=function t(e,r){var n=this;return this._metadataService.getIssuer().then((function(t){var o=e.client_id,s=n._settings.clockSkew;return i.Log.debug(\"ResponseValidator._validateIdTokenAttributes: Validaing JWT attributes; using clock skew (in seconds) of: \",s),n._settings.getEpochTime().then((function(a){return n._joseUtil.validateJwtAttributes(r.id_token,t,o,s,a).then((function(t){return e.nonce&&e.nonce!==t.nonce?(i.Log.error(\"ResponseValidator._validateIdTokenAttributes: Invalid nonce in id_token\"),Promise.reject(new Error(\"Invalid nonce in id_token\"))):t.sub?(r.profile=t,r):(i.Log.error(\"ResponseValidator._validateIdTokenAttributes: No sub present in id_token\"),Promise.reject(new Error(\"No sub present in id_token\")))}))}))}))},t.prototype._validateIdTokenAndAccessToken=function t(e,r){var n=this;return this._validateIdToken(e,r).then((function(t){return n._validateAccessToken(t)}))},t.prototype._getSigningKeyForJwt=function t(e){var r=this;return this._metadataService.getSigningKeys().then((function(t){var n=e.header.kid;if(!t)return i.Log.error(\"ResponseValidator._validateIdToken: No signing keys from metadata\"),Promise.reject(new Error(\"No signing keys from metadata\"));i.Log.debug(\"ResponseValidator._validateIdToken: Received signing keys\");var o=void 0;if(n)o=t.filter((function(t){return t.kid===n}))[0];else{if((t=r._filterByAlg(t,e.header.alg)).length>1)return i.Log.error(\"ResponseValidator._validateIdToken: No kid found in id_token and more than one key found in metadata\"),Promise.reject(new Error(\"No kid found in id_token and more than one key found in metadata\"));o=t[0]}return Promise.resolve(o)}))},t.prototype._getSigningKeyForJwtWithSingleRetry=function t(e){var r=this;return this._getSigningKeyForJwt(e).then((function(t){return t?Promise.resolve(t):(r._metadataService.resetSigningKeys(),r._getSigningKeyForJwt(e))}))},t.prototype._validateIdToken=function t(e,r){var n=this;if(!e.nonce)return i.Log.error(\"ResponseValidator._validateIdToken: No nonce on state\"),Promise.reject(new Error(\"No nonce on state\"));var o=this._joseUtil.parseJwt(r.id_token);return o&&o.header&&o.payload?e.nonce!==o.payload.nonce?(i.Log.error(\"ResponseValidator._validateIdToken: Invalid nonce in id_token\"),Promise.reject(new Error(\"Invalid nonce in id_token\"))):this._metadataService.getIssuer().then((function(t){return i.Log.debug(\"ResponseValidator._validateIdToken: Received issuer\"),n._getSigningKeyForJwtWithSingleRetry(o).then((function(s){if(!s)return i.Log.error(\"ResponseValidator._validateIdToken: No key matching kid or alg found in signing keys\"),Promise.reject(new Error(\"No key matching kid or alg found in signing keys\"));var a=e.client_id,u=n._settings.clockSkew;return i.Log.debug(\"ResponseValidator._validateIdToken: Validaing JWT; using clock skew (in seconds) of: \",u),n._joseUtil.validateJwt(r.id_token,s,t,a,u).then((function(){return i.Log.debug(\"ResponseValidator._validateIdToken: JWT validation successful\"),o.payload.sub?(r.profile=o.payload,r):(i.Log.error(\"ResponseValidator._validateIdToken: No sub present in id_token\"),Promise.reject(new Error(\"No sub present in id_token\")))}))}))})):(i.Log.error(\"ResponseValidator._validateIdToken: Failed to parse id_token\",o),Promise.reject(new Error(\"Failed to parse id_token\")))},t.prototype._filterByAlg=function t(e,r){var n=null;if(r.startsWith(\"RS\"))n=\"RSA\";else if(r.startsWith(\"PS\"))n=\"PS\";else{if(!r.startsWith(\"ES\"))return i.Log.debug(\"ResponseValidator._filterByAlg: alg not supported: \",r),[];n=\"EC\"}return i.Log.debug(\"ResponseValidator._filterByAlg: Looking for keys that match kty: \",n),e=e.filter((function(t){return t.kty===n})),i.Log.debug(\"ResponseValidator._filterByAlg: Number of keys that match kty: \",n,e.length),e},t.prototype._validateAccessToken=function t(e){if(!e.profile)return i.Log.error(\"ResponseValidator._validateAccessToken: No profile loaded from id_token\"),Promise.reject(new Error(\"No profile loaded from id_token\"));if(!e.profile.at_hash)return i.Log.error(\"ResponseValidator._validateAccessToken: No at_hash in id_token\"),Promise.reject(new Error(\"No at_hash in id_token\"));if(!e.id_token)return i.Log.error(\"ResponseValidator._validateAccessToken: No id_token\"),Promise.reject(new Error(\"No id_token\"));var r=this._joseUtil.parseJwt(e.id_token);if(!r||!r.header)return i.Log.error(\"ResponseValidator._validateAccessToken: Failed to parse id_token\",r),Promise.reject(new Error(\"Failed to parse id_token\"));var n=r.header.alg;if(!n||5!==n.length)return i.Log.error(\"ResponseValidator._validateAccessToken: Unsupported alg:\",n),Promise.reject(new Error(\"Unsupported alg: \"+n));var o=n.substr(2,3);if(!o)return i.Log.error(\"ResponseValidator._validateAccessToken: Unsupported alg:\",n,o),Promise.reject(new Error(\"Unsupported alg: \"+n));if(256!==(o=parseInt(o))&&384!==o&&512!==o)return i.Log.error(\"ResponseValidator._validateAccessToken: Unsupported alg:\",n,o),Promise.reject(new Error(\"Unsupported alg: \"+n));var s=\"sha\"+o,a=this._joseUtil.hashString(e.access_token,s);if(!a)return i.Log.error(\"ResponseValidator._validateAccessToken: access_token hash failed:\",s),Promise.reject(new Error(\"Failed to validate at_hash\"));var u=a.substr(0,a.length/2),c=this._joseUtil.hexToBase64Url(u);return c!==e.profile.at_hash?(i.Log.error(\"ResponseValidator._validateAccessToken: Failed to validate at_hash\",c,e.profile.at_hash),Promise.reject(new Error(\"Failed to validate at_hash\"))):(i.Log.debug(\"ResponseValidator._validateAccessToken: success\"),Promise.resolve(e))},t}()},function(t,e,r){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.UserInfoService=void 0;var n=r(7),i=r(2),o=r(0),s=r(4);function a(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}e.UserInfoService=function(){function t(e){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:n.JsonService,u=arguments.length>2&&void 0!==arguments[2]?arguments[2]:i.MetadataService,c=arguments.length>3&&void 0!==arguments[3]?arguments[3]:s.JoseUtil;if(a(this,t),!e)throw o.Log.error(\"UserInfoService.ctor: No settings passed\"),new Error(\"settings\");this._settings=e,this._jsonService=new r(void 0,void 0,this._getClaimsFromJwt.bind(this)),this._metadataService=new u(this._settings),this._joseUtil=c}return t.prototype.getClaims=function t(e){var r=this;return e?this._metadataService.getUserInfoEndpoint().then((function(t){return o.Log.debug(\"UserInfoService.getClaims: received userinfo url\",t),r._jsonService.getJson(t,e).then((function(t){return o.Log.debug(\"UserInfoService.getClaims: claims received\",t),t}))})):(o.Log.error(\"UserInfoService.getClaims: No token passed\"),Promise.reject(new Error(\"A token is required\")))},t.prototype._getClaimsFromJwt=function t(e){var r=this;try{var n=this._joseUtil.parseJwt(e.responseText);if(!n||!n.header||!n.payload)return o.Log.error(\"UserInfoService._getClaimsFromJwt: Failed to parse JWT\",n),Promise.reject(new Error(\"Failed to parse id_token\"));var i=n.header.kid,s=void 0;switch(this._settings.userInfoJwtIssuer){case\"OP\":s=this._metadataService.getIssuer();break;case\"ANY\":s=Promise.resolve(n.payload.iss);break;default:s=Promise.resolve(this._settings.userInfoJwtIssuer)}return s.then((function(t){return o.Log.debug(\"UserInfoService._getClaimsFromJwt: Received issuer:\"+t),r._metadataService.getSigningKeys().then((function(s){if(!s)return o.Log.error(\"UserInfoService._getClaimsFromJwt: No signing keys from metadata\"),Promise.reject(new Error(\"No signing keys from metadata\"));o.Log.debug(\"UserInfoService._getClaimsFromJwt: Received signing keys\");var a=void 0;if(i)a=s.filter((function(t){return t.kid===i}))[0];else{if((s=r._filterByAlg(s,n.header.alg)).length>1)return o.Log.error(\"UserInfoService._getClaimsFromJwt: No kid found in id_token and more than one key found in metadata\"),Promise.reject(new Error(\"No kid found in id_token and more than one key found in metadata\"));a=s[0]}if(!a)return o.Log.error(\"UserInfoService._getClaimsFromJwt: No key matching kid or alg found in signing keys\"),Promise.reject(new Error(\"No key matching kid or alg found in signing keys\"));var u=r._settings.client_id,c=r._settings.clockSkew;return o.Log.debug(\"UserInfoService._getClaimsFromJwt: Validaing JWT; using clock skew (in seconds) of: \",c),r._joseUtil.validateJwt(e.responseText,a,t,u,c,void 0,!0).then((function(){return o.Log.debug(\"UserInfoService._getClaimsFromJwt: JWT validation successful\"),n.payload}))}))}))}catch(t){return o.Log.error(\"UserInfoService._getClaimsFromJwt: Error parsing JWT response\",t.message),void reject(t)}},t.prototype._filterByAlg=function t(e,r){var n=null;if(r.startsWith(\"RS\"))n=\"RSA\";else if(r.startsWith(\"PS\"))n=\"PS\";else{if(!r.startsWith(\"ES\"))return o.Log.debug(\"UserInfoService._filterByAlg: alg not supported: \",r),[];n=\"EC\"}return o.Log.debug(\"UserInfoService._filterByAlg: Looking for keys that match kty: \",n),e=e.filter((function(t){return t.kty===n})),o.Log.debug(\"UserInfoService._filterByAlg: Number of keys that match kty: \",n,e.length),e},t}()},function(t,e,r){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.AllowedSigningAlgs=e.b64tohex=e.hextob64u=e.crypto=e.X509=e.KeyUtil=e.jws=void 0;var n=r(27);e.jws=n.jws,e.KeyUtil=n.KEYUTIL,e.X509=n.X509,e.crypto=n.crypto,e.hextob64u=n.hextob64u,e.b64tohex=n.b64tohex,e.AllowedSigningAlgs=[\"RS256\",\"RS384\",\"RS512\",\"PS256\",\"PS384\",\"PS512\",\"ES256\",\"ES384\",\"ES512\"]},function(t,e,r){\"use strict\";(function(t){Object.defineProperty(e,\"__esModule\",{value:!0});var r=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t},n={userAgent:!1},i={};\n/*!\nCopyright (c) 2011, Yahoo! Inc. All rights reserved.\nCode licensed under the BSD License:\nhttp://developer.yahoo.com/yui/license.html\nversion: 2.9.0\n*/\nif(void 0===o)var o={};o.lang={extend:function t(e,r,i){if(!r||!e)throw new Error(\"YAHOO.lang.extend failed, please check that all dependencies are included.\");var o=function t(){};if(o.prototype=r.prototype,e.prototype=new o,e.prototype.constructor=e,e.superclass=r.prototype,r.prototype.constructor==Object.prototype.constructor&&(r.prototype.constructor=r),i){var s;for(s in i)e.prototype[s]=i[s];var a=function t(){},u=[\"toString\",\"valueOf\"];try{/MSIE/.test(n.userAgent)&&(a=function t(e,r){for(s=0;s<u.length;s+=1){var n=u[s],i=r[n];\"function\"==typeof i&&i!=Object.prototype[n]&&(e[n]=i)}})}catch(t){}a(e.prototype,i)}}};\n/*! CryptoJS v3.1.2 core-fix.js\n * code.google.com/p/crypto-js\n * (c) 2009-2013 by Jeff Mott. All rights reserved.\n * code.google.com/p/crypto-js/wiki/License\n * THIS IS FIX of 'core.js' to fix Hmac issue.\n * https://code.google.com/p/crypto-js/issues/detail?id=84\n * https://crypto-js.googlecode.com/svn-history/r667/branches/3.x/src/core.js\n */\nvar s,a,u,c,h,l,f,g,d,p,v,y=y||(s=Math,u=(a={}).lib={},c=u.Base=function(){function t(){}return{extend:function e(r){t.prototype=this;var n=new t;return r&&n.mixIn(r),n.hasOwnProperty(\"init\")||(n.init=function(){n.$super.init.apply(this,arguments)}),n.init.prototype=n,n.$super=this,n},create:function t(){var e=this.extend();return e.init.apply(e,arguments),e},init:function t(){},mixIn:function t(e){for(var r in e)e.hasOwnProperty(r)&&(this[r]=e[r]);e.hasOwnProperty(\"toString\")&&(this.toString=e.toString)},clone:function t(){return this.init.prototype.extend(this)}}}(),h=u.WordArray=c.extend({init:function t(e,r){e=this.words=e||[],this.sigBytes=null!=r?r:4*e.length},toString:function t(e){return(e||f).stringify(this)},concat:function t(e){var r=this.words,n=e.words,i=this.sigBytes,o=e.sigBytes;if(this.clamp(),i%4)for(var s=0;s<o;s++){var a=n[s>>>2]>>>24-s%4*8&255;r[i+s>>>2]|=a<<24-(i+s)%4*8}else for(s=0;s<o;s+=4)r[i+s>>>2]=n[s>>>2];return this.sigBytes+=o,this},clamp:function t(){var e=this.words,r=this.sigBytes;e[r>>>2]&=4294967295<<32-r%4*8,e.length=s.ceil(r/4)},clone:function t(){var e=c.clone.call(this);return e.words=this.words.slice(0),e},random:function t(e){for(var r=[],n=0;n<e;n+=4)r.push(4294967296*s.random()|0);return new h.init(r,e)}}),l=a.enc={},f=l.Hex={stringify:function t(e){for(var r=e.words,n=e.sigBytes,i=[],o=0;o<n;o++){var s=r[o>>>2]>>>24-o%4*8&255;i.push((s>>>4).toString(16)),i.push((15&s).toString(16))}return i.join(\"\")},parse:function t(e){for(var r=e.length,n=[],i=0;i<r;i+=2)n[i>>>3]|=parseInt(e.substr(i,2),16)<<24-i%8*4;return new h.init(n,r/2)}},g=l.Latin1={stringify:function t(e){for(var r=e.words,n=e.sigBytes,i=[],o=0;o<n;o++){var s=r[o>>>2]>>>24-o%4*8&255;i.push(String.fromCharCode(s))}return i.join(\"\")},parse:function t(e){for(var r=e.length,n=[],i=0;i<r;i++)n[i>>>2]|=(255&e.charCodeAt(i))<<24-i%4*8;return new h.init(n,r)}},d=l.Utf8={stringify:function t(e){try{return decodeURIComponent(escape(g.stringify(e)))}catch(t){throw new Error(\"Malformed UTF-8 data\")}},parse:function t(e){return g.parse(unescape(encodeURIComponent(e)))}},p=u.BufferedBlockAlgorithm=c.extend({reset:function t(){this._data=new h.init,this._nDataBytes=0},_append:function t(e){\"string\"==typeof e&&(e=d.parse(e)),this._data.concat(e),this._nDataBytes+=e.sigBytes},_process:function t(e){var r=this._data,n=r.words,i=r.sigBytes,o=this.blockSize,a=i/(4*o),u=(a=e?s.ceil(a):s.max((0|a)-this._minBufferSize,0))*o,c=s.min(4*u,i);if(u){for(var l=0;l<u;l+=o)this._doProcessBlock(n,l);var f=n.splice(0,u);r.sigBytes-=c}return new h.init(f,c)},clone:function t(){var e=c.clone.call(this);return e._data=this._data.clone(),e},_minBufferSize:0}),u.Hasher=p.extend({cfg:c.extend(),init:function t(e){this.cfg=this.cfg.extend(e),this.reset()},reset:function t(){p.reset.call(this),this._doReset()},update:function t(e){return this._append(e),this._process(),this},finalize:function t(e){return e&&this._append(e),this._doFinalize()},blockSize:16,_createHelper:function t(e){return function(t,r){return new e.init(r).finalize(t)}},_createHmacHelper:function t(e){return function(t,r){return new v.HMAC.init(e,r).finalize(t)}}}),v=a.algo={},a);!function(t){var e,r=(e=y).lib,n=r.Base,i=r.WordArray;(e=e.x64={}).Word=n.extend({init:function t(e,r){this.high=e,this.low=r}}),e.WordArray=n.extend({init:function t(e,r){e=this.words=e||[],this.sigBytes=null!=r?r:8*e.length},toX32:function t(){for(var e=this.words,r=e.length,n=[],o=0;o<r;o++){var s=e[o];n.push(s.high),n.push(s.low)}return i.create(n,this.sigBytes)},clone:function t(){for(var e=n.clone.call(this),r=e.words=this.words.slice(0),i=r.length,o=0;o<i;o++)r[o]=r[o].clone();return e}})}(),function(){var t=y,e=t.lib.WordArray;t.enc.Base64={stringify:function t(e){var r=e.words,n=e.sigBytes,i=this._map;e.clamp(),e=[];for(var o=0;o<n;o+=3)for(var s=(r[o>>>2]>>>24-o%4*8&255)<<16|(r[o+1>>>2]>>>24-(o+1)%4*8&255)<<8|r[o+2>>>2]>>>24-(o+2)%4*8&255,a=0;4>a&&o+.75*a<n;a++)e.push(i.charAt(s>>>6*(3-a)&63));if(r=i.charAt(64))for(;e.length%4;)e.push(r);return e.join(\"\")},parse:function t(r){var n=r.length,i=this._map;(o=i.charAt(64))&&(-1!=(o=r.indexOf(o))&&(n=o));for(var o=[],s=0,a=0;a<n;a++)if(a%4){var u=i.indexOf(r.charAt(a-1))<<a%4*2,c=i.indexOf(r.charAt(a))>>>6-a%4*2;o[s>>>2]|=(u|c)<<24-s%4*8,s++}return e.create(o,s)},_map:\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\"}}(),function(t){for(var e=y,r=(i=e.lib).WordArray,n=i.Hasher,i=e.algo,o=[],s=[],a=function t(e){return 4294967296*(e-(0|e))|0},u=2,c=0;64>c;){var h;t:{h=u;for(var l=t.sqrt(h),f=2;f<=l;f++)if(!(h%f)){h=!1;break t}h=!0}h&&(8>c&&(o[c]=a(t.pow(u,.5))),s[c]=a(t.pow(u,1/3)),c++),u++}var g=[];i=i.SHA256=n.extend({_doReset:function t(){this._hash=new r.init(o.slice(0))},_doProcessBlock:function t(e,r){for(var n=this._hash.words,i=n[0],o=n[1],a=n[2],u=n[3],c=n[4],h=n[5],l=n[6],f=n[7],d=0;64>d;d++){if(16>d)g[d]=0|e[r+d];else{var p=g[d-15],v=g[d-2];g[d]=((p<<25|p>>>7)^(p<<14|p>>>18)^p>>>3)+g[d-7]+((v<<15|v>>>17)^(v<<13|v>>>19)^v>>>10)+g[d-16]}p=f+((c<<26|c>>>6)^(c<<21|c>>>11)^(c<<7|c>>>25))+(c&h^~c&l)+s[d]+g[d],v=((i<<30|i>>>2)^(i<<19|i>>>13)^(i<<10|i>>>22))+(i&o^i&a^o&a),f=l,l=h,h=c,c=u+p|0,u=a,a=o,o=i,i=p+v|0}n[0]=n[0]+i|0,n[1]=n[1]+o|0,n[2]=n[2]+a|0,n[3]=n[3]+u|0,n[4]=n[4]+c|0,n[5]=n[5]+h|0,n[6]=n[6]+l|0,n[7]=n[7]+f|0},_doFinalize:function e(){var r=this._data,n=r.words,i=8*this._nDataBytes,o=8*r.sigBytes;return n[o>>>5]|=128<<24-o%32,n[14+(o+64>>>9<<4)]=t.floor(i/4294967296),n[15+(o+64>>>9<<4)]=i,r.sigBytes=4*n.length,this._process(),this._hash},clone:function t(){var e=n.clone.call(this);return e._hash=this._hash.clone(),e}});e.SHA256=n._createHelper(i),e.HmacSHA256=n._createHmacHelper(i)}(Math),function(){function t(){return n.create.apply(n,arguments)}for(var e=y,r=e.lib.Hasher,n=(o=e.x64).Word,i=o.WordArray,o=e.algo,s=[t(1116352408,3609767458),t(1899447441,602891725),t(3049323471,3964484399),t(3921009573,2173295548),t(961987163,4081628472),t(1508970993,3053834265),t(2453635748,2937671579),t(2870763221,3664609560),t(3624381080,2734883394),t(310598401,1164996542),t(607225278,1323610764),t(1426881987,3590304994),t(1925078388,4068182383),t(2162078206,991336113),t(2614888103,633803317),t(3248222580,3479774868),t(3835390401,2666613458),t(4022224774,944711139),t(264347078,2341262773),t(604807628,2007800933),t(770255983,1495990901),t(1249150122,1856431235),t(1555081692,3175218132),t(1996064986,2198950837),t(2554220882,3999719339),t(2821834349,766784016),t(2952996808,2566594879),t(3210313671,3203337956),t(3336571891,1034457026),t(3584528711,2466948901),t(113926993,3758326383),t(338241895,168717936),t(666307205,1188179964),t(773529912,1546045734),t(1294757372,1522805485),t(1396182291,2643833823),t(1695183700,2343527390),t(1986661051,1014477480),t(2177026350,1206759142),t(2456956037,344077627),t(2730485921,1290863460),t(2820302411,3158454273),t(3259730800,3505952657),t(3345764771,106217008),t(3516065817,3606008344),t(3600352804,1432725776),t(4094571909,1467031594),t(275423344,851169720),t(430227734,3100823752),t(506948616,1363258195),t(659060556,3750685593),t(883997877,3785050280),t(958139571,3318307427),t(1322822218,3812723403),t(1537002063,2003034995),t(1747873779,3602036899),t(1955562222,1575990012),t(2024104815,1125592928),t(2227730452,2716904306),t(2361852424,442776044),t(2428436474,593698344),t(2756734187,3733110249),t(3204031479,2999351573),t(3329325298,3815920427),t(3391569614,3928383900),t(3515267271,566280711),t(3940187606,3454069534),t(4118630271,4000239992),t(116418474,1914138554),t(174292421,2731055270),t(289380356,3203993006),t(460393269,320620315),t(685471733,587496836),t(852142971,1086792851),t(1017036298,365543100),t(1126000580,2618297676),t(1288033470,3409855158),t(1501505948,4234509866),t(1607167915,987167468),t(1816402316,1246189591)],a=[],u=0;80>u;u++)a[u]=t();o=o.SHA512=r.extend({_doReset:function t(){this._hash=new i.init([new n.init(1779033703,4089235720),new n.init(3144134277,2227873595),new n.init(1013904242,4271175723),new n.init(2773480762,1595750129),new n.init(1359893119,2917565137),new n.init(2600822924,725511199),new n.init(528734635,4215389547),new n.init(1541459225,327033209)])},_doProcessBlock:function t(e,r){for(var n=(f=this._hash.words)[0],i=f[1],o=f[2],u=f[3],c=f[4],h=f[5],l=f[6],f=f[7],g=n.high,d=n.low,p=i.high,v=i.low,y=o.high,m=o.low,_=u.high,S=u.low,b=c.high,w=c.low,F=h.high,E=h.low,x=l.high,A=l.low,k=f.high,P=f.low,C=g,T=d,R=p,I=v,D=y,L=m,N=_,U=S,B=b,O=w,j=F,M=E,H=x,V=A,K=k,q=P,J=0;80>J;J++){var W=a[J];if(16>J)var z=W.high=0|e[r+2*J],Y=W.low=0|e[r+2*J+1];else{z=((Y=(z=a[J-15]).high)>>>1|(G=z.low)<<31)^(Y>>>8|G<<24)^Y>>>7;var G=(G>>>1|Y<<31)^(G>>>8|Y<<24)^(G>>>7|Y<<25),X=((Y=(X=a[J-2]).high)>>>19|($=X.low)<<13)^(Y<<3|$>>>29)^Y>>>6,$=($>>>19|Y<<13)^($<<3|Y>>>29)^($>>>6|Y<<26),Q=(Y=a[J-7]).high,Z=(tt=a[J-16]).high,tt=tt.low;z=(z=(z=z+Q+((Y=G+Y.low)>>>0<G>>>0?1:0))+X+((Y=Y+$)>>>0<$>>>0?1:0))+Z+((Y=Y+tt)>>>0<tt>>>0?1:0);W.high=z,W.low=Y}Q=B&j^~B&H,tt=O&M^~O&V,W=C&R^C&D^R&D;var et=T&I^T&L^I&L,rt=(G=(C>>>28|T<<4)^(C<<30|T>>>2)^(C<<25|T>>>7),X=(T>>>28|C<<4)^(T<<30|C>>>2)^(T<<25|C>>>7),($=s[J]).high),nt=$.low;Z=K+((B>>>14|O<<18)^(B>>>18|O<<14)^(B<<23|O>>>9))+(($=q+((O>>>14|B<<18)^(O>>>18|B<<14)^(O<<23|B>>>9)))>>>0<q>>>0?1:0),K=H,q=V,H=j,V=M,j=B,M=O,B=N+(Z=(Z=(Z=Z+Q+(($=$+tt)>>>0<tt>>>0?1:0))+rt+(($=$+nt)>>>0<nt>>>0?1:0))+z+(($=$+Y)>>>0<Y>>>0?1:0))+((O=U+$|0)>>>0<U>>>0?1:0)|0,N=D,U=L,D=R,L=I,R=C,I=T,C=Z+(W=G+W+((Y=X+et)>>>0<X>>>0?1:0))+((T=$+Y|0)>>>0<$>>>0?1:0)|0}d=n.low=d+T,n.high=g+C+(d>>>0<T>>>0?1:0),v=i.low=v+I,i.high=p+R+(v>>>0<I>>>0?1:0),m=o.low=m+L,o.high=y+D+(m>>>0<L>>>0?1:0),S=u.low=S+U,u.high=_+N+(S>>>0<U>>>0?1:0),w=c.low=w+O,c.high=b+B+(w>>>0<O>>>0?1:0),E=h.low=E+M,h.high=F+j+(E>>>0<M>>>0?1:0),A=l.low=A+V,l.high=x+H+(A>>>0<V>>>0?1:0),P=f.low=P+q,f.high=k+K+(P>>>0<q>>>0?1:0)},_doFinalize:function t(){var e=this._data,r=e.words,n=8*this._nDataBytes,i=8*e.sigBytes;return r[i>>>5]|=128<<24-i%32,r[30+(i+128>>>10<<5)]=Math.floor(n/4294967296),r[31+(i+128>>>10<<5)]=n,e.sigBytes=4*r.length,this._process(),this._hash.toX32()},clone:function t(){var e=r.clone.call(this);return e._hash=this._hash.clone(),e},blockSize:32}),e.SHA512=r._createHelper(o),e.HmacSHA512=r._createHmacHelper(o)}(),function(){var t=y,e=(i=t.x64).Word,r=i.WordArray,n=(i=t.algo).SHA512,i=i.SHA384=n.extend({_doReset:function t(){this._hash=new r.init([new e.init(3418070365,3238371032),new e.init(1654270250,914150663),new e.init(2438529370,812702999),new e.init(355462360,4144912697),new e.init(1731405415,4290775857),new e.init(2394180231,1750603025),new e.init(3675008525,1694076839),new e.init(1203062813,3204075428)])},_doFinalize:function t(){var e=n._doFinalize.call(this);return e.sigBytes-=16,e}});t.SHA384=n._createHelper(i),t.HmacSHA384=n._createHmacHelper(i)}();\n/*! (c) Tom Wu | http://www-cs-students.stanford.edu/~tjw/jsbn/\n */\nvar m,_=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";function S(t){var e,r,n=\"\";for(e=0;e+3<=t.length;e+=3)r=parseInt(t.substring(e,e+3),16),n+=_.charAt(r>>6)+_.charAt(63&r);for(e+1==t.length?(r=parseInt(t.substring(e,e+1),16),n+=_.charAt(r<<2)):e+2==t.length&&(r=parseInt(t.substring(e,e+2),16),n+=_.charAt(r>>2)+_.charAt((3&r)<<4)),\"=\";(3&n.length)>0;)n+=\"=\";return n}function b(t){var e,r,n,i=\"\",o=0;for(e=0;e<t.length&&\"=\"!=t.charAt(e);++e)(n=_.indexOf(t.charAt(e)))<0||(0==o?(i+=R(n>>2),r=3&n,o=1):1==o?(i+=R(r<<2|n>>4),r=15&n,o=2):2==o?(i+=R(r),i+=R(n>>2),r=3&n,o=3):(i+=R(r<<2|n>>4),i+=R(15&n),o=0));return 1==o&&(i+=R(r<<2)),i}function w(t){var e,r=b(t),n=new Array;for(e=0;2*e<r.length;++e)n[e]=parseInt(r.substring(2*e,2*e+2),16);return n}function F(t,e,r){null!=t&&(\"number\"==typeof t?this.fromNumber(t,e,r):null==e&&\"string\"!=typeof t?this.fromString(t,256):this.fromString(t,e))}function E(){return new F(null)}\"Microsoft Internet Explorer\"==n.appName?(F.prototype.am=function x(t,e,r,n,i,o){for(var s=32767&e,a=e>>15;--o>=0;){var u=32767&this[t],c=this[t++]>>15,h=a*u+c*s;i=((u=s*u+((32767&h)<<15)+r[n]+(1073741823&i))>>>30)+(h>>>15)+a*c+(i>>>30),r[n++]=1073741823&u}return i},m=30):\"Netscape\"!=n.appName?(F.prototype.am=function A(t,e,r,n,i,o){for(;--o>=0;){var s=e*this[t++]+r[n]+i;i=Math.floor(s/67108864),r[n++]=67108863&s}return i},m=26):(F.prototype.am=function k(t,e,r,n,i,o){for(var s=16383&e,a=e>>14;--o>=0;){var u=16383&this[t],c=this[t++]>>14,h=a*u+c*s;i=((u=s*u+((16383&h)<<14)+r[n]+i)>>28)+(h>>14)+a*c,r[n++]=268435455&u}return i},m=28),F.prototype.DB=m,F.prototype.DM=(1<<m)-1,F.prototype.DV=1<<m;F.prototype.FV=Math.pow(2,52),F.prototype.F1=52-m,F.prototype.F2=2*m-52;var P,C,T=new Array;for(P=\"0\".charCodeAt(0),C=0;C<=9;++C)T[P++]=C;for(P=\"a\".charCodeAt(0),C=10;C<36;++C)T[P++]=C;for(P=\"A\".charCodeAt(0),C=10;C<36;++C)T[P++]=C;function R(t){return\"0123456789abcdefghijklmnopqrstuvwxyz\".charAt(t)}function I(t,e){var r=T[t.charCodeAt(e)];return null==r?-1:r}function D(t){var e=E();return e.fromInt(t),e}function L(t){var e,r=1;return 0!=(e=t>>>16)&&(t=e,r+=16),0!=(e=t>>8)&&(t=e,r+=8),0!=(e=t>>4)&&(t=e,r+=4),0!=(e=t>>2)&&(t=e,r+=2),0!=(e=t>>1)&&(t=e,r+=1),r}function N(t){this.m=t}function U(t){this.m=t,this.mp=t.invDigit(),this.mpl=32767&this.mp,this.mph=this.mp>>15,this.um=(1<<t.DB-15)-1,this.mt2=2*t.t}function B(t,e){return t&e}function O(t,e){return t|e}function j(t,e){return t^e}function M(t,e){return t&~e}function H(t){if(0==t)return-1;var e=0;return 0==(65535&t)&&(t>>=16,e+=16),0==(255&t)&&(t>>=8,e+=8),0==(15&t)&&(t>>=4,e+=4),0==(3&t)&&(t>>=2,e+=2),0==(1&t)&&++e,e}function V(t){for(var e=0;0!=t;)t&=t-1,++e;return e}function K(){}function q(t){return t}function J(t){this.r2=E(),this.q3=E(),F.ONE.dlShiftTo(2*t.t,this.r2),this.mu=this.r2.divide(t),this.m=t}N.prototype.convert=function W(t){return t.s<0||t.compareTo(this.m)>=0?t.mod(this.m):t},N.prototype.revert=function z(t){return t},N.prototype.reduce=function Y(t){t.divRemTo(this.m,null,t)},N.prototype.mulTo=function G(t,e,r){t.multiplyTo(e,r),this.reduce(r)},N.prototype.sqrTo=function X(t,e){t.squareTo(e),this.reduce(e)},U.prototype.convert=function $(t){var e=E();return t.abs().dlShiftTo(this.m.t,e),e.divRemTo(this.m,null,e),t.s<0&&e.compareTo(F.ZERO)>0&&this.m.subTo(e,e),e},U.prototype.revert=function Q(t){var e=E();return t.copyTo(e),this.reduce(e),e},U.prototype.reduce=function Z(t){for(;t.t<=this.mt2;)t[t.t++]=0;for(var e=0;e<this.m.t;++e){var r=32767&t[e],n=r*this.mpl+((r*this.mph+(t[e]>>15)*this.mpl&this.um)<<15)&t.DM;for(t[r=e+this.m.t]+=this.m.am(0,n,t,e,0,this.m.t);t[r]>=t.DV;)t[r]-=t.DV,t[++r]++}t.clamp(),t.drShiftTo(this.m.t,t),t.compareTo(this.m)>=0&&t.subTo(this.m,t)},U.prototype.mulTo=function tt(t,e,r){t.multiplyTo(e,r),this.reduce(r)},U.prototype.sqrTo=function et(t,e){t.squareTo(e),this.reduce(e)},F.prototype.copyTo=function rt(t){for(var e=this.t-1;e>=0;--e)t[e]=this[e];t.t=this.t,t.s=this.s},F.prototype.fromInt=function nt(t){this.t=1,this.s=t<0?-1:0,t>0?this[0]=t:t<-1?this[0]=t+this.DV:this.t=0},F.prototype.fromString=function it(t,e){var r;if(16==e)r=4;else if(8==e)r=3;else if(256==e)r=8;else if(2==e)r=1;else if(32==e)r=5;else{if(4!=e)return void this.fromRadix(t,e);r=2}this.t=0,this.s=0;for(var n=t.length,i=!1,o=0;--n>=0;){var s=8==r?255&t[n]:I(t,n);s<0?\"-\"==t.charAt(n)&&(i=!0):(i=!1,0==o?this[this.t++]=s:o+r>this.DB?(this[this.t-1]|=(s&(1<<this.DB-o)-1)<<o,this[this.t++]=s>>this.DB-o):this[this.t-1]|=s<<o,(o+=r)>=this.DB&&(o-=this.DB))}8==r&&0!=(128&t[0])&&(this.s=-1,o>0&&(this[this.t-1]|=(1<<this.DB-o)-1<<o)),this.clamp(),i&&F.ZERO.subTo(this,this)},F.prototype.clamp=function ot(){for(var t=this.s&this.DM;this.t>0&&this[this.t-1]==t;)--this.t},F.prototype.dlShiftTo=function st(t,e){var r;for(r=this.t-1;r>=0;--r)e[r+t]=this[r];for(r=t-1;r>=0;--r)e[r]=0;e.t=this.t+t,e.s=this.s},F.prototype.drShiftTo=function at(t,e){for(var r=t;r<this.t;++r)e[r-t]=this[r];e.t=Math.max(this.t-t,0),e.s=this.s},F.prototype.lShiftTo=function ut(t,e){var r,n=t%this.DB,i=this.DB-n,o=(1<<i)-1,s=Math.floor(t/this.DB),a=this.s<<n&this.DM;for(r=this.t-1;r>=0;--r)e[r+s+1]=this[r]>>i|a,a=(this[r]&o)<<n;for(r=s-1;r>=0;--r)e[r]=0;e[s]=a,e.t=this.t+s+1,e.s=this.s,e.clamp()},F.prototype.rShiftTo=function ct(t,e){e.s=this.s;var r=Math.floor(t/this.DB);if(r>=this.t)e.t=0;else{var n=t%this.DB,i=this.DB-n,o=(1<<n)-1;e[0]=this[r]>>n;for(var s=r+1;s<this.t;++s)e[s-r-1]|=(this[s]&o)<<i,e[s-r]=this[s]>>n;n>0&&(e[this.t-r-1]|=(this.s&o)<<i),e.t=this.t-r,e.clamp()}},F.prototype.subTo=function ht(t,e){for(var r=0,n=0,i=Math.min(t.t,this.t);r<i;)n+=this[r]-t[r],e[r++]=n&this.DM,n>>=this.DB;if(t.t<this.t){for(n-=t.s;r<this.t;)n+=this[r],e[r++]=n&this.DM,n>>=this.DB;n+=this.s}else{for(n+=this.s;r<t.t;)n-=t[r],e[r++]=n&this.DM,n>>=this.DB;n-=t.s}e.s=n<0?-1:0,n<-1?e[r++]=this.DV+n:n>0&&(e[r++]=n),e.t=r,e.clamp()},F.prototype.multiplyTo=function lt(t,e){var r=this.abs(),n=t.abs(),i=r.t;for(e.t=i+n.t;--i>=0;)e[i]=0;for(i=0;i<n.t;++i)e[i+r.t]=r.am(0,n[i],e,i,0,r.t);e.s=0,e.clamp(),this.s!=t.s&&F.ZERO.subTo(e,e)},F.prototype.squareTo=function ft(t){for(var e=this.abs(),r=t.t=2*e.t;--r>=0;)t[r]=0;for(r=0;r<e.t-1;++r){var n=e.am(r,e[r],t,2*r,0,1);(t[r+e.t]+=e.am(r+1,2*e[r],t,2*r+1,n,e.t-r-1))>=e.DV&&(t[r+e.t]-=e.DV,t[r+e.t+1]=1)}t.t>0&&(t[t.t-1]+=e.am(r,e[r],t,2*r,0,1)),t.s=0,t.clamp()},F.prototype.divRemTo=function gt(t,e,r){var n=t.abs();if(!(n.t<=0)){var i=this.abs();if(i.t<n.t)return null!=e&&e.fromInt(0),void(null!=r&&this.copyTo(r));null==r&&(r=E());var o=E(),s=this.s,a=t.s,u=this.DB-L(n[n.t-1]);u>0?(n.lShiftTo(u,o),i.lShiftTo(u,r)):(n.copyTo(o),i.copyTo(r));var c=o.t,h=o[c-1];if(0!=h){var l=h*(1<<this.F1)+(c>1?o[c-2]>>this.F2:0),f=this.FV/l,g=(1<<this.F1)/l,d=1<<this.F2,p=r.t,v=p-c,y=null==e?E():e;for(o.dlShiftTo(v,y),r.compareTo(y)>=0&&(r[r.t++]=1,r.subTo(y,r)),F.ONE.dlShiftTo(c,y),y.subTo(o,o);o.t<c;)o[o.t++]=0;for(;--v>=0;){var m=r[--p]==h?this.DM:Math.floor(r[p]*f+(r[p-1]+d)*g);if((r[p]+=o.am(0,m,r,v,0,c))<m)for(o.dlShiftTo(v,y),r.subTo(y,r);r[p]<--m;)r.subTo(y,r)}null!=e&&(r.drShiftTo(c,e),s!=a&&F.ZERO.subTo(e,e)),r.t=c,r.clamp(),u>0&&r.rShiftTo(u,r),s<0&&F.ZERO.subTo(r,r)}}},F.prototype.invDigit=function dt(){if(this.t<1)return 0;var t=this[0];if(0==(1&t))return 0;var e=3&t;return(e=(e=(e=(e=e*(2-(15&t)*e)&15)*(2-(255&t)*e)&255)*(2-((65535&t)*e&65535))&65535)*(2-t*e%this.DV)%this.DV)>0?this.DV-e:-e},F.prototype.isEven=function pt(){return 0==(this.t>0?1&this[0]:this.s)},F.prototype.exp=function vt(t,e){if(t>4294967295||t<1)return F.ONE;var r=E(),n=E(),i=e.convert(this),o=L(t)-1;for(i.copyTo(r);--o>=0;)if(e.sqrTo(r,n),(t&1<<o)>0)e.mulTo(n,i,r);else{var s=r;r=n,n=s}return e.revert(r)},F.prototype.toString=function yt(t){if(this.s<0)return\"-\"+this.negate().toString(t);var e;if(16==t)e=4;else if(8==t)e=3;else if(2==t)e=1;else if(32==t)e=5;else{if(4!=t)return this.toRadix(t);e=2}var r,n=(1<<e)-1,i=!1,o=\"\",s=this.t,a=this.DB-s*this.DB%e;if(s-- >0)for(a<this.DB&&(r=this[s]>>a)>0&&(i=!0,o=R(r));s>=0;)a<e?(r=(this[s]&(1<<a)-1)<<e-a,r|=this[--s]>>(a+=this.DB-e)):(r=this[s]>>(a-=e)&n,a<=0&&(a+=this.DB,--s)),r>0&&(i=!0),i&&(o+=R(r));return i?o:\"0\"},F.prototype.negate=function mt(){var t=E();return F.ZERO.subTo(this,t),t},F.prototype.abs=function _t(){return this.s<0?this.negate():this},F.prototype.compareTo=function St(t){var e=this.s-t.s;if(0!=e)return e;var r=this.t;if(0!=(e=r-t.t))return this.s<0?-e:e;for(;--r>=0;)if(0!=(e=this[r]-t[r]))return e;return 0},F.prototype.bitLength=function bt(){return this.t<=0?0:this.DB*(this.t-1)+L(this[this.t-1]^this.s&this.DM)},F.prototype.mod=function wt(t){var e=E();return this.abs().divRemTo(t,null,e),this.s<0&&e.compareTo(F.ZERO)>0&&t.subTo(e,e),e},F.prototype.modPowInt=function Ft(t,e){var r;return r=t<256||e.isEven()?new N(e):new U(e),this.exp(t,r)},F.ZERO=D(0),F.ONE=D(1),K.prototype.convert=q,K.prototype.revert=q,K.prototype.mulTo=function Et(t,e,r){t.multiplyTo(e,r)},K.prototype.sqrTo=function xt(t,e){t.squareTo(e)},J.prototype.convert=function At(t){if(t.s<0||t.t>2*this.m.t)return t.mod(this.m);if(t.compareTo(this.m)<0)return t;var e=E();return t.copyTo(e),this.reduce(e),e},J.prototype.revert=function kt(t){return t},J.prototype.reduce=function Pt(t){for(t.drShiftTo(this.m.t-1,this.r2),t.t>this.m.t+1&&(t.t=this.m.t+1,t.clamp()),this.mu.multiplyUpperTo(this.r2,this.m.t+1,this.q3),this.m.multiplyLowerTo(this.q3,this.m.t+1,this.r2);t.compareTo(this.r2)<0;)t.dAddOffset(1,this.m.t+1);for(t.subTo(this.r2,t);t.compareTo(this.m)>=0;)t.subTo(this.m,t)},J.prototype.mulTo=function Ct(t,e,r){t.multiplyTo(e,r),this.reduce(r)},J.prototype.sqrTo=function Tt(t,e){t.squareTo(e),this.reduce(e)};var Rt=[2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509,521,523,541,547,557,563,569,571,577,587,593,599,601,607,613,617,619,631,641,643,647,653,659,661,673,677,683,691,701,709,719,727,733,739,743,751,757,761,769,773,787,797,809,811,821,823,827,829,839,853,857,859,863,877,881,883,887,907,911,919,929,937,941,947,953,967,971,977,983,991,997],It=(1<<26)/Rt[Rt.length-1];\n/*! (c) Tom Wu | http://www-cs-students.stanford.edu/~tjw/jsbn/\n */\nfunction Dt(){this.i=0,this.j=0,this.S=new Array}F.prototype.chunkSize=function Lt(t){return Math.floor(Math.LN2*this.DB/Math.log(t))},F.prototype.toRadix=function Nt(t){if(null==t&&(t=10),0==this.signum()||t<2||t>36)return\"0\";var e=this.chunkSize(t),r=Math.pow(t,e),n=D(r),i=E(),o=E(),s=\"\";for(this.divRemTo(n,i,o);i.signum()>0;)s=(r+o.intValue()).toString(t).substr(1)+s,i.divRemTo(n,i,o);return o.intValue().toString(t)+s},F.prototype.fromRadix=function Ut(t,e){this.fromInt(0),null==e&&(e=10);for(var r=this.chunkSize(e),n=Math.pow(e,r),i=!1,o=0,s=0,a=0;a<t.length;++a){var u=I(t,a);u<0?\"-\"==t.charAt(a)&&0==this.signum()&&(i=!0):(s=e*s+u,++o>=r&&(this.dMultiply(n),this.dAddOffset(s,0),o=0,s=0))}o>0&&(this.dMultiply(Math.pow(e,o)),this.dAddOffset(s,0)),i&&F.ZERO.subTo(this,this)},F.prototype.fromNumber=function Bt(t,e,r){if(\"number\"==typeof e)if(t<2)this.fromInt(1);else for(this.fromNumber(t,r),this.testBit(t-1)||this.bitwiseTo(F.ONE.shiftLeft(t-1),O,this),this.isEven()&&this.dAddOffset(1,0);!this.isProbablePrime(e);)this.dAddOffset(2,0),this.bitLength()>t&&this.subTo(F.ONE.shiftLeft(t-1),this);else{var n=new Array,i=7&t;n.length=1+(t>>3),e.nextBytes(n),i>0?n[0]&=(1<<i)-1:n[0]=0,this.fromString(n,256)}},F.prototype.bitwiseTo=function Ot(t,e,r){var n,i,o=Math.min(t.t,this.t);for(n=0;n<o;++n)r[n]=e(this[n],t[n]);if(t.t<this.t){for(i=t.s&this.DM,n=o;n<this.t;++n)r[n]=e(this[n],i);r.t=this.t}else{for(i=this.s&this.DM,n=o;n<t.t;++n)r[n]=e(i,t[n]);r.t=t.t}r.s=e(this.s,t.s),r.clamp()},F.prototype.changeBit=function jt(t,e){var r=F.ONE.shiftLeft(t);return this.bitwiseTo(r,e,r),r},F.prototype.addTo=function Mt(t,e){for(var r=0,n=0,i=Math.min(t.t,this.t);r<i;)n+=this[r]+t[r],e[r++]=n&this.DM,n>>=this.DB;if(t.t<this.t){for(n+=t.s;r<this.t;)n+=this[r],e[r++]=n&this.DM,n>>=this.DB;n+=this.s}else{for(n+=this.s;r<t.t;)n+=t[r],e[r++]=n&this.DM,n>>=this.DB;n+=t.s}e.s=n<0?-1:0,n>0?e[r++]=n:n<-1&&(e[r++]=this.DV+n),e.t=r,e.clamp()},F.prototype.dMultiply=function Ht(t){this[this.t]=this.am(0,t-1,this,0,0,this.t),++this.t,this.clamp()},F.prototype.dAddOffset=function Vt(t,e){if(0!=t){for(;this.t<=e;)this[this.t++]=0;for(this[e]+=t;this[e]>=this.DV;)this[e]-=this.DV,++e>=this.t&&(this[this.t++]=0),++this[e]}},F.prototype.multiplyLowerTo=function Kt(t,e,r){var n,i=Math.min(this.t+t.t,e);for(r.s=0,r.t=i;i>0;)r[--i]=0;for(n=r.t-this.t;i<n;++i)r[i+this.t]=this.am(0,t[i],r,i,0,this.t);for(n=Math.min(t.t,e);i<n;++i)this.am(0,t[i],r,i,0,e-i);r.clamp()},F.prototype.multiplyUpperTo=function qt(t,e,r){--e;var n=r.t=this.t+t.t-e;for(r.s=0;--n>=0;)r[n]=0;for(n=Math.max(e-this.t,0);n<t.t;++n)r[this.t+n-e]=this.am(e-n,t[n],r,0,0,this.t+n-e);r.clamp(),r.drShiftTo(1,r)},F.prototype.modInt=function Jt(t){if(t<=0)return 0;var e=this.DV%t,r=this.s<0?t-1:0;if(this.t>0)if(0==e)r=this[0]%t;else for(var n=this.t-1;n>=0;--n)r=(e*r+this[n])%t;return r},F.prototype.millerRabin=function Wt(t){var e=this.subtract(F.ONE),r=e.getLowestSetBit();if(r<=0)return!1;var n=e.shiftRight(r);(t=t+1>>1)>Rt.length&&(t=Rt.length);for(var i=E(),o=0;o<t;++o){i.fromInt(Rt[Math.floor(Math.random()*Rt.length)]);var s=i.modPow(n,this);if(0!=s.compareTo(F.ONE)&&0!=s.compareTo(e)){for(var a=1;a++<r&&0!=s.compareTo(e);)if(0==(s=s.modPowInt(2,this)).compareTo(F.ONE))return!1;if(0!=s.compareTo(e))return!1}}return!0},F.prototype.clone=\n/*! (c) Tom Wu | http://www-cs-students.stanford.edu/~tjw/jsbn/\n */\nfunction zt(){var t=E();return this.copyTo(t),t},F.prototype.intValue=function Yt(){if(this.s<0){if(1==this.t)return this[0]-this.DV;if(0==this.t)return-1}else{if(1==this.t)return this[0];if(0==this.t)return 0}return(this[1]&(1<<32-this.DB)-1)<<this.DB|this[0]},F.prototype.byteValue=function Gt(){return 0==this.t?this.s:this[0]<<24>>24},F.prototype.shortValue=function Xt(){return 0==this.t?this.s:this[0]<<16>>16},F.prototype.signum=function $t(){return this.s<0?-1:this.t<=0||1==this.t&&this[0]<=0?0:1},F.prototype.toByteArray=function Qt(){var t=this.t,e=new Array;e[0]=this.s;var r,n=this.DB-t*this.DB%8,i=0;if(t-- >0)for(n<this.DB&&(r=this[t]>>n)!=(this.s&this.DM)>>n&&(e[i++]=r|this.s<<this.DB-n);t>=0;)n<8?(r=(this[t]&(1<<n)-1)<<8-n,r|=this[--t]>>(n+=this.DB-8)):(r=this[t]>>(n-=8)&255,n<=0&&(n+=this.DB,--t)),0!=(128&r)&&(r|=-256),0==i&&(128&this.s)!=(128&r)&&++i,(i>0||r!=this.s)&&(e[i++]=r);return e},F.prototype.equals=function Zt(t){return 0==this.compareTo(t)},F.prototype.min=function te(t){return this.compareTo(t)<0?this:t},F.prototype.max=function ee(t){return this.compareTo(t)>0?this:t},F.prototype.and=function re(t){var e=E();return this.bitwiseTo(t,B,e),e},F.prototype.or=function ne(t){var e=E();return this.bitwiseTo(t,O,e),e},F.prototype.xor=function ie(t){var e=E();return this.bitwiseTo(t,j,e),e},F.prototype.andNot=function oe(t){var e=E();return this.bitwiseTo(t,M,e),e},F.prototype.not=function se(){for(var t=E(),e=0;e<this.t;++e)t[e]=this.DM&~this[e];return t.t=this.t,t.s=~this.s,t},F.prototype.shiftLeft=function ae(t){var e=E();return t<0?this.rShiftTo(-t,e):this.lShiftTo(t,e),e},F.prototype.shiftRight=function ue(t){var e=E();return t<0?this.lShiftTo(-t,e):this.rShiftTo(t,e),e},F.prototype.getLowestSetBit=function ce(){for(var t=0;t<this.t;++t)if(0!=this[t])return t*this.DB+H(this[t]);return this.s<0?this.t*this.DB:-1},F.prototype.bitCount=function he(){for(var t=0,e=this.s&this.DM,r=0;r<this.t;++r)t+=V(this[r]^e);return t},F.prototype.testBit=function le(t){var e=Math.floor(t/this.DB);return e>=this.t?0!=this.s:0!=(this[e]&1<<t%this.DB)},F.prototype.setBit=function fe(t){return this.changeBit(t,O)},F.prototype.clearBit=function ge(t){return this.changeBit(t,M)},F.prototype.flipBit=function de(t){return this.changeBit(t,j)},F.prototype.add=function pe(t){var e=E();return this.addTo(t,e),e},F.prototype.subtract=function ve(t){var e=E();return this.subTo(t,e),e},F.prototype.multiply=function ye(t){var e=E();return this.multiplyTo(t,e),e},F.prototype.divide=function me(t){var e=E();return this.divRemTo(t,e,null),e},F.prototype.remainder=function _e(t){var e=E();return this.divRemTo(t,null,e),e},F.prototype.divideAndRemainder=function Se(t){var e=E(),r=E();return this.divRemTo(t,e,r),new Array(e,r)},F.prototype.modPow=function be(t,e){var r,n,i=t.bitLength(),o=D(1);if(i<=0)return o;r=i<18?1:i<48?3:i<144?4:i<768?5:6,n=i<8?new N(e):e.isEven()?new J(e):new U(e);var s=new Array,a=3,u=r-1,c=(1<<r)-1;if(s[1]=n.convert(this),r>1){var h=E();for(n.sqrTo(s[1],h);a<=c;)s[a]=E(),n.mulTo(h,s[a-2],s[a]),a+=2}var l,f,g=t.t-1,d=!0,p=E();for(i=L(t[g])-1;g>=0;){for(i>=u?l=t[g]>>i-u&c:(l=(t[g]&(1<<i+1)-1)<<u-i,g>0&&(l|=t[g-1]>>this.DB+i-u)),a=r;0==(1&l);)l>>=1,--a;if((i-=a)<0&&(i+=this.DB,--g),d)s[l].copyTo(o),d=!1;else{for(;a>1;)n.sqrTo(o,p),n.sqrTo(p,o),a-=2;a>0?n.sqrTo(o,p):(f=o,o=p,p=f),n.mulTo(p,s[l],o)}for(;g>=0&&0==(t[g]&1<<i);)n.sqrTo(o,p),f=o,o=p,p=f,--i<0&&(i=this.DB-1,--g)}return n.revert(o)},F.prototype.modInverse=function we(t){var e=t.isEven();if(this.isEven()&&e||0==t.signum())return F.ZERO;for(var r=t.clone(),n=this.clone(),i=D(1),o=D(0),s=D(0),a=D(1);0!=r.signum();){for(;r.isEven();)r.rShiftTo(1,r),e?(i.isEven()&&o.isEven()||(i.addTo(this,i),o.subTo(t,o)),i.rShiftTo(1,i)):o.isEven()||o.subTo(t,o),o.rShiftTo(1,o);for(;n.isEven();)n.rShiftTo(1,n),e?(s.isEven()&&a.isEven()||(s.addTo(this,s),a.subTo(t,a)),s.rShiftTo(1,s)):a.isEven()||a.subTo(t,a),a.rShiftTo(1,a);r.compareTo(n)>=0?(r.subTo(n,r),e&&i.subTo(s,i),o.subTo(a,o)):(n.subTo(r,n),e&&s.subTo(i,s),a.subTo(o,a))}return 0!=n.compareTo(F.ONE)?F.ZERO:a.compareTo(t)>=0?a.subtract(t):a.signum()<0?(a.addTo(t,a),a.signum()<0?a.add(t):a):a},F.prototype.pow=function Fe(t){return this.exp(t,new K)},F.prototype.gcd=function Ee(t){var e=this.s<0?this.negate():this.clone(),r=t.s<0?t.negate():t.clone();if(e.compareTo(r)<0){var n=e;e=r,r=n}var i=e.getLowestSetBit(),o=r.getLowestSetBit();if(o<0)return e;for(i<o&&(o=i),o>0&&(e.rShiftTo(o,e),r.rShiftTo(o,r));e.signum()>0;)(i=e.getLowestSetBit())>0&&e.rShiftTo(i,e),(i=r.getLowestSetBit())>0&&r.rShiftTo(i,r),e.compareTo(r)>=0?(e.subTo(r,e),e.rShiftTo(1,e)):(r.subTo(e,r),r.rShiftTo(1,r));return o>0&&r.lShiftTo(o,r),r},F.prototype.isProbablePrime=function xe(t){var e,r=this.abs();if(1==r.t&&r[0]<=Rt[Rt.length-1]){for(e=0;e<Rt.length;++e)if(r[0]==Rt[e])return!0;return!1}if(r.isEven())return!1;for(e=1;e<Rt.length;){for(var n=Rt[e],i=e+1;i<Rt.length&&n<It;)n*=Rt[i++];for(n=r.modInt(n);e<i;)if(n%Rt[e++]==0)return!1}return r.millerRabin(t)},F.prototype.square=function Ae(){var t=E();return this.squareTo(t),t},Dt.prototype.init=function ke(t){var e,r,n;for(e=0;e<256;++e)this.S[e]=e;for(r=0,e=0;e<256;++e)r=r+this.S[e]+t[e%t.length]&255,n=this.S[e],this.S[e]=this.S[r],this.S[r]=n;this.i=0,this.j=0},Dt.prototype.next=function Pe(){var t;return this.i=this.i+1&255,this.j=this.j+this.S[this.i]&255,t=this.S[this.i],this.S[this.i]=this.S[this.j],this.S[this.j]=t,this.S[t+this.S[this.i]&255]};var Ce,Te,Re;\n/*! (c) Tom Wu | http://www-cs-students.stanford.edu/~tjw/jsbn/\n */function Ie(){!function t(e){Te[Re++]^=255&e,Te[Re++]^=e>>8&255,Te[Re++]^=e>>16&255,Te[Re++]^=e>>24&255,Re>=256&&(Re-=256)}((new Date).getTime())}if(null==Te){var De;if(Te=new Array,Re=0,void 0!==i&&(void 0!==i.crypto||void 0!==i.msCrypto)){var Le=i.crypto||i.msCrypto;if(Le.getRandomValues){var Ne=new Uint8Array(32);for(Le.getRandomValues(Ne),De=0;De<32;++De)Te[Re++]=Ne[De]}else if(\"Netscape\"==n.appName&&n.appVersion<\"5\"){var Ue=i.crypto.random(32);for(De=0;De<Ue.length;++De)Te[Re++]=255&Ue.charCodeAt(De)}}for(;Re<256;)De=Math.floor(65536*Math.random()),Te[Re++]=De>>>8,Te[Re++]=255&De;Re=0,Ie()}function Be(){if(null==Ce){for(Ie(),(Ce=function t(){return new Dt}()).init(Te),Re=0;Re<Te.length;++Re)Te[Re]=0;Re=0}return Ce.next()}function Oe(){}\n/*! (c) Tom Wu | http://www-cs-students.stanford.edu/~tjw/jsbn/\n */\nfunction je(t,e){return new F(t,e)}function Me(t,e,r){for(var n=\"\",i=0;n.length<e;)n+=r(String.fromCharCode.apply(String,t.concat([(4278190080&i)>>24,(16711680&i)>>16,(65280&i)>>8,255&i]))),i+=1;return n}function He(){this.n=null,this.e=0,this.d=null,this.p=null,this.q=null,this.dmp1=null,this.dmq1=null,this.coeff=null}\n/*! (c) Tom Wu | http://www-cs-students.stanford.edu/~tjw/jsbn/\n */\nfunction Ve(t,e){this.x=e,this.q=t}function Ke(t,e,r,n){this.curve=t,this.x=e,this.y=r,this.z=null==n?F.ONE:n,this.zinv=null}function qe(t,e,r){this.q=t,this.a=this.fromBigInteger(e),this.b=this.fromBigInteger(r),this.infinity=new Ke(this,null,null)}Oe.prototype.nextBytes=function Je(t){var e;for(e=0;e<t.length;++e)t[e]=Be()},He.prototype.doPublic=function We(t){return t.modPowInt(this.e,this.n)},He.prototype.setPublic=function ze(t,e){if(this.isPublic=!0,this.isPrivate=!1,\"string\"!=typeof t)this.n=t,this.e=e;else{if(!(null!=t&&null!=e&&t.length>0&&e.length>0))throw\"Invalid RSA public key\";this.n=je(t,16),this.e=parseInt(e,16)}},He.prototype.encrypt=function Ye(t){var e=function r(t,e){if(e<t.length+11)throw\"Message too long for RSA\";for(var r=new Array,n=t.length-1;n>=0&&e>0;){var i=t.charCodeAt(n--);i<128?r[--e]=i:i>127&&i<2048?(r[--e]=63&i|128,r[--e]=i>>6|192):(r[--e]=63&i|128,r[--e]=i>>6&63|128,r[--e]=i>>12|224)}r[--e]=0;for(var o=new Oe,s=new Array;e>2;){for(s[0]=0;0==s[0];)o.nextBytes(s);r[--e]=s[0]}return r[--e]=2,r[--e]=0,new F(r)}(t,this.n.bitLength()+7>>3);if(null==e)return null;var n=this.doPublic(e);if(null==n)return null;var i=n.toString(16);return 0==(1&i.length)?i:\"0\"+i},He.prototype.encryptOAEP=function Ge(t,e,r){var n=function i(t,e,r,n){var i=br.crypto.MessageDigest,o=br.crypto.Util,s=null;if(r||(r=\"sha1\"),\"string\"==typeof r&&(s=i.getCanonicalAlgName(r),n=i.getHashLength(s),r=function t(e){return Nr(o.hashHex(Ur(e),s))}),t.length+2*n+2>e)throw\"Message too long for RSA\";var a,u=\"\";for(a=0;a<e-t.length-2*n-2;a+=1)u+=\"\\0\";var c=r(\"\")+u+\"\u0001\"+t,h=new Array(n);(new Oe).nextBytes(h);var l=Me(h,c.length,r),f=[];for(a=0;a<c.length;a+=1)f[a]=c.charCodeAt(a)^l.charCodeAt(a);var g=Me(f,h.length,r),d=[0];for(a=0;a<h.length;a+=1)d[a+1]=h[a]^g.charCodeAt(a);return new F(d.concat(f))}(t,this.n.bitLength()+7>>3,e,r);if(null==n)return null;var o=this.doPublic(n);if(null==o)return null;var s=o.toString(16);return 0==(1&s.length)?s:\"0\"+s},He.prototype.type=\"RSA\",Ve.prototype.equals=function Xe(t){return t==this||this.q.equals(t.q)&&this.x.equals(t.x)},Ve.prototype.toBigInteger=function $e(){return this.x},Ve.prototype.negate=function Qe(){return new Ve(this.q,this.x.negate().mod(this.q))},Ve.prototype.add=function Ze(t){return new Ve(this.q,this.x.add(t.toBigInteger()).mod(this.q))},Ve.prototype.subtract=function tr(t){return new Ve(this.q,this.x.subtract(t.toBigInteger()).mod(this.q))},Ve.prototype.multiply=function er(t){return new Ve(this.q,this.x.multiply(t.toBigInteger()).mod(this.q))},Ve.prototype.square=function rr(){return new Ve(this.q,this.x.square().mod(this.q))},Ve.prototype.divide=function nr(t){return new Ve(this.q,this.x.multiply(t.toBigInteger().modInverse(this.q)).mod(this.q))},Ke.prototype.getX=function ir(){return null==this.zinv&&(this.zinv=this.z.modInverse(this.curve.q)),this.curve.fromBigInteger(this.x.toBigInteger().multiply(this.zinv).mod(this.curve.q))},Ke.prototype.getY=function or(){return null==this.zinv&&(this.zinv=this.z.modInverse(this.curve.q)),this.curve.fromBigInteger(this.y.toBigInteger().multiply(this.zinv).mod(this.curve.q))},Ke.prototype.equals=function sr(t){return t==this||(this.isInfinity()?t.isInfinity():t.isInfinity()?this.isInfinity():!!t.y.toBigInteger().multiply(this.z).subtract(this.y.toBigInteger().multiply(t.z)).mod(this.curve.q).equals(F.ZERO)&&t.x.toBigInteger().multiply(this.z).subtract(this.x.toBigInteger().multiply(t.z)).mod(this.curve.q).equals(F.ZERO))},Ke.prototype.isInfinity=function ar(){return null==this.x&&null==this.y||this.z.equals(F.ZERO)&&!this.y.toBigInteger().equals(F.ZERO)},Ke.prototype.negate=function ur(){return new Ke(this.curve,this.x,this.y.negate(),this.z)},Ke.prototype.add=function cr(t){if(this.isInfinity())return t;if(t.isInfinity())return this;var e=t.y.toBigInteger().multiply(this.z).subtract(this.y.toBigInteger().multiply(t.z)).mod(this.curve.q),r=t.x.toBigInteger().multiply(this.z).subtract(this.x.toBigInteger().multiply(t.z)).mod(this.curve.q);if(F.ZERO.equals(r))return F.ZERO.equals(e)?this.twice():this.curve.getInfinity();var n=new F(\"3\"),i=this.x.toBigInteger(),o=this.y.toBigInteger(),s=(t.x.toBigInteger(),t.y.toBigInteger(),r.square()),a=s.multiply(r),u=i.multiply(s),c=e.square().multiply(this.z),h=c.subtract(u.shiftLeft(1)).multiply(t.z).subtract(a).multiply(r).mod(this.curve.q),l=u.multiply(n).multiply(e).subtract(o.multiply(a)).subtract(c.multiply(e)).multiply(t.z).add(e.multiply(a)).mod(this.curve.q),f=a.multiply(this.z).multiply(t.z).mod(this.curve.q);return new Ke(this.curve,this.curve.fromBigInteger(h),this.curve.fromBigInteger(l),f)},Ke.prototype.twice=function hr(){if(this.isInfinity())return this;if(0==this.y.toBigInteger().signum())return this.curve.getInfinity();var t=new F(\"3\"),e=this.x.toBigInteger(),r=this.y.toBigInteger(),n=r.multiply(this.z),i=n.multiply(r).mod(this.curve.q),o=this.curve.a.toBigInteger(),s=e.square().multiply(t);F.ZERO.equals(o)||(s=s.add(this.z.square().multiply(o)));var a=(s=s.mod(this.curve.q)).square().subtract(e.shiftLeft(3).multiply(i)).shiftLeft(1).multiply(n).mod(this.curve.q),u=s.multiply(t).multiply(e).subtract(i.shiftLeft(1)).shiftLeft(2).multiply(i).subtract(s.square().multiply(s)).mod(this.curve.q),c=n.square().multiply(n).shiftLeft(3).mod(this.curve.q);return new Ke(this.curve,this.curve.fromBigInteger(a),this.curve.fromBigInteger(u),c)},Ke.prototype.multiply=function lr(t){if(this.isInfinity())return this;if(0==t.signum())return this.curve.getInfinity();var e,r=t,n=r.multiply(new F(\"3\")),i=this.negate(),o=this,s=this.curve.q.subtract(t),a=s.multiply(new F(\"3\")),u=new Ke(this.curve,this.x,this.y),c=u.negate();for(e=n.bitLength()-2;e>0;--e){o=o.twice();var h=n.testBit(e);h!=r.testBit(e)&&(o=o.add(h?this:i))}for(e=a.bitLength()-2;e>0;--e){u=u.twice();var l=a.testBit(e);l!=s.testBit(e)&&(u=u.add(l?u:c))}return o},Ke.prototype.multiplyTwo=function fr(t,e,r){var n;n=t.bitLength()>r.bitLength()?t.bitLength()-1:r.bitLength()-1;for(var i=this.curve.getInfinity(),o=this.add(e);n>=0;)i=i.twice(),t.testBit(n)?i=r.testBit(n)?i.add(o):i.add(this):r.testBit(n)&&(i=i.add(e)),--n;return i},qe.prototype.getQ=function gr(){return this.q},qe.prototype.getA=function dr(){return this.a},qe.prototype.getB=function pr(){return this.b},qe.prototype.equals=function vr(t){return t==this||this.q.equals(t.q)&&this.a.equals(t.a)&&this.b.equals(t.b)},qe.prototype.getInfinity=function yr(){return this.infinity},qe.prototype.fromBigInteger=function mr(t){return new Ve(this.q,t)},qe.prototype.decodePointHex=function _r(t){switch(parseInt(t.substr(0,2),16)){case 0:return this.infinity;case 2:case 3:return null;case 4:case 6:case 7:var e=(t.length-2)/2,r=t.substr(2,e),n=t.substr(e+2,e);return new Ke(this,this.fromBigInteger(new F(r,16)),this.fromBigInteger(new F(n,16)));default:return null}},\n/*! (c) Stefan Thomas | https://github.com/bitcoinjs/bitcoinjs-lib\n */\nVe.prototype.getByteLength=function(){return Math.floor((this.toBigInteger().bitLength()+7)/8)},Ke.prototype.getEncoded=function(t){var e=function t(e,r){var n=e.toByteArrayUnsigned();if(r<n.length)n=n.slice(n.length-r);else for(;r>n.length;)n.unshift(0);return n},r=this.getX().toBigInteger(),n=this.getY().toBigInteger(),i=e(r,32);return t?n.isEven()?i.unshift(2):i.unshift(3):(i.unshift(4),i=i.concat(e(n,32))),i},Ke.decodeFrom=function(t,e){e[0];var r=e.length-1,n=e.slice(1,1+r/2),i=e.slice(1+r/2,1+r);n.unshift(0),i.unshift(0);var o=new F(n),s=new F(i);return new Ke(t,t.fromBigInteger(o),t.fromBigInteger(s))},Ke.decodeFromHex=function(t,e){e.substr(0,2);var r=e.length-2,n=e.substr(2,r/2),i=e.substr(2+r/2,r/2),o=new F(n,16),s=new F(i,16);return new Ke(t,t.fromBigInteger(o),t.fromBigInteger(s))},Ke.prototype.add2D=function(t){if(this.isInfinity())return t;if(t.isInfinity())return this;if(this.x.equals(t.x))return this.y.equals(t.y)?this.twice():this.curve.getInfinity();var e=t.x.subtract(this.x),r=t.y.subtract(this.y).divide(e),n=r.square().subtract(this.x).subtract(t.x),i=r.multiply(this.x.subtract(n)).subtract(this.y);return new Ke(this.curve,n,i)},Ke.prototype.twice2D=function(){if(this.isInfinity())return this;if(0==this.y.toBigInteger().signum())return this.curve.getInfinity();var t=this.curve.fromBigInteger(F.valueOf(2)),e=this.curve.fromBigInteger(F.valueOf(3)),r=this.x.square().multiply(e).add(this.curve.a).divide(this.y.multiply(t)),n=r.square().subtract(this.x.multiply(t)),i=r.multiply(this.x.subtract(n)).subtract(this.y);return new Ke(this.curve,n,i)},Ke.prototype.multiply2D=function(t){if(this.isInfinity())return this;if(0==t.signum())return this.curve.getInfinity();var e,r=t,n=r.multiply(new F(\"3\")),i=this.negate(),o=this;for(e=n.bitLength()-2;e>0;--e){o=o.twice();var s=n.testBit(e);s!=r.testBit(e)&&(o=o.add2D(s?this:i))}return o},Ke.prototype.isOnCurve=function(){var t=this.getX().toBigInteger(),e=this.getY().toBigInteger(),r=this.curve.getA().toBigInteger(),n=this.curve.getB().toBigInteger(),i=this.curve.getQ(),o=e.multiply(e).mod(i),s=t.multiply(t).multiply(t).add(r.multiply(t)).add(n).mod(i);return o.equals(s)},Ke.prototype.toString=function(){return\"(\"+this.getX().toBigInteger().toString()+\",\"+this.getY().toBigInteger().toString()+\")\"},Ke.prototype.validate=function(){var t=this.curve.getQ();if(this.isInfinity())throw new Error(\"Point is at infinity.\");var e=this.getX().toBigInteger(),r=this.getY().toBigInteger();if(e.compareTo(F.ONE)<0||e.compareTo(t.subtract(F.ONE))>0)throw new Error(\"x coordinate out of bounds\");if(r.compareTo(F.ONE)<0||r.compareTo(t.subtract(F.ONE))>0)throw new Error(\"y coordinate out of bounds\");if(!this.isOnCurve())throw new Error(\"Point is not on the curve.\");if(this.multiply(t).isInfinity())throw new Error(\"Point is not a scalar multiple of G.\");return!0};\n/*! Mike Samuel (c) 2009 | code.google.com/p/json-sans-eval\n */\nvar Sr=function(){var t=new RegExp('(?:false|true|null|[\\\\{\\\\}\\\\[\\\\]]|(?:-?\\\\b(?:0|[1-9][0-9]*)(?:\\\\.[0-9]+)?(?:[eE][+-]?[0-9]+)?\\\\b)|(?:\"(?:[^\\\\0-\\\\x08\\\\x0a-\\\\x1f\"\\\\\\\\]|\\\\\\\\(?:[\"/\\\\\\\\bfnrt]|u[0-9A-Fa-f]{4}))*\"))',\"g\"),e=new RegExp(\"\\\\\\\\(?:([^u])|u(.{4}))\",\"g\"),n={'\"':'\"',\"/\":\"/\",\"\\\\\":\"\\\\\",b:\"\\b\",f:\"\\f\",n:\"\\n\",r:\"\\r\",t:\"\\t\"};function i(t,e,r){return e?n[e]:String.fromCharCode(parseInt(r,16))}var o=new String(\"\"),s=Object.hasOwnProperty;return function(n,a){var u,c,h=n.match(t),l=h[0],f=!1;\"{\"===l?u={}:\"[\"===l?u=[]:(u=[],f=!0);for(var g=[u],d=1-f,p=h.length;d<p;++d){var v;switch((l=h[d]).charCodeAt(0)){default:(v=g[0])[c||v.length]=+l,c=void 0;break;case 34:if(-1!==(l=l.substring(1,l.length-1)).indexOf(\"\\\\\")&&(l=l.replace(e,i)),v=g[0],!c){if(!(v instanceof Array)){c=l||o;break}c=v.length}v[c]=l,c=void 0;break;case 91:v=g[0],g.unshift(v[c||v.length]=[]),c=void 0;break;case 93:g.shift();break;case 102:(v=g[0])[c||v.length]=!1,c=void 0;break;case 110:(v=g[0])[c||v.length]=null,c=void 0;break;case 116:(v=g[0])[c||v.length]=!0,c=void 0;break;case 123:v=g[0],g.unshift(v[c||v.length]={}),c=void 0;break;case 125:g.shift()}}if(f){if(1!==g.length)throw new Error;u=u[0]}else if(g.length)throw new Error;if(a){u=function t(e,n){var i=e[n];if(i&&\"object\"===(void 0===i?\"undefined\":r(i))){var o=null;for(var u in i)if(s.call(i,u)&&i!==e){var c=t(i,u);void 0!==c?i[u]=c:(o||(o=[]),o.push(u))}if(o)for(var h=o.length;--h>=0;)delete i[o[h]]}return a.call(e,n,i)}({\"\":u},\"\")}return u}}();void 0!==br&&br||(e.KJUR=br={}),void 0!==br.asn1&&br.asn1||(br.asn1={}),br.asn1.ASN1Util=new function(){this.integerToByteHex=function(t){var e=t.toString(16);return e.length%2==1&&(e=\"0\"+e),e},this.bigIntToMinTwosComplementsHex=function(t){var e=t.toString(16);if(\"-\"!=e.substr(0,1))e.length%2==1?e=\"0\"+e:e.match(/^[0-7]/)||(e=\"00\"+e);else{var r=e.substr(1).length;r%2==1?r+=1:e.match(/^[0-7]/)||(r+=2);for(var n=\"\",i=0;i<r;i++)n+=\"f\";e=new F(n,16).xor(t).add(F.ONE).toString(16).replace(/^-/,\"\")}return e},this.getPEMStringFromHex=function(t,e){return Mr(t,e)},this.newObject=function(t){var e=br.asn1,r=e.ASN1Object,n=e.DERBoolean,i=e.DERInteger,o=e.DERBitString,s=e.DEROctetString,a=e.DERNull,u=e.DERObjectIdentifier,c=e.DEREnumerated,h=e.DERUTF8String,l=e.DERNumericString,f=e.DERPrintableString,g=e.DERTeletexString,d=e.DERIA5String,p=e.DERUTCTime,v=e.DERGeneralizedTime,y=e.DERVisibleString,m=e.DERBMPString,_=e.DERSequence,S=e.DERSet,b=e.DERTaggedObject,w=e.ASN1Util.newObject;if(t instanceof e.ASN1Object)return t;var F=Object.keys(t);if(1!=F.length)throw new Error(\"key of param shall be only one.\");var E=F[0];if(-1==\":asn1:bool:int:bitstr:octstr:null:oid:enum:utf8str:numstr:prnstr:telstr:ia5str:utctime:gentime:visstr:bmpstr:seq:set:tag:\".indexOf(\":\"+E+\":\"))throw new Error(\"undefined key: \"+E);if(\"bool\"==E)return new n(t[E]);if(\"int\"==E)return new i(t[E]);if(\"bitstr\"==E)return new o(t[E]);if(\"octstr\"==E)return new s(t[E]);if(\"null\"==E)return new a(t[E]);if(\"oid\"==E)return new u(t[E]);if(\"enum\"==E)return new c(t[E]);if(\"utf8str\"==E)return new h(t[E]);if(\"numstr\"==E)return new l(t[E]);if(\"prnstr\"==E)return new f(t[E]);if(\"telstr\"==E)return new g(t[E]);if(\"ia5str\"==E)return new d(t[E]);if(\"utctime\"==E)return new p(t[E]);if(\"gentime\"==E)return new v(t[E]);if(\"visstr\"==E)return new y(t[E]);if(\"bmpstr\"==E)return new m(t[E]);if(\"asn1\"==E)return new r(t[E]);if(\"seq\"==E){for(var x=t[E],A=[],k=0;k<x.length;k++){var P=w(x[k]);A.push(P)}return new _({array:A})}if(\"set\"==E){for(x=t[E],A=[],k=0;k<x.length;k++){P=w(x[k]);A.push(P)}return new S({array:A})}if(\"tag\"==E){var C=t[E];if(\"[object Array]\"===Object.prototype.toString.call(C)&&3==C.length){var T=w(C[2]);return new b({tag:C[0],explicit:C[1],obj:T})}return new b(C)}},this.jsonToASN1HEX=function(t){return this.newObject(t).getEncodedHex()}},br.asn1.ASN1Util.oidHexToInt=function(t){for(var e=\"\",r=parseInt(t.substr(0,2),16),n=(e=Math.floor(r/40)+\".\"+r%40,\"\"),i=2;i<t.length;i+=2){var o=(\"00000000\"+parseInt(t.substr(i,2),16).toString(2)).slice(-8);if(n+=o.substr(1,7),\"0\"==o.substr(0,1))e=e+\".\"+new F(n,2).toString(10),n=\"\"}return e},br.asn1.ASN1Util.oidIntToHex=function(t){var e=function t(e){var r=e.toString(16);return 1==r.length&&(r=\"0\"+r),r},r=function t(r){var n=\"\",i=new F(r,10).toString(2),o=7-i.length%7;7==o&&(o=0);for(var s=\"\",a=0;a<o;a++)s+=\"0\";i=s+i;for(a=0;a<i.length-1;a+=7){var u=i.substr(a,7);a!=i.length-7&&(u=\"1\"+u),n+=e(parseInt(u,2))}return n};if(!t.match(/^[0-9.]+$/))throw\"malformed oid string: \"+t;var n=\"\",i=t.split(\".\"),o=40*parseInt(i[0])+parseInt(i[1]);n+=e(o),i.splice(0,2);for(var s=0;s<i.length;s++)n+=r(i[s]);return n},br.asn1.ASN1Object=function(t){this.params=null,this.getLengthHexFromValue=function(){if(void 0===this.hV||null==this.hV)throw new Error(\"this.hV is null or undefined\");if(this.hV.length%2==1)throw new Error(\"value hex must be even length: n=\"+\"\".length+\",v=\"+this.hV);var t=this.hV.length/2,e=t.toString(16);if(e.length%2==1&&(e=\"0\"+e),t<128)return e;var r=e.length/2;if(r>15)throw\"ASN.1 length too long to represent by 8x: n = \"+t.toString(16);return(128+r).toString(16)+e},this.getEncodedHex=function(){return(null==this.hTLV||this.isModified)&&(this.hV=this.getFreshValueHex(),this.hL=this.getLengthHexFromValue(),this.hTLV=this.hT+this.hL+this.hV,this.isModified=!1),this.hTLV},this.getValueHex=function(){return this.getEncodedHex(),this.hV},this.getFreshValueHex=function(){return\"\"},this.setByParam=function(t){this.params=t},null!=t&&null!=t.tlv&&(this.hTLV=t.tlv,this.isModified=!1)},br.asn1.DERAbstractString=function(t){br.asn1.DERAbstractString.superclass.constructor.call(this);this.getString=function(){return this.s},this.setString=function(t){this.hTLV=null,this.isModified=!0,this.s=t,this.hV=Dr(this.s).toLowerCase()},this.setStringHex=function(t){this.hTLV=null,this.isModified=!0,this.s=null,this.hV=t},this.getFreshValueHex=function(){return this.hV},void 0!==t&&(\"string\"==typeof t?this.setString(t):void 0!==t.str?this.setString(t.str):void 0!==t.hex&&this.setStringHex(t.hex))},o.lang.extend(br.asn1.DERAbstractString,br.asn1.ASN1Object),br.asn1.DERAbstractTime=function(t){br.asn1.DERAbstractTime.superclass.constructor.call(this);this.localDateToUTC=function(t){var e=t.getTime()+6e4*t.getTimezoneOffset();return new Date(e)},this.formatDate=function(t,e,r){var n=this.zeroPadding,i=this.localDateToUTC(t),o=String(i.getFullYear());\"utc\"==e&&(o=o.substr(2,2));var s=o+n(String(i.getMonth()+1),2)+n(String(i.getDate()),2)+n(String(i.getHours()),2)+n(String(i.getMinutes()),2)+n(String(i.getSeconds()),2);if(!0===r){var a=i.getMilliseconds();if(0!=a){var u=n(String(a),3);s=s+\".\"+(u=u.replace(/[0]+$/,\"\"))}}return s+\"Z\"},this.zeroPadding=function(t,e){return t.length>=e?t:new Array(e-t.length+1).join(\"0\")+t},this.getString=function(){return this.s},this.setString=function(t){this.hTLV=null,this.isModified=!0,this.s=t,this.hV=Pr(t)},this.setByDateValue=function(t,e,r,n,i,o){var s=new Date(Date.UTC(t,e-1,r,n,i,o,0));this.setByDate(s)},this.getFreshValueHex=function(){return this.hV}},o.lang.extend(br.asn1.DERAbstractTime,br.asn1.ASN1Object),br.asn1.DERAbstractStructured=function(t){br.asn1.DERAbstractString.superclass.constructor.call(this);this.setByASN1ObjectArray=function(t){this.hTLV=null,this.isModified=!0,this.asn1Array=t},this.appendASN1Object=function(t){this.hTLV=null,this.isModified=!0,this.asn1Array.push(t)},this.asn1Array=new Array,void 0!==t&&void 0!==t.array&&(this.asn1Array=t.array)},o.lang.extend(br.asn1.DERAbstractStructured,br.asn1.ASN1Object),br.asn1.DERBoolean=function(t){br.asn1.DERBoolean.superclass.constructor.call(this),this.hT=\"01\",this.hTLV=0==t?\"010100\":\"0101ff\"},o.lang.extend(br.asn1.DERBoolean,br.asn1.ASN1Object),br.asn1.DERInteger=function(t){br.asn1.DERInteger.superclass.constructor.call(this),this.hT=\"02\",this.setByBigInteger=function(t){this.hTLV=null,this.isModified=!0,this.hV=br.asn1.ASN1Util.bigIntToMinTwosComplementsHex(t)},this.setByInteger=function(t){var e=new F(String(t),10);this.setByBigInteger(e)},this.setValueHex=function(t){this.hV=t},this.getFreshValueHex=function(){return this.hV},void 0!==t&&(void 0!==t.bigint?this.setByBigInteger(t.bigint):void 0!==t.int?this.setByInteger(t.int):\"number\"==typeof t?this.setByInteger(t):void 0!==t.hex&&this.setValueHex(t.hex))},o.lang.extend(br.asn1.DERInteger,br.asn1.ASN1Object),br.asn1.DERBitString=function(t){if(void 0!==t&&void 0!==t.obj){var e=br.asn1.ASN1Util.newObject(t.obj);t.hex=\"00\"+e.getEncodedHex()}br.asn1.DERBitString.superclass.constructor.call(this),this.hT=\"03\",this.setHexValueIncludingUnusedBits=function(t){this.hTLV=null,this.isModified=!0,this.hV=t},this.setUnusedBitsAndHexValue=function(t,e){if(t<0||7<t)throw\"unused bits shall be from 0 to 7: u = \"+t;var r=\"0\"+t;this.hTLV=null,this.isModified=!0,this.hV=r+e},this.setByBinaryString=function(t){var e=8-(t=t.replace(/0+$/,\"\")).length%8;8==e&&(e=0);for(var r=0;r<=e;r++)t+=\"0\";var n=\"\";for(r=0;r<t.length-1;r+=8){var i=t.substr(r,8),o=parseInt(i,2).toString(16);1==o.length&&(o=\"0\"+o),n+=o}this.hTLV=null,this.isModified=!0,this.hV=\"0\"+e+n},this.setByBooleanArray=function(t){for(var e=\"\",r=0;r<t.length;r++)1==t[r]?e+=\"1\":e+=\"0\";this.setByBinaryString(e)},this.newFalseArray=function(t){for(var e=new Array(t),r=0;r<t;r++)e[r]=!1;return e},this.getFreshValueHex=function(){return this.hV},void 0!==t&&(\"string\"==typeof t&&t.toLowerCase().match(/^[0-9a-f]+$/)?this.setHexValueIncludingUnusedBits(t):void 0!==t.hex?this.setHexValueIncludingUnusedBits(t.hex):void 0!==t.bin?this.setByBinaryString(t.bin):void 0!==t.array&&this.setByBooleanArray(t.array))},o.lang.extend(br.asn1.DERBitString,br.asn1.ASN1Object),br.asn1.DEROctetString=function(t){if(void 0!==t&&void 0!==t.obj){var e=br.asn1.ASN1Util.newObject(t.obj);t.hex=e.getEncodedHex()}br.asn1.DEROctetString.superclass.constructor.call(this,t),this.hT=\"04\"},o.lang.extend(br.asn1.DEROctetString,br.asn1.DERAbstractString),br.asn1.DERNull=function(){br.asn1.DERNull.superclass.constructor.call(this),this.hT=\"05\",this.hTLV=\"0500\"},o.lang.extend(br.asn1.DERNull,br.asn1.ASN1Object),br.asn1.DERObjectIdentifier=function(t){br.asn1.DERObjectIdentifier.superclass.constructor.call(this),this.hT=\"06\",this.setValueHex=function(t){this.hTLV=null,this.isModified=!0,this.s=null,this.hV=t},this.setValueOidString=function(t){var e=function r(t){var e=function t(e){var r=e.toString(16);return 1==r.length&&(r=\"0\"+r),r},r=function t(r){var n=\"\",i=parseInt(r,10).toString(2),o=7-i.length%7;7==o&&(o=0);for(var s=\"\",a=0;a<o;a++)s+=\"0\";i=s+i;for(a=0;a<i.length-1;a+=7){var u=i.substr(a,7);a!=i.length-7&&(u=\"1\"+u),n+=e(parseInt(u,2))}return n};try{if(!t.match(/^[0-9.]+$/))return null;var n=\"\",i=t.split(\".\"),o=40*parseInt(i[0],10)+parseInt(i[1],10);n+=e(o),i.splice(0,2);for(var s=0;s<i.length;s++)n+=r(i[s]);return n}catch(t){return null}}(t);if(null==e)throw new Error(\"malformed oid string: \"+t);this.hTLV=null,this.isModified=!0,this.s=null,this.hV=e},this.setValueName=function(t){var e=br.asn1.x509.OID.name2oid(t);if(\"\"===e)throw new Error(\"DERObjectIdentifier oidName undefined: \"+t);this.setValueOidString(e)},this.setValueNameOrOid=function(t){t.match(/^[0-2].[0-9.]+$/)?this.setValueOidString(t):this.setValueName(t)},this.getFreshValueHex=function(){return this.hV},this.setByParam=function(t){\"string\"==typeof t?this.setValueNameOrOid(t):void 0!==t.oid?this.setValueNameOrOid(t.oid):void 0!==t.name?this.setValueNameOrOid(t.name):void 0!==t.hex&&this.setValueHex(t.hex)},void 0!==t&&this.setByParam(t)},o.lang.extend(br.asn1.DERObjectIdentifier,br.asn1.ASN1Object),br.asn1.DEREnumerated=function(t){br.asn1.DEREnumerated.superclass.constructor.call(this),this.hT=\"0a\",this.setByBigInteger=function(t){this.hTLV=null,this.isModified=!0,this.hV=br.asn1.ASN1Util.bigIntToMinTwosComplementsHex(t)},this.setByInteger=function(t){var e=new F(String(t),10);this.setByBigInteger(e)},this.setValueHex=function(t){this.hV=t},this.getFreshValueHex=function(){return this.hV},void 0!==t&&(void 0!==t.int?this.setByInteger(t.int):\"number\"==typeof t?this.setByInteger(t):void 0!==t.hex&&this.setValueHex(t.hex))},o.lang.extend(br.asn1.DEREnumerated,br.asn1.ASN1Object),br.asn1.DERUTF8String=function(t){br.asn1.DERUTF8String.superclass.constructor.call(this,t),this.hT=\"0c\"},o.lang.extend(br.asn1.DERUTF8String,br.asn1.DERAbstractString),br.asn1.DERNumericString=function(t){br.asn1.DERNumericString.superclass.constructor.call(this,t),this.hT=\"12\"},o.lang.extend(br.asn1.DERNumericString,br.asn1.DERAbstractString),br.asn1.DERPrintableString=function(t){br.asn1.DERPrintableString.superclass.constructor.call(this,t),this.hT=\"13\"},o.lang.extend(br.asn1.DERPrintableString,br.asn1.DERAbstractString),br.asn1.DERTeletexString=function(t){br.asn1.DERTeletexString.superclass.constructor.call(this,t),this.hT=\"14\"},o.lang.extend(br.asn1.DERTeletexString,br.asn1.DERAbstractString),br.asn1.DERIA5String=function(t){br.asn1.DERIA5String.superclass.constructor.call(this,t),this.hT=\"16\"},o.lang.extend(br.asn1.DERIA5String,br.asn1.DERAbstractString),br.asn1.DERVisibleString=function(t){br.asn1.DERIA5String.superclass.constructor.call(this,t),this.hT=\"1a\"},o.lang.extend(br.asn1.DERVisibleString,br.asn1.DERAbstractString),br.asn1.DERBMPString=function(t){br.asn1.DERBMPString.superclass.constructor.call(this,t),this.hT=\"1e\"},o.lang.extend(br.asn1.DERBMPString,br.asn1.DERAbstractString),br.asn1.DERUTCTime=function(t){br.asn1.DERUTCTime.superclass.constructor.call(this,t),this.hT=\"17\",this.setByDate=function(t){this.hTLV=null,this.isModified=!0,this.date=t,this.s=this.formatDate(this.date,\"utc\"),this.hV=Pr(this.s)},this.getFreshValueHex=function(){return void 0===this.date&&void 0===this.s&&(this.date=new Date,this.s=this.formatDate(this.date,\"utc\"),this.hV=Pr(this.s)),this.hV},void 0!==t&&(void 0!==t.str?this.setString(t.str):\"string\"==typeof t&&t.match(/^[0-9]{12}Z$/)?this.setString(t):void 0!==t.hex?this.setStringHex(t.hex):void 0!==t.date&&this.setByDate(t.date))},o.lang.extend(br.asn1.DERUTCTime,br.asn1.DERAbstractTime),br.asn1.DERGeneralizedTime=function(t){br.asn1.DERGeneralizedTime.superclass.constructor.call(this,t),this.hT=\"18\",this.withMillis=!1,this.setByDate=function(t){this.hTLV=null,this.isModified=!0,this.date=t,this.s=this.formatDate(this.date,\"gen\",this.withMillis),this.hV=Pr(this.s)},this.getFreshValueHex=function(){return void 0===this.date&&void 0===this.s&&(this.date=new Date,this.s=this.formatDate(this.date,\"gen\",this.withMillis),this.hV=Pr(this.s)),this.hV},void 0!==t&&(void 0!==t.str?this.setString(t.str):\"string\"==typeof t&&t.match(/^[0-9]{14}Z$/)?this.setString(t):void 0!==t.hex?this.setStringHex(t.hex):void 0!==t.date&&this.setByDate(t.date),!0===t.millis&&(this.withMillis=!0))},o.lang.extend(br.asn1.DERGeneralizedTime,br.asn1.DERAbstractTime),br.asn1.DERSequence=function(t){br.asn1.DERSequence.superclass.constructor.call(this,t),this.hT=\"30\",this.getFreshValueHex=function(){for(var t=\"\",e=0;e<this.asn1Array.length;e++){t+=this.asn1Array[e].getEncodedHex()}return this.hV=t,this.hV}},o.lang.extend(br.asn1.DERSequence,br.asn1.DERAbstractStructured),br.asn1.DERSet=function(t){br.asn1.DERSet.superclass.constructor.call(this,t),this.hT=\"31\",this.sortFlag=!0,this.getFreshValueHex=function(){for(var t=new Array,e=0;e<this.asn1Array.length;e++){var r=this.asn1Array[e];t.push(r.getEncodedHex())}return 1==this.sortFlag&&t.sort(),this.hV=t.join(\"\"),this.hV},void 0!==t&&void 0!==t.sortflag&&0==t.sortflag&&(this.sortFlag=!1)},o.lang.extend(br.asn1.DERSet,br.asn1.DERAbstractStructured),br.asn1.DERTaggedObject=function(t){br.asn1.DERTaggedObject.superclass.constructor.call(this);var e=br.asn1;this.hT=\"a0\",this.hV=\"\",this.isExplicit=!0,this.asn1Object=null,this.setASN1Object=function(t,e,r){this.hT=e,this.isExplicit=t,this.asn1Object=r,this.isExplicit?(this.hV=this.asn1Object.getEncodedHex(),this.hTLV=null,this.isModified=!0):(this.hV=null,this.hTLV=r.getEncodedHex(),this.hTLV=this.hTLV.replace(/^../,e),this.isModified=!1)},this.getFreshValueHex=function(){return this.hV},this.setByParam=function(t){null!=t.tag&&(this.hT=t.tag),null!=t.explicit&&(this.isExplicit=t.explicit),null!=t.tage&&(this.hT=t.tage,this.isExplicit=!0),null!=t.tagi&&(this.hT=t.tagi,this.isExplicit=!1),null!=t.obj&&(t.obj instanceof e.ASN1Object?(this.asn1Object=t.obj,this.setASN1Object(this.isExplicit,this.hT,this.asn1Object)):\"object\"==r(t.obj)&&(this.asn1Object=e.ASN1Util.newObject(t.obj),this.setASN1Object(this.isExplicit,this.hT,this.asn1Object)))},null!=t&&this.setByParam(t)},o.lang.extend(br.asn1.DERTaggedObject,br.asn1.ASN1Object);var br,wr,Fr,Er=new function(){};function xr(t){for(var e=new Array,r=0;r<t.length;r++)e[r]=t.charCodeAt(r);return e}function Ar(t){for(var e=\"\",r=0;r<t.length;r++)e+=String.fromCharCode(t[r]);return e}function kr(t){for(var e=\"\",r=0;r<t.length;r++){var n=t[r].toString(16);1==n.length&&(n=\"0\"+n),e+=n}return e}function Pr(t){return kr(xr(t))}function Cr(t){return t=(t=(t=t.replace(/\\=/g,\"\")).replace(/\\+/g,\"-\")).replace(/\\//g,\"_\")}function Tr(t){return t.length%4==2?t+=\"==\":t.length%4==3&&(t+=\"=\"),t=(t=t.replace(/-/g,\"+\")).replace(/_/g,\"/\")}function Rr(t){return t.length%2==1&&(t=\"0\"+t),Cr(S(t))}function Ir(t){return b(Tr(t))}function Dr(t){return qr(Gr(t))}function Lr(t){return decodeURIComponent(Jr(t))}function Nr(t){for(var e=\"\",r=0;r<t.length-1;r+=2)e+=String.fromCharCode(parseInt(t.substr(r,2),16));return e}function Ur(t){for(var e=\"\",r=0;r<t.length;r++)e+=(\"0\"+t.charCodeAt(r).toString(16)).slice(-2);return e}function Br(t){return S(t)}function Or(t){var e=Br(t).replace(/(.{64})/g,\"$1\\r\\n\");return e=e.replace(/\\r\\n$/,\"\")}function jr(t){return b(t.replace(/[^0-9A-Za-z\\/+=]*/g,\"\"))}function Mr(t,e){return\"-----BEGIN \"+e+\"-----\\r\\n\"+Or(t)+\"\\r\\n-----END \"+e+\"-----\\r\\n\"}function Hr(t,e){if(-1==t.indexOf(\"-----BEGIN \"))throw\"can't find PEM header: \"+e;return jr(t=void 0!==e?(t=t.replace(new RegExp(\"^[^]*-----BEGIN \"+e+\"-----\"),\"\")).replace(new RegExp(\"-----END \"+e+\"-----[^]*$\"),\"\"):(t=t.replace(/^[^]*-----BEGIN [^-]+-----/,\"\")).replace(/-----END [^-]+-----[^]*$/,\"\"))}function Vr(t){var e,r,n,i,o,s,a,u,c,h,l;if(l=t.match(/^(\\d{2}|\\d{4})(\\d\\d)(\\d\\d)(\\d\\d)(\\d\\d)(\\d\\d)(|\\.\\d+)Z$/))return u=l[1],e=parseInt(u),2===u.length&&(50<=e&&e<100?e=1900+e:0<=e&&e<50&&(e=2e3+e)),r=parseInt(l[2])-1,n=parseInt(l[3]),i=parseInt(l[4]),o=parseInt(l[5]),s=parseInt(l[6]),a=0,\"\"!==(c=l[7])&&(h=(c.substr(1)+\"00\").substr(0,3),a=parseInt(h)),Date.UTC(e,r,n,i,o,s,a);throw\"unsupported zulu format: \"+t}function Kr(t){return~~(Vr(t)/1e3)}function qr(t){return t.replace(/%/g,\"\")}function Jr(t){return t.replace(/(..)/g,\"%$1\")}function Wr(t){var e=\"malformed IPv6 address\";if(!t.match(/^[0-9A-Fa-f:]+$/))throw e;var r=(t=t.toLowerCase()).split(\":\").length-1;if(r<2)throw e;var n=\":\".repeat(7-r+2),i=(t=t.replace(\"::\",n)).split(\":\");if(8!=i.length)throw e;for(var o=0;o<8;o++)i[o]=(\"0000\"+i[o]).slice(-4);return i.join(\"\")}function zr(t){if(!t.match(/^[0-9A-Fa-f]{32}$/))throw\"malformed IPv6 address octet\";for(var e=(t=t.toLowerCase()).match(/.{1,4}/g),r=0;r<8;r++)e[r]=e[r].replace(/^0+/,\"\"),\"\"==e[r]&&(e[r]=\"0\");var n=(t=\":\"+e.join(\":\")+\":\").match(/:(0:){2,}/g);if(null===n)return t.slice(1,-1);var i=\"\";for(r=0;r<n.length;r++)n[r].length>i.length&&(i=n[r]);return(t=t.replace(i,\"::\")).slice(1,-1)}function Yr(t){var e=\"malformed hex value\";if(!t.match(/^([0-9A-Fa-f][0-9A-Fa-f]){1,}$/))throw e;if(8!=t.length)return 32==t.length?zr(t):t;try{return parseInt(t.substr(0,2),16)+\".\"+parseInt(t.substr(2,2),16)+\".\"+parseInt(t.substr(4,2),16)+\".\"+parseInt(t.substr(6,2),16)}catch(t){throw e}}function Gr(t){for(var e=encodeURIComponent(t),r=\"\",n=0;n<e.length;n++)\"%\"==e[n]?(r+=e.substr(n,3),n+=2):r=r+\"%\"+Pr(e[n]);return r}function Xr(t){return!(t.length%2!=0||!t.match(/^[0-9a-f]+$/)&&!t.match(/^[0-9A-F]+$/))}function $r(t){return t.length%2==1?\"0\"+t:t.substr(0,1)>\"7\"?\"00\"+t:t}Er.getLblen=function(t,e){if(\"8\"!=t.substr(e+2,1))return 1;var r=parseInt(t.substr(e+3,1));return 0==r?-1:0<r&&r<10?r+1:-2},Er.getL=function(t,e){var r=Er.getLblen(t,e);return r<1?\"\":t.substr(e+2,2*r)},Er.getVblen=function(t,e){var r;return\"\"==(r=Er.getL(t,e))?-1:(\"8\"===r.substr(0,1)?new F(r.substr(2),16):new F(r,16)).intValue()},Er.getVidx=function(t,e){var r=Er.getLblen(t,e);return r<0?r:e+2*(r+1)},Er.getV=function(t,e){var r=Er.getVidx(t,e),n=Er.getVblen(t,e);return t.substr(r,2*n)},Er.getTLV=function(t,e){return t.substr(e,2)+Er.getL(t,e)+Er.getV(t,e)},Er.getTLVblen=function(t,e){return 2+2*Er.getLblen(t,e)+2*Er.getVblen(t,e)},Er.getNextSiblingIdx=function(t,e){return Er.getVidx(t,e)+2*Er.getVblen(t,e)},Er.getChildIdx=function(t,e){var r,n,i,o=Er,s=[];r=o.getVidx(t,e),n=2*o.getVblen(t,e),\"03\"==t.substr(e,2)&&(r+=2,n-=2),i=0;for(var a=r;i<=n;){var u=o.getTLVblen(t,a);if((i+=u)<=n&&s.push(a),a+=u,i>=n)break}return s},Er.getNthChildIdx=function(t,e,r){return Er.getChildIdx(t,e)[r]},Er.getIdxbyList=function(t,e,r,n){var i,o,s=Er;return 0==r.length?void 0!==n&&t.substr(e,2)!==n?-1:e:(i=r.shift())>=(o=s.getChildIdx(t,e)).length?-1:s.getIdxbyList(t,o[i],r,n)},Er.getIdxbyListEx=function(t,e,r,n){var i,o,s=Er;if(0==r.length)return void 0!==n&&t.substr(e,2)!==n?-1:e;i=r.shift(),o=s.getChildIdx(t,e);for(var a=0,u=0;u<o.length;u++){var c=t.substr(o[u],2);if(\"number\"==typeof i&&!s.isContextTag(c)&&a==i||\"string\"==typeof i&&s.isContextTag(c,i))return s.getIdxbyListEx(t,o[u],r,n);s.isContextTag(c)||a++}return-1},Er.getTLVbyList=function(t,e,r,n){var i=Er,o=i.getIdxbyList(t,e,r,n);return-1==o||o>=t.length?null:i.getTLV(t,o)},Er.getTLVbyListEx=function(t,e,r,n){var i=Er,o=i.getIdxbyListEx(t,e,r,n);return-1==o?null:i.getTLV(t,o)},Er.getVbyList=function(t,e,r,n,i){var o,s,a=Er;return-1==(o=a.getIdxbyList(t,e,r,n))||o>=t.length?null:(s=a.getV(t,o),!0===i&&(s=s.substr(2)),s)},Er.getVbyListEx=function(t,e,r,n,i){var o,s,a=Er;return-1==(o=a.getIdxbyListEx(t,e,r,n))?null:(s=a.getV(t,o),\"03\"==t.substr(o,2)&&!1!==i&&(s=s.substr(2)),s)},Er.getInt=function(t,e,r){null==r&&(r=-1);try{var n=t.substr(e,2);if(\"02\"!=n&&\"03\"!=n)return r;var i=Er.getV(t,e);return\"02\"==n?parseInt(i,16):function o(t){try{var e=t.substr(0,2);if(\"00\"==e)return parseInt(t.substr(2),16);var r=parseInt(e,16),n=t.substr(2),i=parseInt(n,16).toString(2);return\"0\"==i&&(i=\"00000000\"),i=i.slice(0,0-r),parseInt(i,2)}catch(t){return-1}}(i)}catch(t){return r}},Er.getOID=function(t,e,r){null==r&&(r=null);try{return\"06\"!=t.substr(e,2)?r:function n(t){if(!Xr(t))return null;try{var e=[],r=t.substr(0,2),n=parseInt(r,16);e[0]=new String(Math.floor(n/40)),e[1]=new String(n%40);for(var i=t.substr(2),o=[],s=0;s<i.length/2;s++)o.push(parseInt(i.substr(2*s,2),16));var a=[],u=\"\";for(s=0;s<o.length;s++)128&o[s]?u+=Qr((127&o[s]).toString(2),7):(u+=Qr((127&o[s]).toString(2),7),a.push(new String(parseInt(u,2))),u=\"\");var c=e.join(\".\");return a.length>0&&(c=c+\".\"+a.join(\".\")),c}catch(t){return null}}(Er.getV(t,e))}catch(t){return r}},Er.getOIDName=function(t,e,r){null==r&&(r=null);try{var n=Er.getOID(t,e,r);if(n==r)return r;var i=br.asn1.x509.OID.oid2name(n);return\"\"==i?n:i}catch(t){return r}},Er.getString=function(t,e,r){null==r&&(r=null);try{return Nr(Er.getV(t,e))}catch(t){return r}},Er.hextooidstr=function(t){var e=function t(e,r){return e.length>=r?e:new Array(r-e.length+1).join(\"0\")+e},r=[],n=t.substr(0,2),i=parseInt(n,16);r[0]=new String(Math.floor(i/40)),r[1]=new String(i%40);for(var o=t.substr(2),s=[],a=0;a<o.length/2;a++)s.push(parseInt(o.substr(2*a,2),16));var u=[],c=\"\";for(a=0;a<s.length;a++)128&s[a]?c+=e((127&s[a]).toString(2),7):(c+=e((127&s[a]).toString(2),7),u.push(new String(parseInt(c,2))),c=\"\");var h=r.join(\".\");return u.length>0&&(h=h+\".\"+u.join(\".\")),h},Er.dump=function(t,e,r,n){var i=Er,o=i.getV,s=i.dump,a=i.getChildIdx,u=t;t instanceof br.asn1.ASN1Object&&(u=t.getEncodedHex());var c=function t(e,r){return e.length<=2*r?e:e.substr(0,r)+\"..(total \"+e.length/2+\"bytes)..\"+e.substr(e.length-r,r)};void 0===e&&(e={ommit_long_octet:32}),void 0===r&&(r=0),void 0===n&&(n=\"\");var h,l=e.ommit_long_octet;if(\"01\"==(h=u.substr(r,2)))return\"00\"==(f=o(u,r))?n+\"BOOLEAN FALSE\\n\":n+\"BOOLEAN TRUE\\n\";if(\"02\"==h)return n+\"INTEGER \"+c(f=o(u,r),l)+\"\\n\";if(\"03\"==h){var f=o(u,r);if(i.isASN1HEX(f.substr(2))){var g=n+\"BITSTRING, encapsulates\\n\";return g+=s(f.substr(2),e,0,n+\"  \")}return n+\"BITSTRING \"+c(f,l)+\"\\n\"}if(\"04\"==h){f=o(u,r);if(i.isASN1HEX(f)){g=n+\"OCTETSTRING, encapsulates\\n\";return g+=s(f,e,0,n+\"  \")}return n+\"OCTETSTRING \"+c(f,l)+\"\\n\"}if(\"05\"==h)return n+\"NULL\\n\";if(\"06\"==h){var d=o(u,r),p=br.asn1.ASN1Util.oidHexToInt(d),v=br.asn1.x509.OID.oid2name(p),y=p.replace(/\\./g,\" \");return\"\"!=v?n+\"ObjectIdentifier \"+v+\" (\"+y+\")\\n\":n+\"ObjectIdentifier (\"+y+\")\\n\"}if(\"0a\"==h)return n+\"ENUMERATED \"+parseInt(o(u,r))+\"\\n\";if(\"0c\"==h)return n+\"UTF8String '\"+Lr(o(u,r))+\"'\\n\";if(\"13\"==h)return n+\"PrintableString '\"+Lr(o(u,r))+\"'\\n\";if(\"14\"==h)return n+\"TeletexString '\"+Lr(o(u,r))+\"'\\n\";if(\"16\"==h)return n+\"IA5String '\"+Lr(o(u,r))+\"'\\n\";if(\"17\"==h)return n+\"UTCTime \"+Lr(o(u,r))+\"\\n\";if(\"18\"==h)return n+\"GeneralizedTime \"+Lr(o(u,r))+\"\\n\";if(\"1a\"==h)return n+\"VisualString '\"+Lr(o(u,r))+\"'\\n\";if(\"1e\"==h)return n+\"BMPString '\"+Lr(o(u,r))+\"'\\n\";if(\"30\"==h){if(\"3000\"==u.substr(r,4))return n+\"SEQUENCE {}\\n\";g=n+\"SEQUENCE\\n\";var m=e;if((2==(b=a(u,r)).length||3==b.length)&&\"06\"==u.substr(b[0],2)&&\"04\"==u.substr(b[b.length-1],2)){v=i.oidname(o(u,b[0]));var _=JSON.parse(JSON.stringify(e));_.x509ExtName=v,m=_}for(var S=0;S<b.length;S++)g+=s(u,m,b[S],n+\"  \");return g}if(\"31\"==h){g=n+\"SET\\n\";var b=a(u,r);for(S=0;S<b.length;S++)g+=s(u,e,b[S],n+\"  \");return g}if(0!=(128&(h=parseInt(h,16)))){var w=31&h;if(0!=(32&h)){for(g=n+\"[\"+w+\"]\\n\",b=a(u,r),S=0;S<b.length;S++)g+=s(u,e,b[S],n+\"  \");return g}f=o(u,r);if(Er.isASN1HEX(f)){var g=n+\"[\"+w+\"]\\n\";return g+=s(f,e,0,n+\"  \")}return(\"68747470\"==f.substr(0,8)||\"subjectAltName\"===e.x509ExtName&&2==w)&&(f=Lr(f)),g=n+\"[\"+w+\"] \"+f+\"\\n\"}return n+\"UNKNOWN(\"+h+\") \"+o(u,r)+\"\\n\"},Er.isContextTag=function(t,e){var r,n;t=t.toLowerCase();try{r=parseInt(t,16)}catch(t){return-1}if(void 0===e)return 128==(192&r);try{return null!=e.match(/^\\[[0-9]+\\]$/)&&(!((n=parseInt(e.substr(1,e.length-1),10))>31)&&(128==(192&r)&&(31&r)==n))}catch(t){return!1}},Er.isASN1HEX=function(t){var e=Er;if(t.length%2==1)return!1;var r=e.getVblen(t,0),n=t.substr(0,2),i=e.getL(t,0);return t.length-n.length-i.length==2*r},Er.checkStrictDER=function(t,e,r,n,i){var o=Er;if(void 0===r){if(\"string\"!=typeof t)throw new Error(\"not hex string\");if(t=t.toLowerCase(),!br.lang.String.isHex(t))throw new Error(\"not hex string\");r=t.length,i=(n=t.length/2)<128?1:Math.ceil(n.toString(16))+1}if(o.getL(t,e).length>2*i)throw new Error(\"L of TLV too long: idx=\"+e);var s=o.getVblen(t,e);if(s>n)throw new Error(\"value of L too long than hex: idx=\"+e);var a=o.getTLV(t,e),u=a.length-2-o.getL(t,e).length;if(u!==2*s)throw new Error(\"V string length and L's value not the same:\"+u+\"/\"+2*s);if(0===e&&t.length!=a.length)throw new Error(\"total length and TLV length unmatch:\"+t.length+\"!=\"+a.length);var c=t.substr(e,2);if(\"02\"===c){var h=o.getVidx(t,e);if(\"00\"==t.substr(h,2)&&t.charCodeAt(h+2)<56)throw new Error(\"not least zeros for DER INTEGER\")}if(32&parseInt(c,16)){for(var l=o.getVblen(t,e),f=0,g=o.getChildIdx(t,e),d=0;d<g.length;d++){f+=o.getTLV(t,g[d]).length,o.checkStrictDER(t,g[d],r,n,i)}if(2*l!=f)throw new Error(\"sum of children's TLV length and L unmatch: \"+2*l+\"!=\"+f)}},Er.oidname=function(t){var e=br.asn1;br.lang.String.isHex(t)&&(t=e.ASN1Util.oidHexToInt(t));var r=e.x509.OID.oid2name(t);return\"\"===r&&(r=t),r},void 0!==br&&br||(e.KJUR=br={}),void 0!==br.lang&&br.lang||(br.lang={}),br.lang.String=function(){},\"function\"==typeof t?(e.utf8tob64u=wr=function e(r){return Cr(t.from(r,\"utf8\").toString(\"base64\"))},e.b64utoutf8=Fr=function e(r){return t.from(Tr(r),\"base64\").toString(\"utf8\")}):(e.utf8tob64u=wr=function t(e){return Rr(qr(Gr(e)))},e.b64utoutf8=Fr=function t(e){return decodeURIComponent(Jr(Ir(e)))}),br.lang.String.isInteger=function(t){return!!t.match(/^[0-9]+$/)||!!t.match(/^-[0-9]+$/)},br.lang.String.isHex=function(t){return Xr(t)},br.lang.String.isBase64=function(t){return!(!(t=t.replace(/\\s+/g,\"\")).match(/^[0-9A-Za-z+\\/]+={0,3}$/)||t.length%4!=0)},br.lang.String.isBase64URL=function(t){return!t.match(/[+/=]/)&&(t=Tr(t),br.lang.String.isBase64(t))},br.lang.String.isIntegerArray=function(t){return!!(t=t.replace(/\\s+/g,\"\")).match(/^\\[[0-9,]+\\]$/)},br.lang.String.isPrintable=function(t){return null!==t.match(/^[0-9A-Za-z '()+,-./:=?]*$/)},br.lang.String.isIA5=function(t){return null!==t.match(/^[\\x20-\\x21\\x23-\\x7f]*$/)},br.lang.String.isMail=function(t){return null!==t.match(/^[A-Za-z0-9]{1}[A-Za-z0-9_.-]*@{1}[A-Za-z0-9_.-]{1,}\\.[A-Za-z0-9]{1,}$/)};var Qr=function t(e,r,n){return null==n&&(n=\"0\"),e.length>=r?e:new Array(r-e.length+1).join(n)+e};void 0!==br&&br||(e.KJUR=br={}),void 0!==br.crypto&&br.crypto||(br.crypto={}),br.crypto.Util=new function(){this.DIGESTINFOHEAD={sha1:\"3021300906052b0e03021a05000414\",sha224:\"302d300d06096086480165030402040500041c\",sha256:\"3031300d060960864801650304020105000420\",sha384:\"3041300d060960864801650304020205000430\",sha512:\"3051300d060960864801650304020305000440\",md2:\"3020300c06082a864886f70d020205000410\",md5:\"3020300c06082a864886f70d020505000410\",ripemd160:\"3021300906052b2403020105000414\"},this.DEFAULTPROVIDER={md5:\"cryptojs\",sha1:\"cryptojs\",sha224:\"cryptojs\",sha256:\"cryptojs\",sha384:\"cryptojs\",sha512:\"cryptojs\",ripemd160:\"cryptojs\",hmacmd5:\"cryptojs\",hmacsha1:\"cryptojs\",hmacsha224:\"cryptojs\",hmacsha256:\"cryptojs\",hmacsha384:\"cryptojs\",hmacsha512:\"cryptojs\",hmacripemd160:\"cryptojs\",MD5withRSA:\"cryptojs/jsrsa\",SHA1withRSA:\"cryptojs/jsrsa\",SHA224withRSA:\"cryptojs/jsrsa\",SHA256withRSA:\"cryptojs/jsrsa\",SHA384withRSA:\"cryptojs/jsrsa\",SHA512withRSA:\"cryptojs/jsrsa\",RIPEMD160withRSA:\"cryptojs/jsrsa\",MD5withECDSA:\"cryptojs/jsrsa\",SHA1withECDSA:\"cryptojs/jsrsa\",SHA224withECDSA:\"cryptojs/jsrsa\",SHA256withECDSA:\"cryptojs/jsrsa\",SHA384withECDSA:\"cryptojs/jsrsa\",SHA512withECDSA:\"cryptojs/jsrsa\",RIPEMD160withECDSA:\"cryptojs/jsrsa\",SHA1withDSA:\"cryptojs/jsrsa\",SHA224withDSA:\"cryptojs/jsrsa\",SHA256withDSA:\"cryptojs/jsrsa\",MD5withRSAandMGF1:\"cryptojs/jsrsa\",SHAwithRSAandMGF1:\"cryptojs/jsrsa\",SHA1withRSAandMGF1:\"cryptojs/jsrsa\",SHA224withRSAandMGF1:\"cryptojs/jsrsa\",SHA256withRSAandMGF1:\"cryptojs/jsrsa\",SHA384withRSAandMGF1:\"cryptojs/jsrsa\",SHA512withRSAandMGF1:\"cryptojs/jsrsa\",RIPEMD160withRSAandMGF1:\"cryptojs/jsrsa\"},this.CRYPTOJSMESSAGEDIGESTNAME={md5:y.algo.MD5,sha1:y.algo.SHA1,sha224:y.algo.SHA224,sha256:y.algo.SHA256,sha384:y.algo.SHA384,sha512:y.algo.SHA512,ripemd160:y.algo.RIPEMD160},this.getDigestInfoHex=function(t,e){if(void 0===this.DIGESTINFOHEAD[e])throw\"alg not supported in Util.DIGESTINFOHEAD: \"+e;return this.DIGESTINFOHEAD[e]+t},this.getPaddedDigestInfoHex=function(t,e,r){var n=this.getDigestInfoHex(t,e),i=r/4;if(n.length+22>i)throw\"key is too short for SigAlg: keylen=\"+r+\",\"+e;for(var o=\"0001\",s=\"00\"+n,a=\"\",u=i-o.length-s.length,c=0;c<u;c+=2)a+=\"ff\";return o+a+s},this.hashString=function(t,e){return new br.crypto.MessageDigest({alg:e}).digestString(t)},this.hashHex=function(t,e){return new br.crypto.MessageDigest({alg:e}).digestHex(t)},this.sha1=function(t){return this.hashString(t,\"sha1\")},this.sha256=function(t){return this.hashString(t,\"sha256\")},this.sha256Hex=function(t){return this.hashHex(t,\"sha256\")},this.sha512=function(t){return this.hashString(t,\"sha512\")},this.sha512Hex=function(t){return this.hashHex(t,\"sha512\")},this.isKey=function(t){return t instanceof He||t instanceof br.crypto.DSA||t instanceof br.crypto.ECDSA}},br.crypto.Util.md5=function(t){return new br.crypto.MessageDigest({alg:\"md5\",prov:\"cryptojs\"}).digestString(t)},br.crypto.Util.ripemd160=function(t){return new br.crypto.MessageDigest({alg:\"ripemd160\",prov:\"cryptojs\"}).digestString(t)},br.crypto.Util.SECURERANDOMGEN=new Oe,br.crypto.Util.getRandomHexOfNbytes=function(t){var e=new Array(t);return br.crypto.Util.SECURERANDOMGEN.nextBytes(e),kr(e)},br.crypto.Util.getRandomBigIntegerOfNbytes=function(t){return new F(br.crypto.Util.getRandomHexOfNbytes(t),16)},br.crypto.Util.getRandomHexOfNbits=function(t){var e=t%8,r=new Array((t-e)/8+1);return br.crypto.Util.SECURERANDOMGEN.nextBytes(r),r[0]=(255<<e&255^255)&r[0],kr(r)},br.crypto.Util.getRandomBigIntegerOfNbits=function(t){return new F(br.crypto.Util.getRandomHexOfNbits(t),16)},br.crypto.Util.getRandomBigIntegerZeroToMax=function(t){for(var e=t.bitLength();;){var r=br.crypto.Util.getRandomBigIntegerOfNbits(e);if(-1!=t.compareTo(r))return r}},br.crypto.Util.getRandomBigIntegerMinToMax=function(t,e){var r=t.compareTo(e);if(1==r)throw\"biMin is greater than biMax\";if(0==r)return t;var n=e.subtract(t);return br.crypto.Util.getRandomBigIntegerZeroToMax(n).add(t)},br.crypto.MessageDigest=function(t){this.setAlgAndProvider=function(t,e){if(null!==(t=br.crypto.MessageDigest.getCanonicalAlgName(t))&&void 0===e&&(e=br.crypto.Util.DEFAULTPROVIDER[t]),-1!=\":md5:sha1:sha224:sha256:sha384:sha512:ripemd160:\".indexOf(t)&&\"cryptojs\"==e){try{this.md=br.crypto.Util.CRYPTOJSMESSAGEDIGESTNAME[t].create()}catch(e){throw\"setAlgAndProvider hash alg set fail alg=\"+t+\"/\"+e}this.updateString=function(t){this.md.update(t)},this.updateHex=function(t){var e=y.enc.Hex.parse(t);this.md.update(e)},this.digest=function(){return this.md.finalize().toString(y.enc.Hex)},this.digestString=function(t){return this.updateString(t),this.digest()},this.digestHex=function(t){return this.updateHex(t),this.digest()}}if(-1!=\":sha256:\".indexOf(t)&&\"sjcl\"==e){try{this.md=new sjcl.hash.sha256}catch(e){throw\"setAlgAndProvider hash alg set fail alg=\"+t+\"/\"+e}this.updateString=function(t){this.md.update(t)},this.updateHex=function(t){var e=sjcl.codec.hex.toBits(t);this.md.update(e)},this.digest=function(){var t=this.md.finalize();return sjcl.codec.hex.fromBits(t)},this.digestString=function(t){return this.updateString(t),this.digest()},this.digestHex=function(t){return this.updateHex(t),this.digest()}}},this.updateString=function(t){throw\"updateString(str) not supported for this alg/prov: \"+this.algName+\"/\"+this.provName},this.updateHex=function(t){throw\"updateHex(hex) not supported for this alg/prov: \"+this.algName+\"/\"+this.provName},this.digest=function(){throw\"digest() not supported for this alg/prov: \"+this.algName+\"/\"+this.provName},this.digestString=function(t){throw\"digestString(str) not supported for this alg/prov: \"+this.algName+\"/\"+this.provName},this.digestHex=function(t){throw\"digestHex(hex) not supported for this alg/prov: \"+this.algName+\"/\"+this.provName},void 0!==t&&void 0!==t.alg&&(this.algName=t.alg,void 0===t.prov&&(this.provName=br.crypto.Util.DEFAULTPROVIDER[this.algName]),this.setAlgAndProvider(this.algName,this.provName))},br.crypto.MessageDigest.getCanonicalAlgName=function(t){return\"string\"==typeof t&&(t=(t=t.toLowerCase()).replace(/-/,\"\")),t},br.crypto.MessageDigest.getHashLength=function(t){var e=br.crypto.MessageDigest,r=e.getCanonicalAlgName(t);if(void 0===e.HASHLENGTH[r])throw\"not supported algorithm: \"+t;return e.HASHLENGTH[r]},br.crypto.MessageDigest.HASHLENGTH={md5:16,sha1:20,sha224:28,sha256:32,sha384:48,sha512:64,ripemd160:20},br.crypto.Mac=function(t){this.setAlgAndProvider=function(t,e){if(null==(t=t.toLowerCase())&&(t=\"hmacsha1\"),\"hmac\"!=(t=t.toLowerCase()).substr(0,4))throw\"setAlgAndProvider unsupported HMAC alg: \"+t;void 0===e&&(e=br.crypto.Util.DEFAULTPROVIDER[t]),this.algProv=t+\"/\"+e;var r=t.substr(4);if(-1!=\":md5:sha1:sha224:sha256:sha384:sha512:ripemd160:\".indexOf(r)&&\"cryptojs\"==e){try{var n=br.crypto.Util.CRYPTOJSMESSAGEDIGESTNAME[r];this.mac=y.algo.HMAC.create(n,this.pass)}catch(t){throw\"setAlgAndProvider hash alg set fail hashAlg=\"+r+\"/\"+t}this.updateString=function(t){this.mac.update(t)},this.updateHex=function(t){var e=y.enc.Hex.parse(t);this.mac.update(e)},this.doFinal=function(){return this.mac.finalize().toString(y.enc.Hex)},this.doFinalString=function(t){return this.updateString(t),this.doFinal()},this.doFinalHex=function(t){return this.updateHex(t),this.doFinal()}}},this.updateString=function(t){throw\"updateString(str) not supported for this alg/prov: \"+this.algProv},this.updateHex=function(t){throw\"updateHex(hex) not supported for this alg/prov: \"+this.algProv},this.doFinal=function(){throw\"digest() not supported for this alg/prov: \"+this.algProv},this.doFinalString=function(t){throw\"digestString(str) not supported for this alg/prov: \"+this.algProv},this.doFinalHex=function(t){throw\"digestHex(hex) not supported for this alg/prov: \"+this.algProv},this.setPassword=function(t){if(\"string\"==typeof t){var e=t;return t.length%2!=1&&t.match(/^[0-9A-Fa-f]+$/)||(e=Ur(t)),void(this.pass=y.enc.Hex.parse(e))}if(\"object\"!=(void 0===t?\"undefined\":r(t)))throw\"KJUR.crypto.Mac unsupported password type: \"+t;e=null;if(void 0!==t.hex){if(t.hex.length%2!=0||!t.hex.match(/^[0-9A-Fa-f]+$/))throw\"Mac: wrong hex password: \"+t.hex;e=t.hex}if(void 0!==t.utf8&&(e=Dr(t.utf8)),void 0!==t.rstr&&(e=Ur(t.rstr)),void 0!==t.b64&&(e=b(t.b64)),void 0!==t.b64u&&(e=Ir(t.b64u)),null==e)throw\"KJUR.crypto.Mac unsupported password type: \"+t;this.pass=y.enc.Hex.parse(e)},void 0!==t&&(void 0!==t.pass&&this.setPassword(t.pass),void 0!==t.alg&&(this.algName=t.alg,void 0===t.prov&&(this.provName=br.crypto.Util.DEFAULTPROVIDER[this.algName]),this.setAlgAndProvider(this.algName,this.provName)))},br.crypto.Signature=function(t){var e=null;if(this._setAlgNames=function(){var t=this.algName.match(/^(.+)with(.+)$/);t&&(this.mdAlgName=t[1].toLowerCase(),this.pubkeyAlgName=t[2].toLowerCase(),\"rsaandmgf1\"==this.pubkeyAlgName&&\"sha\"==this.mdAlgName&&(this.mdAlgName=\"sha1\"))},this._zeroPaddingOfSignature=function(t,e){for(var r=\"\",n=e/4-t.length,i=0;i<n;i++)r+=\"0\";return r+t},this.setAlgAndProvider=function(t,e){if(this._setAlgNames(),\"cryptojs/jsrsa\"!=e)throw new Error(\"provider not supported: \"+e);if(-1!=\":md5:sha1:sha224:sha256:sha384:sha512:ripemd160:\".indexOf(this.mdAlgName)){try{this.md=new br.crypto.MessageDigest({alg:this.mdAlgName})}catch(t){throw new Error(\"setAlgAndProvider hash alg set fail alg=\"+this.mdAlgName+\"/\"+t)}this.init=function(t,e){var r=null;try{r=void 0===e?Zr.getKey(t):Zr.getKey(t,e)}catch(t){throw\"init failed:\"+t}if(!0===r.isPrivate)this.prvKey=r,this.state=\"SIGN\";else{if(!0!==r.isPublic)throw\"init failed.:\"+r;this.pubKey=r,this.state=\"VERIFY\"}},this.updateString=function(t){this.md.updateString(t)},this.updateHex=function(t){this.md.updateHex(t)},this.sign=function(){if(this.sHashHex=this.md.digest(),void 0===this.prvKey&&void 0!==this.ecprvhex&&void 0!==this.eccurvename&&void 0!==br.crypto.ECDSA&&(this.prvKey=new br.crypto.ECDSA({curve:this.eccurvename,prv:this.ecprvhex})),this.prvKey instanceof He&&\"rsaandmgf1\"===this.pubkeyAlgName)this.hSign=this.prvKey.signWithMessageHashPSS(this.sHashHex,this.mdAlgName,this.pssSaltLen);else if(this.prvKey instanceof He&&\"rsa\"===this.pubkeyAlgName)this.hSign=this.prvKey.signWithMessageHash(this.sHashHex,this.mdAlgName);else if(this.prvKey instanceof br.crypto.ECDSA)this.hSign=this.prvKey.signWithMessageHash(this.sHashHex);else{if(!(this.prvKey instanceof br.crypto.DSA))throw\"Signature: unsupported private key alg: \"+this.pubkeyAlgName;this.hSign=this.prvKey.signWithMessageHash(this.sHashHex)}return this.hSign},this.signString=function(t){return this.updateString(t),this.sign()},this.signHex=function(t){return this.updateHex(t),this.sign()},this.verify=function(t){if(this.sHashHex=this.md.digest(),void 0===this.pubKey&&void 0!==this.ecpubhex&&void 0!==this.eccurvename&&void 0!==br.crypto.ECDSA&&(this.pubKey=new br.crypto.ECDSA({curve:this.eccurvename,pub:this.ecpubhex})),this.pubKey instanceof He&&\"rsaandmgf1\"===this.pubkeyAlgName)return this.pubKey.verifyWithMessageHashPSS(this.sHashHex,t,this.mdAlgName,this.pssSaltLen);if(this.pubKey instanceof He&&\"rsa\"===this.pubkeyAlgName)return this.pubKey.verifyWithMessageHash(this.sHashHex,t);if(void 0!==br.crypto.ECDSA&&this.pubKey instanceof br.crypto.ECDSA)return this.pubKey.verifyWithMessageHash(this.sHashHex,t);if(void 0!==br.crypto.DSA&&this.pubKey instanceof br.crypto.DSA)return this.pubKey.verifyWithMessageHash(this.sHashHex,t);throw\"Signature: unsupported public key alg: \"+this.pubkeyAlgName}}},this.init=function(t,e){throw\"init(key, pass) not supported for this alg:prov=\"+this.algProvName},this.updateString=function(t){throw\"updateString(str) not supported for this alg:prov=\"+this.algProvName},this.updateHex=function(t){throw\"updateHex(hex) not supported for this alg:prov=\"+this.algProvName},this.sign=function(){throw\"sign() not supported for this alg:prov=\"+this.algProvName},this.signString=function(t){throw\"digestString(str) not supported for this alg:prov=\"+this.algProvName},this.signHex=function(t){throw\"digestHex(hex) not supported for this alg:prov=\"+this.algProvName},this.verify=function(t){throw\"verify(hSigVal) not supported for this alg:prov=\"+this.algProvName},this.initParams=t,void 0!==t&&(void 0!==t.alg&&(this.algName=t.alg,void 0===t.prov?this.provName=br.crypto.Util.DEFAULTPROVIDER[this.algName]:this.provName=t.prov,this.algProvName=this.algName+\":\"+this.provName,this.setAlgAndProvider(this.algName,this.provName),this._setAlgNames()),void 0!==t.psssaltlen&&(this.pssSaltLen=t.psssaltlen),void 0!==t.prvkeypem)){if(void 0!==t.prvkeypas)throw\"both prvkeypem and prvkeypas parameters not supported\";try{e=Zr.getKey(t.prvkeypem);this.init(e)}catch(t){throw\"fatal error to load pem private key: \"+t}}},br.crypto.Cipher=function(t){},br.crypto.Cipher.encrypt=function(t,e,r){if(e instanceof He&&e.isPublic){var n=br.crypto.Cipher.getAlgByKeyAndName(e,r);if(\"RSA\"===n)return e.encrypt(t);if(\"RSAOAEP\"===n)return e.encryptOAEP(t,\"sha1\");var i=n.match(/^RSAOAEP(\\d+)$/);if(null!==i)return e.encryptOAEP(t,\"sha\"+i[1]);throw\"Cipher.encrypt: unsupported algorithm for RSAKey: \"+r}throw\"Cipher.encrypt: unsupported key or algorithm\"},br.crypto.Cipher.decrypt=function(t,e,r){if(e instanceof He&&e.isPrivate){var n=br.crypto.Cipher.getAlgByKeyAndName(e,r);if(\"RSA\"===n)return e.decrypt(t);if(\"RSAOAEP\"===n)return e.decryptOAEP(t,\"sha1\");var i=n.match(/^RSAOAEP(\\d+)$/);if(null!==i)return e.decryptOAEP(t,\"sha\"+i[1]);throw\"Cipher.decrypt: unsupported algorithm for RSAKey: \"+r}throw\"Cipher.decrypt: unsupported key or algorithm\"},br.crypto.Cipher.getAlgByKeyAndName=function(t,e){if(t instanceof He){if(-1!=\":RSA:RSAOAEP:RSAOAEP224:RSAOAEP256:RSAOAEP384:RSAOAEP512:\".indexOf(e))return e;if(null==e)return\"RSA\";throw\"getAlgByKeyAndName: not supported algorithm name for RSAKey: \"+e}throw\"getAlgByKeyAndName: not supported algorithm name: \"+e},br.crypto.OID=new function(){this.oidhex2name={\"2a864886f70d010101\":\"rsaEncryption\",\"2a8648ce3d0201\":\"ecPublicKey\",\"2a8648ce380401\":\"dsa\",\"2a8648ce3d030107\":\"secp256r1\",\"2b8104001f\":\"secp192k1\",\"2b81040021\":\"secp224r1\",\"2b8104000a\":\"secp256k1\",\"2b81040023\":\"secp521r1\",\"2b81040022\":\"secp384r1\",\"2a8648ce380403\":\"SHA1withDSA\",\"608648016503040301\":\"SHA224withDSA\",\"608648016503040302\":\"SHA256withDSA\"}},void 0!==br&&br||(e.KJUR=br={}),void 0!==br.crypto&&br.crypto||(br.crypto={}),br.crypto.ECDSA=function(t){var e=Error,n=F,i=Ke,o=br.crypto.ECDSA,s=br.crypto.ECParameterDB,a=o.getName,u=Er,c=u.getVbyListEx,h=u.isASN1HEX,l=new Oe;this.type=\"EC\",this.isPrivate=!1,this.isPublic=!1,this.getBigRandom=function(t){return new n(t.bitLength(),l).mod(t.subtract(n.ONE)).add(n.ONE)},this.setNamedCurve=function(t){this.ecparams=s.getByName(t),this.prvKeyHex=null,this.pubKeyHex=null,this.curveName=t},this.setPrivateKeyHex=function(t){this.isPrivate=!0,this.prvKeyHex=t},this.setPublicKeyHex=function(t){this.isPublic=!0,this.pubKeyHex=t},this.getPublicKeyXYHex=function(){var t=this.pubKeyHex;if(\"04\"!==t.substr(0,2))throw\"this method supports uncompressed format(04) only\";var e=this.ecparams.keylen/4;if(t.length!==2+2*e)throw\"malformed public key hex length\";var r={};return r.x=t.substr(2,e),r.y=t.substr(2+e),r},this.getShortNISTPCurveName=function(){var t=this.curveName;return\"secp256r1\"===t||\"NIST P-256\"===t||\"P-256\"===t||\"prime256v1\"===t?\"P-256\":\"secp384r1\"===t||\"NIST P-384\"===t||\"P-384\"===t?\"P-384\":null},this.generateKeyPairHex=function(){var t=this.ecparams.n,e=this.getBigRandom(t),r=this.ecparams.G.multiply(e),n=r.getX().toBigInteger(),i=r.getY().toBigInteger(),o=this.ecparams.keylen/4,s=(\"0000000000\"+e.toString(16)).slice(-o),a=\"04\"+(\"0000000000\"+n.toString(16)).slice(-o)+(\"0000000000\"+i.toString(16)).slice(-o);return this.setPrivateKeyHex(s),this.setPublicKeyHex(a),{ecprvhex:s,ecpubhex:a}},this.signWithMessageHash=function(t){return this.signHex(t,this.prvKeyHex)},this.signHex=function(t,e){var r=new n(e,16),i=this.ecparams.n,s=new n(t.substring(0,this.ecparams.keylen/4),16);do{var a=this.getBigRandom(i),u=this.ecparams.G.multiply(a).getX().toBigInteger().mod(i)}while(u.compareTo(n.ZERO)<=0);var c=a.modInverse(i).multiply(s.add(r.multiply(u))).mod(i);return o.biRSSigToASN1Sig(u,c)},this.sign=function(t,e){var r=e,i=this.ecparams.n,o=n.fromByteArrayUnsigned(t);do{var s=this.getBigRandom(i),a=this.ecparams.G.multiply(s).getX().toBigInteger().mod(i)}while(a.compareTo(F.ZERO)<=0);var u=s.modInverse(i).multiply(o.add(r.multiply(a))).mod(i);return this.serializeSig(a,u)},this.verifyWithMessageHash=function(t,e){return this.verifyHex(t,e,this.pubKeyHex)},this.verifyHex=function(t,e,r){try{var s,a,u=o.parseSigHex(e);s=u.r,a=u.s;var c=i.decodeFromHex(this.ecparams.curve,r),h=new n(t.substring(0,this.ecparams.keylen/4),16);return this.verifyRaw(h,s,a,c)}catch(t){return!1}},this.verify=function(t,e,o){var s,a,u;if(Bitcoin.Util.isArray(e)){var c=this.parseSig(e);s=c.r,a=c.s}else{if(\"object\"!==(void 0===e?\"undefined\":r(e))||!e.r||!e.s)throw\"Invalid value for signature\";s=e.r,a=e.s}if(o instanceof Ke)u=o;else{if(!Bitcoin.Util.isArray(o))throw\"Invalid format for pubkey value, must be byte array or ECPointFp\";u=i.decodeFrom(this.ecparams.curve,o)}var h=n.fromByteArrayUnsigned(t);return this.verifyRaw(h,s,a,u)},this.verifyRaw=function(t,e,r,i){var o=this.ecparams.n,s=this.ecparams.G;if(e.compareTo(n.ONE)<0||e.compareTo(o)>=0)return!1;if(r.compareTo(n.ONE)<0||r.compareTo(o)>=0)return!1;var a=r.modInverse(o),u=t.multiply(a).mod(o),c=e.multiply(a).mod(o);return s.multiply(u).add(i.multiply(c)).getX().toBigInteger().mod(o).equals(e)},this.serializeSig=function(t,e){var r=t.toByteArraySigned(),n=e.toByteArraySigned(),i=[];return i.push(2),i.push(r.length),(i=i.concat(r)).push(2),i.push(n.length),(i=i.concat(n)).unshift(i.length),i.unshift(48),i},this.parseSig=function(t){var e;if(48!=t[0])throw new Error(\"Signature not a valid DERSequence\");if(2!=t[e=2])throw new Error(\"First element in signature must be a DERInteger\");var r=t.slice(e+2,e+2+t[e+1]);if(2!=t[e+=2+t[e+1]])throw new Error(\"Second element in signature must be a DERInteger\");var i=t.slice(e+2,e+2+t[e+1]);return e+=2+t[e+1],{r:n.fromByteArrayUnsigned(r),s:n.fromByteArrayUnsigned(i)}},this.parseSigCompact=function(t){if(65!==t.length)throw\"Signature has the wrong length\";var e=t[0]-27;if(e<0||e>7)throw\"Invalid signature type\";var r=this.ecparams.n;return{r:n.fromByteArrayUnsigned(t.slice(1,33)).mod(r),s:n.fromByteArrayUnsigned(t.slice(33,65)).mod(r),i:e}},this.readPKCS5PrvKeyHex=function(t){if(!1===h(t))throw new Error(\"not ASN.1 hex string\");var e,r,n;try{e=c(t,0,[\"[0]\",0],\"06\"),r=c(t,0,[1],\"04\");try{n=c(t,0,[\"[1]\",0],\"03\")}catch(t){}}catch(t){throw new Error(\"malformed PKCS#1/5 plain ECC private key\")}if(this.curveName=a(e),void 0===this.curveName)throw\"unsupported curve name\";this.setNamedCurve(this.curveName),this.setPublicKeyHex(n),this.setPrivateKeyHex(r),this.isPublic=!1},this.readPKCS8PrvKeyHex=function(t){if(!1===h(t))throw new e(\"not ASN.1 hex string\");var r,n,i;try{c(t,0,[1,0],\"06\"),r=c(t,0,[1,1],\"06\"),n=c(t,0,[2,0,1],\"04\");try{i=c(t,0,[2,0,\"[1]\",0],\"03\")}catch(t){}}catch(t){throw new e(\"malformed PKCS#8 plain ECC private key\")}if(this.curveName=a(r),void 0===this.curveName)throw new e(\"unsupported curve name\");this.setNamedCurve(this.curveName),this.setPublicKeyHex(i),this.setPrivateKeyHex(n),this.isPublic=!1},this.readPKCS8PubKeyHex=function(t){if(!1===h(t))throw new e(\"not ASN.1 hex string\");var r,n;try{c(t,0,[0,0],\"06\"),r=c(t,0,[0,1],\"06\"),n=c(t,0,[1],\"03\")}catch(t){throw new e(\"malformed PKCS#8 ECC public key\")}if(this.curveName=a(r),null===this.curveName)throw new e(\"unsupported curve name\");this.setNamedCurve(this.curveName),this.setPublicKeyHex(n)},this.readCertPubKeyHex=function(t,r){if(!1===h(t))throw new e(\"not ASN.1 hex string\");var n,i;try{n=c(t,0,[0,5,0,1],\"06\"),i=c(t,0,[0,5,1],\"03\")}catch(t){throw new e(\"malformed X.509 certificate ECC public key\")}if(this.curveName=a(n),null===this.curveName)throw new e(\"unsupported curve name\");this.setNamedCurve(this.curveName),this.setPublicKeyHex(i)},void 0!==t&&void 0!==t.curve&&(this.curveName=t.curve),void 0===this.curveName&&(this.curveName=\"secp256r1\"),this.setNamedCurve(this.curveName),void 0!==t&&(void 0!==t.prv&&this.setPrivateKeyHex(t.prv),void 0!==t.pub&&this.setPublicKeyHex(t.pub))},br.crypto.ECDSA.parseSigHex=function(t){var e=br.crypto.ECDSA.parseSigHexInHexRS(t);return{r:new F(e.r,16),s:new F(e.s,16)}},br.crypto.ECDSA.parseSigHexInHexRS=function(t){var e=Er,r=e.getChildIdx,n=e.getV;if(e.checkStrictDER(t,0),\"30\"!=t.substr(0,2))throw new Error(\"signature is not a ASN.1 sequence\");var i=r(t,0);if(2!=i.length)throw new Error(\"signature shall have two elements\");var o=i[0],s=i[1];if(\"02\"!=t.substr(o,2))throw new Error(\"1st item not ASN.1 integer\");if(\"02\"!=t.substr(s,2))throw new Error(\"2nd item not ASN.1 integer\");return{r:n(t,o),s:n(t,s)}},br.crypto.ECDSA.asn1SigToConcatSig=function(t){var e=br.crypto.ECDSA.parseSigHexInHexRS(t),r=e.r,n=e.s;if(\"00\"==r.substr(0,2)&&r.length%32==2&&(r=r.substr(2)),\"00\"==n.substr(0,2)&&n.length%32==2&&(n=n.substr(2)),r.length%32==30&&(r=\"00\"+r),n.length%32==30&&(n=\"00\"+n),r.length%32!=0)throw\"unknown ECDSA sig r length error\";if(n.length%32!=0)throw\"unknown ECDSA sig s length error\";return r+n},br.crypto.ECDSA.concatSigToASN1Sig=function(t){if(t.length/2*8%128!=0)throw\"unknown ECDSA concatinated r-s sig  length error\";var e=t.substr(0,t.length/2),r=t.substr(t.length/2);return br.crypto.ECDSA.hexRSSigToASN1Sig(e,r)},br.crypto.ECDSA.hexRSSigToASN1Sig=function(t,e){var r=new F(t,16),n=new F(e,16);return br.crypto.ECDSA.biRSSigToASN1Sig(r,n)},br.crypto.ECDSA.biRSSigToASN1Sig=function(t,e){var r=br.asn1,n=new r.DERInteger({bigint:t}),i=new r.DERInteger({bigint:e});return new r.DERSequence({array:[n,i]}).getEncodedHex()},br.crypto.ECDSA.getName=function(t){return\"2b8104001f\"===t?\"secp192k1\":\"2a8648ce3d030107\"===t?\"secp256r1\":\"2b8104000a\"===t?\"secp256k1\":\"2b81040021\"===t?\"secp224r1\":\"2b81040022\"===t?\"secp384r1\":-1!==\"|secp256r1|NIST P-256|P-256|prime256v1|\".indexOf(t)?\"secp256r1\":-1!==\"|secp256k1|\".indexOf(t)?\"secp256k1\":-1!==\"|secp224r1|NIST P-224|P-224|\".indexOf(t)?\"secp224r1\":-1!==\"|secp384r1|NIST P-384|P-384|\".indexOf(t)?\"secp384r1\":null},void 0!==br&&br||(e.KJUR=br={}),void 0!==br.crypto&&br.crypto||(br.crypto={}),br.crypto.ECParameterDB=new function(){var t={},e={};function r(t){return new F(t,16)}this.getByName=function(r){var n=r;if(void 0!==e[n]&&(n=e[r]),void 0!==t[n])return t[n];throw\"unregistered EC curve name: \"+n},this.regist=function(n,i,o,s,a,u,c,h,l,f,g,d){t[n]={};var p=r(o),v=r(s),y=r(a),m=r(u),_=r(c),S=new qe(p,v,y),b=S.decodePointHex(\"04\"+h+l);t[n].name=n,t[n].keylen=i,t[n].curve=S,t[n].G=b,t[n].n=m,t[n].h=_,t[n].oid=g,t[n].info=d;for(var w=0;w<f.length;w++)e[f[w]]=n}},br.crypto.ECParameterDB.regist(\"secp128r1\",128,\"FFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFF\",\"FFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFC\",\"E87579C11079F43DD824993C2CEE5ED3\",\"FFFFFFFE0000000075A30D1B9038A115\",\"1\",\"161FF7528B899B2D0C28607CA52C5B86\",\"CF5AC8395BAFEB13C02DA292DDED7A83\",[],\"\",\"secp128r1 : SECG curve over a 128 bit prime field\"),br.crypto.ECParameterDB.regist(\"secp160k1\",160,\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFAC73\",\"0\",\"7\",\"0100000000000000000001B8FA16DFAB9ACA16B6B3\",\"1\",\"3B4C382CE37AA192A4019E763036F4F5DD4D7EBB\",\"938CF935318FDCED6BC28286531733C3F03C4FEE\",[],\"\",\"secp160k1 : SECG curve over a 160 bit prime field\"),br.crypto.ECParameterDB.regist(\"secp160r1\",160,\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF7FFFFFFF\",\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF7FFFFFFC\",\"1C97BEFC54BD7A8B65ACF89F81D4D4ADC565FA45\",\"0100000000000000000001F4C8F927AED3CA752257\",\"1\",\"4A96B5688EF573284664698968C38BB913CBFC82\",\"23A628553168947D59DCC912042351377AC5FB32\",[],\"\",\"secp160r1 : SECG curve over a 160 bit prime field\"),br.crypto.ECParameterDB.regist(\"secp192k1\",192,\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFEE37\",\"0\",\"3\",\"FFFFFFFFFFFFFFFFFFFFFFFE26F2FC170F69466A74DEFD8D\",\"1\",\"DB4FF10EC057E9AE26B07D0280B7F4341DA5D1B1EAE06C7D\",\"9B2F2F6D9C5628A7844163D015BE86344082AA88D95E2F9D\",[]),br.crypto.ECParameterDB.regist(\"secp192r1\",192,\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFF\",\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFC\",\"64210519E59C80E70FA7E9AB72243049FEB8DEECC146B9B1\",\"FFFFFFFFFFFFFFFFFFFFFFFF99DEF836146BC9B1B4D22831\",\"1\",\"188DA80EB03090F67CBF20EB43A18800F4FF0AFD82FF1012\",\"07192B95FFC8DA78631011ED6B24CDD573F977A11E794811\",[]),br.crypto.ECParameterDB.regist(\"secp224r1\",224,\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000001\",\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFE\",\"B4050A850C04B3ABF54132565044B0B7D7BFD8BA270B39432355FFB4\",\"FFFFFFFFFFFFFFFFFFFFFFFFFFFF16A2E0B8F03E13DD29455C5C2A3D\",\"1\",\"B70E0CBD6BB4BF7F321390B94A03C1D356C21122343280D6115C1D21\",\"BD376388B5F723FB4C22DFE6CD4375A05A07476444D5819985007E34\",[]),br.crypto.ECParameterDB.regist(\"secp256k1\",256,\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F\",\"0\",\"7\",\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141\",\"1\",\"79BE667EF9DCBBAC55A06295CE870B07029BFCDB2DCE28D959F2815B16F81798\",\"483ADA7726A3C4655DA4FBFC0E1108A8FD17B448A68554199C47D08FFB10D4B8\",[]),br.crypto.ECParameterDB.regist(\"secp256r1\",256,\"FFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFF\",\"FFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFC\",\"5AC635D8AA3A93E7B3EBBD55769886BC651D06B0CC53B0F63BCE3C3E27D2604B\",\"FFFFFFFF00000000FFFFFFFFFFFFFFFFBCE6FAADA7179E84F3B9CAC2FC632551\",\"1\",\"6B17D1F2E12C4247F8BCE6E563A440F277037D812DEB33A0F4A13945D898C296\",\"4FE342E2FE1A7F9B8EE7EB4A7C0F9E162BCE33576B315ECECBB6406837BF51F5\",[\"NIST P-256\",\"P-256\",\"prime256v1\"]),br.crypto.ECParameterDB.regist(\"secp384r1\",384,\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFF0000000000000000FFFFFFFF\",\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFF0000000000000000FFFFFFFC\",\"B3312FA7E23EE7E4988E056BE3F82D19181D9C6EFE8141120314088F5013875AC656398D8A2ED19D2A85C8EDD3EC2AEF\",\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC7634D81F4372DDF581A0DB248B0A77AECEC196ACCC52973\",\"1\",\"AA87CA22BE8B05378EB1C71EF320AD746E1D3B628BA79B9859F741E082542A385502F25DBF55296C3A545E3872760AB7\",\"3617de4a96262c6f5d9e98bf9292dc29f8f41dbd289a147ce9da3113b5f0b8c00a60b1ce1d7e819d7a431d7c90ea0e5f\",[\"NIST P-384\",\"P-384\"]),br.crypto.ECParameterDB.regist(\"secp521r1\",521,\"1FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\",\"1FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC\",\"051953EB9618E1C9A1F929A21A0B68540EEA2DA725B99B315F3B8B489918EF109E156193951EC7E937B1652C0BD3BB1BF073573DF883D2C34F1EF451FD46B503F00\",\"1FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFA51868783BF2F966B7FCC0148F709A5D03BB5C9B8899C47AEBB6FB71E91386409\",\"1\",\"C6858E06B70404E9CD9E3ECB662395B4429C648139053FB521F828AF606B4D3DBAA14B5E77EFE75928FE1DC127A2FFA8DE3348B3C1856A429BF97E7E31C2E5BD66\",\"011839296a789a3bc0045c8a5fb42c7d1bd998f54449579b446817afbd17273e662c97ee72995ef42640c550b9013fad0761353c7086a272c24088be94769fd16650\",[\"NIST P-521\",\"P-521\"]);var Zr=function(){var t=function t(r,n,i){return e(y.AES,r,n,i)},e=function t(e,r,n,i){var o=y.enc.Hex.parse(r),s=y.enc.Hex.parse(n),a=y.enc.Hex.parse(i),u={};u.key=s,u.iv=a,u.ciphertext=o;var c=e.decrypt(u,s,{iv:a});return y.enc.Hex.stringify(c)},r=function t(e,r,i){return n(y.AES,e,r,i)},n=function t(e,r,n,i){var o=y.enc.Hex.parse(r),s=y.enc.Hex.parse(n),a=y.enc.Hex.parse(i),u=e.encrypt(o,s,{iv:a}),c=y.enc.Hex.parse(u.toString());return y.enc.Base64.stringify(c)},i={\"AES-256-CBC\":{proc:t,eproc:r,keylen:32,ivlen:16},\"AES-192-CBC\":{proc:t,eproc:r,keylen:24,ivlen:16},\"AES-128-CBC\":{proc:t,eproc:r,keylen:16,ivlen:16},\"DES-EDE3-CBC\":{proc:function t(r,n,i){return e(y.TripleDES,r,n,i)},eproc:function t(e,r,i){return n(y.TripleDES,e,r,i)},keylen:24,ivlen:8},\"DES-CBC\":{proc:function t(r,n,i){return e(y.DES,r,n,i)},eproc:function t(e,r,i){return n(y.DES,e,r,i)},keylen:8,ivlen:8}},o=function t(e){var r={},n=e.match(new RegExp(\"DEK-Info: ([^,]+),([0-9A-Fa-f]+)\",\"m\"));n&&(r.cipher=n[1],r.ivsalt=n[2]);var i=e.match(new RegExp(\"-----BEGIN ([A-Z]+) PRIVATE KEY-----\"));i&&(r.type=i[1]);var o=-1,s=0;-1!=e.indexOf(\"\\r\\n\\r\\n\")&&(o=e.indexOf(\"\\r\\n\\r\\n\"),s=2),-1!=e.indexOf(\"\\n\\n\")&&(o=e.indexOf(\"\\n\\n\"),s=1);var a=e.indexOf(\"-----END\");if(-1!=o&&-1!=a){var u=e.substring(o+2*s,a-s);u=u.replace(/\\s+/g,\"\"),r.data=u}return r},s=function t(e,r,n){for(var o=n.substring(0,16),s=y.enc.Hex.parse(o),a=y.enc.Utf8.parse(r),u=i[e].keylen+i[e].ivlen,c=\"\",h=null;;){var l=y.algo.MD5.create();if(null!=h&&l.update(h),l.update(a),l.update(s),h=l.finalize(),(c+=y.enc.Hex.stringify(h)).length>=2*u)break}var f={};return f.keyhex=c.substr(0,2*i[e].keylen),f.ivhex=c.substr(2*i[e].keylen,2*i[e].ivlen),f},a=function t(e,r,n,o){var s=y.enc.Base64.parse(e),a=y.enc.Hex.stringify(s);return(0,i[r].proc)(a,n,o)};return{version:\"1.0.0\",parsePKCS5PEM:function t(e){return o(e)},getKeyAndUnusedIvByPasscodeAndIvsalt:function t(e,r,n){return s(e,r,n)},decryptKeyB64:function t(e,r,n,i){return a(e,r,n,i)},getDecryptedKeyHex:function t(e,r){var n=o(e),i=(n.type,n.cipher),u=n.ivsalt,c=n.data,h=s(i,r,u).keyhex;return a(c,i,h,u)},getEncryptedPKCS5PEMFromPrvKeyHex:function t(e,r,n,o,a){var u=\"\";if(void 0!==o&&null!=o||(o=\"AES-256-CBC\"),void 0===i[o])throw\"KEYUTIL unsupported algorithm: \"+o;void 0!==a&&null!=a||(a=function t(e){var r=y.lib.WordArray.random(e);return y.enc.Hex.stringify(r)}(i[o].ivlen).toUpperCase());var c=function t(e,r,n,o){return(0,i[r].eproc)(e,n,o)}(r,o,s(o,n,a).keyhex,a);u=\"-----BEGIN \"+e+\" PRIVATE KEY-----\\r\\n\";return u+=\"Proc-Type: 4,ENCRYPTED\\r\\n\",u+=\"DEK-Info: \"+o+\",\"+a+\"\\r\\n\",u+=\"\\r\\n\",u+=c.replace(/(.{64})/g,\"$1\\r\\n\"),u+=\"\\r\\n-----END \"+e+\" PRIVATE KEY-----\\r\\n\"},parseHexOfEncryptedPKCS8:function t(e){var r=Er,n=r.getChildIdx,i=r.getV,o={},s=n(e,0);if(2!=s.length)throw\"malformed format: SEQUENCE(0).items != 2: \"+s.length;o.ciphertext=i(e,s[1]);var a=n(e,s[0]);if(2!=a.length)throw\"malformed format: SEQUENCE(0.0).items != 2: \"+a.length;if(\"2a864886f70d01050d\"!=i(e,a[0]))throw\"this only supports pkcs5PBES2\";var u=n(e,a[1]);if(2!=a.length)throw\"malformed format: SEQUENCE(0.0.1).items != 2: \"+u.length;var c=n(e,u[1]);if(2!=c.length)throw\"malformed format: SEQUENCE(0.0.1.1).items != 2: \"+c.length;if(\"2a864886f70d0307\"!=i(e,c[0]))throw\"this only supports TripleDES\";o.encryptionSchemeAlg=\"TripleDES\",o.encryptionSchemeIV=i(e,c[1]);var h=n(e,u[0]);if(2!=h.length)throw\"malformed format: SEQUENCE(0.0.1.0).items != 2: \"+h.length;if(\"2a864886f70d01050c\"!=i(e,h[0]))throw\"this only supports pkcs5PBKDF2\";var l=n(e,h[1]);if(l.length<2)throw\"malformed format: SEQUENCE(0.0.1.0.1).items < 2: \"+l.length;o.pbkdf2Salt=i(e,l[0]);var f=i(e,l[1]);try{o.pbkdf2Iter=parseInt(f,16)}catch(t){throw\"malformed format pbkdf2Iter: \"+f}return o},getPBKDF2KeyHexFromParam:function t(e,r){var n=y.enc.Hex.parse(e.pbkdf2Salt),i=e.pbkdf2Iter,o=y.PBKDF2(r,n,{keySize:6,iterations:i});return y.enc.Hex.stringify(o)},_getPlainPKCS8HexFromEncryptedPKCS8PEM:function t(e,r){var n=Hr(e,\"ENCRYPTED PRIVATE KEY\"),i=this.parseHexOfEncryptedPKCS8(n),o=Zr.getPBKDF2KeyHexFromParam(i,r),s={};s.ciphertext=y.enc.Hex.parse(i.ciphertext);var a=y.enc.Hex.parse(o),u=y.enc.Hex.parse(i.encryptionSchemeIV),c=y.TripleDES.decrypt(s,a,{iv:u});return y.enc.Hex.stringify(c)},getKeyFromEncryptedPKCS8PEM:function t(e,r){var n=this._getPlainPKCS8HexFromEncryptedPKCS8PEM(e,r);return this.getKeyFromPlainPrivatePKCS8Hex(n)},parsePlainPrivatePKCS8Hex:function t(e){var r=Er,n=r.getChildIdx,i=r.getV,o={algparam:null};if(\"30\"!=e.substr(0,2))throw\"malformed plain PKCS8 private key(code:001)\";var s=n(e,0);if(3!=s.length)throw\"malformed plain PKCS8 private key(code:002)\";if(\"30\"!=e.substr(s[1],2))throw\"malformed PKCS8 private key(code:003)\";var a=n(e,s[1]);if(2!=a.length)throw\"malformed PKCS8 private key(code:004)\";if(\"06\"!=e.substr(a[0],2))throw\"malformed PKCS8 private key(code:005)\";if(o.algoid=i(e,a[0]),\"06\"==e.substr(a[1],2)&&(o.algparam=i(e,a[1])),\"04\"!=e.substr(s[2],2))throw\"malformed PKCS8 private key(code:006)\";return o.keyidx=r.getVidx(e,s[2]),o},getKeyFromPlainPrivatePKCS8PEM:function t(e){var r=Hr(e,\"PRIVATE KEY\");return this.getKeyFromPlainPrivatePKCS8Hex(r)},getKeyFromPlainPrivatePKCS8Hex:function t(e){var r,n=this.parsePlainPrivatePKCS8Hex(e);if(\"2a864886f70d010101\"==n.algoid)r=new He;else if(\"2a8648ce380401\"==n.algoid)r=new br.crypto.DSA;else{if(\"2a8648ce3d0201\"!=n.algoid)throw\"unsupported private key algorithm\";r=new br.crypto.ECDSA}return r.readPKCS8PrvKeyHex(e),r},_getKeyFromPublicPKCS8Hex:function t(e){var r,n=Er.getVbyList(e,0,[0,0],\"06\");if(\"2a864886f70d010101\"===n)r=new He;else if(\"2a8648ce380401\"===n)r=new br.crypto.DSA;else{if(\"2a8648ce3d0201\"!==n)throw\"unsupported PKCS#8 public key hex\";r=new br.crypto.ECDSA}return r.readPKCS8PubKeyHex(e),r},parsePublicRawRSAKeyHex:function t(e){var r=Er,n=r.getChildIdx,i=r.getV,o={};if(\"30\"!=e.substr(0,2))throw\"malformed RSA key(code:001)\";var s=n(e,0);if(2!=s.length)throw\"malformed RSA key(code:002)\";if(\"02\"!=e.substr(s[0],2))throw\"malformed RSA key(code:003)\";if(o.n=i(e,s[0]),\"02\"!=e.substr(s[1],2))throw\"malformed RSA key(code:004)\";return o.e=i(e,s[1]),o},parsePublicPKCS8Hex:function t(e){var r=Er,n=r.getChildIdx,i=r.getV,o={algparam:null},s=n(e,0);if(2!=s.length)throw\"outer DERSequence shall have 2 elements: \"+s.length;var a=s[0];if(\"30\"!=e.substr(a,2))throw\"malformed PKCS8 public key(code:001)\";var u=n(e,a);if(2!=u.length)throw\"malformed PKCS8 public key(code:002)\";if(\"06\"!=e.substr(u[0],2))throw\"malformed PKCS8 public key(code:003)\";if(o.algoid=i(e,u[0]),\"06\"==e.substr(u[1],2)?o.algparam=i(e,u[1]):\"30\"==e.substr(u[1],2)&&(o.algparam={},o.algparam.p=r.getVbyList(e,u[1],[0],\"02\"),o.algparam.q=r.getVbyList(e,u[1],[1],\"02\"),o.algparam.g=r.getVbyList(e,u[1],[2],\"02\")),\"03\"!=e.substr(s[1],2))throw\"malformed PKCS8 public key(code:004)\";return o.key=i(e,s[1]).substr(2),o}}}();Zr.getKey=function(t,e,r){var n=(v=Er).getChildIdx,i=(v.getV,v.getVbyList),o=br.crypto,s=o.ECDSA,a=o.DSA,u=He,c=Hr,h=Zr;if(void 0!==u&&t instanceof u)return t;if(void 0!==s&&t instanceof s)return t;if(void 0!==a&&t instanceof a)return t;if(void 0!==t.curve&&void 0!==t.xy&&void 0===t.d)return new s({pub:t.xy,curve:t.curve});if(void 0!==t.curve&&void 0!==t.d)return new s({prv:t.d,curve:t.curve});if(void 0===t.kty&&void 0!==t.n&&void 0!==t.e&&void 0===t.d)return(P=new u).setPublic(t.n,t.e),P;if(void 0===t.kty&&void 0!==t.n&&void 0!==t.e&&void 0!==t.d&&void 0!==t.p&&void 0!==t.q&&void 0!==t.dp&&void 0!==t.dq&&void 0!==t.co&&void 0===t.qi)return(P=new u).setPrivateEx(t.n,t.e,t.d,t.p,t.q,t.dp,t.dq,t.co),P;if(void 0===t.kty&&void 0!==t.n&&void 0!==t.e&&void 0!==t.d&&void 0===t.p)return(P=new u).setPrivate(t.n,t.e,t.d),P;if(void 0!==t.p&&void 0!==t.q&&void 0!==t.g&&void 0!==t.y&&void 0===t.x)return(P=new a).setPublic(t.p,t.q,t.g,t.y),P;if(void 0!==t.p&&void 0!==t.q&&void 0!==t.g&&void 0!==t.y&&void 0!==t.x)return(P=new a).setPrivate(t.p,t.q,t.g,t.y,t.x),P;if(\"RSA\"===t.kty&&void 0!==t.n&&void 0!==t.e&&void 0===t.d)return(P=new u).setPublic(Ir(t.n),Ir(t.e)),P;if(\"RSA\"===t.kty&&void 0!==t.n&&void 0!==t.e&&void 0!==t.d&&void 0!==t.p&&void 0!==t.q&&void 0!==t.dp&&void 0!==t.dq&&void 0!==t.qi)return(P=new u).setPrivateEx(Ir(t.n),Ir(t.e),Ir(t.d),Ir(t.p),Ir(t.q),Ir(t.dp),Ir(t.dq),Ir(t.qi)),P;if(\"RSA\"===t.kty&&void 0!==t.n&&void 0!==t.e&&void 0!==t.d)return(P=new u).setPrivate(Ir(t.n),Ir(t.e),Ir(t.d)),P;if(\"EC\"===t.kty&&void 0!==t.crv&&void 0!==t.x&&void 0!==t.y&&void 0===t.d){var l=(k=new s({curve:t.crv})).ecparams.keylen/4,f=\"04\"+(\"0000000000\"+Ir(t.x)).slice(-l)+(\"0000000000\"+Ir(t.y)).slice(-l);return k.setPublicKeyHex(f),k}if(\"EC\"===t.kty&&void 0!==t.crv&&void 0!==t.x&&void 0!==t.y&&void 0!==t.d){l=(k=new s({curve:t.crv})).ecparams.keylen/4,f=\"04\"+(\"0000000000\"+Ir(t.x)).slice(-l)+(\"0000000000\"+Ir(t.y)).slice(-l);var g=(\"0000000000\"+Ir(t.d)).slice(-l);return k.setPublicKeyHex(f),k.setPrivateKeyHex(g),k}if(\"pkcs5prv\"===r){var d,p=t,v=Er;if(9===(d=n(p,0)).length)(P=new u).readPKCS5PrvKeyHex(p);else if(6===d.length)(P=new a).readPKCS5PrvKeyHex(p);else{if(!(d.length>2&&\"04\"===p.substr(d[1],2)))throw\"unsupported PKCS#1/5 hexadecimal key\";(P=new s).readPKCS5PrvKeyHex(p)}return P}if(\"pkcs8prv\"===r)return P=h.getKeyFromPlainPrivatePKCS8Hex(t);if(\"pkcs8pub\"===r)return h._getKeyFromPublicPKCS8Hex(t);if(\"x509pub\"===r)return on.getPublicKeyFromCertHex(t);if(-1!=t.indexOf(\"-END CERTIFICATE-\",0)||-1!=t.indexOf(\"-END X509 CERTIFICATE-\",0)||-1!=t.indexOf(\"-END TRUSTED CERTIFICATE-\",0))return on.getPublicKeyFromCertPEM(t);if(-1!=t.indexOf(\"-END PUBLIC KEY-\")){var y=Hr(t,\"PUBLIC KEY\");return h._getKeyFromPublicPKCS8Hex(y)}if(-1!=t.indexOf(\"-END RSA PRIVATE KEY-\")&&-1==t.indexOf(\"4,ENCRYPTED\")){var m=c(t,\"RSA PRIVATE KEY\");return h.getKey(m,null,\"pkcs5prv\")}if(-1!=t.indexOf(\"-END DSA PRIVATE KEY-\")&&-1==t.indexOf(\"4,ENCRYPTED\")){var _=i(R=c(t,\"DSA PRIVATE KEY\"),0,[1],\"02\"),S=i(R,0,[2],\"02\"),b=i(R,0,[3],\"02\"),w=i(R,0,[4],\"02\"),E=i(R,0,[5],\"02\");return(P=new a).setPrivate(new F(_,16),new F(S,16),new F(b,16),new F(w,16),new F(E,16)),P}if(-1!=t.indexOf(\"-END EC PRIVATE KEY-\")&&-1==t.indexOf(\"4,ENCRYPTED\")){m=c(t,\"EC PRIVATE KEY\");return h.getKey(m,null,\"pkcs5prv\")}if(-1!=t.indexOf(\"-END PRIVATE KEY-\"))return h.getKeyFromPlainPrivatePKCS8PEM(t);if(-1!=t.indexOf(\"-END RSA PRIVATE KEY-\")&&-1!=t.indexOf(\"4,ENCRYPTED\")){var x=h.getDecryptedKeyHex(t,e),A=new He;return A.readPKCS5PrvKeyHex(x),A}if(-1!=t.indexOf(\"-END EC PRIVATE KEY-\")&&-1!=t.indexOf(\"4,ENCRYPTED\")){var k,P=i(R=h.getDecryptedKeyHex(t,e),0,[1],\"04\"),C=i(R,0,[2,0],\"06\"),T=i(R,0,[3,0],\"03\").substr(2);if(void 0===br.crypto.OID.oidhex2name[C])throw\"undefined OID(hex) in KJUR.crypto.OID: \"+C;return(k=new s({curve:br.crypto.OID.oidhex2name[C]})).setPublicKeyHex(T),k.setPrivateKeyHex(P),k.isPublic=!1,k}if(-1!=t.indexOf(\"-END DSA PRIVATE KEY-\")&&-1!=t.indexOf(\"4,ENCRYPTED\")){var R;_=i(R=h.getDecryptedKeyHex(t,e),0,[1],\"02\"),S=i(R,0,[2],\"02\"),b=i(R,0,[3],\"02\"),w=i(R,0,[4],\"02\"),E=i(R,0,[5],\"02\");return(P=new a).setPrivate(new F(_,16),new F(S,16),new F(b,16),new F(w,16),new F(E,16)),P}if(-1!=t.indexOf(\"-END ENCRYPTED PRIVATE KEY-\"))return h.getKeyFromEncryptedPKCS8PEM(t,e);throw new Error(\"not supported argument\")},Zr.generateKeypair=function(t,e){if(\"RSA\"==t){var r=e;(s=new He).generate(r,\"10001\"),s.isPrivate=!0,s.isPublic=!0;var n=new He,i=s.n.toString(16),o=s.e.toString(16);return n.setPublic(i,o),n.isPrivate=!1,n.isPublic=!0,(a={}).prvKeyObj=s,a.pubKeyObj=n,a}if(\"EC\"==t){var s,a,u=e,c=new br.crypto.ECDSA({curve:u}).generateKeyPairHex();return(s=new br.crypto.ECDSA({curve:u})).setPublicKeyHex(c.ecpubhex),s.setPrivateKeyHex(c.ecprvhex),s.isPrivate=!0,s.isPublic=!1,(n=new br.crypto.ECDSA({curve:u})).setPublicKeyHex(c.ecpubhex),n.isPrivate=!1,n.isPublic=!0,(a={}).prvKeyObj=s,a.pubKeyObj=n,a}throw\"unknown algorithm: \"+t},Zr.getPEM=function(t,e,r,n,i,o){var s=br,a=s.asn1,u=a.DERObjectIdentifier,c=a.DERInteger,h=a.ASN1Util.newObject,l=a.x509.SubjectPublicKeyInfo,f=s.crypto,g=f.DSA,d=f.ECDSA,p=He;function v(t){return h({seq:[{int:0},{int:{bigint:t.n}},{int:t.e},{int:{bigint:t.d}},{int:{bigint:t.p}},{int:{bigint:t.q}},{int:{bigint:t.dmp1}},{int:{bigint:t.dmq1}},{int:{bigint:t.coeff}}]})}function m(t){return h({seq:[{int:1},{octstr:{hex:t.prvKeyHex}},{tag:[\"a0\",!0,{oid:{name:t.curveName}}]},{tag:[\"a1\",!0,{bitstr:{hex:\"00\"+t.pubKeyHex}}]}]})}function _(t){return h({seq:[{int:0},{int:{bigint:t.p}},{int:{bigint:t.q}},{int:{bigint:t.g}},{int:{bigint:t.y}},{int:{bigint:t.x}}]})}if((void 0!==p&&t instanceof p||void 0!==g&&t instanceof g||void 0!==d&&t instanceof d)&&1==t.isPublic&&(void 0===e||\"PKCS8PUB\"==e))return Mr(F=new l(t).getEncodedHex(),\"PUBLIC KEY\");if(\"PKCS1PRV\"==e&&void 0!==p&&t instanceof p&&(void 0===r||null==r)&&1==t.isPrivate)return Mr(F=v(t).getEncodedHex(),\"RSA PRIVATE KEY\");if(\"PKCS1PRV\"==e&&void 0!==d&&t instanceof d&&(void 0===r||null==r)&&1==t.isPrivate){var S=new u({name:t.curveName}).getEncodedHex(),b=m(t).getEncodedHex(),w=\"\";return w+=Mr(S,\"EC PARAMETERS\"),w+=Mr(b,\"EC PRIVATE KEY\")}if(\"PKCS1PRV\"==e&&void 0!==g&&t instanceof g&&(void 0===r||null==r)&&1==t.isPrivate)return Mr(F=_(t).getEncodedHex(),\"DSA PRIVATE KEY\");if(\"PKCS5PRV\"==e&&void 0!==p&&t instanceof p&&void 0!==r&&null!=r&&1==t.isPrivate){var F=v(t).getEncodedHex();return void 0===n&&(n=\"DES-EDE3-CBC\"),this.getEncryptedPKCS5PEMFromPrvKeyHex(\"RSA\",F,r,n,o)}if(\"PKCS5PRV\"==e&&void 0!==d&&t instanceof d&&void 0!==r&&null!=r&&1==t.isPrivate){F=m(t).getEncodedHex();return void 0===n&&(n=\"DES-EDE3-CBC\"),this.getEncryptedPKCS5PEMFromPrvKeyHex(\"EC\",F,r,n,o)}if(\"PKCS5PRV\"==e&&void 0!==g&&t instanceof g&&void 0!==r&&null!=r&&1==t.isPrivate){F=_(t).getEncodedHex();return void 0===n&&(n=\"DES-EDE3-CBC\"),this.getEncryptedPKCS5PEMFromPrvKeyHex(\"DSA\",F,r,n,o)}var E=function t(e,r){var n=x(e,r);return new h({seq:[{seq:[{oid:{name:\"pkcs5PBES2\"}},{seq:[{seq:[{oid:{name:\"pkcs5PBKDF2\"}},{seq:[{octstr:{hex:n.pbkdf2Salt}},{int:n.pbkdf2Iter}]}]},{seq:[{oid:{name:\"des-EDE3-CBC\"}},{octstr:{hex:n.encryptionSchemeIV}}]}]}]},{octstr:{hex:n.ciphertext}}]}).getEncodedHex()},x=function t(e,r){var n=y.lib.WordArray.random(8),i=y.lib.WordArray.random(8),o=y.PBKDF2(r,n,{keySize:6,iterations:100}),s=y.enc.Hex.parse(e),a=y.TripleDES.encrypt(s,o,{iv:i})+\"\",u={};return u.ciphertext=a,u.pbkdf2Salt=y.enc.Hex.stringify(n),u.pbkdf2Iter=100,u.encryptionSchemeAlg=\"DES-EDE3-CBC\",u.encryptionSchemeIV=y.enc.Hex.stringify(i),u};if(\"PKCS8PRV\"==e&&null!=p&&t instanceof p&&1==t.isPrivate){var A=v(t).getEncodedHex();F=h({seq:[{int:0},{seq:[{oid:{name:\"rsaEncryption\"}},{null:!0}]},{octstr:{hex:A}}]}).getEncodedHex();return void 0===r||null==r?Mr(F,\"PRIVATE KEY\"):Mr(b=E(F,r),\"ENCRYPTED PRIVATE KEY\")}if(\"PKCS8PRV\"==e&&void 0!==d&&t instanceof d&&1==t.isPrivate){A=new h({seq:[{int:1},{octstr:{hex:t.prvKeyHex}},{tag:[\"a1\",!0,{bitstr:{hex:\"00\"+t.pubKeyHex}}]}]}).getEncodedHex(),F=h({seq:[{int:0},{seq:[{oid:{name:\"ecPublicKey\"}},{oid:{name:t.curveName}}]},{octstr:{hex:A}}]}).getEncodedHex();return void 0===r||null==r?Mr(F,\"PRIVATE KEY\"):Mr(b=E(F,r),\"ENCRYPTED PRIVATE KEY\")}if(\"PKCS8PRV\"==e&&void 0!==g&&t instanceof g&&1==t.isPrivate){A=new c({bigint:t.x}).getEncodedHex(),F=h({seq:[{int:0},{seq:[{oid:{name:\"dsa\"}},{seq:[{int:{bigint:t.p}},{int:{bigint:t.q}},{int:{bigint:t.g}}]}]},{octstr:{hex:A}}]}).getEncodedHex();return void 0===r||null==r?Mr(F,\"PRIVATE KEY\"):Mr(b=E(F,r),\"ENCRYPTED PRIVATE KEY\")}throw new Error(\"unsupported object nor format\")},Zr.getKeyFromCSRPEM=function(t){var e=Hr(t,\"CERTIFICATE REQUEST\");return Zr.getKeyFromCSRHex(e)},Zr.getKeyFromCSRHex=function(t){var e=Zr.parseCSRHex(t);return Zr.getKey(e.p8pubkeyhex,null,\"pkcs8pub\")},Zr.parseCSRHex=function(t){var e=Er,r=e.getChildIdx,n=e.getTLV,i={},o=t;if(\"30\"!=o.substr(0,2))throw\"malformed CSR(code:001)\";var s=r(o,0);if(s.length<1)throw\"malformed CSR(code:002)\";if(\"30\"!=o.substr(s[0],2))throw\"malformed CSR(code:003)\";var a=r(o,s[0]);if(a.length<3)throw\"malformed CSR(code:004)\";return i.p8pubkeyhex=n(o,a[2]),i},Zr.getKeyID=function(t){var e=Zr,r=Er;\"string\"==typeof t&&-1!=t.indexOf(\"BEGIN \")&&(t=e.getKey(t));var n=Hr(e.getPEM(t)),i=r.getIdxbyList(n,0,[1]),o=r.getV(n,i).substring(2);return br.crypto.Util.hashHex(o,\"sha1\")},Zr.getJWKFromKey=function(t){var e={};if(t instanceof He&&t.isPrivate)return e.kty=\"RSA\",e.n=Rr(t.n.toString(16)),e.e=Rr(t.e.toString(16)),e.d=Rr(t.d.toString(16)),e.p=Rr(t.p.toString(16)),e.q=Rr(t.q.toString(16)),e.dp=Rr(t.dmp1.toString(16)),e.dq=Rr(t.dmq1.toString(16)),e.qi=Rr(t.coeff.toString(16)),e;if(t instanceof He&&t.isPublic)return e.kty=\"RSA\",e.n=Rr(t.n.toString(16)),e.e=Rr(t.e.toString(16)),e;if(t instanceof br.crypto.ECDSA&&t.isPrivate){if(\"P-256\"!==(n=t.getShortNISTPCurveName())&&\"P-384\"!==n)throw\"unsupported curve name for JWT: \"+n;var r=t.getPublicKeyXYHex();return e.kty=\"EC\",e.crv=n,e.x=Rr(r.x),e.y=Rr(r.y),e.d=Rr(t.prvKeyHex),e}if(t instanceof br.crypto.ECDSA&&t.isPublic){var n;if(\"P-256\"!==(n=t.getShortNISTPCurveName())&&\"P-384\"!==n)throw\"unsupported curve name for JWT: \"+n;r=t.getPublicKeyXYHex();return e.kty=\"EC\",e.crv=n,e.x=Rr(r.x),e.y=Rr(r.y),e}throw\"not supported key object\"},He.getPosArrayOfChildrenFromHex=function(t){return Er.getChildIdx(t,0)},He.getHexValueArrayOfChildrenFromHex=function(t){var e,r=Er.getV,n=r(t,(e=He.getPosArrayOfChildrenFromHex(t))[0]),i=r(t,e[1]),o=r(t,e[2]),s=r(t,e[3]),a=r(t,e[4]),u=r(t,e[5]),c=r(t,e[6]),h=r(t,e[7]),l=r(t,e[8]);return(e=new Array).push(n,i,o,s,a,u,c,h,l),e},He.prototype.readPrivateKeyFromPEMString=function(t){var e=Hr(t),r=He.getHexValueArrayOfChildrenFromHex(e);this.setPrivateEx(r[1],r[2],r[3],r[4],r[5],r[6],r[7],r[8])},He.prototype.readPKCS5PrvKeyHex=function(t){var e=He.getHexValueArrayOfChildrenFromHex(t);this.setPrivateEx(e[1],e[2],e[3],e[4],e[5],e[6],e[7],e[8])},He.prototype.readPKCS8PrvKeyHex=function(t){var e,r,n,i,o,s,a,u,c=Er,h=c.getVbyListEx;if(!1===c.isASN1HEX(t))throw new Error(\"not ASN.1 hex string\");try{e=h(t,0,[2,0,1],\"02\"),r=h(t,0,[2,0,2],\"02\"),n=h(t,0,[2,0,3],\"02\"),i=h(t,0,[2,0,4],\"02\"),o=h(t,0,[2,0,5],\"02\"),s=h(t,0,[2,0,6],\"02\"),a=h(t,0,[2,0,7],\"02\"),u=h(t,0,[2,0,8],\"02\")}catch(t){throw new Error(\"malformed PKCS#8 plain RSA private key\")}this.setPrivateEx(e,r,n,i,o,s,a,u)},He.prototype.readPKCS5PubKeyHex=function(t){var e=Er,r=e.getV;if(!1===e.isASN1HEX(t))throw new Error(\"keyHex is not ASN.1 hex string\");var n=e.getChildIdx(t,0);if(2!==n.length||\"02\"!==t.substr(n[0],2)||\"02\"!==t.substr(n[1],2))throw new Error(\"wrong hex for PKCS#5 public key\");var i=r(t,n[0]),o=r(t,n[1]);this.setPublic(i,o)},He.prototype.readPKCS8PubKeyHex=function(t){var e=Er;if(!1===e.isASN1HEX(t))throw new Error(\"not ASN.1 hex string\");if(\"06092a864886f70d010101\"!==e.getTLVbyListEx(t,0,[0,0]))throw new Error(\"not PKCS8 RSA public key\");var r=e.getTLVbyListEx(t,0,[1,0]);this.readPKCS5PubKeyHex(r)},He.prototype.readCertPubKeyHex=function(t,e){var r,n;(r=new on).readCertHex(t),n=r.getPublicKeyHex(),this.readPKCS8PubKeyHex(n)};var tn=new RegExp(\"[^0-9a-f]\",\"gi\");function en(t,e){for(var r=\"\",n=e/4-t.length,i=0;i<n;i++)r+=\"0\";return r+t}function rn(t,e,r){for(var n=\"\",i=0;n.length<e;)n+=Nr(r(Ur(t+String.fromCharCode.apply(String,[(4278190080&i)>>24,(16711680&i)>>16,(65280&i)>>8,255&i])))),i+=1;return n}function nn(t){for(var e in br.crypto.Util.DIGESTINFOHEAD){var r=br.crypto.Util.DIGESTINFOHEAD[e],n=r.length;if(t.substring(0,n)==r)return[e,t.substring(n)]}return[]}function on(t){var e,r=Er,n=r.getChildIdx,i=r.getV,o=r.getTLV,s=r.getVbyList,a=r.getVbyListEx,u=r.getTLVbyList,c=r.getTLVbyListEx,h=r.getIdxbyList,l=r.getIdxbyListEx,f=r.getVidx,g=r.oidname,d=r.hextooidstr,p=on,v=Hr;try{e=br.asn1.x509.AlgorithmIdentifier.PSSNAME2ASN1TLV}catch(t){}this.HEX2STAG={\"0c\":\"utf8\",13:\"prn\",16:\"ia5\",\"1a\":\"vis\",\"1e\":\"bmp\"},this.hex=null,this.version=0,this.foffset=0,this.aExtInfo=null,this.getVersion=function(){return null===this.hex||0!==this.version?this.version:\"a003020102\"!==u(this.hex,0,[0,0])?(this.version=1,this.foffset=-1,1):(this.version=3,3)},this.getSerialNumberHex=function(){return a(this.hex,0,[0,0],\"02\")},this.getSignatureAlgorithmField=function(){var t=c(this.hex,0,[0,1]);return this.getAlgorithmIdentifierName(t)},this.getAlgorithmIdentifierName=function(t){for(var r in e)if(t===e[r])return r;return g(a(t,0,[0],\"06\"))},this.getIssuer=function(){return this.getX500Name(this.getIssuerHex())},this.getIssuerHex=function(){return u(this.hex,0,[0,3+this.foffset],\"30\")},this.getIssuerString=function(){return p.hex2dn(this.getIssuerHex())},this.getSubject=function(){return this.getX500Name(this.getSubjectHex())},this.getSubjectHex=function(){return u(this.hex,0,[0,5+this.foffset],\"30\")},this.getSubjectString=function(){return p.hex2dn(this.getSubjectHex())},this.getNotBefore=function(){var t=s(this.hex,0,[0,4+this.foffset,0]);return t=t.replace(/(..)/g,\"%$1\"),t=decodeURIComponent(t)},this.getNotAfter=function(){var t=s(this.hex,0,[0,4+this.foffset,1]);return t=t.replace(/(..)/g,\"%$1\"),t=decodeURIComponent(t)},this.getPublicKeyHex=function(){return r.getTLVbyList(this.hex,0,[0,6+this.foffset],\"30\")},this.getPublicKeyIdx=function(){return h(this.hex,0,[0,6+this.foffset],\"30\")},this.getPublicKeyContentIdx=function(){var t=this.getPublicKeyIdx();return h(this.hex,t,[1,0],\"30\")},this.getPublicKey=function(){return Zr.getKey(this.getPublicKeyHex(),null,\"pkcs8pub\")},this.getSignatureAlgorithmName=function(){var t=u(this.hex,0,[1],\"30\");return this.getAlgorithmIdentifierName(t)},this.getSignatureValueHex=function(){return s(this.hex,0,[2],\"03\",!0)},this.verifySignature=function(t){var e=this.getSignatureAlgorithmField(),r=this.getSignatureValueHex(),n=u(this.hex,0,[0],\"30\"),i=new br.crypto.Signature({alg:e});return i.init(t),i.updateHex(n),i.verify(r)},this.parseExt=function(t){var e,o,a;if(void 0===t){if(a=this.hex,3!==this.version)return-1;e=h(a,0,[0,7,0],\"30\"),o=n(a,e)}else{a=Hr(t);var u=h(a,0,[0,3,0,0],\"06\");if(\"2a864886f70d01090e\"!=i(a,u))return void(this.aExtInfo=new Array);e=h(a,0,[0,3,0,1,0],\"30\"),o=n(a,e),this.hex=a}this.aExtInfo=new Array;for(var c=0;c<o.length;c++){var l={critical:!1},g=0;3===n(a,o[c]).length&&(l.critical=!0,g=1),l.oid=r.hextooidstr(s(a,o[c],[0],\"06\"));var d=h(a,o[c],[1+g]);l.vidx=f(a,d),this.aExtInfo.push(l)}},this.getExtInfo=function(t){var e=this.aExtInfo,r=t;if(t.match(/^[0-9.]+$/)||(r=br.asn1.x509.OID.name2oid(t)),\"\"!==r)for(var n=0;n<e.length;n++)if(e[n].oid===r)return e[n]},this.getExtBasicConstraints=function(t,e){if(void 0===t&&void 0===e){var r=this.getExtInfo(\"basicConstraints\");if(void 0===r)return;t=o(this.hex,r.vidx),e=r.critical}var n={extname:\"basicConstraints\"};if(e&&(n.critical=!0),\"3000\"===t)return n;if(\"30030101ff\"===t)return n.cA=!0,n;if(\"30060101ff02\"===t.substr(0,12)){var s=i(t,10),a=parseInt(s,16);return n.cA=!0,n.pathLen=a,n}throw new Error(\"hExtV parse error: \"+t)},this.getExtKeyUsage=function(t,e){if(void 0===t&&void 0===e){var r=this.getExtInfo(\"keyUsage\");if(void 0===r)return;t=o(this.hex,r.vidx),e=r.critical}var n={extname:\"keyUsage\"};return e&&(n.critical=!0),n.names=this.getExtKeyUsageString(t).split(\",\"),n},this.getExtKeyUsageBin=function(t){if(void 0===t){var e=this.getExtInfo(\"keyUsage\");if(void 0===e)return\"\";t=o(this.hex,e.vidx)}if(8!=t.length&&10!=t.length)throw new Error(\"malformed key usage value: \"+t);var r=\"000000000000000\"+parseInt(t.substr(6),16).toString(2);return 8==t.length&&(r=r.slice(-8)),10==t.length&&(r=r.slice(-16)),\"\"==(r=r.replace(/0+$/,\"\"))&&(r=\"0\"),r},this.getExtKeyUsageString=function(t){for(var e=this.getExtKeyUsageBin(t),r=new Array,n=0;n<e.length;n++)\"1\"==e.substr(n,1)&&r.push(on.KEYUSAGE_NAME[n]);return r.join(\",\")},this.getExtSubjectKeyIdentifier=function(t,e){if(void 0===t&&void 0===e){var r=this.getExtInfo(\"subjectKeyIdentifier\");if(void 0===r)return;t=o(this.hex,r.vidx),e=r.critical}var n={extname:\"subjectKeyIdentifier\"};e&&(n.critical=!0);var s=i(t,0);return n.kid={hex:s},n},this.getExtAuthorityKeyIdentifier=function(t,e){if(void 0===t&&void 0===e){var r=this.getExtInfo(\"authorityKeyIdentifier\");if(void 0===r)return;t=o(this.hex,r.vidx),e=r.critical}var s={extname:\"authorityKeyIdentifier\"};e&&(s.critical=!0);for(var a=n(t,0),u=0;u<a.length;u++){var c=t.substr(a[u],2);if(\"80\"===c&&(s.kid={hex:i(t,a[u])}),\"a1\"===c){var h=o(t,a[u]),l=this.getGeneralNames(h);s.issuer=l[0].dn}\"82\"===c&&(s.sn={hex:i(t,a[u])})}return s},this.getExtExtKeyUsage=function(t,e){if(void 0===t&&void 0===e){var r=this.getExtInfo(\"extKeyUsage\");if(void 0===r)return;t=o(this.hex,r.vidx),e=r.critical}var s={extname:\"extKeyUsage\",array:[]};e&&(s.critical=!0);for(var a=n(t,0),u=0;u<a.length;u++)s.array.push(g(i(t,a[u])));return s},this.getExtExtKeyUsageName=function(){var t=this.getExtInfo(\"extKeyUsage\");if(void 0===t)return t;var e=new Array,r=o(this.hex,t.vidx);if(\"\"===r)return e;for(var s=n(r,0),a=0;a<s.length;a++)e.push(g(i(r,s[a])));return e},this.getExtSubjectAltName=function(t,e){if(void 0===t&&void 0===e){var r=this.getExtInfo(\"subjectAltName\");if(void 0===r)return;t=o(this.hex,r.vidx),e=r.critical}var n={extname:\"subjectAltName\",array:[]};return e&&(n.critical=!0),n.array=this.getGeneralNames(t),n},this.getExtIssuerAltName=function(t,e){if(void 0===t&&void 0===e){var r=this.getExtInfo(\"issuerAltName\");if(void 0===r)return;t=o(this.hex,r.vidx),e=r.critical}var n={extname:\"issuerAltName\",array:[]};return e&&(n.critical=!0),n.array=this.getGeneralNames(t),n},this.getGeneralNames=function(t){for(var e=n(t,0),r=[],i=0;i<e.length;i++){var s=this.getGeneralName(o(t,e[i]));void 0!==s&&r.push(s)}return r},this.getGeneralName=function(t){var e=t.substr(0,2),r=i(t,0),n=Nr(r);return\"81\"==e?{rfc822:n}:\"82\"==e?{dns:n}:\"86\"==e?{uri:n}:\"87\"==e?{ip:Yr(r)}:\"a4\"==e?{dn:this.getX500Name(r)}:void 0},this.getExtSubjectAltName2=function(){var t,e,r,s=this.getExtInfo(\"subjectAltName\");if(void 0===s)return s;for(var a=new Array,u=o(this.hex,s.vidx),c=n(u,0),h=0;h<c.length;h++)r=u.substr(c[h],2),t=i(u,c[h]),\"81\"===r&&(e=Lr(t),a.push([\"MAIL\",e])),\"82\"===r&&(e=Lr(t),a.push([\"DNS\",e])),\"84\"===r&&(e=on.hex2dn(t,0),a.push([\"DN\",e])),\"86\"===r&&(e=Lr(t),a.push([\"URI\",e])),\"87\"===r&&(e=Yr(t),a.push([\"IP\",e]));return a},this.getExtCRLDistributionPoints=function(t,e){if(void 0===t&&void 0===e){var r=this.getExtInfo(\"cRLDistributionPoints\");if(void 0===r)return;t=o(this.hex,r.vidx),e=r.critical}var i={extname:\"cRLDistributionPoints\",array:[]};e&&(i.critical=!0);for(var s=n(t,0),a=0;a<s.length;a++){var u=o(t,s[a]);i.array.push(this.getDistributionPoint(u))}return i},this.getDistributionPoint=function(t){for(var e={},r=n(t,0),i=0;i<r.length;i++){var s=t.substr(r[i],2),a=o(t,r[i]);\"a0\"==s&&(e.dpname=this.getDistributionPointName(a))}return e},this.getDistributionPointName=function(t){for(var e={},r=n(t,0),i=0;i<r.length;i++){var s=t.substr(r[i],2),a=o(t,r[i]);\"a0\"==s&&(e.full=this.getGeneralNames(a))}return e},this.getExtCRLDistributionPointsURI=function(){var t=this.getExtInfo(\"cRLDistributionPoints\");if(void 0===t)return t;for(var e=new Array,r=n(this.hex,t.vidx),i=0;i<r.length;i++)try{var o=Lr(s(this.hex,r[i],[0,0,0],\"86\"));e.push(o)}catch(t){}return e},this.getExtAIAInfo=function(){var t=this.getExtInfo(\"authorityInfoAccess\");if(void 0===t)return t;for(var e={ocsp:[],caissuer:[]},r=n(this.hex,t.vidx),i=0;i<r.length;i++){var o=s(this.hex,r[i],[0],\"06\"),a=s(this.hex,r[i],[1],\"86\");\"2b06010505073001\"===o&&e.ocsp.push(Lr(a)),\"2b06010505073002\"===o&&e.caissuer.push(Lr(a))}return e},this.getExtAuthorityInfoAccess=function(t,e){if(void 0===t&&void 0===e){var r=this.getExtInfo(\"authorityInfoAccess\");if(void 0===r)return;t=o(this.hex,r.vidx),e=r.critical}var i={extname:\"authorityInfoAccess\",array:[]};e&&(i.critical=!0);for(var u=n(t,0),c=0;c<u.length;c++){var h=a(t,u[c],[0],\"06\"),l=Lr(s(t,u[c],[1],\"86\"));if(\"2b06010505073001\"==h)i.array.push({ocsp:l});else{if(\"2b06010505073002\"!=h)throw new Error(\"unknown method: \"+h);i.array.push({caissuer:l})}}return i},this.getExtCertificatePolicies=function(t,e){if(void 0===t&&void 0===e){var r=this.getExtInfo(\"certificatePolicies\");if(void 0===r)return;t=o(this.hex,r.vidx),e=r.critical}var i={extname:\"certificatePolicies\",array:[]};e&&(i.critical=!0);for(var s=n(t,0),a=0;a<s.length;a++){var u=o(t,s[a]),c=this.getPolicyInformation(u);i.array.push(c)}return i},this.getPolicyInformation=function(t){var e={},r=s(t,0,[0],\"06\");e.policyoid=g(r);var i=l(t,0,[1],\"30\");if(-1!=i){e.array=[];for(var a=n(t,i),u=0;u<a.length;u++){var c=o(t,a[u]),h=this.getPolicyQualifierInfo(c);e.array.push(h)}}return e},this.getPolicyQualifierInfo=function(t){var e={},r=s(t,0,[0],\"06\");if(\"2b06010505070201\"===r){var n=a(t,0,[1],\"16\");e.cps=Nr(n)}else if(\"2b06010505070202\"===r){var i=u(t,0,[1],\"30\");e.unotice=this.getUserNotice(i)}return e},this.getUserNotice=function(t){for(var e={},r=n(t,0),i=0;i<r.length;i++){var s=o(t,r[i]);\"30\"!=s.substr(0,2)&&(e.exptext=this.getDisplayText(s))}return e},this.getDisplayText=function(t){var e={};return e.type={\"0c\":\"utf8\",16:\"ia5\",\"1a\":\"vis\",\"1e\":\"bmp\"}[t.substr(0,2)],e.str=Nr(i(t,0)),e},this.getExtCRLNumber=function(t,e){var r={extname:\"cRLNumber\"};if(e&&(r.critical=!0),\"02\"==t.substr(0,2))return r.num={hex:i(t,0)},r;throw new Error(\"hExtV parse error: \"+t)},this.getExtCRLReason=function(t,e){var r={extname:\"cRLReason\"};if(e&&(r.critical=!0),\"0a\"==t.substr(0,2))return r.code=parseInt(i(t,0),16),r;throw new Error(\"hExtV parse error: \"+t)},this.getExtOcspNonce=function(t,e){var r={extname:\"ocspNonce\"};e&&(r.critical=!0);var n=i(t,0);return r.hex=n,r},this.getExtOcspNoCheck=function(t,e){var r={extname:\"ocspNoCheck\"};return e&&(r.critical=!0),r},this.getExtAdobeTimeStamp=function(t,e){if(void 0===t&&void 0===e){var r=this.getExtInfo(\"adobeTimeStamp\");if(void 0===r)return;t=o(this.hex,r.vidx),e=r.critical}var i={extname:\"adobeTimeStamp\"};e&&(i.critical=!0);var s=n(t,0);if(s.length>1){var a=o(t,s[1]),u=this.getGeneralName(a);null!=u.uri&&(i.uri=u.uri)}if(s.length>2){var c=o(t,s[2]);\"0101ff\"==c&&(i.reqauth=!0),\"010100\"==c&&(i.reqauth=!1)}return i},this.getX500NameRule=function(t){for(var e=null,r=[],n=0;n<t.length;n++)for(var i=t[n],o=0;o<i.length;o++)r.push(i[o]);for(n=0;n<r.length;n++){var s=r[n],a=s.ds,u=s.value,c=s.type;if(\":\"+a,\"prn\"!=a&&\"utf8\"!=a&&\"ia5\"!=a)return\"mixed\";if(\"ia5\"==a){if(\"CN\"!=c)return\"mixed\";if(br.lang.String.isMail(u))continue;return\"mixed\"}if(\"C\"==c){if(\"prn\"==a)continue;return\"mixed\"}if(\":\"+a,null==e)e=a;else if(e!==a)return\"mixed\"}return null==e?\"prn\":e},this.getX500Name=function(t){var e=this.getX500NameArray(t);return{array:e,str:this.dnarraytostr(e)}},this.getX500NameArray=function(t){for(var e=[],r=n(t,0),i=0;i<r.length;i++)e.push(this.getRDN(o(t,r[i])));return e},this.getRDN=function(t){for(var e=[],r=n(t,0),i=0;i<r.length;i++)e.push(this.getAttrTypeAndValue(o(t,r[i])));return e},this.getAttrTypeAndValue=function(t){var e={type:null,value:null,ds:null},r=n(t,0),i=s(t,r[0],[],\"06\"),o=s(t,r[1],[]),a=br.asn1.ASN1Util.oidHexToInt(i);return e.type=br.asn1.x509.OID.oid2atype(a),e.value=Nr(o),e.ds=this.HEX2STAG[t.substr(r[1],2)],e},this.readCertPEM=function(t){this.readCertHex(v(t))},this.readCertHex=function(t){this.hex=t,this.getVersion();try{h(this.hex,0,[0,7],\"a3\"),this.parseExt()}catch(t){}},this.getParam=function(){var t={};return t.version=this.getVersion(),t.serial={hex:this.getSerialNumberHex()},t.sigalg=this.getSignatureAlgorithmField(),t.issuer=this.getIssuer(),t.notbefore=this.getNotBefore(),t.notafter=this.getNotAfter(),t.subject=this.getSubject(),t.sbjpubkey=Mr(this.getPublicKeyHex(),\"PUBLIC KEY\"),this.aExtInfo.length>0&&(t.ext=this.getExtParamArray()),t.sighex=this.getSignatureValueHex(),t},this.getExtParamArray=function(t){null==t&&(-1!=l(this.hex,0,[0,\"[3]\"])&&(t=c(this.hex,0,[0,\"[3]\",0],\"30\")));for(var e=[],r=n(t,0),i=0;i<r.length;i++){var s=o(t,r[i]),a=this.getExtParam(s);null!=a&&e.push(a)}return e},this.getExtParam=function(t){var e=n(t,0).length;if(2!=e&&3!=e)throw new Error(\"wrong number elements in Extension: \"+e+\" \"+t);var r=d(s(t,0,[0],\"06\")),i=!1;3==e&&\"0101ff\"==u(t,0,[1])&&(i=!0);var o=u(t,0,[e-1,0]),a=void 0;if(\"2.5.29.14\"==r?a=this.getExtSubjectKeyIdentifier(o,i):\"2.5.29.15\"==r?a=this.getExtKeyUsage(o,i):\"2.5.29.17\"==r?a=this.getExtSubjectAltName(o,i):\"2.5.29.18\"==r?a=this.getExtIssuerAltName(o,i):\"2.5.29.19\"==r?a=this.getExtBasicConstraints(o,i):\"2.5.29.31\"==r?a=this.getExtCRLDistributionPoints(o,i):\"2.5.29.32\"==r?a=this.getExtCertificatePolicies(o,i):\"2.5.29.35\"==r?a=this.getExtAuthorityKeyIdentifier(o,i):\"2.5.29.37\"==r?a=this.getExtExtKeyUsage(o,i):\"1.3.6.1.5.5.7.1.1\"==r?a=this.getExtAuthorityInfoAccess(o,i):\"2.5.29.20\"==r?a=this.getExtCRLNumber(o,i):\"2.5.29.21\"==r?a=this.getExtCRLReason(o,i):\"1.3.6.1.5.5.7.48.1.2\"==r?a=this.getExtOcspNonce(o,i):\"1.3.6.1.5.5.7.48.1.5\"==r?a=this.getExtOcspNoCheck(o,i):\"1.2.840.113583.1.1.9.1\"==r&&(a=this.getExtAdobeTimeStamp(o,i)),null!=a)return a;var c={extname:r,extn:o};return i&&(c.critical=!0),c},this.findExt=function(t,e){for(var r=0;r<t.length;r++)if(t[r].extname==e)return t[r];return null},this.updateExtCDPFullURI=function(t,e){var r=this.findExt(t,\"cRLDistributionPoints\");if(null!=r&&null!=r.array)for(var n=r.array,i=0;i<n.length;i++)if(null!=n[i].dpname&&null!=n[i].dpname.full)for(var o=n[i].dpname.full,s=0;s<o.length;s++){var a=o[i];null!=a.uri&&(a.uri=e)}},this.updateExtAIAOCSP=function(t,e){var r=this.findExt(t,\"authorityInfoAccess\");if(null!=r&&null!=r.array)for(var n=r.array,i=0;i<n.length;i++)null!=n[i].ocsp&&(n[i].ocsp=e)},this.updateExtAIACAIssuer=function(t,e){var r=this.findExt(t,\"authorityInfoAccess\");if(null!=r&&null!=r.array)for(var n=r.array,i=0;i<n.length;i++)null!=n[i].caissuer&&(n[i].caissuer=e)},this.dnarraytostr=function(t){return\"/\"+t.map((function(t){return function e(t){return t.map((function(t){return function e(t){return t.type+\"=\"+t.value}(t)})).join(\"+\")}(t)})).join(\"/\")},this.getInfo=function(){var t,e,r,n=function t(e){return JSON.stringify(e.array).replace(/[\\[\\]\\{\\}\\\"]/g,\"\")},i=function t(e){for(var r=\"\",n=e.array,i=0;i<n.length;i++){var o=n[i];if(r+=\"    policy oid: \"+o.policyoid+\"\\n\",void 0!==o.array)for(var s=0;s<o.array.length;s++){var a=o.array[s];void 0!==a.cps&&(r+=\"    cps: \"+a.cps+\"\\n\")}}return r},o=function t(e){for(var r=\"\",n=e.array,i=0;i<n.length;i++){var o=n[i];try{void 0!==o.dpname.full[0].uri&&(r+=\"    \"+o.dpname.full[0].uri+\"\\n\")}catch(t){}try{void 0!==o.dname.full[0].dn.hex&&(r+=\"    \"+on.hex2dn(o.dpname.full[0].dn.hex)+\"\\n\")}catch(t){}}return r},s=function t(e){for(var r=\"\",n=e.array,i=0;i<n.length;i++){var o=n[i];void 0!==o.caissuer&&(r+=\"    caissuer: \"+o.caissuer+\"\\n\"),void 0!==o.ocsp&&(r+=\"    ocsp: \"+o.ocsp+\"\\n\")}return r};if(t=\"Basic Fields\\n\",t+=\"  serial number: \"+this.getSerialNumberHex()+\"\\n\",t+=\"  signature algorithm: \"+this.getSignatureAlgorithmField()+\"\\n\",t+=\"  issuer: \"+this.getIssuerString()+\"\\n\",t+=\"  notBefore: \"+this.getNotBefore()+\"\\n\",t+=\"  notAfter: \"+this.getNotAfter()+\"\\n\",t+=\"  subject: \"+this.getSubjectString()+\"\\n\",t+=\"  subject public key info: \\n\",t+=\"    key algorithm: \"+(e=this.getPublicKey()).type+\"\\n\",\"RSA\"===e.type&&(t+=\"    n=\"+$r(e.n.toString(16)).substr(0,16)+\"...\\n\",t+=\"    e=\"+$r(e.e.toString(16))+\"\\n\"),null!=(r=this.aExtInfo)){t+=\"X509v3 Extensions:\\n\";for(var a=0;a<r.length;a++){var u=r[a],c=br.asn1.x509.OID.oid2name(u.oid);\"\"===c&&(c=u.oid);var h=\"\";if(!0===u.critical&&(h=\"CRITICAL\"),t+=\"  \"+c+\" \"+h+\":\\n\",\"basicConstraints\"===c){var l=this.getExtBasicConstraints();void 0===l.cA?t+=\"    {}\\n\":(t+=\"    cA=true\",void 0!==l.pathLen&&(t+=\", pathLen=\"+l.pathLen),t+=\"\\n\")}else if(\"keyUsage\"===c)t+=\"    \"+this.getExtKeyUsageString()+\"\\n\";else if(\"subjectKeyIdentifier\"===c)t+=\"    \"+this.getExtSubjectKeyIdentifier().kid.hex+\"\\n\";else if(\"authorityKeyIdentifier\"===c){var f=this.getExtAuthorityKeyIdentifier();void 0!==f.kid&&(t+=\"    kid=\"+f.kid.hex+\"\\n\")}else{if(\"extKeyUsage\"===c)t+=\"    \"+this.getExtExtKeyUsage().array.join(\", \")+\"\\n\";else if(\"subjectAltName\"===c)t+=\"    \"+n(this.getExtSubjectAltName())+\"\\n\";else if(\"cRLDistributionPoints\"===c)t+=o(this.getExtCRLDistributionPoints());else if(\"authorityInfoAccess\"===c)t+=s(this.getExtAuthorityInfoAccess());else\"certificatePolicies\"===c&&(t+=i(this.getExtCertificatePolicies()))}}}return t+=\"signature algorithm: \"+this.getSignatureAlgorithmName()+\"\\n\",t+=\"signature: \"+this.getSignatureValueHex().substr(0,16)+\"...\\n\"},\"string\"==typeof t&&(-1!=t.indexOf(\"-----BEGIN\")?this.readCertPEM(t):br.lang.String.isHex(t)&&this.readCertHex(t))}He.prototype.sign=function(t,e){var r=function t(r){return br.crypto.Util.hashString(r,e)}(t);return this.signWithMessageHash(r,e)},He.prototype.signWithMessageHash=function(t,e){var r=je(br.crypto.Util.getPaddedDigestInfoHex(t,e,this.n.bitLength()),16);return en(this.doPrivate(r).toString(16),this.n.bitLength())},He.prototype.signPSS=function(t,e,r){var n=function t(r){return br.crypto.Util.hashHex(r,e)}(Ur(t));return void 0===r&&(r=-1),this.signWithMessageHashPSS(n,e,r)},He.prototype.signWithMessageHashPSS=function(t,e,r){var n,i=Nr(t),o=i.length,s=this.n.bitLength()-1,a=Math.ceil(s/8),u=function t(r){return br.crypto.Util.hashHex(r,e)};if(-1===r||void 0===r)r=o;else if(-2===r)r=a-o-2;else if(r<-2)throw new Error(\"invalid salt length\");if(a<o+r+2)throw new Error(\"data too long\");var c=\"\";r>0&&(c=new Array(r),(new Oe).nextBytes(c),c=String.fromCharCode.apply(String,c));var h=Nr(u(Ur(\"\\0\\0\\0\\0\\0\\0\\0\\0\"+i+c))),l=[];for(n=0;n<a-r-o-2;n+=1)l[n]=0;var f=String.fromCharCode.apply(String,l)+\"\u0001\"+c,g=rn(h,f.length,u),d=[];for(n=0;n<f.length;n+=1)d[n]=f.charCodeAt(n)^g.charCodeAt(n);var p=65280>>8*a-s&255;for(d[0]&=~p,n=0;n<o;n++)d.push(h.charCodeAt(n));return d.push(188),en(this.doPrivate(new F(d)).toString(16),this.n.bitLength())},He.prototype.verify=function(t,e){var r=je(e=(e=e.replace(tn,\"\")).replace(/[ \\n]+/g,\"\"),16);if(r.bitLength()>this.n.bitLength())return 0;var n=nn(this.doPublic(r).toString(16).replace(/^1f+00/,\"\"));if(0==n.length)return!1;var i=n[0];return n[1]==function t(e){return br.crypto.Util.hashString(e,i)}(t)},He.prototype.verifyWithMessageHash=function(t,e){if(e.length!=Math.ceil(this.n.bitLength()/4))return!1;var r=je(e,16);if(r.bitLength()>this.n.bitLength())return 0;var n=nn(this.doPublic(r).toString(16).replace(/^1f+00/,\"\"));if(0==n.length)return!1;n[0];return n[1]==t},He.prototype.verifyPSS=function(t,e,r,n){var i=function t(e){return br.crypto.Util.hashHex(e,r)}(Ur(t));return void 0===n&&(n=-1),this.verifyWithMessageHashPSS(i,e,r,n)},He.prototype.verifyWithMessageHashPSS=function(t,e,r,n){if(e.length!=Math.ceil(this.n.bitLength()/4))return!1;var i,o=new F(e,16),s=function t(e){return br.crypto.Util.hashHex(e,r)},a=Nr(t),u=a.length,c=this.n.bitLength()-1,h=Math.ceil(c/8);if(-1===n||void 0===n)n=u;else if(-2===n)n=h-u-2;else if(n<-2)throw new Error(\"invalid salt length\");if(h<u+n+2)throw new Error(\"data too long\");var l=this.doPublic(o).toByteArray();for(i=0;i<l.length;i+=1)l[i]&=255;for(;l.length<h;)l.unshift(0);if(188!==l[h-1])throw new Error(\"encoded message does not end in 0xbc\");var f=(l=String.fromCharCode.apply(String,l)).substr(0,h-u-1),g=l.substr(f.length,u),d=65280>>8*h-c&255;if(0!=(f.charCodeAt(0)&d))throw new Error(\"bits beyond keysize not zero\");var p=rn(g,f.length,s),v=[];for(i=0;i<f.length;i+=1)v[i]=f.charCodeAt(i)^p.charCodeAt(i);v[0]&=~d;var y=h-u-n-2;for(i=0;i<y;i+=1)if(0!==v[i])throw new Error(\"leftmost octets not zero\");if(1!==v[y])throw new Error(\"0x01 marker not found\");return g===Nr(s(Ur(\"\\0\\0\\0\\0\\0\\0\\0\\0\"+a+String.fromCharCode.apply(String,v.slice(-n)))))},He.SALT_LEN_HLEN=-1,He.SALT_LEN_MAX=-2,He.SALT_LEN_RECOVER=-2,on.hex2dn=function(t,e){if(void 0===e&&(e=0),\"30\"!==t.substr(e,2))throw new Error(\"malformed DN\");for(var r=new Array,n=Er.getChildIdx(t,e),i=0;i<n.length;i++)r.push(on.hex2rdn(t,n[i]));return\"/\"+(r=r.map((function(t){return t.replace(\"/\",\"\\\\/\")}))).join(\"/\")},on.hex2rdn=function(t,e){if(void 0===e&&(e=0),\"31\"!==t.substr(e,2))throw new Error(\"malformed RDN\");for(var r=new Array,n=Er.getChildIdx(t,e),i=0;i<n.length;i++)r.push(on.hex2attrTypeValue(t,n[i]));return(r=r.map((function(t){return t.replace(\"+\",\"\\\\+\")}))).join(\"+\")},on.hex2attrTypeValue=function(t,e){var r=Er,n=r.getV;if(void 0===e&&(e=0),\"30\"!==t.substr(e,2))throw new Error(\"malformed attribute type and value\");var i=r.getChildIdx(t,e);2!==i.length||t.substr(i[0],2);var o=n(t,i[0]),s=br.asn1.ASN1Util.oidHexToInt(o);return br.asn1.x509.OID.oid2atype(s)+\"=\"+Nr(n(t,i[1]))},on.getPublicKeyFromCertHex=function(t){var e=new on;return e.readCertHex(t),e.getPublicKey()},on.getPublicKeyFromCertPEM=function(t){var e=new on;return e.readCertPEM(t),e.getPublicKey()},on.getPublicKeyInfoPropOfCertPEM=function(t){var e,r,n=Er.getVbyList,i={};return i.algparam=null,(e=new on).readCertPEM(t),r=e.getPublicKeyHex(),i.keyhex=n(r,0,[1],\"03\").substr(2),i.algoid=n(r,0,[0,0],\"06\"),\"2a8648ce3d0201\"===i.algoid&&(i.algparam=n(r,0,[0,1],\"06\")),i},on.KEYUSAGE_NAME=[\"digitalSignature\",\"nonRepudiation\",\"keyEncipherment\",\"dataEncipherment\",\"keyAgreement\",\"keyCertSign\",\"cRLSign\",\"encipherOnly\",\"decipherOnly\"],void 0!==br&&br||(e.KJUR=br={}),void 0!==br.jws&&br.jws||(br.jws={}),br.jws.JWS=function(){var t=br.jws.JWS.isSafeJSONString;this.parseJWS=function(e,r){if(void 0===this.parsedJWS||!r&&void 0===this.parsedJWS.sigvalH){var n=e.match(/^([^.]+)\\.([^.]+)\\.([^.]+)$/);if(null==n)throw\"JWS signature is not a form of 'Head.Payload.SigValue'.\";var i=n[1],o=n[2],s=n[3],a=i+\".\"+o;if(this.parsedJWS={},this.parsedJWS.headB64U=i,this.parsedJWS.payloadB64U=o,this.parsedJWS.sigvalB64U=s,this.parsedJWS.si=a,!r){var u=Ir(s),c=je(u,16);this.parsedJWS.sigvalH=u,this.parsedJWS.sigvalBI=c}var h=Fr(i),l=Fr(o);if(this.parsedJWS.headS=h,this.parsedJWS.payloadS=l,!t(h,this.parsedJWS,\"headP\"))throw\"malformed JSON string for JWS Head: \"+h}}},br.jws.JWS.sign=function(t,e,n,i,o){var s,a,u,c=br,h=c.jws.JWS,l=h.readSafeJSONString,f=h.isSafeJSONString,g=c.crypto,d=(g.ECDSA,g.Mac),p=g.Signature,v=JSON;if(\"string\"!=typeof e&&\"object\"!=(void 0===e?\"undefined\":r(e)))throw\"spHeader must be JSON string or object: \"+e;if(\"object\"==(void 0===e?\"undefined\":r(e))&&(a=e,s=v.stringify(a)),\"string\"==typeof e){if(!f(s=e))throw\"JWS Head is not safe JSON string: \"+s;a=l(s)}if(u=n,\"object\"==(void 0===n?\"undefined\":r(n))&&(u=v.stringify(n)),\"\"!=t&&null!=t||void 0===a.alg||(t=a.alg),\"\"!=t&&null!=t&&void 0===a.alg&&(a.alg=t,s=v.stringify(a)),t!==a.alg)throw\"alg and sHeader.alg doesn't match: \"+t+\"!=\"+a.alg;var y=null;if(void 0===h.jwsalg2sigalg[t])throw\"unsupported alg name: \"+t;y=h.jwsalg2sigalg[t];var m=wr(s)+\".\"+wr(u),_=\"\";if(\"Hmac\"==y.substr(0,4)){if(void 0===i)throw\"mac key shall be specified for HS* alg\";var S=new d({alg:y,prov:\"cryptojs\",pass:i});S.updateString(m),_=S.doFinal()}else if(-1!=y.indexOf(\"withECDSA\")){(w=new p({alg:y})).init(i,o),w.updateString(m);var b=w.sign();_=br.crypto.ECDSA.asn1SigToConcatSig(b)}else{var w;if(\"none\"!=y)(w=new p({alg:y})).init(i,o),w.updateString(m),_=w.sign()}return m+\".\"+Rr(_)},br.jws.JWS.verify=function(t,e,n){var i,o=br,s=o.jws.JWS,a=s.readSafeJSONString,u=o.crypto,c=u.ECDSA,h=u.Mac,l=u.Signature;void 0!==r(He)&&(i=He);var f=t.split(\".\");if(3!==f.length)return!1;var g=f[0]+\".\"+f[1],d=Ir(f[2]),p=a(Fr(f[0])),v=null,y=null;if(void 0===p.alg)throw\"algorithm not specified in header\";if((y=(v=p.alg).substr(0,2),null!=n&&\"[object Array]\"===Object.prototype.toString.call(n)&&n.length>0)&&-1==(\":\"+n.join(\":\")+\":\").indexOf(\":\"+v+\":\"))throw\"algorithm '\"+v+\"' not accepted in the list\";if(\"none\"!=v&&null===e)throw\"key shall be specified to verify.\";if(\"string\"==typeof e&&-1!=e.indexOf(\"-----BEGIN \")&&(e=Zr.getKey(e)),!(\"RS\"!=y&&\"PS\"!=y||e instanceof i))throw\"key shall be a RSAKey obj for RS* and PS* algs\";if(\"ES\"==y&&!(e instanceof c))throw\"key shall be a ECDSA obj for ES* algs\";var m=null;if(void 0===s.jwsalg2sigalg[p.alg])throw\"unsupported alg name: \"+v;if(\"none\"==(m=s.jwsalg2sigalg[v]))throw\"not supported\";if(\"Hmac\"==m.substr(0,4)){if(void 0===e)throw\"hexadecimal key shall be specified for HMAC\";var _=new h({alg:m,pass:e});return _.updateString(g),d==_.doFinal()}if(-1!=m.indexOf(\"withECDSA\")){var S,b=null;try{b=c.concatSigToASN1Sig(d)}catch(t){return!1}return(S=new l({alg:m})).init(e),S.updateString(g),S.verify(b)}return(S=new l({alg:m})).init(e),S.updateString(g),S.verify(d)},br.jws.JWS.parse=function(t){var e,r,n,i=t.split(\".\"),o={};if(2!=i.length&&3!=i.length)throw\"malformed sJWS: wrong number of '.' splitted elements\";return e=i[0],r=i[1],3==i.length&&(n=i[2]),o.headerObj=br.jws.JWS.readSafeJSONString(Fr(e)),o.payloadObj=br.jws.JWS.readSafeJSONString(Fr(r)),o.headerPP=JSON.stringify(o.headerObj,null,\"  \"),null==o.payloadObj?o.payloadPP=Fr(r):o.payloadPP=JSON.stringify(o.payloadObj,null,\"  \"),void 0!==n&&(o.sigHex=Ir(n)),o},br.jws.JWS.verifyJWT=function(t,e,n){var i=br.jws,o=i.JWS,s=o.readSafeJSONString,a=o.inArray,u=o.includedArray,c=t.split(\".\"),h=c[0],l=c[1],f=(Ir(c[2]),s(Fr(h))),g=s(Fr(l));if(void 0===f.alg)return!1;if(void 0===n.alg)throw\"acceptField.alg shall be specified\";if(!a(f.alg,n.alg))return!1;if(void 0!==g.iss&&\"object\"===r(n.iss)&&!a(g.iss,n.iss))return!1;if(void 0!==g.sub&&\"object\"===r(n.sub)&&!a(g.sub,n.sub))return!1;if(void 0!==g.aud&&\"object\"===r(n.aud))if(\"string\"==typeof g.aud){if(!a(g.aud,n.aud))return!1}else if(\"object\"==r(g.aud)&&!u(g.aud,n.aud))return!1;var d=i.IntDate.getNow();return void 0!==n.verifyAt&&\"number\"==typeof n.verifyAt&&(d=n.verifyAt),void 0!==n.gracePeriod&&\"number\"==typeof n.gracePeriod||(n.gracePeriod=0),!(void 0!==g.exp&&\"number\"==typeof g.exp&&g.exp+n.gracePeriod<d)&&(!(void 0!==g.nbf&&\"number\"==typeof g.nbf&&d<g.nbf-n.gracePeriod)&&(!(void 0!==g.iat&&\"number\"==typeof g.iat&&d<g.iat-n.gracePeriod)&&((void 0===g.jti||void 0===n.jti||g.jti===n.jti)&&!!o.verify(t,e,n.alg))))},br.jws.JWS.includedArray=function(t,e){var n=br.jws.JWS.inArray;if(null===t)return!1;if(\"object\"!==(void 0===t?\"undefined\":r(t)))return!1;if(\"number\"!=typeof t.length)return!1;for(var i=0;i<t.length;i++)if(!n(t[i],e))return!1;return!0},br.jws.JWS.inArray=function(t,e){if(null===e)return!1;if(\"object\"!==(void 0===e?\"undefined\":r(e)))return!1;if(\"number\"!=typeof e.length)return!1;for(var n=0;n<e.length;n++)if(e[n]==t)return!0;return!1},br.jws.JWS.jwsalg2sigalg={HS256:\"HmacSHA256\",HS384:\"HmacSHA384\",HS512:\"HmacSHA512\",RS256:\"SHA256withRSA\",RS384:\"SHA384withRSA\",RS512:\"SHA512withRSA\",ES256:\"SHA256withECDSA\",ES384:\"SHA384withECDSA\",PS256:\"SHA256withRSAandMGF1\",PS384:\"SHA384withRSAandMGF1\",PS512:\"SHA512withRSAandMGF1\",none:\"none\"},br.jws.JWS.isSafeJSONString=function(t,e,n){var i=null;try{return\"object\"!=(void 0===(i=Sr(t))?\"undefined\":r(i))||i.constructor===Array?0:(e&&(e[n]=i),1)}catch(t){return 0}},br.jws.JWS.readSafeJSONString=function(t){var e=null;try{return\"object\"!=(void 0===(e=Sr(t))?\"undefined\":r(e))||e.constructor===Array?null:e}catch(t){return null}},br.jws.JWS.getEncodedSignatureValueFromJWS=function(t){var e=t.match(/^[^.]+\\.[^.]+\\.([^.]+)$/);if(null==e)throw\"JWS signature is not a form of 'Head.Payload.SigValue'.\";return e[1]},br.jws.JWS.getJWKthumbprint=function(t){if(\"RSA\"!==t.kty&&\"EC\"!==t.kty&&\"oct\"!==t.kty)throw\"unsupported algorithm for JWK Thumprint\";var e=\"{\";if(\"RSA\"===t.kty){if(\"string\"!=typeof t.n||\"string\"!=typeof t.e)throw\"wrong n and e value for RSA key\";e+='\"e\":\"'+t.e+'\",',e+='\"kty\":\"'+t.kty+'\",',e+='\"n\":\"'+t.n+'\"}'}else if(\"EC\"===t.kty){if(\"string\"!=typeof t.crv||\"string\"!=typeof t.x||\"string\"!=typeof t.y)throw\"wrong crv, x and y value for EC key\";e+='\"crv\":\"'+t.crv+'\",',e+='\"kty\":\"'+t.kty+'\",',e+='\"x\":\"'+t.x+'\",',e+='\"y\":\"'+t.y+'\"}'}else if(\"oct\"===t.kty){if(\"string\"!=typeof t.k)throw\"wrong k value for oct(symmetric) key\";e+='\"kty\":\"'+t.kty+'\",',e+='\"k\":\"'+t.k+'\"}'}var r=Ur(e);return Rr(br.crypto.Util.hashHex(r,\"sha256\"))},br.jws.IntDate={},br.jws.IntDate.get=function(t){var e=br.jws.IntDate,r=e.getNow,n=e.getZulu;if(\"now\"==t)return r();if(\"now + 1hour\"==t)return r()+3600;if(\"now + 1day\"==t)return r()+86400;if(\"now + 1month\"==t)return r()+2592e3;if(\"now + 1year\"==t)return r()+31536e3;if(t.match(/Z$/))return n(t);if(t.match(/^[0-9]+$/))return parseInt(t);throw\"unsupported format: \"+t},br.jws.IntDate.getZulu=function(t){return Kr(t)},br.jws.IntDate.getNow=function(){return~~(new Date/1e3)},br.jws.IntDate.intDate2UTCString=function(t){return new Date(1e3*t).toUTCString()},br.jws.IntDate.intDate2Zulu=function(t){var e=new Date(1e3*t);return(\"0000\"+e.getUTCFullYear()).slice(-4)+(\"00\"+(e.getUTCMonth()+1)).slice(-2)+(\"00\"+e.getUTCDate()).slice(-2)+(\"00\"+e.getUTCHours()).slice(-2)+(\"00\"+e.getUTCMinutes()).slice(-2)+(\"00\"+e.getUTCSeconds()).slice(-2)+\"Z\"},e.SecureRandom=Oe,e.rng_seed_time=Ie,e.BigInteger=F,e.RSAKey=He;var sn=br.crypto.EDSA;e.EDSA=sn;var an=br.crypto.DSA;e.DSA=an;var un=br.crypto.Signature;e.Signature=un;var cn=br.crypto.MessageDigest;e.MessageDigest=cn;var hn=br.crypto.Mac;e.Mac=hn;var ln=br.crypto.Cipher;e.Cipher=ln,e.KEYUTIL=Zr,e.ASN1HEX=Er,e.X509=on,e.CryptoJS=y,e.b64tohex=b,e.b64toBA=w,e.stoBA=xr,e.BAtos=Ar,e.BAtohex=kr,e.stohex=Pr,e.stob64=function fn(t){return S(Pr(t))},e.stob64u=function gn(t){return Cr(S(Pr(t)))},e.b64utos=function dn(t){return Ar(w(Tr(t)))},e.b64tob64u=Cr,e.b64utob64=Tr,e.hex2b64=S,e.hextob64u=Rr,e.b64utohex=Ir,e.utf8tob64u=wr,e.b64utoutf8=Fr,e.utf8tob64=function pn(t){return S(qr(Gr(t)))},e.b64toutf8=function vn(t){return decodeURIComponent(Jr(b(t)))},e.utf8tohex=Dr,e.hextoutf8=Lr,e.hextorstr=Nr,e.rstrtohex=Ur,e.hextob64=Br,e.hextob64nl=Or,e.b64nltohex=jr,e.hextopem=Mr,e.pemtohex=Hr,e.hextoArrayBuffer=function yn(t){if(t.length%2!=0)throw\"input is not even length\";if(null==t.match(/^[0-9A-Fa-f]+$/))throw\"input is not hexadecimal\";for(var e=new ArrayBuffer(t.length/2),r=new DataView(e),n=0;n<t.length/2;n++)r.setUint8(n,parseInt(t.substr(2*n,2),16));return e},e.ArrayBuffertohex=function mn(t){for(var e=\"\",r=new DataView(t),n=0;n<t.byteLength;n++)e+=(\"00\"+r.getUint8(n).toString(16)).slice(-2);return e},e.zulutomsec=Vr,e.zulutosec=Kr,e.zulutodate=function _n(t){return new Date(Vr(t))},e.datetozulu=function Sn(t,e,r){var n,i=t.getUTCFullYear();if(e){if(i<1950||2049<i)throw\"not proper year for UTCTime: \"+i;n=(\"\"+i).slice(-2)}else n=(\"000\"+i).slice(-4);if(n+=(\"0\"+(t.getUTCMonth()+1)).slice(-2),n+=(\"0\"+t.getUTCDate()).slice(-2),n+=(\"0\"+t.getUTCHours()).slice(-2),n+=(\"0\"+t.getUTCMinutes()).slice(-2),n+=(\"0\"+t.getUTCSeconds()).slice(-2),r){var o=t.getUTCMilliseconds();0!==o&&(n+=\".\"+(o=(o=(\"00\"+o).slice(-3)).replace(/0+$/g,\"\")))}return n+=\"Z\"},e.uricmptohex=qr,e.hextouricmp=Jr,e.ipv6tohex=Wr,e.hextoipv6=zr,e.hextoip=Yr,e.iptohex=function bn(t){var e=\"malformed IP address\";if(!(t=t.toLowerCase(t)).match(/^[0-9.]+$/)){if(t.match(/^[0-9a-f:]+$/)&&-1!==t.indexOf(\":\"))return Wr(t);throw e}var r=t.split(\".\");if(4!==r.length)throw e;var n=\"\";try{for(var i=0;i<4;i++){n+=(\"0\"+parseInt(r[i]).toString(16)).slice(-2)}return n}catch(t){throw e}},e.encodeURIComponentAll=Gr,e.newline_toUnix=function wn(t){return t=t.replace(/\\r\\n/gm,\"\\n\")},e.newline_toDos=function Fn(t){return t=(t=t.replace(/\\r\\n/gm,\"\\n\")).replace(/\\n/gm,\"\\r\\n\")},e.hextoposhex=$r,e.intarystrtohex=function En(t){t=(t=(t=t.replace(/^\\s*\\[\\s*/,\"\")).replace(/\\s*\\]\\s*$/,\"\")).replace(/\\s*/g,\"\");try{return t.split(/,/).map((function(t,e,r){var n=parseInt(t);if(n<0||255<n)throw\"integer not in range 0-255\";return(\"00\"+n.toString(16)).slice(-2)})).join(\"\")}catch(t){throw\"malformed integer array string: \"+t}},e.strdiffidx=function t(e,r){var n=e.length;e.length>r.length&&(n=r.length);for(var i=0;i<n;i++)if(e.charCodeAt(i)!=r.charCodeAt(i))return i;return e.length!=r.length?n:-1},e.KJUR=br;var xn=br.crypto;e.crypto=xn;var An=br.asn1;e.asn1=An;var kn=br.jws;e.jws=kn;var Pn=br.lang;e.lang=Pn}).call(this,r(28).Buffer)},function(t,e,r){\"use strict\";(function(t){\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\nvar n=r(30),i=r(31),o=r(32);function s(){return u.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function a(t,e){if(s()<e)throw new RangeError(\"Invalid typed array length\");return u.TYPED_ARRAY_SUPPORT?(t=new Uint8Array(e)).__proto__=u.prototype:(null===t&&(t=new u(e)),t.length=e),t}function u(t,e,r){if(!(u.TYPED_ARRAY_SUPPORT||this instanceof u))return new u(t,e,r);if(\"number\"==typeof t){if(\"string\"==typeof e)throw new Error(\"If encoding is specified then the first argument must be a string\");return l(this,t)}return c(this,t,e,r)}function c(t,e,r,n){if(\"number\"==typeof e)throw new TypeError('\"value\" argument must not be a number');return\"undefined\"!=typeof ArrayBuffer&&e instanceof ArrayBuffer?function i(t,e,r,n){if(e.byteLength,r<0||e.byteLength<r)throw new RangeError(\"'offset' is out of bounds\");if(e.byteLength<r+(n||0))throw new RangeError(\"'length' is out of bounds\");e=void 0===r&&void 0===n?new Uint8Array(e):void 0===n?new Uint8Array(e,r):new Uint8Array(e,r,n);u.TYPED_ARRAY_SUPPORT?(t=e).__proto__=u.prototype:t=f(t,e);return t}(t,e,r,n):\"string\"==typeof e?function s(t,e,r){\"string\"==typeof r&&\"\"!==r||(r=\"utf8\");if(!u.isEncoding(r))throw new TypeError('\"encoding\" must be a valid string encoding');var n=0|d(e,r),i=(t=a(t,n)).write(e,r);i!==n&&(t=t.slice(0,i));return t}(t,e,r):function c(t,e){if(u.isBuffer(e)){var r=0|g(e.length);return 0===(t=a(t,r)).length||e.copy(t,0,0,r),t}if(e){if(\"undefined\"!=typeof ArrayBuffer&&e.buffer instanceof ArrayBuffer||\"length\"in e)return\"number\"!=typeof e.length||function n(t){return t!=t}(e.length)?a(t,0):f(t,e);if(\"Buffer\"===e.type&&o(e.data))return f(t,e.data)}throw new TypeError(\"First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.\")}(t,e)}function h(t){if(\"number\"!=typeof t)throw new TypeError('\"size\" argument must be a number');if(t<0)throw new RangeError('\"size\" argument must not be negative')}function l(t,e){if(h(e),t=a(t,e<0?0:0|g(e)),!u.TYPED_ARRAY_SUPPORT)for(var r=0;r<e;++r)t[r]=0;return t}function f(t,e){var r=e.length<0?0:0|g(e.length);t=a(t,r);for(var n=0;n<r;n+=1)t[n]=255&e[n];return t}function g(t){if(t>=s())throw new RangeError(\"Attempt to allocate Buffer larger than maximum size: 0x\"+s().toString(16)+\" bytes\");return 0|t}function d(t,e){if(u.isBuffer(t))return t.length;if(\"undefined\"!=typeof ArrayBuffer&&\"function\"==typeof ArrayBuffer.isView&&(ArrayBuffer.isView(t)||t instanceof ArrayBuffer))return t.byteLength;\"string\"!=typeof t&&(t=\"\"+t);var r=t.length;if(0===r)return 0;for(var n=!1;;)switch(e){case\"ascii\":case\"latin1\":case\"binary\":return r;case\"utf8\":case\"utf-8\":case void 0:return K(t).length;case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return 2*r;case\"hex\":return r>>>1;case\"base64\":return q(t).length;default:if(n)return K(t).length;e=(\"\"+e).toLowerCase(),n=!0}}function p(t,e,r){var n=!1;if((void 0===e||e<0)&&(e=0),e>this.length)return\"\";if((void 0===r||r>this.length)&&(r=this.length),r<=0)return\"\";if((r>>>=0)<=(e>>>=0))return\"\";for(t||(t=\"utf8\");;)switch(t){case\"hex\":return I(this,e,r);case\"utf8\":case\"utf-8\":return A(this,e,r);case\"ascii\":return T(this,e,r);case\"latin1\":case\"binary\":return R(this,e,r);case\"base64\":return x(this,e,r);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return D(this,e,r);default:if(n)throw new TypeError(\"Unknown encoding: \"+t);t=(t+\"\").toLowerCase(),n=!0}}function v(t,e,r){var n=t[e];t[e]=t[r],t[r]=n}function y(t,e,r,n,i){if(0===t.length)return-1;if(\"string\"==typeof r?(n=r,r=0):r>2147483647?r=2147483647:r<-2147483648&&(r=-2147483648),r=+r,isNaN(r)&&(r=i?0:t.length-1),r<0&&(r=t.length+r),r>=t.length){if(i)return-1;r=t.length-1}else if(r<0){if(!i)return-1;r=0}if(\"string\"==typeof e&&(e=u.from(e,n)),u.isBuffer(e))return 0===e.length?-1:m(t,e,r,n,i);if(\"number\"==typeof e)return e&=255,u.TYPED_ARRAY_SUPPORT&&\"function\"==typeof Uint8Array.prototype.indexOf?i?Uint8Array.prototype.indexOf.call(t,e,r):Uint8Array.prototype.lastIndexOf.call(t,e,r):m(t,[e],r,n,i);throw new TypeError(\"val must be string, number or Buffer\")}function m(t,e,r,n,i){var o,s=1,a=t.length,u=e.length;if(void 0!==n&&(\"ucs2\"===(n=String(n).toLowerCase())||\"ucs-2\"===n||\"utf16le\"===n||\"utf-16le\"===n)){if(t.length<2||e.length<2)return-1;s=2,a/=2,u/=2,r/=2}function c(t,e){return 1===s?t[e]:t.readUInt16BE(e*s)}if(i){var h=-1;for(o=r;o<a;o++)if(c(t,o)===c(e,-1===h?0:o-h)){if(-1===h&&(h=o),o-h+1===u)return h*s}else-1!==h&&(o-=o-h),h=-1}else for(r+u>a&&(r=a-u),o=r;o>=0;o--){for(var l=!0,f=0;f<u;f++)if(c(t,o+f)!==c(e,f)){l=!1;break}if(l)return o}return-1}function _(t,e,r,n){r=Number(r)||0;var i=t.length-r;n?(n=Number(n))>i&&(n=i):n=i;var o=e.length;if(o%2!=0)throw new TypeError(\"Invalid hex string\");n>o/2&&(n=o/2);for(var s=0;s<n;++s){var a=parseInt(e.substr(2*s,2),16);if(isNaN(a))return s;t[r+s]=a}return s}function S(t,e,r,n){return J(K(e,t.length-r),t,r,n)}function b(t,e,r,n){return J(function i(t){for(var e=[],r=0;r<t.length;++r)e.push(255&t.charCodeAt(r));return e}(e),t,r,n)}function w(t,e,r,n){return b(t,e,r,n)}function F(t,e,r,n){return J(q(e),t,r,n)}function E(t,e,r,n){return J(function i(t,e){for(var r,n,i,o=[],s=0;s<t.length&&!((e-=2)<0);++s)n=(r=t.charCodeAt(s))>>8,i=r%256,o.push(i),o.push(n);return o}(e,t.length-r),t,r,n)}function x(t,e,r){return 0===e&&r===t.length?n.fromByteArray(t):n.fromByteArray(t.slice(e,r))}function A(t,e,r){r=Math.min(t.length,r);for(var n=[],i=e;i<r;){var o,s,a,u,c=t[i],h=null,l=c>239?4:c>223?3:c>191?2:1;if(i+l<=r)switch(l){case 1:c<128&&(h=c);break;case 2:128==(192&(o=t[i+1]))&&(u=(31&c)<<6|63&o)>127&&(h=u);break;case 3:o=t[i+1],s=t[i+2],128==(192&o)&&128==(192&s)&&(u=(15&c)<<12|(63&o)<<6|63&s)>2047&&(u<55296||u>57343)&&(h=u);break;case 4:o=t[i+1],s=t[i+2],a=t[i+3],128==(192&o)&&128==(192&s)&&128==(192&a)&&(u=(15&c)<<18|(63&o)<<12|(63&s)<<6|63&a)>65535&&u<1114112&&(h=u)}null===h?(h=65533,l=1):h>65535&&(h-=65536,n.push(h>>>10&1023|55296),h=56320|1023&h),n.push(h),i+=l}return function f(t){var e=t.length;if(e<=C)return String.fromCharCode.apply(String,t);var r=\"\",n=0;for(;n<e;)r+=String.fromCharCode.apply(String,t.slice(n,n+=C));return r}(n)}e.Buffer=u,e.SlowBuffer=function k(t){+t!=t&&(t=0);return u.alloc(+t)},e.INSPECT_MAX_BYTES=50,u.TYPED_ARRAY_SUPPORT=void 0!==t.TYPED_ARRAY_SUPPORT?t.TYPED_ARRAY_SUPPORT:function P(){try{var t=new Uint8Array(1);return t.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===t.foo()&&\"function\"==typeof t.subarray&&0===t.subarray(1,1).byteLength}catch(t){return!1}}(),e.kMaxLength=s(),u.poolSize=8192,u._augment=function(t){return t.__proto__=u.prototype,t},u.from=function(t,e,r){return c(null,t,e,r)},u.TYPED_ARRAY_SUPPORT&&(u.prototype.__proto__=Uint8Array.prototype,u.__proto__=Uint8Array,\"undefined\"!=typeof Symbol&&Symbol.species&&u[Symbol.species]===u&&Object.defineProperty(u,Symbol.species,{value:null,configurable:!0})),u.alloc=function(t,e,r){return function n(t,e,r,i){return h(e),e<=0?a(t,e):void 0!==r?\"string\"==typeof i?a(t,e).fill(r,i):a(t,e).fill(r):a(t,e)}(null,t,e,r)},u.allocUnsafe=function(t){return l(null,t)},u.allocUnsafeSlow=function(t){return l(null,t)},u.isBuffer=function t(e){return!(null==e||!e._isBuffer)},u.compare=function t(e,r){if(!u.isBuffer(e)||!u.isBuffer(r))throw new TypeError(\"Arguments must be Buffers\");if(e===r)return 0;for(var n=e.length,i=r.length,o=0,s=Math.min(n,i);o<s;++o)if(e[o]!==r[o]){n=e[o],i=r[o];break}return n<i?-1:i<n?1:0},u.isEncoding=function t(e){switch(String(e).toLowerCase()){case\"hex\":case\"utf8\":case\"utf-8\":case\"ascii\":case\"latin1\":case\"binary\":case\"base64\":case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return!0;default:return!1}},u.concat=function t(e,r){if(!o(e))throw new TypeError('\"list\" argument must be an Array of Buffers');if(0===e.length)return u.alloc(0);var n;if(void 0===r)for(r=0,n=0;n<e.length;++n)r+=e[n].length;var i=u.allocUnsafe(r),s=0;for(n=0;n<e.length;++n){var a=e[n];if(!u.isBuffer(a))throw new TypeError('\"list\" argument must be an Array of Buffers');a.copy(i,s),s+=a.length}return i},u.byteLength=d,u.prototype._isBuffer=!0,u.prototype.swap16=function t(){var e=this.length;if(e%2!=0)throw new RangeError(\"Buffer size must be a multiple of 16-bits\");for(var r=0;r<e;r+=2)v(this,r,r+1);return this},u.prototype.swap32=function t(){var e=this.length;if(e%4!=0)throw new RangeError(\"Buffer size must be a multiple of 32-bits\");for(var r=0;r<e;r+=4)v(this,r,r+3),v(this,r+1,r+2);return this},u.prototype.swap64=function t(){var e=this.length;if(e%8!=0)throw new RangeError(\"Buffer size must be a multiple of 64-bits\");for(var r=0;r<e;r+=8)v(this,r,r+7),v(this,r+1,r+6),v(this,r+2,r+5),v(this,r+3,r+4);return this},u.prototype.toString=function t(){var e=0|this.length;return 0===e?\"\":0===arguments.length?A(this,0,e):p.apply(this,arguments)},u.prototype.equals=function t(e){if(!u.isBuffer(e))throw new TypeError(\"Argument must be a Buffer\");return this===e||0===u.compare(this,e)},u.prototype.inspect=function t(){var r=\"\",n=e.INSPECT_MAX_BYTES;return this.length>0&&(r=this.toString(\"hex\",0,n).match(/.{2}/g).join(\" \"),this.length>n&&(r+=\" ... \")),\"<Buffer \"+r+\">\"},u.prototype.compare=function t(e,r,n,i,o){if(!u.isBuffer(e))throw new TypeError(\"Argument must be a Buffer\");if(void 0===r&&(r=0),void 0===n&&(n=e?e.length:0),void 0===i&&(i=0),void 0===o&&(o=this.length),r<0||n>e.length||i<0||o>this.length)throw new RangeError(\"out of range index\");if(i>=o&&r>=n)return 0;if(i>=o)return-1;if(r>=n)return 1;if(this===e)return 0;for(var s=(o>>>=0)-(i>>>=0),a=(n>>>=0)-(r>>>=0),c=Math.min(s,a),h=this.slice(i,o),l=e.slice(r,n),f=0;f<c;++f)if(h[f]!==l[f]){s=h[f],a=l[f];break}return s<a?-1:a<s?1:0},u.prototype.includes=function t(e,r,n){return-1!==this.indexOf(e,r,n)},u.prototype.indexOf=function t(e,r,n){return y(this,e,r,n,!0)},u.prototype.lastIndexOf=function t(e,r,n){return y(this,e,r,n,!1)},u.prototype.write=function t(e,r,n,i){if(void 0===r)i=\"utf8\",n=this.length,r=0;else if(void 0===n&&\"string\"==typeof r)i=r,n=this.length,r=0;else{if(!isFinite(r))throw new Error(\"Buffer.write(string, encoding, offset[, length]) is no longer supported\");r|=0,isFinite(n)?(n|=0,void 0===i&&(i=\"utf8\")):(i=n,n=void 0)}var o=this.length-r;if((void 0===n||n>o)&&(n=o),e.length>0&&(n<0||r<0)||r>this.length)throw new RangeError(\"Attempt to write outside buffer bounds\");i||(i=\"utf8\");for(var s=!1;;)switch(i){case\"hex\":return _(this,e,r,n);case\"utf8\":case\"utf-8\":return S(this,e,r,n);case\"ascii\":return b(this,e,r,n);case\"latin1\":case\"binary\":return w(this,e,r,n);case\"base64\":return F(this,e,r,n);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return E(this,e,r,n);default:if(s)throw new TypeError(\"Unknown encoding: \"+i);i=(\"\"+i).toLowerCase(),s=!0}},u.prototype.toJSON=function t(){return{type:\"Buffer\",data:Array.prototype.slice.call(this._arr||this,0)}};var C=4096;function T(t,e,r){var n=\"\";r=Math.min(t.length,r);for(var i=e;i<r;++i)n+=String.fromCharCode(127&t[i]);return n}function R(t,e,r){var n=\"\";r=Math.min(t.length,r);for(var i=e;i<r;++i)n+=String.fromCharCode(t[i]);return n}function I(t,e,r){var n=t.length;(!e||e<0)&&(e=0),(!r||r<0||r>n)&&(r=n);for(var i=\"\",o=e;o<r;++o)i+=V(t[o]);return i}function D(t,e,r){for(var n=t.slice(e,r),i=\"\",o=0;o<n.length;o+=2)i+=String.fromCharCode(n[o]+256*n[o+1]);return i}function L(t,e,r){if(t%1!=0||t<0)throw new RangeError(\"offset is not uint\");if(t+e>r)throw new RangeError(\"Trying to access beyond buffer length\")}function N(t,e,r,n,i,o){if(!u.isBuffer(t))throw new TypeError('\"buffer\" argument must be a Buffer instance');if(e>i||e<o)throw new RangeError('\"value\" argument is out of bounds');if(r+n>t.length)throw new RangeError(\"Index out of range\")}function U(t,e,r,n){e<0&&(e=65535+e+1);for(var i=0,o=Math.min(t.length-r,2);i<o;++i)t[r+i]=(e&255<<8*(n?i:1-i))>>>8*(n?i:1-i)}function B(t,e,r,n){e<0&&(e=4294967295+e+1);for(var i=0,o=Math.min(t.length-r,4);i<o;++i)t[r+i]=e>>>8*(n?i:3-i)&255}function O(t,e,r,n,i,o){if(r+n>t.length)throw new RangeError(\"Index out of range\");if(r<0)throw new RangeError(\"Index out of range\")}function j(t,e,r,n,o){return o||O(t,0,r,4),i.write(t,e,r,n,23,4),r+4}function M(t,e,r,n,o){return o||O(t,0,r,8),i.write(t,e,r,n,52,8),r+8}u.prototype.slice=function t(e,r){var n,i=this.length;if((e=~~e)<0?(e+=i)<0&&(e=0):e>i&&(e=i),(r=void 0===r?i:~~r)<0?(r+=i)<0&&(r=0):r>i&&(r=i),r<e&&(r=e),u.TYPED_ARRAY_SUPPORT)(n=this.subarray(e,r)).__proto__=u.prototype;else{var o=r-e;n=new u(o,void 0);for(var s=0;s<o;++s)n[s]=this[s+e]}return n},u.prototype.readUIntLE=function t(e,r,n){e|=0,r|=0,n||L(e,r,this.length);for(var i=this[e],o=1,s=0;++s<r&&(o*=256);)i+=this[e+s]*o;return i},u.prototype.readUIntBE=function t(e,r,n){e|=0,r|=0,n||L(e,r,this.length);for(var i=this[e+--r],o=1;r>0&&(o*=256);)i+=this[e+--r]*o;return i},u.prototype.readUInt8=function t(e,r){return r||L(e,1,this.length),this[e]},u.prototype.readUInt16LE=function t(e,r){return r||L(e,2,this.length),this[e]|this[e+1]<<8},u.prototype.readUInt16BE=function t(e,r){return r||L(e,2,this.length),this[e]<<8|this[e+1]},u.prototype.readUInt32LE=function t(e,r){return r||L(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},u.prototype.readUInt32BE=function t(e,r){return r||L(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},u.prototype.readIntLE=function t(e,r,n){e|=0,r|=0,n||L(e,r,this.length);for(var i=this[e],o=1,s=0;++s<r&&(o*=256);)i+=this[e+s]*o;return i>=(o*=128)&&(i-=Math.pow(2,8*r)),i},u.prototype.readIntBE=function t(e,r,n){e|=0,r|=0,n||L(e,r,this.length);for(var i=r,o=1,s=this[e+--i];i>0&&(o*=256);)s+=this[e+--i]*o;return s>=(o*=128)&&(s-=Math.pow(2,8*r)),s},u.prototype.readInt8=function t(e,r){return r||L(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},u.prototype.readInt16LE=function t(e,r){r||L(e,2,this.length);var n=this[e]|this[e+1]<<8;return 32768&n?4294901760|n:n},u.prototype.readInt16BE=function t(e,r){r||L(e,2,this.length);var n=this[e+1]|this[e]<<8;return 32768&n?4294901760|n:n},u.prototype.readInt32LE=function t(e,r){return r||L(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},u.prototype.readInt32BE=function t(e,r){return r||L(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},u.prototype.readFloatLE=function t(e,r){return r||L(e,4,this.length),i.read(this,e,!0,23,4)},u.prototype.readFloatBE=function t(e,r){return r||L(e,4,this.length),i.read(this,e,!1,23,4)},u.prototype.readDoubleLE=function t(e,r){return r||L(e,8,this.length),i.read(this,e,!0,52,8)},u.prototype.readDoubleBE=function t(e,r){return r||L(e,8,this.length),i.read(this,e,!1,52,8)},u.prototype.writeUIntLE=function t(e,r,n,i){(e=+e,r|=0,n|=0,i)||N(this,e,r,n,Math.pow(2,8*n)-1,0);var o=1,s=0;for(this[r]=255&e;++s<n&&(o*=256);)this[r+s]=e/o&255;return r+n},u.prototype.writeUIntBE=function t(e,r,n,i){(e=+e,r|=0,n|=0,i)||N(this,e,r,n,Math.pow(2,8*n)-1,0);var o=n-1,s=1;for(this[r+o]=255&e;--o>=0&&(s*=256);)this[r+o]=e/s&255;return r+n},u.prototype.writeUInt8=function t(e,r,n){return e=+e,r|=0,n||N(this,e,r,1,255,0),u.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),this[r]=255&e,r+1},u.prototype.writeUInt16LE=function t(e,r,n){return e=+e,r|=0,n||N(this,e,r,2,65535,0),u.TYPED_ARRAY_SUPPORT?(this[r]=255&e,this[r+1]=e>>>8):U(this,e,r,!0),r+2},u.prototype.writeUInt16BE=function t(e,r,n){return e=+e,r|=0,n||N(this,e,r,2,65535,0),u.TYPED_ARRAY_SUPPORT?(this[r]=e>>>8,this[r+1]=255&e):U(this,e,r,!1),r+2},u.prototype.writeUInt32LE=function t(e,r,n){return e=+e,r|=0,n||N(this,e,r,4,4294967295,0),u.TYPED_ARRAY_SUPPORT?(this[r+3]=e>>>24,this[r+2]=e>>>16,this[r+1]=e>>>8,this[r]=255&e):B(this,e,r,!0),r+4},u.prototype.writeUInt32BE=function t(e,r,n){return e=+e,r|=0,n||N(this,e,r,4,4294967295,0),u.TYPED_ARRAY_SUPPORT?(this[r]=e>>>24,this[r+1]=e>>>16,this[r+2]=e>>>8,this[r+3]=255&e):B(this,e,r,!1),r+4},u.prototype.writeIntLE=function t(e,r,n,i){if(e=+e,r|=0,!i){var o=Math.pow(2,8*n-1);N(this,e,r,n,o-1,-o)}var s=0,a=1,u=0;for(this[r]=255&e;++s<n&&(a*=256);)e<0&&0===u&&0!==this[r+s-1]&&(u=1),this[r+s]=(e/a>>0)-u&255;return r+n},u.prototype.writeIntBE=function t(e,r,n,i){if(e=+e,r|=0,!i){var o=Math.pow(2,8*n-1);N(this,e,r,n,o-1,-o)}var s=n-1,a=1,u=0;for(this[r+s]=255&e;--s>=0&&(a*=256);)e<0&&0===u&&0!==this[r+s+1]&&(u=1),this[r+s]=(e/a>>0)-u&255;return r+n},u.prototype.writeInt8=function t(e,r,n){return e=+e,r|=0,n||N(this,e,r,1,127,-128),u.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),e<0&&(e=255+e+1),this[r]=255&e,r+1},u.prototype.writeInt16LE=function t(e,r,n){return e=+e,r|=0,n||N(this,e,r,2,32767,-32768),u.TYPED_ARRAY_SUPPORT?(this[r]=255&e,this[r+1]=e>>>8):U(this,e,r,!0),r+2},u.prototype.writeInt16BE=function t(e,r,n){return e=+e,r|=0,n||N(this,e,r,2,32767,-32768),u.TYPED_ARRAY_SUPPORT?(this[r]=e>>>8,this[r+1]=255&e):U(this,e,r,!1),r+2},u.prototype.writeInt32LE=function t(e,r,n){return e=+e,r|=0,n||N(this,e,r,4,2147483647,-2147483648),u.TYPED_ARRAY_SUPPORT?(this[r]=255&e,this[r+1]=e>>>8,this[r+2]=e>>>16,this[r+3]=e>>>24):B(this,e,r,!0),r+4},u.prototype.writeInt32BE=function t(e,r,n){return e=+e,r|=0,n||N(this,e,r,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),u.TYPED_ARRAY_SUPPORT?(this[r]=e>>>24,this[r+1]=e>>>16,this[r+2]=e>>>8,this[r+3]=255&e):B(this,e,r,!1),r+4},u.prototype.writeFloatLE=function t(e,r,n){return j(this,e,r,!0,n)},u.prototype.writeFloatBE=function t(e,r,n){return j(this,e,r,!1,n)},u.prototype.writeDoubleLE=function t(e,r,n){return M(this,e,r,!0,n)},u.prototype.writeDoubleBE=function t(e,r,n){return M(this,e,r,!1,n)},u.prototype.copy=function t(e,r,n,i){if(n||(n=0),i||0===i||(i=this.length),r>=e.length&&(r=e.length),r||(r=0),i>0&&i<n&&(i=n),i===n)return 0;if(0===e.length||0===this.length)return 0;if(r<0)throw new RangeError(\"targetStart out of bounds\");if(n<0||n>=this.length)throw new RangeError(\"sourceStart out of bounds\");if(i<0)throw new RangeError(\"sourceEnd out of bounds\");i>this.length&&(i=this.length),e.length-r<i-n&&(i=e.length-r+n);var o,s=i-n;if(this===e&&n<r&&r<i)for(o=s-1;o>=0;--o)e[o+r]=this[o+n];else if(s<1e3||!u.TYPED_ARRAY_SUPPORT)for(o=0;o<s;++o)e[o+r]=this[o+n];else Uint8Array.prototype.set.call(e,this.subarray(n,n+s),r);return s},u.prototype.fill=function t(e,r,n,i){if(\"string\"==typeof e){if(\"string\"==typeof r?(i=r,r=0,n=this.length):\"string\"==typeof n&&(i=n,n=this.length),1===e.length){var o=e.charCodeAt(0);o<256&&(e=o)}if(void 0!==i&&\"string\"!=typeof i)throw new TypeError(\"encoding must be a string\");if(\"string\"==typeof i&&!u.isEncoding(i))throw new TypeError(\"Unknown encoding: \"+i)}else\"number\"==typeof e&&(e&=255);if(r<0||this.length<r||this.length<n)throw new RangeError(\"Out of range index\");if(n<=r)return this;var s;if(r>>>=0,n=void 0===n?this.length:n>>>0,e||(e=0),\"number\"==typeof e)for(s=r;s<n;++s)this[s]=e;else{var a=u.isBuffer(e)?e:K(new u(e,i).toString()),c=a.length;for(s=0;s<n-r;++s)this[s+r]=a[s%c]}return this};var H=/[^+\\/0-9A-Za-z-_]/g;function V(t){return t<16?\"0\"+t.toString(16):t.toString(16)}function K(t,e){var r;e=e||1/0;for(var n=t.length,i=null,o=[],s=0;s<n;++s){if((r=t.charCodeAt(s))>55295&&r<57344){if(!i){if(r>56319){(e-=3)>-1&&o.push(239,191,189);continue}if(s+1===n){(e-=3)>-1&&o.push(239,191,189);continue}i=r;continue}if(r<56320){(e-=3)>-1&&o.push(239,191,189),i=r;continue}r=65536+(i-55296<<10|r-56320)}else i&&(e-=3)>-1&&o.push(239,191,189);if(i=null,r<128){if((e-=1)<0)break;o.push(r)}else if(r<2048){if((e-=2)<0)break;o.push(r>>6|192,63&r|128)}else if(r<65536){if((e-=3)<0)break;o.push(r>>12|224,r>>6&63|128,63&r|128)}else{if(!(r<1114112))throw new Error(\"Invalid code point\");if((e-=4)<0)break;o.push(r>>18|240,r>>12&63|128,r>>6&63|128,63&r|128)}}return o}function q(t){return n.toByteArray(function e(t){if((t=function e(t){return t.trim?t.trim():t.replace(/^\\s+|\\s+$/g,\"\")}(t).replace(H,\"\")).length<2)return\"\";for(;t.length%4!=0;)t+=\"=\";return t}(t))}function J(t,e,r,n){for(var i=0;i<n&&!(i+r>=e.length||i>=t.length);++i)e[i+r]=t[i];return i}}).call(this,r(29))},function(t,e){var r;r=function(){return this}();try{r=r||new Function(\"return this\")()}catch(t){\"object\"==typeof window&&(r=window)}t.exports=r},function(t,e,r){\"use strict\";e.byteLength=function n(t){var e=f(t),r=e[0],n=e[1];return 3*(r+n)/4-n},e.toByteArray=function i(t){var e,r,n=f(t),i=n[0],o=n[1],s=new u(function c(t,e,r){return 3*(e+r)/4-r}(0,i,o)),h=0,l=o>0?i-4:i;for(r=0;r<l;r+=4)e=a[t.charCodeAt(r)]<<18|a[t.charCodeAt(r+1)]<<12|a[t.charCodeAt(r+2)]<<6|a[t.charCodeAt(r+3)],s[h++]=e>>16&255,s[h++]=e>>8&255,s[h++]=255&e;2===o&&(e=a[t.charCodeAt(r)]<<2|a[t.charCodeAt(r+1)]>>4,s[h++]=255&e);1===o&&(e=a[t.charCodeAt(r)]<<10|a[t.charCodeAt(r+1)]<<4|a[t.charCodeAt(r+2)]>>2,s[h++]=e>>8&255,s[h++]=255&e);return s},e.fromByteArray=function o(t){for(var e,r=t.length,n=r%3,i=[],o=16383,a=0,u=r-n;a<u;a+=o)i.push(g(t,a,a+o>u?u:a+o));1===n?(e=t[r-1],i.push(s[e>>2]+s[e<<4&63]+\"==\")):2===n&&(e=(t[r-2]<<8)+t[r-1],i.push(s[e>>10]+s[e>>4&63]+s[e<<2&63]+\"=\"));return i.join(\"\")};for(var s=[],a=[],u=\"undefined\"!=typeof Uint8Array?Uint8Array:Array,c=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\",h=0,l=c.length;h<l;++h)s[h]=c[h],a[c.charCodeAt(h)]=h;function f(t){var e=t.length;if(e%4>0)throw new Error(\"Invalid string. Length must be a multiple of 4\");var r=t.indexOf(\"=\");return-1===r&&(r=e),[r,r===e?0:4-r%4]}function g(t,e,r){for(var n,i,o=[],a=e;a<r;a+=3)n=(t[a]<<16&16711680)+(t[a+1]<<8&65280)+(255&t[a+2]),o.push(s[(i=n)>>18&63]+s[i>>12&63]+s[i>>6&63]+s[63&i]);return o.join(\"\")}a[\"-\".charCodeAt(0)]=62,a[\"_\".charCodeAt(0)]=63},function(t,e){\n/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\ne.read=function(t,e,r,n,i){var o,s,a=8*i-n-1,u=(1<<a)-1,c=u>>1,h=-7,l=r?i-1:0,f=r?-1:1,g=t[e+l];for(l+=f,o=g&(1<<-h)-1,g>>=-h,h+=a;h>0;o=256*o+t[e+l],l+=f,h-=8);for(s=o&(1<<-h)-1,o>>=-h,h+=n;h>0;s=256*s+t[e+l],l+=f,h-=8);if(0===o)o=1-c;else{if(o===u)return s?NaN:1/0*(g?-1:1);s+=Math.pow(2,n),o-=c}return(g?-1:1)*s*Math.pow(2,o-n)},e.write=function(t,e,r,n,i,o){var s,a,u,c=8*o-i-1,h=(1<<c)-1,l=h>>1,f=23===i?Math.pow(2,-24)-Math.pow(2,-77):0,g=n?0:o-1,d=n?1:-1,p=e<0||0===e&&1/e<0?1:0;for(e=Math.abs(e),isNaN(e)||e===1/0?(a=isNaN(e)?1:0,s=h):(s=Math.floor(Math.log(e)/Math.LN2),e*(u=Math.pow(2,-s))<1&&(s--,u*=2),(e+=s+l>=1?f/u:f*Math.pow(2,1-l))*u>=2&&(s++,u/=2),s+l>=h?(a=0,s=h):s+l>=1?(a=(e*u-1)*Math.pow(2,i),s+=l):(a=e*Math.pow(2,l-1)*Math.pow(2,i),s=0));i>=8;t[r+g]=255&a,g+=d,a/=256,i-=8);for(s=s<<i|a,c+=i;c>0;t[r+g]=255&s,g+=d,s/=256,c-=8);t[r+g-d]|=128*p}},function(t,e){var r={}.toString;t.exports=Array.isArray||function(t){return\"[object Array]\"==r.call(t)}},function(t,e,r){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.default=function n(t){var e=t.jws,r=t.KeyUtil,n=t.X509,o=t.crypto,s=t.hextob64u,a=t.b64tohex,u=t.AllowedSigningAlgs;return function(){function t(){!function e(t,r){if(!(t instanceof r))throw new TypeError(\"Cannot call a class as a function\")}(this,t)}return t.parseJwt=function t(r){i.Log.debug(\"JoseUtil.parseJwt\");try{var n=e.JWS.parse(r);return{header:n.headerObj,payload:n.payloadObj}}catch(t){i.Log.error(t)}},t.validateJwt=function e(o,s,u,c,h,l,f){i.Log.debug(\"JoseUtil.validateJwt\");try{if(\"RSA\"===s.kty)if(s.e&&s.n)s=r.getKey(s);else{if(!s.x5c||!s.x5c.length)return i.Log.error(\"JoseUtil.validateJwt: RSA key missing key material\",s),Promise.reject(new Error(\"RSA key missing key material\"));var g=a(s.x5c[0]);s=n.getPublicKeyFromCertHex(g)}else{if(\"EC\"!==s.kty)return i.Log.error(\"JoseUtil.validateJwt: Unsupported key type\",s&&s.kty),Promise.reject(new Error(s.kty));if(!(s.crv&&s.x&&s.y))return i.Log.error(\"JoseUtil.validateJwt: EC key missing key material\",s),Promise.reject(new Error(\"EC key missing key material\"));s=r.getKey(s)}return t._validateJwt(o,s,u,c,h,l,f)}catch(t){return i.Log.error(t&&t.message||t),Promise.reject(\"JWT validation failed\")}},t.validateJwtAttributes=function e(r,n,o,s,a,u){s||(s=0),a||(a=parseInt(Date.now()/1e3));var c=t.parseJwt(r).payload;if(!c.iss)return i.Log.error(\"JoseUtil._validateJwt: issuer was not provided\"),Promise.reject(new Error(\"issuer was not provided\"));if(c.iss!==n)return i.Log.error(\"JoseUtil._validateJwt: Invalid issuer in token\",c.iss),Promise.reject(new Error(\"Invalid issuer in token: \"+c.iss));if(!c.aud)return i.Log.error(\"JoseUtil._validateJwt: aud was not provided\"),Promise.reject(new Error(\"aud was not provided\"));if(!(c.aud===o||Array.isArray(c.aud)&&c.aud.indexOf(o)>=0))return i.Log.error(\"JoseUtil._validateJwt: Invalid audience in token\",c.aud),Promise.reject(new Error(\"Invalid audience in token: \"+c.aud));if(c.azp&&c.azp!==o)return i.Log.error(\"JoseUtil._validateJwt: Invalid azp in token\",c.azp),Promise.reject(new Error(\"Invalid azp in token: \"+c.azp));if(!u){var h=a+s,l=a-s;if(!c.iat)return i.Log.error(\"JoseUtil._validateJwt: iat was not provided\"),Promise.reject(new Error(\"iat was not provided\"));if(h<c.iat)return i.Log.error(\"JoseUtil._validateJwt: iat is in the future\",c.iat),Promise.reject(new Error(\"iat is in the future: \"+c.iat));if(c.nbf&&h<c.nbf)return i.Log.error(\"JoseUtil._validateJwt: nbf is in the future\",c.nbf),Promise.reject(new Error(\"nbf is in the future: \"+c.nbf));if(!c.exp)return i.Log.error(\"JoseUtil._validateJwt: exp was not provided\"),Promise.reject(new Error(\"exp was not provided\"));if(c.exp<l)return i.Log.error(\"JoseUtil._validateJwt: exp is in the past\",c.exp),Promise.reject(new Error(\"exp is in the past:\"+c.exp))}return Promise.resolve(c)},t._validateJwt=function r(n,o,s,a,c,h,l){return t.validateJwtAttributes(n,s,a,c,h,l).then((function(t){try{return e.JWS.verify(n,o,u)?t:(i.Log.error(\"JoseUtil._validateJwt: signature validation failed\"),Promise.reject(new Error(\"signature validation failed\")))}catch(t){return i.Log.error(t&&t.message||t),Promise.reject(new Error(\"signature validation failed\"))}}))},t.hashString=function t(e,r){try{return o.Util.hashString(e,r)}catch(t){i.Log.error(t)}},t.hexToBase64Url=function t(e){try{return s(e)}catch(t){i.Log.error(t)}},t}()};var i=r(0);t.exports=e.default},function(t,e,r){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.SigninResponse=void 0;var n=function(){function t(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}return function(e,r,n){return r&&t(e.prototype,r),n&&t(e,n),e}}(),i=r(3);function o(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}e.SigninResponse=function(){function t(e){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"#\";o(this,t);var n=i.UrlUtility.parseUrlFragment(e,r);this.error=n.error,this.error_description=n.error_description,this.error_uri=n.error_uri,this.code=n.code,this.state=n.state,this.id_token=n.id_token,this.session_state=n.session_state,this.access_token=n.access_token,this.token_type=n.token_type,this.scope=n.scope,this.profile=void 0,this.expires_in=n.expires_in}return n(t,[{key:\"expires_in\",get:function t(){if(this.expires_at){var e=parseInt(Date.now()/1e3);return this.expires_at-e}},set:function t(e){var r=parseInt(e);if(\"number\"==typeof r&&r>0){var n=parseInt(Date.now()/1e3);this.expires_at=n+r}}},{key:\"expired\",get:function t(){var e=this.expires_in;if(void 0!==e)return e<=0}},{key:\"scopes\",get:function t(){return(this.scope||\"\").split(\" \")}},{key:\"isOpenIdConnect\",get:function t(){return this.scopes.indexOf(\"openid\")>=0||!!this.id_token}}]),t}()},function(t,e,r){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.SignoutRequest=void 0;var n=r(0),i=r(3),o=r(9);e.SignoutRequest=function t(e){var r=e.url,s=e.id_token_hint,a=e.post_logout_redirect_uri,u=e.data,c=e.extraQueryParams,h=e.request_type;if(function l(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),!r)throw n.Log.error(\"SignoutRequest.ctor: No url passed\"),new Error(\"url\");for(var f in s&&(r=i.UrlUtility.addQueryParam(r,\"id_token_hint\",s)),a&&(r=i.UrlUtility.addQueryParam(r,\"post_logout_redirect_uri\",a),u&&(this.state=new o.State({data:u,request_type:h}),r=i.UrlUtility.addQueryParam(r,\"state\",this.state.id))),c)r=i.UrlUtility.addQueryParam(r,f,c[f]);this.url=r}},function(t,e,r){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.SignoutResponse=void 0;var n=r(3);e.SignoutResponse=function t(e){!function r(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t);var i=n.UrlUtility.parseUrlFragment(e,\"?\");this.error=i.error,this.error_description=i.error_description,this.error_uri=i.error_uri,this.state=i.state}},function(t,e,r){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.InMemoryWebStorage=void 0;var n=function(){function t(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}return function(e,r,n){return r&&t(e.prototype,r),n&&t(e,n),e}}(),i=r(0);e.InMemoryWebStorage=function(){function t(){!function e(t,r){if(!(t instanceof r))throw new TypeError(\"Cannot call a class as a function\")}(this,t),this._data={}}return t.prototype.getItem=function t(e){return i.Log.debug(\"InMemoryWebStorage.getItem\",e),this._data[e]},t.prototype.setItem=function t(e,r){i.Log.debug(\"InMemoryWebStorage.setItem\",e),this._data[e]=r},t.prototype.removeItem=function t(e){i.Log.debug(\"InMemoryWebStorage.removeItem\",e),delete this._data[e]},t.prototype.key=function t(e){return Object.getOwnPropertyNames(this._data)[e]},n(t,[{key:\"length\",get:function t(){return Object.getOwnPropertyNames(this._data).length}}]),t}()},function(t,e,r){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.UserManager=void 0;var n=function(){function t(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}return function(e,r,n){return r&&t(e.prototype,r),n&&t(e,n),e}}(),i=r(0),o=r(10),s=r(39),a=r(15),u=r(45),c=r(47),h=r(18),l=r(8),f=r(20),g=r(11),d=r(4);function p(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}function v(t,e){if(!t)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!e||\"object\"!=typeof e&&\"function\"!=typeof e?t:e}e.UserManager=function(t){function e(){var r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:c.SilentRenewService,o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:h.SessionMonitor,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:f.TokenRevocationClient,l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:g.TokenClient,y=arguments.length>5&&void 0!==arguments[5]?arguments[5]:d.JoseUtil;p(this,e),r instanceof s.UserManagerSettings||(r=new s.UserManagerSettings(r));var m=v(this,t.call(this,r));return m._events=new u.UserManagerEvents(r),m._silentRenewService=new n(m),m.settings.automaticSilentRenew&&(i.Log.debug(\"UserManager.ctor: automaticSilentRenew is configured, setting up silent renew\"),m.startSilentRenew()),m.settings.monitorSession&&(i.Log.debug(\"UserManager.ctor: monitorSession is configured, setting up session monitor\"),m._sessionMonitor=new o(m)),m._tokenRevocationClient=new a(m._settings),m._tokenClient=new l(m._settings),m._joseUtil=y,m}return function r(t,e){if(\"function\"!=typeof e&&null!==e)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,t),e.prototype.getUser=function t(){var e=this;return this._loadUser().then((function(t){return t?(i.Log.info(\"UserManager.getUser: user loaded\"),e._events.load(t,!1),t):(i.Log.info(\"UserManager.getUser: user not found in storage\"),null)}))},e.prototype.removeUser=function t(){var e=this;return this.storeUser(null).then((function(){i.Log.info(\"UserManager.removeUser: user removed from storage\"),e._events.unload()}))},e.prototype.signinRedirect=function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};(e=Object.assign({},e)).request_type=\"si:r\";var r={useReplaceToNavigate:e.useReplaceToNavigate};return this._signinStart(e,this._redirectNavigator,r).then((function(){i.Log.info(\"UserManager.signinRedirect: successful\")}))},e.prototype.signinRedirectCallback=function t(e){return this._signinEnd(e||this._redirectNavigator.url).then((function(t){return t.profile&&t.profile.sub?i.Log.info(\"UserManager.signinRedirectCallback: successful, signed in sub: \",t.profile.sub):i.Log.info(\"UserManager.signinRedirectCallback: no sub\"),t}))},e.prototype.signinPopup=function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};(e=Object.assign({},e)).request_type=\"si:p\";var r=e.redirect_uri||this.settings.popup_redirect_uri||this.settings.redirect_uri;return r?(e.redirect_uri=r,e.display=\"popup\",this._signin(e,this._popupNavigator,{startUrl:r,popupWindowFeatures:e.popupWindowFeatures||this.settings.popupWindowFeatures,popupWindowTarget:e.popupWindowTarget||this.settings.popupWindowTarget}).then((function(t){return t&&(t.profile&&t.profile.sub?i.Log.info(\"UserManager.signinPopup: signinPopup successful, signed in sub: \",t.profile.sub):i.Log.info(\"UserManager.signinPopup: no sub\")),t}))):(i.Log.error(\"UserManager.signinPopup: No popup_redirect_uri or redirect_uri configured\"),Promise.reject(new Error(\"No popup_redirect_uri or redirect_uri configured\")))},e.prototype.signinPopupCallback=function t(e){return this._signinCallback(e,this._popupNavigator).then((function(t){return t&&(t.profile&&t.profile.sub?i.Log.info(\"UserManager.signinPopupCallback: successful, signed in sub: \",t.profile.sub):i.Log.info(\"UserManager.signinPopupCallback: no sub\")),t})).catch((function(t){i.Log.error(t.message)}))},e.prototype.signinSilent=function t(){var e=this,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return r=Object.assign({},r),this._loadUser().then((function(t){return t&&t.refresh_token?(r.refresh_token=t.refresh_token,e._useRefreshToken(r)):(r.request_type=\"si:s\",r.id_token_hint=r.id_token_hint||e.settings.includeIdTokenInSilentRenew&&t&&t.id_token,t&&e._settings.validateSubOnSilentRenew&&(i.Log.debug(\"UserManager.signinSilent, subject prior to silent renew: \",t.profile.sub),r.current_sub=t.profile.sub),e._signinSilentIframe(r))}))},e.prototype._useRefreshToken=function t(){var e=this,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return this._tokenClient.exchangeRefreshToken(r).then((function(t){return t?t.access_token?e._loadUser().then((function(r){if(r){var n=Promise.resolve();return t.id_token&&(n=e._validateIdTokenFromTokenRefreshToken(r.profile,t.id_token)),n.then((function(){return i.Log.debug(\"UserManager._useRefreshToken: refresh token response success\"),r.id_token=t.id_token||r.id_token,r.access_token=t.access_token,r.refresh_token=t.refresh_token||r.refresh_token,r.expires_in=t.expires_in,e.storeUser(r).then((function(){return e._events.load(r),r}))}))}return null})):(i.Log.error(\"UserManager._useRefreshToken: No access token returned from token endpoint\"),Promise.reject(\"No access token returned from token endpoint\")):(i.Log.error(\"UserManager._useRefreshToken: No response returned from token endpoint\"),Promise.reject(\"No response returned from token endpoint\"))}))},e.prototype._validateIdTokenFromTokenRefreshToken=function t(e,r){var n=this;return this._metadataService.getIssuer().then((function(t){return n.settings.getEpochTime().then((function(o){return n._joseUtil.validateJwtAttributes(r,t,n._settings.client_id,n._settings.clockSkew,o).then((function(t){return t?t.sub!==e.sub?(i.Log.error(\"UserManager._validateIdTokenFromTokenRefreshToken: sub in id_token does not match current sub\"),Promise.reject(new Error(\"sub in id_token does not match current sub\"))):t.auth_time&&t.auth_time!==e.auth_time?(i.Log.error(\"UserManager._validateIdTokenFromTokenRefreshToken: auth_time in id_token does not match original auth_time\"),Promise.reject(new Error(\"auth_time in id_token does not match original auth_time\"))):t.azp&&t.azp!==e.azp?(i.Log.error(\"UserManager._validateIdTokenFromTokenRefreshToken: azp in id_token does not match original azp\"),Promise.reject(new Error(\"azp in id_token does not match original azp\"))):!t.azp&&e.azp?(i.Log.error(\"UserManager._validateIdTokenFromTokenRefreshToken: azp not in id_token, but present in original id_token\"),Promise.reject(new Error(\"azp not in id_token, but present in original id_token\"))):void 0:(i.Log.error(\"UserManager._validateIdTokenFromTokenRefreshToken: Failed to validate id_token\"),Promise.reject(new Error(\"Failed to validate id_token\")))}))}))}))},e.prototype._signinSilentIframe=function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=e.redirect_uri||this.settings.silent_redirect_uri||this.settings.redirect_uri;return r?(e.redirect_uri=r,e.prompt=e.prompt||\"none\",this._signin(e,this._iframeNavigator,{startUrl:r,silentRequestTimeout:e.silentRequestTimeout||this.settings.silentRequestTimeout}).then((function(t){return t&&(t.profile&&t.profile.sub?i.Log.info(\"UserManager.signinSilent: successful, signed in sub: \",t.profile.sub):i.Log.info(\"UserManager.signinSilent: no sub\")),t}))):(i.Log.error(\"UserManager.signinSilent: No silent_redirect_uri configured\"),Promise.reject(new Error(\"No silent_redirect_uri configured\")))},e.prototype.signinSilentCallback=function t(e){return this._signinCallback(e,this._iframeNavigator).then((function(t){return t&&(t.profile&&t.profile.sub?i.Log.info(\"UserManager.signinSilentCallback: successful, signed in sub: \",t.profile.sub):i.Log.info(\"UserManager.signinSilentCallback: no sub\")),t}))},e.prototype.signinCallback=function t(e){var r=this;return this.readSigninResponseState(e).then((function(t){var n=t.state;t.response;return\"si:r\"===n.request_type?r.signinRedirectCallback(e):\"si:p\"===n.request_type?r.signinPopupCallback(e):\"si:s\"===n.request_type?r.signinSilentCallback(e):Promise.reject(new Error(\"invalid response_type in state\"))}))},e.prototype.signoutCallback=function t(e,r){var n=this;return this.readSignoutResponseState(e).then((function(t){var i=t.state,o=t.response;return i?\"so:r\"===i.request_type?n.signoutRedirectCallback(e):\"so:p\"===i.request_type?n.signoutPopupCallback(e,r):Promise.reject(new Error(\"invalid response_type in state\")):o}))},e.prototype.querySessionStatus=function t(){var e=this,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};(r=Object.assign({},r)).request_type=\"si:s\";var n=r.redirect_uri||this.settings.silent_redirect_uri||this.settings.redirect_uri;return n?(r.redirect_uri=n,r.prompt=\"none\",r.response_type=r.response_type||this.settings.query_status_response_type,r.scope=r.scope||\"openid\",r.skipUserInfo=!0,this._signinStart(r,this._iframeNavigator,{startUrl:n,silentRequestTimeout:r.silentRequestTimeout||this.settings.silentRequestTimeout}).then((function(t){return e.processSigninResponse(t.url).then((function(t){if(i.Log.debug(\"UserManager.querySessionStatus: got signin response\"),t.session_state&&t.profile.sub)return i.Log.info(\"UserManager.querySessionStatus: querySessionStatus success for sub: \",t.profile.sub),{session_state:t.session_state,sub:t.profile.sub,sid:t.profile.sid};i.Log.info(\"querySessionStatus successful, user not authenticated\")})).catch((function(t){if(t.session_state&&e.settings.monitorAnonymousSession&&(\"login_required\"==t.message||\"consent_required\"==t.message||\"interaction_required\"==t.message||\"account_selection_required\"==t.message))return i.Log.info(\"UserManager.querySessionStatus: querySessionStatus success for anonymous user\"),{session_state:t.session_state};throw t}))}))):(i.Log.error(\"UserManager.querySessionStatus: No silent_redirect_uri configured\"),Promise.reject(new Error(\"No silent_redirect_uri configured\")))},e.prototype._signin=function t(e,r){var n=this,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return this._signinStart(e,r,i).then((function(t){return n._signinEnd(t.url,e)}))},e.prototype._signinStart=function t(e,r){var n=this,o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return r.prepare(o).then((function(t){return i.Log.debug(\"UserManager._signinStart: got navigator window handle\"),n.createSigninRequest(e).then((function(e){return i.Log.debug(\"UserManager._signinStart: got signin request\"),o.url=e.url,o.id=e.state.id,t.navigate(o)})).catch((function(e){throw t.close&&(i.Log.debug(\"UserManager._signinStart: Error after preparing navigator, closing navigator window\"),t.close()),e}))}))},e.prototype._signinEnd=function t(e){var r=this,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return this.processSigninResponse(e).then((function(t){i.Log.debug(\"UserManager._signinEnd: got signin response\");var e=new a.User(t);if(n.current_sub){if(n.current_sub!==e.profile.sub)return i.Log.debug(\"UserManager._signinEnd: current user does not match user returned from signin. sub from signin: \",e.profile.sub),Promise.reject(new Error(\"login_required\"));i.Log.debug(\"UserManager._signinEnd: current user matches user returned from signin\")}return r.storeUser(e).then((function(){return i.Log.debug(\"UserManager._signinEnd: user stored\"),r._events.load(e),e}))}))},e.prototype._signinCallback=function t(e,r){i.Log.debug(\"UserManager._signinCallback\");var n=\"query\"===this._settings.response_mode||!this._settings.response_mode&&l.SigninRequest.isCode(this._settings.response_type)?\"?\":\"#\";return r.callback(e,void 0,n)},e.prototype.signoutRedirect=function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};(e=Object.assign({},e)).request_type=\"so:r\";var r=e.post_logout_redirect_uri||this.settings.post_logout_redirect_uri;r&&(e.post_logout_redirect_uri=r);var n={useReplaceToNavigate:e.useReplaceToNavigate};return this._signoutStart(e,this._redirectNavigator,n).then((function(){i.Log.info(\"UserManager.signoutRedirect: successful\")}))},e.prototype.signoutRedirectCallback=function t(e){return this._signoutEnd(e||this._redirectNavigator.url).then((function(t){return i.Log.info(\"UserManager.signoutRedirectCallback: successful\"),t}))},e.prototype.signoutPopup=function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};(e=Object.assign({},e)).request_type=\"so:p\";var r=e.post_logout_redirect_uri||this.settings.popup_post_logout_redirect_uri||this.settings.post_logout_redirect_uri;return e.post_logout_redirect_uri=r,e.display=\"popup\",e.post_logout_redirect_uri&&(e.state=e.state||{}),this._signout(e,this._popupNavigator,{startUrl:r,popupWindowFeatures:e.popupWindowFeatures||this.settings.popupWindowFeatures,popupWindowTarget:e.popupWindowTarget||this.settings.popupWindowTarget}).then((function(){i.Log.info(\"UserManager.signoutPopup: successful\")}))},e.prototype.signoutPopupCallback=function t(e,r){void 0===r&&\"boolean\"==typeof e&&(r=e,e=null);return this._popupNavigator.callback(e,r,\"?\").then((function(){i.Log.info(\"UserManager.signoutPopupCallback: successful\")}))},e.prototype._signout=function t(e,r){var n=this,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return this._signoutStart(e,r,i).then((function(t){return n._signoutEnd(t.url)}))},e.prototype._signoutStart=function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=this,n=arguments[1],o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return n.prepare(o).then((function(t){return i.Log.debug(\"UserManager._signoutStart: got navigator window handle\"),r._loadUser().then((function(n){return i.Log.debug(\"UserManager._signoutStart: loaded current user from storage\"),(r._settings.revokeAccessTokenOnSignout?r._revokeInternal(n):Promise.resolve()).then((function(){var s=e.id_token_hint||n&&n.id_token;return s&&(i.Log.debug(\"UserManager._signoutStart: Setting id_token into signout request\"),e.id_token_hint=s),r.removeUser().then((function(){return i.Log.debug(\"UserManager._signoutStart: user removed, creating signout request\"),r.createSignoutRequest(e).then((function(e){return i.Log.debug(\"UserManager._signoutStart: got signout request\"),o.url=e.url,e.state&&(o.id=e.state.id),t.navigate(o)}))}))}))})).catch((function(e){throw t.close&&(i.Log.debug(\"UserManager._signoutStart: Error after preparing navigator, closing navigator window\"),t.close()),e}))}))},e.prototype._signoutEnd=function t(e){return this.processSignoutResponse(e).then((function(t){return i.Log.debug(\"UserManager._signoutEnd: got signout response\"),t}))},e.prototype.revokeAccessToken=function t(){var e=this;return this._loadUser().then((function(t){return e._revokeInternal(t,!0).then((function(r){if(r)return i.Log.debug(\"UserManager.revokeAccessToken: removing token properties from user and re-storing\"),t.access_token=null,t.refresh_token=null,t.expires_at=null,t.token_type=null,e.storeUser(t).then((function(){i.Log.debug(\"UserManager.revokeAccessToken: user stored\"),e._events.load(t)}))}))})).then((function(){i.Log.info(\"UserManager.revokeAccessToken: access token revoked successfully\")}))},e.prototype._revokeInternal=function t(e,r){var n=this;if(e){var o=e.access_token,s=e.refresh_token;return this._revokeAccessTokenInternal(o,r).then((function(t){return n._revokeRefreshTokenInternal(s,r).then((function(e){return t||e||i.Log.debug(\"UserManager.revokeAccessToken: no need to revoke due to no token(s), or JWT format\"),t||e}))}))}return Promise.resolve(!1)},e.prototype._revokeAccessTokenInternal=function t(e,r){return!e||e.indexOf(\".\")>=0?Promise.resolve(!1):this._tokenRevocationClient.revoke(e,r).then((function(){return!0}))},e.prototype._revokeRefreshTokenInternal=function t(e,r){return e?this._tokenRevocationClient.revoke(e,r,\"refresh_token\").then((function(){return!0})):Promise.resolve(!1)},e.prototype.startSilentRenew=function t(){this._silentRenewService.start()},e.prototype.stopSilentRenew=function t(){this._silentRenewService.stop()},e.prototype._loadUser=function t(){return this._userStore.get(this._userStoreKey).then((function(t){return t?(i.Log.debug(\"UserManager._loadUser: user storageString loaded\"),a.User.fromStorageString(t)):(i.Log.debug(\"UserManager._loadUser: no user storageString\"),null)}))},e.prototype.storeUser=function t(e){if(e){i.Log.debug(\"UserManager.storeUser: storing user\");var r=e.toStorageString();return this._userStore.set(this._userStoreKey,r)}return i.Log.debug(\"storeUser.storeUser: removing user\"),this._userStore.remove(this._userStoreKey)},n(e,[{key:\"_redirectNavigator\",get:function t(){return this.settings.redirectNavigator}},{key:\"_popupNavigator\",get:function t(){return this.settings.popupNavigator}},{key:\"_iframeNavigator\",get:function t(){return this.settings.iframeNavigator}},{key:\"_userStore\",get:function t(){return this.settings.userStore}},{key:\"events\",get:function t(){return this._events}},{key:\"_userStoreKey\",get:function t(){return\"user:\"+this.settings.authority+\":\"+this.settings.client_id}}]),e}(o.OidcClient)},function(t,e,r){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.UserManagerSettings=void 0;var n=function(){function t(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}return function(e,r,n){return r&&t(e.prototype,r),n&&t(e,n),e}}(),i=(r(0),r(5)),o=r(40),s=r(41),a=r(43),u=r(6),c=r(1),h=r(8);function l(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}function f(t,e){if(!t)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!e||\"object\"!=typeof e&&\"function\"!=typeof e?t:e}e.UserManagerSettings=function(t){function e(){var r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=r.popup_redirect_uri,i=r.popup_post_logout_redirect_uri,g=r.popupWindowFeatures,d=r.popupWindowTarget,p=r.silent_redirect_uri,v=r.silentRequestTimeout,y=r.automaticSilentRenew,m=void 0!==y&&y,_=r.validateSubOnSilentRenew,S=void 0!==_&&_,b=r.includeIdTokenInSilentRenew,w=void 0===b||b,F=r.monitorSession,E=void 0===F||F,x=r.monitorAnonymousSession,A=void 0!==x&&x,k=r.checkSessionInterval,P=void 0===k?2e3:k,C=r.stopCheckSessionOnError,T=void 0===C||C,R=r.query_status_response_type,I=r.revokeAccessTokenOnSignout,D=void 0!==I&&I,L=r.accessTokenExpiringNotificationTime,N=void 0===L?60:L,U=r.redirectNavigator,B=void 0===U?new o.RedirectNavigator:U,O=r.popupNavigator,j=void 0===O?new s.PopupNavigator:O,M=r.iframeNavigator,H=void 0===M?new a.IFrameNavigator:M,V=r.userStore,K=void 0===V?new u.WebStorageStateStore({store:c.Global.sessionStorage}):V;l(this,e);var q=f(this,t.call(this,arguments[0]));return q._popup_redirect_uri=n,q._popup_post_logout_redirect_uri=i,q._popupWindowFeatures=g,q._popupWindowTarget=d,q._silent_redirect_uri=p,q._silentRequestTimeout=v,q._automaticSilentRenew=m,q._validateSubOnSilentRenew=S,q._includeIdTokenInSilentRenew=w,q._accessTokenExpiringNotificationTime=N,q._monitorSession=E,q._monitorAnonymousSession=A,q._checkSessionInterval=P,q._stopCheckSessionOnError=T,R?q._query_status_response_type=R:arguments[0]&&arguments[0].response_type?q._query_status_response_type=h.SigninRequest.isOidc(arguments[0].response_type)?\"id_token\":\"code\":q._query_status_response_type=\"id_token\",q._revokeAccessTokenOnSignout=D,q._redirectNavigator=B,q._popupNavigator=j,q._iframeNavigator=H,q._userStore=K,q}return function r(t,e){if(\"function\"!=typeof e&&null!==e)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,t),n(e,[{key:\"popup_redirect_uri\",get:function t(){return this._popup_redirect_uri}},{key:\"popup_post_logout_redirect_uri\",get:function t(){return this._popup_post_logout_redirect_uri}},{key:\"popupWindowFeatures\",get:function t(){return this._popupWindowFeatures}},{key:\"popupWindowTarget\",get:function t(){return this._popupWindowTarget}},{key:\"silent_redirect_uri\",get:function t(){return this._silent_redirect_uri}},{key:\"silentRequestTimeout\",get:function t(){return this._silentRequestTimeout}},{key:\"automaticSilentRenew\",get:function t(){return this._automaticSilentRenew}},{key:\"validateSubOnSilentRenew\",get:function t(){return this._validateSubOnSilentRenew}},{key:\"includeIdTokenInSilentRenew\",get:function t(){return this._includeIdTokenInSilentRenew}},{key:\"accessTokenExpiringNotificationTime\",get:function t(){return this._accessTokenExpiringNotificationTime}},{key:\"monitorSession\",get:function t(){return this._monitorSession}},{key:\"monitorAnonymousSession\",get:function t(){return this._monitorAnonymousSession}},{key:\"checkSessionInterval\",get:function t(){return this._checkSessionInterval}},{key:\"stopCheckSessionOnError\",get:function t(){return this._stopCheckSessionOnError}},{key:\"query_status_response_type\",get:function t(){return this._query_status_response_type}},{key:\"revokeAccessTokenOnSignout\",get:function t(){return this._revokeAccessTokenOnSignout}},{key:\"redirectNavigator\",get:function t(){return this._redirectNavigator}},{key:\"popupNavigator\",get:function t(){return this._popupNavigator}},{key:\"iframeNavigator\",get:function t(){return this._iframeNavigator}},{key:\"userStore\",get:function t(){return this._userStore}}]),e}(i.OidcClientSettings)},function(t,e,r){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.RedirectNavigator=void 0;var n=function(){function t(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}return function(e,r,n){return r&&t(e.prototype,r),n&&t(e,n),e}}(),i=r(0);e.RedirectNavigator=function(){function t(){!function e(t,r){if(!(t instanceof r))throw new TypeError(\"Cannot call a class as a function\")}(this,t)}return t.prototype.prepare=function t(){return Promise.resolve(this)},t.prototype.navigate=function t(e){return e&&e.url?(e.useReplaceToNavigate?window.location.replace(e.url):window.location=e.url,Promise.resolve()):(i.Log.error(\"RedirectNavigator.navigate: No url provided\"),Promise.reject(new Error(\"No url provided\")))},n(t,[{key:\"url\",get:function t(){return window.location.href}}]),t}()},function(t,e,r){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.PopupNavigator=void 0;var n=r(0),i=r(42);e.PopupNavigator=function(){function t(){!function e(t,r){if(!(t instanceof r))throw new TypeError(\"Cannot call a class as a function\")}(this,t)}return t.prototype.prepare=function t(e){var r=new i.PopupWindow(e);return Promise.resolve(r)},t.prototype.callback=function t(e,r,o){n.Log.debug(\"PopupNavigator.callback\");try{return i.PopupWindow.notifyOpener(e,r,o),Promise.resolve()}catch(t){return Promise.reject(t)}},t}()},function(t,e,r){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.PopupWindow=void 0;var n=function(){function t(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}return function(e,r,n){return r&&t(e.prototype,r),n&&t(e,n),e}}(),i=r(0),o=r(3);e.PopupWindow=function(){function t(e){var r=this;!function n(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),this._promise=new Promise((function(t,e){r._resolve=t,r._reject=e}));var o=e.popupWindowTarget||\"_blank\",s=e.popupWindowFeatures||\"location=no,toolbar=no,width=500,height=500,left=100,top=100;\";this._popup=window.open(\"\",o,s),this._popup&&(i.Log.debug(\"PopupWindow.ctor: popup successfully created\"),this._checkForPopupClosedTimer=window.setInterval(this._checkForPopupClosed.bind(this),500))}return t.prototype.navigate=function t(e){return this._popup?e&&e.url?(i.Log.debug(\"PopupWindow.navigate: Setting URL in popup\"),this._id=e.id,this._id&&(window[\"popupCallback_\"+e.id]=this._callback.bind(this)),this._popup.focus(),this._popup.window.location=e.url):(this._error(\"PopupWindow.navigate: no url provided\"),this._error(\"No url provided\")):this._error(\"PopupWindow.navigate: Error opening popup window\"),this.promise},t.prototype._success=function t(e){i.Log.debug(\"PopupWindow.callback: Successful response from popup window\"),this._cleanup(),this._resolve(e)},t.prototype._error=function t(e){i.Log.error(\"PopupWindow.error: \",e),this._cleanup(),this._reject(new Error(e))},t.prototype.close=function t(){this._cleanup(!1)},t.prototype._cleanup=function t(e){i.Log.debug(\"PopupWindow.cleanup\"),window.clearInterval(this._checkForPopupClosedTimer),this._checkForPopupClosedTimer=null,delete window[\"popupCallback_\"+this._id],this._popup&&!e&&this._popup.close(),this._popup=null},t.prototype._checkForPopupClosed=function t(){this._popup&&!this._popup.closed||this._error(\"Popup window closed\")},t.prototype._callback=function t(e,r){this._cleanup(r),e?(i.Log.debug(\"PopupWindow.callback success\"),this._success({url:e})):(i.Log.debug(\"PopupWindow.callback: Invalid response from popup\"),this._error(\"Invalid response from popup\"))},t.notifyOpener=function t(e,r,n){if(window.opener){if(e=e||window.location.href){var s=o.UrlUtility.parseUrlFragment(e,n);if(s.state){var a=\"popupCallback_\"+s.state,u=window.opener[a];u?(i.Log.debug(\"PopupWindow.notifyOpener: passing url message to opener\"),u(e,r)):i.Log.warn(\"PopupWindow.notifyOpener: no matching callback found on opener\")}else i.Log.warn(\"PopupWindow.notifyOpener: no state found in response url\")}}else i.Log.warn(\"PopupWindow.notifyOpener: no window.opener. Can't complete notification.\")},n(t,[{key:\"promise\",get:function t(){return this._promise}}]),t}()},function(t,e,r){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.IFrameNavigator=void 0;var n=r(0),i=r(44);e.IFrameNavigator=function(){function t(){!function e(t,r){if(!(t instanceof r))throw new TypeError(\"Cannot call a class as a function\")}(this,t)}return t.prototype.prepare=function t(e){var r=new i.IFrameWindow(e);return Promise.resolve(r)},t.prototype.callback=function t(e){n.Log.debug(\"IFrameNavigator.callback\");try{return i.IFrameWindow.notifyParent(e),Promise.resolve()}catch(t){return Promise.reject(t)}},t}()},function(t,e,r){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.IFrameWindow=void 0;var n=function(){function t(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}return function(e,r,n){return r&&t(e.prototype,r),n&&t(e,n),e}}(),i=r(0);e.IFrameWindow=function(){function t(e){var r=this;!function n(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),this._promise=new Promise((function(t,e){r._resolve=t,r._reject=e})),this._boundMessageEvent=this._message.bind(this),window.addEventListener(\"message\",this._boundMessageEvent,!1),this._frame=window.document.createElement(\"iframe\"),this._frame.style.visibility=\"hidden\",this._frame.style.position=\"absolute\",this._frame.width=0,this._frame.height=0,window.document.body.appendChild(this._frame)}return t.prototype.navigate=function t(e){if(e&&e.url){var r=e.silentRequestTimeout||1e4;i.Log.debug(\"IFrameWindow.navigate: Using timeout of:\",r),this._timer=window.setTimeout(this._timeout.bind(this),r),this._frame.src=e.url}else this._error(\"No url provided\");return this.promise},t.prototype._success=function t(e){this._cleanup(),i.Log.debug(\"IFrameWindow: Successful response from frame window\"),this._resolve(e)},t.prototype._error=function t(e){this._cleanup(),i.Log.error(e),this._reject(new Error(e))},t.prototype.close=function t(){this._cleanup()},t.prototype._cleanup=function t(){this._frame&&(i.Log.debug(\"IFrameWindow: cleanup\"),window.removeEventListener(\"message\",this._boundMessageEvent,!1),window.clearTimeout(this._timer),window.document.body.removeChild(this._frame),this._timer=null,this._frame=null,this._boundMessageEvent=null)},t.prototype._timeout=function t(){i.Log.debug(\"IFrameWindow.timeout\"),this._error(\"Frame window timed out\")},t.prototype._message=function t(e){if(i.Log.debug(\"IFrameWindow.message\"),this._timer&&e.origin===this._origin&&e.source===this._frame.contentWindow&&\"string\"==typeof e.data&&(e.data.startsWith(\"http://\")||e.data.startsWith(\"https://\"))){var r=e.data;r?this._success({url:r}):this._error(\"Invalid response from frame\")}},t.notifyParent=function t(e){i.Log.debug(\"IFrameWindow.notifyParent\"),(e=e||window.location.href)&&(i.Log.debug(\"IFrameWindow.notifyParent: posting url message to parent\"),window.parent.postMessage(e,location.protocol+\"//\"+location.host))},n(t,[{key:\"promise\",get:function t(){return this._promise}},{key:\"_origin\",get:function t(){return location.protocol+\"//\"+location.host}}]),t}()},function(t,e,r){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.UserManagerEvents=void 0;var n=r(0),i=r(16),o=r(17);e.UserManagerEvents=function(t){function e(r){!function n(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,e);var i=function s(t,e){if(!t)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!e||\"object\"!=typeof e&&\"function\"!=typeof e?t:e}(this,t.call(this,r));return i._userLoaded=new o.Event(\"User loaded\"),i._userUnloaded=new o.Event(\"User unloaded\"),i._silentRenewError=new o.Event(\"Silent renew error\"),i._userSignedIn=new o.Event(\"User signed in\"),i._userSignedOut=new o.Event(\"User signed out\"),i._userSessionChanged=new o.Event(\"User session changed\"),i}return function r(t,e){if(\"function\"!=typeof e&&null!==e)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,t),e.prototype.load=function e(r){var i=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];n.Log.debug(\"UserManagerEvents.load\"),t.prototype.load.call(this,r),i&&this._userLoaded.raise(r)},e.prototype.unload=function e(){n.Log.debug(\"UserManagerEvents.unload\"),t.prototype.unload.call(this),this._userUnloaded.raise()},e.prototype.addUserLoaded=function t(e){this._userLoaded.addHandler(e)},e.prototype.removeUserLoaded=function t(e){this._userLoaded.removeHandler(e)},e.prototype.addUserUnloaded=function t(e){this._userUnloaded.addHandler(e)},e.prototype.removeUserUnloaded=function t(e){this._userUnloaded.removeHandler(e)},e.prototype.addSilentRenewError=function t(e){this._silentRenewError.addHandler(e)},e.prototype.removeSilentRenewError=function t(e){this._silentRenewError.removeHandler(e)},e.prototype._raiseSilentRenewError=function t(e){n.Log.debug(\"UserManagerEvents._raiseSilentRenewError\",e.message),this._silentRenewError.raise(e)},e.prototype.addUserSignedIn=function t(e){this._userSignedIn.addHandler(e)},e.prototype.removeUserSignedIn=function t(e){this._userSignedIn.removeHandler(e)},e.prototype._raiseUserSignedIn=function t(){n.Log.debug(\"UserManagerEvents._raiseUserSignedIn\"),this._userSignedIn.raise()},e.prototype.addUserSignedOut=function t(e){this._userSignedOut.addHandler(e)},e.prototype.removeUserSignedOut=function t(e){this._userSignedOut.removeHandler(e)},e.prototype._raiseUserSignedOut=function t(){n.Log.debug(\"UserManagerEvents._raiseUserSignedOut\"),this._userSignedOut.raise()},e.prototype.addUserSessionChanged=function t(e){this._userSessionChanged.addHandler(e)},e.prototype.removeUserSessionChanged=function t(e){this._userSessionChanged.removeHandler(e)},e.prototype._raiseUserSessionChanged=function t(){n.Log.debug(\"UserManagerEvents._raiseUserSessionChanged\"),this._userSessionChanged.raise()},e}(i.AccessTokenEvents)},function(t,e,r){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.Timer=void 0;var n=function(){function t(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}return function(e,r,n){return r&&t(e.prototype,r),n&&t(e,n),e}}(),i=r(0),o=r(1),s=r(17);function a(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}function u(t,e){if(!t)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!e||\"object\"!=typeof e&&\"function\"!=typeof e?t:e}e.Timer=function(t){function e(r){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:o.Global.timer,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:void 0;a(this,e);var s=u(this,t.call(this,r));return s._timer=n,s._nowFunc=i||function(){return Date.now()/1e3},s}return function r(t,e){if(\"function\"!=typeof e&&null!==e)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,t),e.prototype.init=function t(e){e<=0&&(e=1),e=parseInt(e);var r=this.now+e;if(this.expiration===r&&this._timerHandle)i.Log.debug(\"Timer.init timer \"+this._name+\" skipping initialization since already initialized for expiration:\",this.expiration);else{this.cancel(),i.Log.debug(\"Timer.init timer \"+this._name+\" for duration:\",e),this._expiration=r;var n=5;e<n&&(n=e),this._timerHandle=this._timer.setInterval(this._callback.bind(this),1e3*n)}},e.prototype.cancel=function t(){this._timerHandle&&(i.Log.debug(\"Timer.cancel: \",this._name),this._timer.clearInterval(this._timerHandle),this._timerHandle=null)},e.prototype._callback=function e(){var r=this._expiration-this.now;i.Log.debug(\"Timer.callback; \"+this._name+\" timer expires in:\",r),this._expiration<=this.now&&(this.cancel(),t.prototype.raise.call(this))},n(e,[{key:\"now\",get:function t(){return parseInt(this._nowFunc())}},{key:\"expiration\",get:function t(){return this._expiration}}]),e}(s.Event)},function(t,e,r){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.SilentRenewService=void 0;var n=r(0);e.SilentRenewService=function(){function t(e){!function r(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),this._userManager=e}return t.prototype.start=function t(){this._callback||(this._callback=this._tokenExpiring.bind(this),this._userManager.events.addAccessTokenExpiring(this._callback),this._userManager.getUser().then((function(t){})).catch((function(t){n.Log.error(\"SilentRenewService.start: Error from getUser:\",t.message)})))},t.prototype.stop=function t(){this._callback&&(this._userManager.events.removeAccessTokenExpiring(this._callback),delete this._callback)},t.prototype._tokenExpiring=function t(){var e=this;this._userManager.signinSilent().then((function(t){n.Log.debug(\"SilentRenewService._tokenExpiring: Silent token renewal successful\")}),(function(t){n.Log.error(\"SilentRenewService._tokenExpiring: Error from signinSilent:\",t.message),e._userManager.events._raiseSilentRenewError(t)}))},t}()},function(t,e,r){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.CordovaPopupNavigator=void 0;var n=r(21);e.CordovaPopupNavigator=function(){function t(){!function e(t,r){if(!(t instanceof r))throw new TypeError(\"Cannot call a class as a function\")}(this,t)}return t.prototype.prepare=function t(e){var r=new n.CordovaPopupWindow(e);return Promise.resolve(r)},t}()},function(t,e,r){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.CordovaIFrameNavigator=void 0;var n=r(21);e.CordovaIFrameNavigator=function(){function t(){!function e(t,r){if(!(t instanceof r))throw new TypeError(\"Cannot call a class as a function\")}(this,t)}return t.prototype.prepare=function t(e){e.popupWindowFeatures=\"hidden=yes\";var r=new n.CordovaPopupWindow(e);return Promise.resolve(r)},t}()},function(t,e,r){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0});e.Version=\"1.11.5\"}])}));","module.exports = (data, opts = {}) => {\n  const {\n    sorted, skipIndex, ignorenull, skipBracket, useDot, whitespace = '+'\n  } = opts;\n\n  const encode = value => String(value)\n    .replace(/[^ !'()~*]/gu, encodeURIComponent)\n    .replace(/ /g, whitespace)\n    .replace(/[!'()~*]/g, ch =>\n      `%${ch.charCodeAt().toString(16).slice(-2).toUpperCase()}`);\n\n  const keys = (obj, keyarr = Object.keys(obj)) =>\n    sorted ? keyarr.sort() : keyarr;\n\n  const filterjoin = arr => arr.filter(e => e).join('&');\n\n  const objnest = (name, obj) => filterjoin(keys(obj).map(key => useDot\n    ? nest(`${name}.${key}`, obj[key])\n    : nest(`${name}[${key}]`, obj[key])));\n\n  const arrnest = (name, arr, brackets = skipBracket ? '' : '[]') => arr.length\n    ? filterjoin(arr.map((elem, index) => skipIndex\n      ? nest(name + brackets, elem)\n      : nest(name + '[' + index + ']', elem)))\n    : encode(name + brackets);\n\n  const setnest = (name, set) => filterjoin(\n    Array.from(set).map(elem => nest(name, elem)));\n\n  const nest = (name, value, type = typeof value, f = null) => {\n    if (value === f)\n      f = ignorenull ? f : encode(name) + '=' + f;\n    else if (/string|number|boolean/.test(type))\n      f = encode(name) + '=' + encode(value);\n    else if (Array.isArray(value))\n      f = arrnest(name, value);\n    else if (value instanceof Set)\n      f = setnest(name, value);\n    else if (type === 'object')\n      f = objnest(name, value);\n\n    return f;\n  };\n\n  return data && filterjoin(keys(data).map(key => nest(key, data[key])));\n};\n","import { OidcClient, WebStorageStateStore } from 'oidc-client';\nexport { CordovaIFrameNavigator, CordovaPopupNavigator, InMemoryWebStorage, Log, OidcClient, SessionMonitor, User, UserManager, Version, WebStorageStateStore } from 'oidc-client';\nimport { determineSigningAlg, PREFERRED_SIGNING_ALG, getWebidFromTokenPayload, OidcProviderError, InvalidResponseError, generateDpopKeyPair, createDpopHeader } from '@inrupt/solid-client-authn-core';\nimport formurlencoded from 'form-urlencoded';\n\nfunction processErrorResponse(responseBody, options) {\r\n    var _a, _b, _c, _d;\r\n    if (responseBody.error === \"invalid_redirect_uri\") {\r\n        throw new Error(`Dynamic client registration failed: the provided redirect uri [${(_a = options.redirectUrl) === null || _a === void 0 ? void 0 : _a.toString()}] is invalid - ${(_b = responseBody.error_description) !== null && _b !== void 0 ? _b : \"\"}`);\r\n    }\r\n    if (responseBody.error === \"invalid_client_metadata\") {\r\n        throw new Error(`Dynamic client registration failed: the provided client metadata ${JSON.stringify(options)} is invalid - ${(_c = responseBody.error_description) !== null && _c !== void 0 ? _c : \"\"}`);\r\n    }\r\n    throw new Error(`Dynamic client registration failed: ${responseBody.error} - ${(_d = responseBody.error_description) !== null && _d !== void 0 ? _d : \"\"}`);\r\n}\r\nfunction validateRegistrationResponse(responseBody, options) {\r\n    if (responseBody.client_id === undefined) {\r\n        throw new Error(`Dynamic client registration failed: no client_id has been found on ${JSON.stringify(responseBody)}`);\r\n    }\r\n    if (options.redirectUrl &&\r\n        (responseBody.redirect_uris === undefined ||\r\n            responseBody.redirect_uris[0] !== options.redirectUrl.toString())) {\r\n        throw new Error(`Dynamic client registration failed: the returned redirect URIs ${JSON.stringify(responseBody.redirect_uris)} don't match the provided ${JSON.stringify([\r\n            options.redirectUrl.toString(),\r\n        ])}`);\r\n    }\r\n}\r\nasync function registerClient(options, issuerConfig) {\r\n    var _a;\r\n    if (!issuerConfig.registrationEndpoint) {\r\n        throw new Error(\"Dynamic Registration could not be completed because the issuer has no registration endpoint.\");\r\n    }\r\n    if (!Array.isArray(issuerConfig.idTokenSigningAlgValuesSupported)) {\r\n        throw new Error(\"The OIDC issuer discovery profile is missing the 'id_token_signing_alg_values_supported' value, which is mandatory.\");\r\n    }\r\n    const signingAlg = determineSigningAlg(issuerConfig.idTokenSigningAlgValuesSupported, PREFERRED_SIGNING_ALG);\r\n    const config = {\r\n        client_name: options.clientName,\r\n        application_type: \"web\",\r\n        redirect_uris: [(_a = options.redirectUrl) === null || _a === void 0 ? void 0 : _a.toString()],\r\n        subject_type: \"public\",\r\n        token_endpoint_auth_method: \"client_secret_basic\",\r\n        id_token_signed_response_alg: signingAlg,\r\n        grant_types: [\"authorization_code\", \"refresh_token\"],\r\n    };\r\n    const headers = {\r\n        \"Content-Type\": \"application/json\",\r\n    };\r\n    if (options.registrationAccessToken) {\r\n        headers.Authorization = `Bearer ${options.registrationAccessToken}`;\r\n    }\r\n    const registerResponse = await fetch(issuerConfig.registrationEndpoint.toString(), {\r\n        method: \"POST\",\r\n        headers,\r\n        body: JSON.stringify(config),\r\n    });\r\n    if (registerResponse.ok) {\r\n        const responseBody = await registerResponse.json();\r\n        validateRegistrationResponse(responseBody, options);\r\n        return {\r\n            clientId: responseBody.client_id,\r\n            clientSecret: responseBody.client_secret,\r\n            idTokenSignedResponseAlg: responseBody.id_token_signed_response_alg,\r\n            clientType: \"dynamic\",\r\n        };\r\n    }\r\n    if (registerResponse.status === 400) {\r\n        processErrorResponse(await registerResponse.json(), options);\r\n    }\r\n    throw new Error(`Dynamic client registration failed: the server returned ${registerResponse.status} ${registerResponse.statusText} - ${await registerResponse.text()}`);\r\n}\n\nfunction hasError(value) {\r\n    return value.error !== undefined && typeof value.error === \"string\";\r\n}\r\nfunction hasErrorDescription(value) {\r\n    return (value.error_description !== undefined &&\r\n        typeof value.error_description === \"string\");\r\n}\r\nfunction hasErrorUri(value) {\r\n    return value.error_uri !== undefined && typeof value.error_uri === \"string\";\r\n}\r\nfunction hasAccessToken(value) {\r\n    return (value.access_token !== undefined && typeof value.access_token === \"string\");\r\n}\r\nfunction hasIdToken(value) {\r\n    return value.id_token !== undefined && typeof value.id_token === \"string\";\r\n}\r\nfunction hasRefreshToken(value) {\r\n    return (value.refresh_token !== undefined && typeof value.refresh_token === \"string\");\r\n}\r\nfunction hasTokenType(value) {\r\n    return value.token_type !== undefined && typeof value.token_type === \"string\";\r\n}\r\nfunction hasExpiresIn(value) {\r\n    return value.expires_in === undefined || typeof value.expires_in === \"number\";\r\n}\r\nfunction validatePreconditions(issuer, data) {\r\n    if (data.grantType &&\r\n        (!issuer.grantTypesSupported ||\r\n            !issuer.grantTypesSupported.includes(data.grantType))) {\r\n        throw new Error(`The issuer [${issuer.issuer}] does not support the [${data.grantType}] grant`);\r\n    }\r\n    if (!issuer.tokenEndpoint) {\r\n        throw new Error(`This issuer [${issuer.issuer}] does not have a token endpoint`);\r\n    }\r\n}\r\nfunction validateTokenEndpointResponse(tokenResponse, dpop) {\r\n    if (hasError(tokenResponse)) {\r\n        throw new OidcProviderError(`Token endpoint returned error [${tokenResponse.error}]${hasErrorDescription(tokenResponse)\r\n            ? `: ${tokenResponse.error_description}`\r\n            : \"\"}${hasErrorUri(tokenResponse) ? ` (see ${tokenResponse.error_uri})` : \"\"}`, tokenResponse.error, hasErrorDescription(tokenResponse)\r\n            ? tokenResponse.error_description\r\n            : undefined);\r\n    }\r\n    if (!hasAccessToken(tokenResponse)) {\r\n        throw new InvalidResponseError([\"access_token\"]);\r\n    }\r\n    if (!hasIdToken(tokenResponse)) {\r\n        throw new InvalidResponseError([\"id_token\"]);\r\n    }\r\n    if (!hasTokenType(tokenResponse)) {\r\n        throw new InvalidResponseError([\"token_type\"]);\r\n    }\r\n    if (!hasExpiresIn(tokenResponse)) {\r\n        throw new InvalidResponseError([\"expires_in\"]);\r\n    }\r\n    if (!dpop && tokenResponse.token_type.toLowerCase() !== \"bearer\") {\r\n        throw new Error(`Invalid token endpoint response: requested a [Bearer] token, but got a 'token_type' value of [${tokenResponse.token_type}].`);\r\n    }\r\n    return tokenResponse;\r\n}\r\nasync function getTokens(issuer, client, data, dpop) {\r\n    validatePreconditions(issuer, data);\r\n    const headers = {\r\n        \"content-type\": \"application/x-www-form-urlencoded\",\r\n    };\r\n    let dpopKey;\r\n    if (dpop) {\r\n        dpopKey = await generateDpopKeyPair();\r\n        headers.DPoP = await createDpopHeader(issuer.tokenEndpoint, \"POST\", dpopKey);\r\n    }\r\n    if (client.clientSecret) {\r\n        headers.Authorization = `Basic ${btoa(`${client.clientId}:${client.clientSecret}`)}`;\r\n    }\r\n    const tokenRequestInit = {\r\n        method: \"POST\",\r\n        headers,\r\n        body: formurlencoded({\r\n            grant_type: data.grantType,\r\n            redirect_uri: data.redirectUrl,\r\n            code: data.code,\r\n            code_verifier: data.codeVerifier,\r\n            client_id: client.clientId,\r\n        }),\r\n    };\r\n    const rawTokenResponse = await await fetch(issuer.tokenEndpoint, tokenRequestInit);\r\n    const jsonTokenResponse = (await rawTokenResponse.json());\r\n    const tokenResponse = validateTokenEndpointResponse(jsonTokenResponse, dpop);\r\n    const webId = await getWebidFromTokenPayload(tokenResponse.id_token, issuer.jwksUri, issuer.issuer, client.clientId);\r\n    return {\r\n        accessToken: tokenResponse.access_token,\r\n        idToken: tokenResponse.id_token,\r\n        refreshToken: hasRefreshToken(tokenResponse)\r\n            ? tokenResponse.refresh_token\r\n            : undefined,\r\n        webId,\r\n        dpopKey,\r\n        expiresIn: tokenResponse.expires_in,\r\n    };\r\n}\r\nasync function getBearerToken(redirectUrl) {\r\n    let signinResponse;\r\n    try {\r\n        const client = new OidcClient({\r\n            response_mode: \"query\",\r\n            loadUserInfo: false,\r\n        });\r\n        signinResponse = await client.processSigninResponse(redirectUrl);\r\n        if (client.settings.metadata === undefined) {\r\n            throw new Error(\"Cannot retrieve issuer metadata from client information in storage.\");\r\n        }\r\n        if (client.settings.metadata.jwks_uri === undefined) {\r\n            throw new Error(\"Missing some issuer metadata from client information in storage: 'jwks_uri' is undefined\");\r\n        }\r\n        if (client.settings.metadata.issuer === undefined) {\r\n            throw new Error(\"Missing some issuer metadata from client information in storage: 'issuer' is undefined\");\r\n        }\r\n        if (client.settings.client_id === undefined) {\r\n            throw new Error(\"Missing some client information in storage: 'client_id' is undefined\");\r\n        }\r\n        const webId = await getWebidFromTokenPayload(signinResponse.id_token, client.settings.metadata.jwks_uri, client.settings.metadata.issuer, client.settings.client_id);\r\n        return {\r\n            accessToken: signinResponse.access_token,\r\n            idToken: signinResponse.id_token,\r\n            webId,\r\n            refreshToken: signinResponse.refresh_token,\r\n        };\r\n    }\r\n    catch (err) {\r\n        throw new Error(`Problem handling Auth Code Grant (Flow) redirect - URL [${redirectUrl}]: ${err}`);\r\n    }\r\n}\r\nasync function getDpopToken(issuer, client, data) {\r\n    return getTokens(issuer, client, data, true);\r\n}\n\nasync function refresh(refreshToken, issuer, client, dpopKey) {\r\n    const requestBody = {\r\n        grant_type: \"refresh_token\",\r\n        refresh_token: refreshToken,\r\n        scope: \"openid offline_access\",\r\n    };\r\n    let dpopHeader = {};\r\n    if (dpopKey !== undefined) {\r\n        dpopHeader = {\r\n            DPoP: await createDpopHeader(issuer.tokenEndpoint, \"POST\", dpopKey),\r\n        };\r\n    }\r\n    let authHeader = {};\r\n    if (client.clientSecret !== undefined) {\r\n        authHeader = {\r\n            Authorization: `Basic ${btoa(`${client.clientId}:${client.clientSecret}`)}`,\r\n        };\r\n    }\r\n    const rawResponse = await fetch(issuer.tokenEndpoint, {\r\n        method: \"POST\",\r\n        body: formurlencoded(requestBody),\r\n        headers: {\r\n            ...dpopHeader,\r\n            ...authHeader,\r\n            \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        },\r\n    });\r\n    let response;\r\n    try {\r\n        response = await rawResponse.json();\r\n    }\r\n    catch (e) {\r\n        throw new Error(`The token endpoint of issuer ${issuer.issuer} returned a malformed response.`);\r\n    }\r\n    const validatedResponse = validateTokenEndpointResponse(response, dpopKey !== undefined);\r\n    const webId = await getWebidFromTokenPayload(validatedResponse.id_token, issuer.jwksUri, issuer.issuer, client.clientId);\r\n    return {\r\n        accessToken: validatedResponse.access_token,\r\n        idToken: validatedResponse.id_token,\r\n        refreshToken: typeof validatedResponse.refresh_token === \"string\"\r\n            ? validatedResponse.refresh_token\r\n            : undefined,\r\n        webId,\r\n        dpopKey,\r\n        expiresIn: validatedResponse.expires_in,\r\n    };\r\n}\n\nfunction removeOidcQueryParam(redirectUrl) {\r\n    const cleanedUrl = new URL(redirectUrl);\r\n    cleanedUrl.searchParams.delete(\"code\");\r\n    cleanedUrl.searchParams.delete(\"state\");\r\n    cleanedUrl.hash = \"\";\r\n    return cleanedUrl.toString();\r\n}\r\nasync function clearOidcPersistentStorage() {\r\n    const client = new OidcClient({\r\n        response_mode: \"query\",\r\n    });\r\n    await client.clearStaleState(new WebStorageStateStore({}));\r\n    const myStorage = window.localStorage;\r\n    const itemsToRemove = [];\r\n    for (let i = 0; i <= myStorage.length; i += 1) {\r\n        const key = myStorage.key(i);\r\n        if (key &&\r\n            (key.match(/^oidc\\..+$/) ||\r\n                key.match(/^solidClientAuthenticationUser:.+$/))) {\r\n            itemsToRemove.push(key);\r\n        }\r\n    }\r\n    itemsToRemove.forEach((key) => myStorage.removeItem(key));\r\n}\n\nexport { clearOidcPersistentStorage, getBearerToken, getDpopToken, refresh, registerClient, removeOidcQueryParam };\n","/*\n * Copyright 2021 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * @hidden\n * @packageDocumentation\n */\n\nimport {\n  ILoginHandler,\n  ILogoutHandler,\n  IRedirectHandler,\n  ISessionInfo,\n  ISessionInfoManager,\n  IIssuerConfigFetcher,\n  ISessionInternalInfo,\n  ILoginOptions,\n  fetchJwks,\n} from \"@inrupt/solid-client-authn-core\";\nimport { removeOidcQueryParam } from \"@inrupt/oidc-client-ext\";\nimport { jwtVerify, parseJwk } from \"@inrupt/jose-legacy-modules\";\nimport { EventEmitter } from \"events\";\nimport { KEY_CURRENT_SESSION } from \"./constant\";\n\n// By only referring to `window` at runtime, apps that do server-side rendering\n// won't run into errors when rendering code that instantiates a\n// ClientAuthentication:\nconst globalFetch: typeof window.fetch = (request, init) =>\n  window.fetch(request, init);\n\n/**\n * @hidden\n */\nexport default class ClientAuthentication {\n  constructor(\n    private loginHandler: ILoginHandler,\n    private redirectHandler: IRedirectHandler,\n    private logoutHandler: ILogoutHandler,\n    private sessionInfoManager: ISessionInfoManager,\n    private issuerConfigFetcher: IIssuerConfigFetcher\n  ) {}\n\n  // Define these functions as properties so that they don't get accidentally re-bound.\n  // Isn't Javascript fun?\n  login = async (\n    options: ILoginOptions,\n    eventEmitter: EventEmitter\n  ): Promise<void> => {\n    // In order to get a clean start, make sure that the session is logged out\n    // on login.\n    // But we may want to preserve our client application info, particularly if\n    // we used Dynamic Client Registration to register (since we don't\n    // necessarily want the user to have to register this app each time they\n    // login).\n    await this.sessionInfoManager.clear(options.sessionId);\n\n    // In the case of the user hitting the 'back' button in their browser, they\n    // could return to a previous redirect URL that contains OIDC params that\n    // are now longer valid - so just to be safe, strip relevant params now.\n    const redirectUrl = removeOidcQueryParam(\n      options.redirectUrl ?? window.location.href\n    );\n\n    await this.loginHandler.handle({\n      ...options,\n      redirectUrl,\n      // If no clientName is provided, the clientId may be used instead.\n      clientName: options.clientName ?? options.clientId,\n      eventEmitter,\n    });\n  };\n\n  // By default, our fetch() resolves to the environment fetch() function.\n  fetch = globalFetch;\n\n  logout = async (sessionId: string): Promise<void> => {\n    await this.logoutHandler.handle(sessionId);\n\n    // Restore our fetch() function back to the environment fetch(), effectively\n    // leaving us with un-authenticated fetches from now on.\n    this.fetch = globalFetch;\n  };\n\n  getSessionInfo = async (\n    sessionId: string\n  ): Promise<(ISessionInfo & ISessionInternalInfo) | undefined> => {\n    // TODO complete\n    return this.sessionInfoManager.get(sessionId);\n  };\n\n  getAllSessionInfo = async (): Promise<ISessionInfo[]> => {\n    return this.sessionInfoManager.getAll();\n  };\n\n  validateCurrentSession = async (): Promise<\n    (ISessionInfo & ISessionInternalInfo) | null\n  > => {\n    const currentSessionId = window.localStorage.getItem(KEY_CURRENT_SESSION);\n    if (currentSessionId === null) {\n      return null;\n    }\n    const sessionInfo = await this.sessionInfoManager.get(currentSessionId);\n    // Several types of session data are required in order to validate that the ID\n    // token in storage hasn't been tampered with, and has actually been issued\n    // by the issuer present in storage.\n    if (\n      sessionInfo === undefined ||\n      sessionInfo.idToken === undefined ||\n      sessionInfo.clientAppId === undefined ||\n      sessionInfo.issuer === undefined\n    ) {\n      return null;\n    }\n    const issuerConfig = await this.issuerConfigFetcher.fetchConfig(\n      sessionInfo.issuer\n    );\n\n    try {\n      const jwk = await fetchJwks(issuerConfig.jwksUri, issuerConfig.issuer);\n      await jwtVerify(sessionInfo.idToken, await parseJwk(jwk), {\n        audience: sessionInfo.clientAppId,\n        issuer: issuerConfig.issuer,\n      });\n      return sessionInfo;\n    } catch (e) {\n      // The jwt verification function throws on invalid token.\n      // The error is swallowed, and `null` is eventually returned.\n    }\n    return null;\n  };\n\n  handleIncomingRedirect = async (\n    url: string,\n    eventEmitter: EventEmitter\n  ): Promise<ISessionInfo | undefined> => {\n    const redirectInfo = await this.redirectHandler.handle(url, eventEmitter);\n    // The `FallbackRedirectHandler` directly returns the global `fetch` for\n    // his value, so we should ensure it's bound to `window` rather than to\n    // ClientAuthentication, to avoid the following error:\n    // > 'fetch' called on an object that does not implement interface Window.\n    this.fetch = redirectInfo.fetch.bind(window);\n\n    const cleanedUpUrl = new URL(url);\n    cleanedUpUrl.searchParams.delete(\"state\");\n    // For auth code flow\n    cleanedUpUrl.searchParams.delete(\"code\");\n    // For implicit flow\n    cleanedUpUrl.searchParams.delete(\"id_token\");\n    cleanedUpUrl.searchParams.delete(\"access_token\");\n    // For login error\n    cleanedUpUrl.searchParams.delete(\"error\");\n    cleanedUpUrl.searchParams.delete(\"error_description\");\n\n    // Remove OAuth-specific query params (since the login flow finishes with\n    // the browser being redirected back with OAuth2 query params (e.g. for\n    // 'code' and 'state'), and so if the user simply refreshes this page our\n    // authentication library will be called again with what are now invalid\n    // query parameters!).\n    window.history.replaceState(null, \"\", cleanedUpUrl.toString());\n\n    return {\n      isLoggedIn: redirectInfo.isLoggedIn,\n      webId: redirectInfo.webId,\n      sessionId: redirectInfo.sessionId,\n      expirationDate: redirectInfo.expirationDate,\n    };\n  };\n}\n","/*\n * Copyright 2021 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * @hidden\n * @packageDocumentation\n */\n\n/**\n * Handles Common Oidc login functions (Like fetching the configuration)\n */\n\nimport {\n  IClientRegistrar,\n  IIssuerConfig,\n  IIssuerConfigFetcher,\n  ILoginOptions,\n  ILoginHandler,\n  IOidcHandler,\n  IOidcOptions,\n  IStorageUtility,\n  ConfigurationError,\n  LoginResult,\n  handleRegistration,\n} from \"@inrupt/solid-client-authn-core\";\n\nfunction hasIssuer(\n  options: ILoginOptions\n): options is ILoginOptions & { oidcIssuer: string } {\n  return typeof options.oidcIssuer === \"string\";\n}\n\nfunction hasRedirectUrl(\n  options: ILoginOptions\n): options is ILoginOptions & { redirectUrl: string } {\n  return typeof options.redirectUrl === \"string\";\n}\n\n/**\n * @hidden\n */\nexport default class OidcLoginHandler implements ILoginHandler {\n  constructor(\n    private storageUtility: IStorageUtility,\n    private oidcHandler: IOidcHandler,\n    private issuerConfigFetcher: IIssuerConfigFetcher,\n    private clientRegistrar: IClientRegistrar\n  ) {}\n\n  async canHandle(options: ILoginOptions): Promise<boolean> {\n    return hasIssuer(options) && hasRedirectUrl(options);\n  }\n\n  async handle(options: ILoginOptions): Promise<LoginResult> {\n    if (!hasIssuer(options)) {\n      throw new ConfigurationError(\n        `OidcLoginHandler requires an OIDC issuer: missing property 'oidcIssuer' in ${JSON.stringify(\n          options\n        )}`\n      );\n    }\n    if (!hasRedirectUrl(options)) {\n      throw new ConfigurationError(\n        `OidcLoginHandler requires a redirect URL: missing property 'redirectUrl' in ${JSON.stringify(\n          options\n        )}`\n      );\n    }\n\n    // Fetch issuer config.\n    const issuerConfig: IIssuerConfig =\n      await this.issuerConfigFetcher.fetchConfig(options.oidcIssuer);\n\n    const clientRegistration = await handleRegistration(\n      options,\n      issuerConfig,\n      this.storageUtility,\n      this.clientRegistrar\n    );\n\n    // Construct OIDC Options\n    const OidcOptions: IOidcOptions = {\n      // Note that here, the issuer is not the one from the received options, but\n      // from the issuer's config. This enforces the canonical URL is used and stored,\n      // which is also the one present in the ID token, so storing a technically\n      // valid, but different issuer URL (e.g. using a trailing slash or not) now\n      // could prevent from validating the ID token later.\n      issuer: issuerConfig.issuer,\n      // TODO: differentiate if DPoP should be true\n      dpop: options.tokenType.toLowerCase() === \"dpop\",\n      ...options,\n      issuerConfiguration: issuerConfig,\n      client: clientRegistration,\n    };\n\n    // Call proper OIDC Handler\n    return this.oidcHandler.handle(OidcOptions);\n  }\n}\n","/*\n * Copyright 2021 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * @hidden\n * @packageDocumentation\n */\n\n/**\n * Handler for the Authorization Code with PKCE Flow\n */\nimport {\n  IOidcHandler,\n  IOidcOptions,\n  IRedirector,\n  IStorageUtility,\n  LoginResult,\n} from \"@inrupt/solid-client-authn-core\";\nimport { OidcClient } from \"@inrupt/oidc-client-ext\";\n\n/**\n * @hidden\n * Authorization code flow spec: https://openid.net/specs/openid-connect-core-1_0.html#CodeFlowAuth\n * PKCE: https://tools.ietf.org/html/rfc7636\n */\nexport default class AuthorizationCodeWithPkceOidcHandler\n  implements IOidcHandler\n{\n  constructor(\n    private storageUtility: IStorageUtility,\n    private redirector: IRedirector\n  ) {}\n\n  async canHandle(oidcLoginOptions: IOidcOptions): Promise<boolean> {\n    return !!(\n      oidcLoginOptions.issuerConfiguration.grantTypesSupported &&\n      oidcLoginOptions.issuerConfiguration.grantTypesSupported.indexOf(\n        \"authorization_code\"\n      ) > -1\n    );\n  }\n\n  async handle(oidcLoginOptions: IOidcOptions): Promise<LoginResult> {\n    /* eslint-disable camelcase */\n    const oidcOptions = {\n      authority: oidcLoginOptions.issuer.toString(),\n      client_id: oidcLoginOptions.client.clientId,\n      client_secret: oidcLoginOptions.client.clientSecret,\n      redirect_uri: oidcLoginOptions.redirectUrl.toString(),\n      post_logout_redirect_uri: oidcLoginOptions.redirectUrl.toString(),\n      response_type: \"code\",\n      // The offline_access scope requests that a refresh token be returned.\n      scope: \"openid offline_access\",\n      filterProtocolClaims: true,\n      // The userinfo endpoint on NSS fails, so disable this for now\n      // Note that in Solid, information should be retrieved from the\n      // profile referenced by the WebId.\n      loadUserInfo: false,\n      code_verifier: true,\n      prompt: oidcLoginOptions.prompt ?? \"consent\",\n    };\n    /* eslint-enable camelcase */\n\n    const oidcClientLibrary = new OidcClient(oidcOptions);\n\n    const { redirector } = this;\n    const storage = this.storageUtility;\n\n    try {\n      const signingRequest = await oidcClientLibrary.createSigninRequest();\n      await Promise.all([\n        // We use the OAuth 'state' value (which should be crypto-random) as\n        // the key in our storage to store our actual SessionID. We do this\n        // 'cos we'll need to lookup our session information again when the\n        // browser is redirected back to us (i.e. the OAuth client\n        // application) from the Authorization Server.\n        // We don't want to use our session ID as the OAuth 'state' value, as\n        // that session ID can be any developer-specified value, and therefore\n        // may not be appropriate (since the OAuth 'state' value should really\n        // be an unguessable crypto-random value).\n        // eslint-disable-next-line no-underscore-dangle\n        storage.setForUser(signingRequest.state._id, {\n          sessionId: oidcLoginOptions.sessionId,\n        }),\n\n        // Store our login-process state using the session ID as the key.\n        // Strictly speaking, this indirection from our OAuth state value to\n        // our session ID is unnecessary, but it provides a slightly cleaner\n        // separation of concerns.\n        storage.setForUser(oidcLoginOptions.sessionId, {\n          // eslint-disable-next-line no-underscore-dangle\n          codeVerifier: signingRequest.state._code_verifier,\n          issuer: oidcLoginOptions.issuer.toString(),\n          // The redirect URL is read after redirect, so it must be stored now.\n          redirectUrl: oidcLoginOptions.redirectUrl,\n          dpop: oidcLoginOptions.dpop ? \"true\" : \"false\",\n        }),\n      ]);\n\n      redirector.redirect(signingRequest.url.toString(), {\n        handleRedirect: oidcLoginOptions.handleRedirect,\n        redirectInIframe: oidcLoginOptions.inIframe,\n      });\n    } catch (err: unknown) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n\n    // The login is only completed AFTER redirect, so nothing to return here.\n    return undefined;\n  }\n}\n","/*\n * Copyright 2021 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * @hidden\n * @packageDocumentation\n */\n\n/**\n * Utility that appends the specified value to end of the specified URL's path.\n *\n * @param url  the URL to whose path we append the specified value\n * @param append  the value to append to the URL's path\n */\nexport function appendToUrlPathname(url: string, append: string): string {\n  const parsedUrl = new URL(url);\n  const path = parsedUrl.pathname;\n  parsedUrl.pathname = `${path}${path.endsWith(\"/\") ? \"\" : \"/\"}${\n    append.startsWith(\"/\") ? append.substring(1) : append\n  }`;\n\n  return parsedUrl.toString();\n}\n","/*\n * Copyright 2021 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * @hidden\n * @packageDocumentation\n */\n\n/**\n * Responsible for fetching an IDP configuration\n */\nimport {\n  IIssuerConfig,\n  IIssuerConfigFetcher,\n  IStorageUtility,\n  ConfigurationError,\n} from \"@inrupt/solid-client-authn-core\";\nimport { appendToUrlPathname } from \"../../util/urlPath\";\n\nexport const WELL_KNOWN_OPENID_CONFIG = \".well-known/openid-configuration\";\n\n/* eslint-disable camelcase */\nconst issuerConfigKeyMap: Record<\n  string,\n  { toKey: string; convertToUrl?: boolean }\n> = {\n  issuer: {\n    toKey: \"issuer\",\n    convertToUrl: true,\n  },\n  authorization_endpoint: {\n    toKey: \"authorizationEndpoint\",\n    convertToUrl: true,\n  },\n  token_endpoint: {\n    toKey: \"tokenEndpoint\",\n    convertToUrl: true,\n  },\n  userinfo_endpoint: {\n    toKey: \"userinfoEndpoint\",\n    convertToUrl: true,\n  },\n  jwks_uri: {\n    toKey: \"jwksUri\",\n    convertToUrl: true,\n  },\n  registration_endpoint: {\n    toKey: \"registrationEndpoint\",\n    convertToUrl: true,\n  },\n  scopes_supported: { toKey: \"scopesSupported\" },\n  response_types_supported: { toKey: \"responseTypesSupported\" },\n  response_modes_supported: { toKey: \"responseModesSupported\" },\n  grant_types_supported: { toKey: \"grantTypesSupported\" },\n  acr_values_supported: { toKey: \"acrValuesSupported\" },\n  subject_types_supported: { toKey: \"subjectTypesSupported\" },\n  id_token_signing_alg_values_supported: {\n    toKey: \"idTokenSigningAlgValuesSupported\",\n  },\n  id_token_encryption_alg_values_supported: {\n    toKey: \"idTokenEncryptionAlgValuesSupported\",\n  },\n  id_token_encryption_enc_values_supported: {\n    toKey: \"idTokenEncryptionEncValuesSupported\",\n  },\n  userinfo_signing_alg_values_supported: {\n    toKey: \"userinfoSigningAlgValuesSupported\",\n  },\n  userinfo_encryption_alg_values_supported: {\n    toKey: \"userinfoEncryptionAlgValuesSupported\",\n  },\n  userinfo_encryption_enc_values_supported: {\n    toKey: \"userinfoEncryptionEncValuesSupported\",\n  },\n  request_object_signing_alg_values_supported: {\n    toKey: \"requestObjectSigningAlgValuesSupported\",\n  },\n  request_object_encryption_alg_values_supported: {\n    toKey: \"requestObjectEncryptionAlgValuesSupported\",\n  },\n  request_object_encryption_enc_values_supported: {\n    toKey: \"requestObjectEncryptionEncValuesSupported\",\n  },\n  token_endpoint_auth_methods_supported: {\n    toKey: \"tokenEndpointAuthMethodsSupported\",\n  },\n  token_endpoint_auth_signing_alg_values_supported: {\n    toKey: \"tokenEndpointAuthSigningAlgValuesSupported\",\n  },\n  display_values_supported: { toKey: \"displayValuesSupported\" },\n  claim_types_supported: { toKey: \"claimTypesSupported\" },\n  claims_supported: { toKey: \"claimsSupported\" },\n  service_documentation: { toKey: \"serviceDocumentation\" },\n  claims_locales_supported: { toKey: \"claimsLocalesSupported\" },\n  ui_locales_supported: { toKey: \"uiLocalesSupported\" },\n  claims_parameter_supported: { toKey: \"claimsParameterSupported\" },\n  request_parameter_supported: { toKey: \"requestParameterSupported\" },\n  request_uri_parameter_supported: { toKey: \"requestUriParameterSupported\" },\n  require_request_uri_registration: { toKey: \"requireRequestUriRegistration\" },\n  op_policy_uri: {\n    toKey: \"opPolicyUri\",\n    convertToUrl: true,\n  },\n  op_tos_uri: {\n    toKey: \"opTosUri\",\n    convertToUrl: true,\n  },\n  solid_oidc_supported: {\n    toKey: \"solidOidcSupported\",\n  },\n};\n/* eslint-enable camelcase */\n\nfunction processConfig(\n  config: Record<string, string | string[]>\n): IIssuerConfig {\n  const parsedConfig: Record<string, string | string[]> = {};\n  Object.keys(config).forEach((key) => {\n    if (issuerConfigKeyMap[key]) {\n      // TODO: PMcB55: Validate URL if \"issuerConfigKeyMap[key].convertToUrl\"\n      //  if (issuerConfigKeyMap[key].convertToUrl) {\n      //   validateUrl(config[key]);\n      //  }\n      parsedConfig[issuerConfigKeyMap[key].toKey] = config[key];\n    }\n  });\n\n  return parsedConfig as unknown as IIssuerConfig;\n}\n\n/**\n * @hidden\n */\nexport default class IssuerConfigFetcher implements IIssuerConfigFetcher {\n  constructor(private storageUtility: IStorageUtility) {}\n\n  // This method needs no state (so can be static), and can be exposed to allow\n  // callers to know where this implementation puts state it needs.\n  public static getLocalStorageKey(issuer: string): string {\n    return `issuerConfig:${issuer}`;\n  }\n\n  async fetchConfig(issuer: string): Promise<IIssuerConfig> {\n    let issuerConfig: IIssuerConfig;\n\n    const openIdConfigUrl = appendToUrlPathname(\n      issuer,\n      WELL_KNOWN_OPENID_CONFIG\n    );\n    const issuerConfigRequestBody = await window.fetch(openIdConfigUrl);\n    // Check the validity of the fetched config\n    try {\n      issuerConfig = processConfig(await issuerConfigRequestBody.json());\n    } catch (err) {\n      throw new ConfigurationError(\n        `[${issuer.toString()}] has an invalid configuration: ${err.message}`\n      );\n    }\n\n    // Update store with fetched config\n    await this.storageUtility.set(\n      IssuerConfigFetcher.getLocalStorageKey(issuer),\n      JSON.stringify(issuerConfig)\n    );\n\n    return issuerConfig;\n  }\n}\n","/*\n * Copyright 2021 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * @hidden\n * @packageDocumentation\n */\n\nimport {\n  ISessionInfo,\n  ISessionInfoManager,\n  ISessionInternalInfo,\n  ISessionInfoManagerOptions,\n  IStorageUtility,\n  isSupportedTokenType,\n} from \"@inrupt/solid-client-authn-core\";\nimport { v4 } from \"uuid\";\nimport { clearOidcPersistentStorage } from \"@inrupt/oidc-client-ext\";\n\nexport function getUnauthenticatedSession(): ISessionInfo & {\n  fetch: typeof fetch;\n} {\n  return {\n    isLoggedIn: false,\n    sessionId: v4(),\n    fetch,\n  };\n}\n\n/**\n * @param sessionId\n * @param storage\n * @hidden\n */\nexport async function clear(\n  sessionId: string,\n  storage: IStorageUtility\n): Promise<void> {\n  const storedSessionCookieReference = await storage.get(\n    \"tmp-resource-server-session-info\"\n  );\n  const reference = JSON.parse(storedSessionCookieReference ?? \"{}\");\n  const { webId } = reference;\n  if (webId !== undefined) {\n    const webIdAsUrl = new URL(webId);\n    const resourceServerIri = webIdAsUrl.origin;\n    await storage.clearResourceServerSessionInfo(resourceServerIri);\n  }\n  await Promise.all([\n    storage.deleteAllUserData(sessionId, { secure: false }),\n    storage.deleteAllUserData(sessionId, { secure: true }),\n    // FIXME: This is needed until the DPoP key is stored safely\n    storage.delete(\"clientKey\", { secure: false }),\n  ]);\n  await clearOidcPersistentStorage();\n}\n\n/**\n * @hidden\n */\nexport class SessionInfoManager implements ISessionInfoManager {\n  constructor(private storageUtility: IStorageUtility) {}\n\n  // eslint-disable-next-line class-methods-use-this\n  update(\n    _sessionId: string,\n    _options: ISessionInfoManagerOptions\n  ): Promise<void> {\n    // const localUserId: string = options.localUserId || this.uuidGenerator.v4();\n    // if (options.loggedIn) {\n    //   return {\n    //     sessionId,\n    //     loggedIn: true,\n    //     webId: options.webId as string,\n    //     neededAction: options.neededAction || { actionType: \"inaction\" },\n    //     state: options.state,\n    //     logout: async (): Promise<void> => {\n    //       // TODO: handle if webid isn't here\n    //       return this.logoutHandler.handle(localUserId);\n    //     },\n    //     fetch: (url: RequestInfo, init?: RequestInit): Promise<Response> => {\n    //       // TODO: handle if webid isn't here\n    //       return this.authenticatedFetcher.handle(\n    //         {\n    //           localUserId,\n    //           type: \"dpop\"\n    //         },\n    //         url,\n    //         init\n    //       );\n    //     }\n    //   };\n    // } else {\n    //   return {\n    //     localUserId,\n    //     loggedIn: false,\n    //     neededAction: options.neededAction || { actionType: \"inaction\" }\n    //   };\n    // }\n    throw new Error(\"Not Implemented\");\n  }\n\n  async get(\n    sessionId: string\n  ): Promise<(ISessionInfo & ISessionInternalInfo) | undefined> {\n    const isLoggedIn = await this.storageUtility.getForUser(\n      sessionId,\n      \"isLoggedIn\",\n      {\n        secure: true,\n      }\n    );\n\n    const webId = await this.storageUtility.getForUser(sessionId, \"webId\", {\n      secure: true,\n    });\n\n    const clientId = await this.storageUtility.getForUser(\n      sessionId,\n      \"clientId\",\n      {\n        secure: false,\n      }\n    );\n\n    const clientSecret = await this.storageUtility.getForUser(\n      sessionId,\n      \"clientSecret\",\n      {\n        secure: false,\n      }\n    );\n\n    const idToken = await this.storageUtility.getForUser(sessionId, \"idToken\", {\n      secure: false,\n    });\n\n    const redirectUrl = await this.storageUtility.getForUser(\n      sessionId,\n      \"redirectUrl\",\n      {\n        secure: false,\n      }\n    );\n\n    const refreshToken = await this.storageUtility.getForUser(\n      sessionId,\n      \"refreshToken\",\n      {\n        secure: true,\n      }\n    );\n\n    const issuer = await this.storageUtility.getForUser(sessionId, \"issuer\", {\n      secure: false,\n    });\n\n    const tokenType =\n      (await this.storageUtility.getForUser(sessionId, \"tokenType\", {\n        secure: false,\n      })) ?? \"DPoP\";\n\n    if (!isSupportedTokenType(tokenType)) {\n      throw new Error(`Tokens of type [${tokenType}] are not supported.`);\n    }\n\n    if (\n      clientId === undefined &&\n      idToken === undefined &&\n      isLoggedIn === undefined &&\n      webId === undefined &&\n      refreshToken === undefined\n    ) {\n      return undefined;\n    }\n\n    return {\n      sessionId,\n      webId,\n      isLoggedIn: isLoggedIn === \"true\",\n      redirectUrl,\n      idToken,\n      refreshToken,\n      issuer,\n      clientAppId: clientId,\n      clientAppSecret: clientSecret,\n      tokenType,\n    };\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  async getAll(): Promise<(ISessionInfo & ISessionInternalInfo)[]> {\n    throw new Error(\"Not implemented\");\n  }\n\n  /**\n   * This function removes all session-related information from storage.\n   * @param sessionId the session identifier\n   * @param storage the storage where session info is stored\n   * @hidden\n   */\n  async clear(sessionId: string): Promise<void> {\n    return clear(sessionId, this.storageUtility);\n  }\n\n  /**\n   * Registers a new session, so that its ID can be retrieved.\n   * @param sessionId\n   */\n  async register(_sessionId: string): Promise<void> {\n    throw new Error(\"Not implemented\");\n  }\n\n  /**\n   * Returns all the registered session IDs. Differs from getAll, which also\n   * returns additional session information.\n   */\n  async getRegisteredSessionIdAll(): Promise<string[]> {\n    throw new Error(\"Not implemented\");\n  }\n\n  /**\n   * Deletes all information about all sessions, including their registrations.\n   */\n  async clearAll(): Promise<void> {\n    throw new Error(\"Not implemented\");\n  }\n}\n","/*\n * Copyright 2021 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * @hidden\n * @packageDocumentation\n */\n\nimport {\n  IRedirectHandler,\n  ISessionInfo,\n} from \"@inrupt/solid-client-authn-core\";\n\nimport { getUnauthenticatedSession } from \"../../../sessionInfo/SessionInfoManager\";\n\n/**\n * This class handles redirect IRIs without any query params, and returns an unauthenticated\n * session. It serves as a fallback so that consuming libraries don't have to test\n * for the query params themselves, and can always try to use them as a redirect IRI.\n * @hidden\n */\nexport class FallbackRedirectHandler implements IRedirectHandler {\n  async canHandle(redirectUrl: string): Promise<boolean> {\n    try {\n      // The next URL object is built for validating it.\n      // eslint-disable-next-line no-new\n      new URL(redirectUrl);\n      return true;\n    } catch (e) {\n      throw new Error(\n        `[${redirectUrl}] is not a valid URL, and cannot be used as a redirect URL: ${e.toString()}`\n      );\n    }\n  }\n\n  async handle(\n    // The argument is ignored, but must be present to implement the interface\n    _redirectUrl: string\n  ): Promise<ISessionInfo & { fetch: typeof fetch }> {\n    return getUnauthenticatedSession();\n  }\n}\n","/*\n * Copyright 2021 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * @hidden\n * @packageDocumentation\n */\n\nimport {\n  ILogoutHandler,\n  ISessionInfoManager,\n} from \"@inrupt/solid-client-authn-core\";\n\n/**\n * @hidden\n */\nexport default class GeneralLogoutHandler implements ILogoutHandler {\n  constructor(private sessionInfoManager: ISessionInfoManager) {}\n\n  async canHandle(): Promise<boolean> {\n    return true;\n  }\n\n  async handle(userId: string): Promise<void> {\n    await this.sessionInfoManager.clear(userId);\n  }\n}\n","/*\n * Copyright 2021 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * @hidden\n * @packageDocumentation\n */\n\nimport {\n  buildAuthenticatedFetch,\n  IClient,\n  IClientRegistrar,\n  IIssuerConfigFetcher,\n  IRedirectHandler,\n  ISessionInfo,\n  ISessionInfoManager,\n  IStorageUtility,\n  ITokenRefresher,\n  RefreshOptions,\n} from \"@inrupt/solid-client-authn-core\";\nimport {\n  getDpopToken,\n  getBearerToken,\n  CodeExchangeResult,\n} from \"@inrupt/oidc-client-ext\";\nimport { EventEmitter } from \"events\";\nimport { KEY_CURRENT_SESSION } from \"../../../constant\";\n\n// A lifespan of 30 minutes is ESS's default. This could be removed if we\n// configure the server to return the remaining lifespan of the cookie.\nexport const DEFAULT_LIFESPAN = 30 * 60 * 1000;\n\n/**\n * Stores the resource server session information in local storage, so that they\n * can be used on refresh.\n * @param webId\n * @param authenticatedFetch\n * @param storageUtility\n */\nasync function setupResourceServerSession(\n  webId: string,\n  authenticatedFetch: typeof fetch,\n  storageUtility: IStorageUtility\n): Promise<void> {\n  const webIdAsUrl = new URL(webId);\n  const resourceServerIri = webIdAsUrl.origin;\n  // Querying the /session endpoint does not set the cookie, but issuing an\n  // authenticated request to any actual resource (even public ones) does,\n  // so we fetch the user's WebID before checking the /session endpoint.\n  await authenticatedFetch(webId);\n  try {\n    const resourceServerResponse = await authenticatedFetch(\n      `${resourceServerIri}/session`\n    );\n\n    if (resourceServerResponse.status === 200) {\n      await storageUtility.storeResourceServerSessionInfo(\n        webId,\n        resourceServerIri,\n        // Note that here, if the lifespan of the cookie was returned by the\n        // server, we'd expect a relative value (the remaining time of validity)\n        // rather than an absolute one (the moment when the cookie expires).\n        Date.now() + DEFAULT_LIFESPAN\n      );\n      return;\n    }\n    // In this case, the resource server either:\n    // - does not have the expected endpoint, or\n    // - does not recognize the user\n    // Either way, no cookie is expected to be set there, and any existing\n    // session information should be cleared.\n    await storageUtility.clearResourceServerSessionInfo(resourceServerIri);\n  } catch (_e) {\n    // Setting the `credentials=include` option on fetch, which is required in\n    // the current approach based on a RS cookie, may result in an error if\n    // attempting to access an URL, depending on the CORS policies.\n    // Since this internal fetch is necessary, and out of control of the\n    // calling library, there is no other solution but to swallow the exception.\n    // This may happen depending on how the target RS handles a request to the\n    // /session endpoint.\n    await storageUtility.clearResourceServerSessionInfo(resourceServerIri);\n  }\n}\n\n/**\n * @hidden\n */\nexport class AuthCodeRedirectHandler implements IRedirectHandler {\n  constructor(\n    private storageUtility: IStorageUtility,\n    private sessionInfoManager: ISessionInfoManager,\n    private issuerConfigFetcher: IIssuerConfigFetcher,\n    private clientRegistrar: IClientRegistrar,\n    private tokerRefresher: ITokenRefresher\n  ) {}\n\n  async canHandle(redirectUrl: string): Promise<boolean> {\n    try {\n      const myUrl = new URL(redirectUrl);\n      return (\n        myUrl.searchParams.get(\"code\") !== null &&\n        myUrl.searchParams.get(\"state\") !== null\n      );\n    } catch (e) {\n      throw new Error(\n        `[${redirectUrl}] is not a valid URL, and cannot be used as a redirect URL: ${e.toString()}`\n      );\n    }\n  }\n\n  async handle(\n    redirectUrl: string,\n    eventEmitter?: EventEmitter\n  ): Promise<ISessionInfo & { fetch: typeof fetch }> {\n    if (!(await this.canHandle(redirectUrl))) {\n      throw new Error(\n        `AuthCodeRedirectHandler cannot handle [${redirectUrl}]: it is missing one of [code, state].`\n      );\n    }\n\n    const url = new URL(redirectUrl);\n    const oauthState = url.searchParams.get(\"state\") as string;\n\n    const storedSessionId = (await this.storageUtility.getForUser(\n      oauthState,\n      \"sessionId\",\n      {\n        errorIfNull: true,\n      }\n    )) as string;\n    const isDpop =\n      (await this.storageUtility.getForUser(storedSessionId, \"dpop\")) ===\n      \"true\";\n\n    // Since we throw if not found, the type assertion is okay\n    const issuer = (await this.storageUtility.getForUser(\n      storedSessionId,\n      \"issuer\",\n      { errorIfNull: true }\n    )) as string;\n\n    // Store the current session ID specifically in 'localStorage' (i.e., not using\n    // any other storage mechanism), as we don't deem this information to be\n    // sensitive, and we want to ensure it survives a browser tab refresh.\n    window.localStorage.setItem(KEY_CURRENT_SESSION, storedSessionId);\n\n    const issuerConfig = await this.issuerConfigFetcher.fetchConfig(issuer);\n    const client: IClient = await this.clientRegistrar.getClient(\n      { sessionId: storedSessionId },\n      issuerConfig\n    );\n\n    let tokens: CodeExchangeResult;\n    const referenceTime = Date.now();\n\n    if (isDpop) {\n      const codeVerifier = (await this.storageUtility.getForUser(\n        storedSessionId,\n        \"codeVerifier\",\n        { errorIfNull: true }\n      )) as string;\n\n      const storedRedirectIri = (await this.storageUtility.getForUser(\n        storedSessionId,\n        \"redirectUrl\",\n        { errorIfNull: true }\n      )) as string;\n\n      tokens = await getDpopToken(issuerConfig, client, {\n        grantType: \"authorization_code\",\n        // We rely on our 'canHandle' function checking that the OAuth 'code'\n        // parameter is present in our query string.\n        code: url.searchParams.get(\"code\") as string,\n        codeVerifier,\n        redirectUrl: storedRedirectIri,\n      });\n    } else {\n      tokens = await getBearerToken(url.toString());\n    }\n\n    let refreshOptions: RefreshOptions | undefined;\n    if (tokens.refreshToken !== undefined) {\n      refreshOptions = {\n        sessionId: storedSessionId,\n        refreshToken: tokens.refreshToken,\n        tokenRefresher: this.tokerRefresher,\n      };\n    }\n\n    const authFetch = await buildAuthenticatedFetch(fetch, tokens.accessToken, {\n      dpopKey: tokens.dpopKey,\n      refreshOptions,\n      eventEmitter,\n      expiresIn: tokens.expiresIn,\n    });\n\n    await this.storageUtility.setForUser(\n      storedSessionId,\n      {\n        // TODO: We need a PR to oidc-client-js to add parsing of the\n        //  refresh_token from the redirect URL.\n        refreshToken:\n          \"<Refresh token that *is* coming back in the redirect URL is not yet being parsed and provided by oidc-client-js in it's response object>\",\n        webId: tokens.webId,\n        isLoggedIn: \"true\",\n      },\n      { secure: true }\n    );\n    // Clear the code query param from the redirect URL before storing it, but\n    // preserve any state that my have been provided by the client and returned\n    // by the IdP.\n    url.searchParams.delete(\"code\");\n    await this.storageUtility.setForUser(\n      storedSessionId,\n      {\n        redirectUrl: url.toString(),\n        idToken: tokens.idToken,\n      },\n      {\n        secure: false,\n      }\n    );\n    // TODO: This is a temporary workaround. When deprecating the cookie-based auth,\n    // this should be all cleared.\n    const essWorkaroundDisabled =\n      window.localStorage.getItem(\"tmp-resource-server-session-enabled\") ===\n      \"false\";\n    if (!essWorkaroundDisabled) {\n      await setupResourceServerSession(\n        tokens.webId,\n        authFetch,\n        this.storageUtility\n      );\n    }\n\n    const sessionInfo = await this.sessionInfoManager.get(storedSessionId);\n    if (!sessionInfo) {\n      throw new Error(`Could not retrieve session: [${storedSessionId}].`);\n    }\n\n    return Object.assign(sessionInfo, {\n      fetch: authFetch,\n      expirationDate:\n        typeof tokens.expiresIn === \"number\"\n          ? referenceTime + tokens.expiresIn * 1000\n          : null,\n    });\n  }\n}\n","/*\n * Copyright 2021 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * @hidden\n * @packageDocumentation\n */\n\n/**\n * Responsible for selecting the correct OidcHandler to handle the provided OIDC Options\n */\nimport {\n  IRedirectHandler,\n  AggregateHandler,\n  RedirectInput,\n  RedirectResult,\n} from \"@inrupt/solid-client-authn-core\";\n\n/**\n * @hidden\n */\nexport default class AggregateRedirectHandler\n  extends AggregateHandler<RedirectInput, RedirectResult>\n  implements IRedirectHandler\n{\n  constructor(redirectHandlers: IRedirectHandler[]) {\n    super(redirectHandlers);\n  }\n}\n","/*\n * Copyright 2021 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * @hidden\n * @packageDocumentation\n */\n\nimport { IStorage } from \"@inrupt/solid-client-authn-core\";\n\n/**\n * @hidden\n */\nexport default class BrowserStorage implements IStorage {\n  get storage(): typeof window.localStorage {\n    return window.localStorage;\n  }\n\n  async get(key: string): Promise<string | undefined> {\n    return this.storage.getItem(key) || undefined;\n  }\n\n  async set(key: string, value: string): Promise<void> {\n    this.storage.setItem(key, value);\n  }\n\n  async delete(key: string): Promise<void> {\n    this.storage.removeItem(key);\n  }\n}\n","/*\n * Copyright 2021 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n// This is an internal variable used to share some state between `redirectInIframe`,\n// which initializes it, and `setupIframeListener`, which reads from it. It avoids\n// creating a DOM element with identifying attributes such as an ID which may clash\n// with some other element set up by the library user.\nlet redirectIframe: HTMLIFrameElement;\n\n// The iframe is dynamically created rather than on import,\n// to avoid accessing `window` when an app is doing server-side rendering:\nfunction getRedirectIframe(): HTMLIFrameElement {\n  if (typeof redirectIframe === \"undefined\") {\n    redirectIframe = window.document.createElement(\"iframe\");\n    redirectIframe.setAttribute(\"hidden\", \"true\");\n    redirectIframe.setAttribute(\"sandbox\", \"allow-scripts allow-same-origin\");\n  }\n  return redirectIframe;\n}\n\n/**\n * Redirects the browser to a provided IRI, but does such redirection in a child\n * iframe. This is used to have a front-channel interaction with the Solid Identity\n * Provider without having the user involved, and without refreshing the main window.\n *\n * @param redirectUrl The IRI to which the iframe should be redirected.\n */\nexport function redirectInIframe(redirectUrl: string): void {\n  const iframe = getRedirectIframe();\n  window.document.body.appendChild(iframe);\n  iframe.src = redirectUrl;\n}\n\n/**\n * This function sets up an event listener that will receive iframe messages.\n * It is only listening to messages coming from iframes that could have been\n * opened by the library, and expects to be posted the IRI the iframe has been\n * redirected to by the Solid Identity Provider. This way, the top window can\n * perform the backchannel exchange to the token endpoint without performing\n * the front-channel redirection.\n *\n * @param handleIframeRedirect Redirect URL sent by the iframe\n */\nexport function setupIframeListener(\n  handleIframeRedirect: (redirectUrl: string) => Promise<unknown>\n): void {\n  // If an app is doing server-side rendering, setting up an iframe listener\n  // is pointless (since there is no iframe, and there will be no expiring\n  // session to renew) and might even throw a `window` not defined error, so\n  // skip this in that case:\n  /* istanbul ignore if (window is always defined in tests) */\n  if (typeof window === \"undefined\") {\n    return;\n  }\n  window.addEventListener(\"message\", async (evt: MessageEvent) => {\n    const iframe = getRedirectIframe();\n    if (\n      evt.origin === window.location.origin &&\n      evt.source === iframe.contentWindow\n    ) {\n      if (typeof evt.data.redirectUrl === \"string\") {\n        // The top-level window handles the redirect that happened in the iframe.\n        await handleIframeRedirect(evt.data.redirectUrl);\n      }\n    }\n    // Clean up the iframe from the DOM\n    if (window.document.body.contains(iframe)) {\n      window.document.body.removeChild(iframe);\n    }\n  });\n}\n\n/**\n * This function bubbles up the result of the front-channel interaction with\n * the authorization endpoint to the parent window.\n */\nexport function postRedirectUrlToParent(redirectUrl: string): void {\n  window.top.postMessage(\n    {\n      redirectUrl,\n    },\n    window.location.origin\n  );\n}\n","/*\n * Copyright 2021 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * @hidden\n * @packageDocumentation\n */\n\nimport {\n  IRedirector,\n  IRedirectorOptions,\n} from \"@inrupt/solid-client-authn-core\";\nimport { redirectInIframe } from \"../../iframe\";\n\n/**\n * @hidden\n */\nexport default class Redirector implements IRedirector {\n  redirect(redirectUrl: string, options?: IRedirectorOptions): void {\n    if (options && options.handleRedirect) {\n      options.handleRedirect(redirectUrl);\n    } else if (options && options.redirectByReplacingState) {\n      window.history.replaceState({}, \"\", redirectUrl);\n    } else if (options?.redirectInIframe) {\n      redirectInIframe(redirectUrl);\n    } else {\n      window.location.href = redirectUrl;\n    }\n  }\n}\n","/*\n * Copyright 2021 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * @hidden\n * @packageDocumentation\n */\n\nimport {\n  IStorageUtility,\n  IClientRegistrar,\n  IIssuerConfig,\n  IClient,\n  IClientRegistrarOptions,\n} from \"@inrupt/solid-client-authn-core\";\nimport { registerClient } from \"@inrupt/oidc-client-ext\";\n\n/**\n * @hidden\n */\nexport default class ClientRegistrar implements IClientRegistrar {\n  constructor(private storageUtility: IStorageUtility) {}\n\n  async getClient(\n    options: IClientRegistrarOptions,\n    issuerConfig: IIssuerConfig\n  ): Promise<IClient> {\n    // If client secret and/or client id are stored in storage, use those.\n    const [\n      storedClientId,\n      storedClientSecret,\n      // storedClientName,\n    ] = await Promise.all([\n      this.storageUtility.getForUser(options.sessionId, \"clientId\", {\n        secure: false,\n      }),\n      this.storageUtility.getForUser(options.sessionId, \"clientSecret\", {\n        secure: false,\n      }),\n      // this.storageUtility.getForUser(options.sessionId, \"clientName\", {\n      //   // FIXME: figure out how to persist secure storage at reload\n      //   secure: false,\n      // }),\n    ]);\n    if (storedClientId) {\n      return {\n        clientId: storedClientId,\n        clientSecret: storedClientSecret,\n        clientType: \"dynamic\",\n      };\n    }\n    const extendedOptions = { ...options };\n    // If registration access token is stored, use that.\n    extendedOptions.registrationAccessToken =\n      extendedOptions.registrationAccessToken ??\n      (await this.storageUtility.getForUser(\n        options.sessionId,\n        \"registrationAccessToken\"\n      ));\n\n    try {\n      const registeredClient = await registerClient(\n        extendedOptions,\n        issuerConfig\n      );\n      // Save info\n      const infoToSave: Record<string, string> = {\n        clientId: registeredClient.clientId,\n      };\n      if (registeredClient.clientSecret) {\n        infoToSave.clientSecret = registeredClient.clientSecret;\n      }\n      if (registeredClient.idTokenSignedResponseAlg) {\n        infoToSave.idTokenSignedResponseAlg =\n          registeredClient.idTokenSignedResponseAlg;\n      }\n      await this.storageUtility.setForUser(\n        extendedOptions.sessionId,\n        infoToSave,\n        {\n          // FIXME: figure out how to persist secure storage at reload\n          // Otherwise, the client info cannot be retrieved from storage, and\n          // the lib tries to re-register the client on each fetch\n          secure: false,\n        }\n      );\n      return registeredClient;\n    } catch (error) {\n      throw new Error(`Client registration failed: [${error.toString()}]`);\n    }\n  }\n}\n","/*\n * Copyright 2021 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * @hidden\n * @packageDocumentation\n */\n\nimport {\n  EVENTS,\n  IRedirectHandler,\n  ISessionInfo,\n} from \"@inrupt/solid-client-authn-core\";\nimport type { EventEmitter } from \"events\";\n\nimport { getUnauthenticatedSession } from \"../../../sessionInfo/SessionInfoManager\";\n\n/**\n * This class handles redirect IRIs without any query params, and returns an unauthenticated\n * session. It serves as a fallback so that consuming libraries don't have to test\n * for the query params themselves, and can always try to use them as a redirect IRI.\n * @hidden\n */\nexport class ErrorOidcHandler implements IRedirectHandler {\n  async canHandle(redirectUrl: string): Promise<boolean> {\n    try {\n      // eslint-disable-next-line no-new\n      return new URL(redirectUrl).searchParams.has(\"error\");\n    } catch (e) {\n      throw new Error(\n        `[${redirectUrl}] is not a valid URL, and cannot be used as a redirect URL: ${e.toString()}`\n      );\n    }\n  }\n\n  async handle(\n    redirectUrl: string,\n    eventEmitter?: EventEmitter\n  ): Promise<ISessionInfo & { fetch: typeof fetch }> {\n    if (eventEmitter !== undefined) {\n      const url = new URL(redirectUrl);\n      const errorUrl = url.searchParams.get(\"error\");\n      const errorDescriptionUrl = url.searchParams.get(\"error_description\");\n      eventEmitter.emit(EVENTS.ERROR, errorUrl, errorDescriptionUrl);\n    }\n    return getUnauthenticatedSession();\n  }\n}\n","/*\n * Copyright 2021 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * @hidden\n * @packageDocumentation\n */\n\nimport {\n  IClient,\n  IClientRegistrar,\n  IIssuerConfigFetcher,\n  IStorageUtility,\n  loadOidcContextFromStorage,\n  KeyPair,\n  ITokenRefresher,\n  TokenEndpointResponse,\n  EVENTS,\n} from \"@inrupt/solid-client-authn-core\";\nimport { refresh } from \"@inrupt/oidc-client-ext\";\nimport { EventEmitter } from \"events\";\n\n// Some identifiers are not in camelcase on purpose, as they are named using the\n// official names from the OIDC/OAuth2 specifications.\n/* eslint-disable camelcase */\n\n/**\n * @hidden\n */\nexport default class TokenRefresher implements ITokenRefresher {\n  constructor(\n    private storageUtility: IStorageUtility,\n    private issuerConfigFetcher: IIssuerConfigFetcher,\n    private clientRegistrar: IClientRegistrar\n  ) {}\n\n  async refresh(\n    sessionId: string,\n    refreshToken?: string,\n    dpopKey?: KeyPair,\n    eventEmitter?: EventEmitter\n  ): Promise<TokenEndpointResponse> {\n    const oidcContext = await loadOidcContextFromStorage(\n      sessionId,\n      this.storageUtility,\n      this.issuerConfigFetcher\n    );\n    // This should also retrieve the client from storage\n    const clientInfo: IClient = await this.clientRegistrar.getClient(\n      { sessionId },\n      oidcContext.issuerConfig\n    );\n\n    if (refreshToken === undefined) {\n      // TODO: in a next PR, look up storage for a refresh token\n      throw new Error(\n        `Session [${sessionId}] has no refresh token to allow it to refresh its access token.`\n      );\n    }\n\n    if (oidcContext.dpop && dpopKey === undefined) {\n      throw new Error(\n        `For session [${sessionId}], the key bound to the DPoP access token must be provided to refresh said access token.`\n      );\n    }\n\n    const tokenSet = await refresh(\n      refreshToken,\n      oidcContext.issuerConfig,\n      clientInfo,\n      dpopKey\n    );\n\n    if (tokenSet.refreshToken !== undefined) {\n      eventEmitter?.emit(EVENTS.NEW_REFRESH_TOKEN, tokenSet.refreshToken);\n      await this.storageUtility.setForUser(sessionId, {\n        refreshToken: tokenSet.refreshToken,\n      });\n    }\n    return tokenSet;\n  }\n}\n","/*\n * Copyright 2021 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * @hidden\n * @packageDocumentation\n */\n\n/**\n * Top Level core document. Responsible for setting up the dependency graph\n */\nimport { IStorage, InMemoryStorage } from \"@inrupt/solid-client-authn-core\";\nimport StorageUtilityBrowser from \"./storage/StorageUtility\";\nimport ClientAuthentication from \"./ClientAuthentication\";\nimport OidcLoginHandler from \"./login/oidc/OidcLoginHandler\";\nimport AuthorizationCodeWithPkceOidcHandler from \"./login/oidc/oidcHandlers/AuthorizationCodeWithPkceOidcHandler\";\nimport IssuerConfigFetcher from \"./login/oidc/IssuerConfigFetcher\";\nimport { FallbackRedirectHandler } from \"./login/oidc/redirectHandler/FallbackRedirectHandler\";\nimport GeneralLogoutHandler from \"./logout/GeneralLogoutHandler\";\nimport { SessionInfoManager } from \"./sessionInfo/SessionInfoManager\";\nimport { AuthCodeRedirectHandler } from \"./login/oidc/redirectHandler/AuthCodeRedirectHandler\";\nimport AggregateRedirectHandler from \"./login/oidc/redirectHandler/AggregateRedirectHandler\";\nimport BrowserStorage from \"./storage/BrowserStorage\";\nimport Redirector from \"./login/oidc/Redirector\";\nimport ClientRegistrar from \"./login/oidc/ClientRegistrar\";\nimport { ErrorOidcHandler } from \"./login/oidc/redirectHandler/ErrorOidcHandler\";\nimport TokenRefresher from \"./login/oidc/refresh/TokenRefresher\";\n\n/**\n *\n * @param dependencies\n * @deprecated This function will be removed from the external API in an upcoming release.\n */\nexport function getClientAuthenticationWithDependencies(dependencies: {\n  secureStorage?: IStorage;\n  insecureStorage?: IStorage;\n}): ClientAuthentication {\n  const inMemoryStorage = new InMemoryStorage();\n  const secureStorage = dependencies.secureStorage || inMemoryStorage;\n  const insecureStorage = dependencies.insecureStorage || new BrowserStorage();\n\n  const storageUtility = new StorageUtilityBrowser(\n    secureStorage,\n    insecureStorage\n  );\n\n  const issuerConfigFetcher = new IssuerConfigFetcher(storageUtility);\n  const clientRegistrar = new ClientRegistrar(storageUtility);\n\n  const sessionInfoManager = new SessionInfoManager(storageUtility);\n\n  const tokenRefresher = new TokenRefresher(\n    storageUtility,\n    issuerConfigFetcher,\n    clientRegistrar\n  );\n\n  // make new handler for redirect and login\n  const loginHandler = new OidcLoginHandler(\n    storageUtility,\n    new AuthorizationCodeWithPkceOidcHandler(storageUtility, new Redirector()),\n    issuerConfigFetcher,\n    clientRegistrar\n  );\n\n  const redirectHandler = new AggregateRedirectHandler([\n    new ErrorOidcHandler(),\n    new AuthCodeRedirectHandler(\n      storageUtility,\n      sessionInfoManager,\n      issuerConfigFetcher,\n      clientRegistrar,\n      tokenRefresher\n    ),\n    // This catch-all class will always be able to handle the\n    // redirect IRI, so it must be registered last.\n    new FallbackRedirectHandler(),\n  ]);\n\n  return new ClientAuthentication(\n    loginHandler,\n    redirectHandler,\n    new GeneralLogoutHandler(sessionInfoManager),\n    sessionInfoManager,\n    issuerConfigFetcher\n  );\n}\n","/*\n * Copyright 2021 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * @hidden\n */\nimport { EventEmitter } from \"events\";\nimport {\n  EVENTS,\n  ILoginInputOptions,\n  ISessionInfo,\n  IStorage,\n  ResourceServerSession,\n} from \"@inrupt/solid-client-authn-core\";\nimport { v4 } from \"uuid\";\nimport ClientAuthentication from \"./ClientAuthentication\";\nimport { getClientAuthenticationWithDependencies } from \"./dependencies\";\nimport { KEY_CURRENT_SESSION, KEY_CURRENT_URL } from \"./constant\";\nimport { postRedirectUrlToParent, setupIframeListener } from \"./iframe\";\n\nexport interface ISessionOptions {\n  /**\n   * A private storage, unreachable to other scripts on the page. Typically in-memory.\n   */\n  secureStorage: IStorage;\n  /**\n   * A storage where non-sensitive information may be stored, potentially longer-lived than the secure storage.\n   */\n  insecureStorage: IStorage;\n  /**\n   * Details about the current session\n   */\n  sessionInfo: ISessionInfo;\n  /**\n   * An instance of the library core. Typically obtained using `getClientAuthenticationWithDependencies`.\n   */\n  clientAuthentication: ClientAuthentication;\n}\n\nexport interface IHandleIncomingRedirectOptions {\n  /**\n   * If the user has signed in before, setting this to `true` will automatically\n   * redirect them to their Solid Identity Provider, which will then attempt to\n   * re-activate the session and send the user back to your app without\n   * requiring user interaction.\n   * If your app's access has not expired yet and re-activation completed\n   * successfully, a `sessionRestore` event will be fired with the URL the user\n   * was at before they were redirected to their Solid Identity Provider.\n   * {@see onSessionRestore}\n   */\n  restorePreviousSession?: boolean;\n\n  /**\n   * Inrupt's Enterprise Solid Server can set a cookie to allow the browser to\n   * access private resources on a Pod. In order to mitigate the logout-on-refresh\n   * issue on the short term, the server also implemented a session endpoint\n   * enabling the client app to know whether the cookie is set. When a user\n   * logs in to a server that has that capability enabled, applications that set\n   * this option to `true` will be able to make use of it.\n   *\n   * If your app supports the newest session restore approach, and `restorePreviousSession`\n   * is set to true, this option is automatically set to false, but your app will\n   * not be logged out when reloaded.\n   *\n   * `useEssSession` defaults to false and will be removed in the future; to\n   * preserve sessions across page reloads, use of `restorePreviousSession` is\n   * recommended.\n   */\n  useEssSession?: boolean;\n  /**\n   * The URL of the page handling the redirect, including the query\n   * parameters — these contain the information to process the login.\n   * Note: as a convenience, if no URL value is specified here, we default to\n   * using the browser's current location.\n   */\n  url?: string;\n}\n\nexport async function silentlyAuthenticate(\n  sessionId: string,\n  clientAuthn: ClientAuthentication,\n  options: {\n    inIframe?: boolean;\n  } = {\n    inIframe: false,\n  },\n  session: Session\n): Promise<boolean> {\n  // Check if we have an ID Token in storage - if we do then we may be\n  // currently logged in, and the user has refreshed their browser page. The ID\n  // token is validated, and on success the current session information are returned,\n  // now that we know they have not been tampered with.\n  const storedSessionInfo = await clientAuthn.validateCurrentSession();\n  if (storedSessionInfo !== null) {\n    // It can be really useful to save the user's current browser location,\n    // so that we can restore it after completing the silent authentication\n    // on incoming redirect. This way, the user is eventually redirected back\n    // to the page they were on and not to the app's redirect page.\n    window.localStorage.setItem(KEY_CURRENT_URL, window.location.href);\n    await clientAuthn.login(\n      {\n        sessionId,\n        prompt: \"none\",\n        oidcIssuer: storedSessionInfo.issuer,\n        redirectUrl: storedSessionInfo.redirectUrl,\n        clientId: storedSessionInfo.clientAppId,\n        clientSecret: storedSessionInfo.clientAppSecret,\n        tokenType: storedSessionInfo.tokenType ?? \"DPoP\",\n        inIframe: options.inIframe,\n      },\n      session\n    );\n    return true;\n  }\n  return false;\n}\n\nfunction isLoggedIn(\n  sessionInfo?: ISessionInfo\n): sessionInfo is ISessionInfo & { isLoggedIn: true } {\n  return !!sessionInfo?.isLoggedIn;\n}\n\n/**\n * A {@link Session} object represents a user's session on an application. The session holds state, as it stores information enabling acces to private resources after login for instance.\n */\nexport class Session extends EventEmitter {\n  /**\n   * Information regarding the current session.\n   */\n  public readonly info: ISessionInfo;\n\n  private clientAuthentication: ClientAuthentication;\n\n  private tokenRequestInProgress = false;\n\n  // Remove this when removing the `useEssSession` workaround:\n  private tmpFetchWithCookies = false;\n\n  /**\n   * Session object constructor. Typically called as follows:\n   *\n   * ```typescript\n   * const session = new Session();\n   * ```\n   *\n   * See also [getDefaultSession](https://docs.inrupt.com/developer-tools/api/javascript/solid-client-authn-browser/functions.html#getdefaultsession).\n   *\n   * @param sessionOptions The options enabling the correct instantiation of\n   * the session. Either both storages or clientAuthentication are required. For\n   * more information, see {@link ISessionOptions}.\n   * @param sessionId A string uniquely identifying the session.\n   *\n   */\n  constructor(\n    sessionOptions: Partial<ISessionOptions> = {},\n    sessionId?: string\n  ) {\n    super();\n\n    if (sessionOptions.clientAuthentication) {\n      this.clientAuthentication = sessionOptions.clientAuthentication;\n    } else if (sessionOptions.secureStorage && sessionOptions.insecureStorage) {\n      this.clientAuthentication = getClientAuthenticationWithDependencies({\n        secureStorage: sessionOptions.secureStorage,\n        insecureStorage: sessionOptions.insecureStorage,\n      });\n    } else {\n      this.clientAuthentication = getClientAuthenticationWithDependencies({});\n    }\n\n    if (sessionOptions.sessionInfo) {\n      this.info = {\n        sessionId: sessionOptions.sessionInfo.sessionId,\n        isLoggedIn: false,\n        webId: sessionOptions.sessionInfo.webId,\n      };\n    } else {\n      this.info = {\n        sessionId: sessionId ?? v4(),\n        isLoggedIn: false,\n      };\n    }\n\n    // Listen for messages from children iframes.\n    setupIframeListener(async (redirectUrl: string) => {\n      const sessionInfo =\n        await this.clientAuthentication.handleIncomingRedirect(\n          redirectUrl,\n          this\n        );\n\n      // If silent authentication was not successful, do nothing;\n      // the existing session might still be valid for a while,\n      // and will expire by itself.\n      if (!isLoggedIn(sessionInfo)) {\n        return;\n      }\n      // After having revalidated the session,\n      // make sure to apply the new expiration time:\n      this.setSessionInfo(sessionInfo);\n    });\n    // Listen for the 'tokenRenewal' signal to trigger the silent token renewal.\n    this.on(\"tokenRenewal\", () =>\n      silentlyAuthenticate(\n        this.info.sessionId,\n        this.clientAuthentication,\n        {\n          inIframe: true,\n        },\n        this\n      )\n    );\n  }\n\n  /**\n   * Triggers the login process. Note that this method will redirect the user away from your app.\n   *\n   * @param options Parameter to customize the login behaviour. In particular, two options are mandatory: `options.oidcIssuer`, the user's identity provider, and `options.redirectUrl`, the URL to which the user will be redirected after logging in their identity provider.\n   * @returns This method should redirect the user away from the app: it does not return anything. The login process is completed by {@linkcode handleIncomingRedirect}.\n   */\n  // Define these functions as properties so that they don't get accidentally re-bound.\n  // Isn't Javascript fun?\n  login = async (options: ILoginInputOptions): Promise<void> => {\n    await this.clientAuthentication.login(\n      {\n        sessionId: this.info.sessionId,\n        ...options,\n        // Defaults the token type to DPoP\n        tokenType: options.tokenType ?? \"DPoP\",\n      },\n      this\n    );\n    // `login` redirects the user away from the app,\n    // so unless it throws an error, there is no code that should run afterwards\n    // (since there is no \"after\" in the lifetime of the script).\n    // Hence, this Promise never resolves:\n    return new Promise(() => undefined);\n  };\n\n  /**\n   * Fetches data using available login information. If the user is not logged in, this will behave as a regular `fetch`. The signature of this method is identical to the [canonical `fetch`](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API).\n   *\n   * @param url The URL from which data should be fetched.\n   * @param init Optional parameters customizing the request, by specifying an HTTP method, headers, a body, etc. Follows the [WHATWG Fetch Standard](https://fetch.spec.whatwg.org/).\n   */\n  fetch = async (url: RequestInfo, init?: RequestInit): Promise<Response> => {\n    return this.clientAuthentication.fetch(url, {\n      ...init,\n      credentials: this.tmpFetchWithCookies\n        ? /* istanbul ignore next Simulating a cookie-enabled session in tests is too much work for a temporary, disabled-by-default workaround: */\n          \"include\"\n        : /* istanbul ignore next Simulating a cookie-enabled session in tests is too much work for a temporary, disabled-by-default workaround: */\n          init?.credentials,\n    });\n  };\n\n  /**\n   * Logs the user out of the application. This does not log the user out of their Solid identity provider, and should not redirect the user away.\n   */\n  logout = async (): Promise<void> => {\n    await this.clientAuthentication.logout(this.info.sessionId);\n    this.info.isLoggedIn = false;\n    this.tmpFetchWithCookies = false;\n    this.emit(\"logout\");\n  };\n\n  /**\n   * Completes the login process by processing the information provided by the\n   * Solid identity provider through redirect.\n   *\n   * @param options See {@see IHandleIncomingRedirectOptions}.\n   */\n  handleIncomingRedirect = async (\n    inputOptions: string | IHandleIncomingRedirectOptions = {}\n  ): Promise<ISessionInfo | undefined> => {\n    if (this.info.isLoggedIn) {\n      return this.info;\n    }\n\n    if (this.tokenRequestInProgress) {\n      return undefined;\n    }\n    const options =\n      typeof inputOptions === \"string\" ? { url: inputOptions } : inputOptions;\n    const url = options.url ?? window.location.href;\n\n    if (window.frameElement !== null) {\n      // This is being loaded from an iframe, so send the redirect\n      // URL to the parent window on the same origin.\n      postRedirectUrlToParent(url);\n      return undefined;\n    }\n\n    // Unfortunately, regular sessions are lost when the user refreshes the page or opens a new tab.\n    // While we're figuring out the API for a longer-term solution, as a temporary workaround some\n    // *resource* servers set a cookie that keeps the user logged in after authenticated requests,\n    // and expose the fact that they set it on a special endpoint.\n    // After login, we store that fact in LocalStorage. This means that we can now look for that\n    // data, and if present, indicate that the user is already logged in.\n    // Note that there are a lot of edge cases that won't work well with this approach, so it willl\n    // be removed in due time, and is disabled by default.\n    if (\n      options.useEssSession !== true ||\n      options.restorePreviousSession === true\n    ) {\n      window.localStorage.setItem(\n        \"tmp-resource-server-session-enabled\",\n        \"false\"\n      );\n    } else {\n      window.localStorage.setItem(\n        \"tmp-resource-server-session-enabled\",\n        \"true\"\n      );\n    }\n    const storedSessionCookieReference = window.localStorage.getItem(\n      \"tmp-resource-server-session-info\"\n    );\n    if (\n      typeof storedSessionCookieReference === \"string\" &&\n      options.restorePreviousSession !== true &&\n      options.useEssSession === true\n    ) {\n      // TOOD: Re-use the type used when writing this data:\n      // https://github.com/inrupt/solid-client-authn-js/pull/920/files#diff-659ac87dfd3711f4cfcea3c7bf6970980f4740fd59df45f04c7977bffaa23e98R118\n      // To keep temporary code together\n      // eslint-disable-next-line no-inner-declarations\n      function isValidSessionCookieReference(\n        reference: Record<string, unknown>\n      ): reference is ResourceServerSession {\n        const resourceServers = Object.keys(\n          (reference as ResourceServerSession).sessions ?? {}\n        );\n        return (\n          typeof (reference as ResourceServerSession).webId === \"string\" &&\n          resourceServers.length > 0 &&\n          typeof (reference as ResourceServerSession).sessions[\n            resourceServers[0]\n          ].expiration === \"number\"\n        );\n      }\n      const reference = JSON.parse(storedSessionCookieReference);\n      if (isValidSessionCookieReference(reference)) {\n        const resourceServers = Object.keys(reference.sessions);\n        const webIdOrigin = new URL(reference.webId).hostname;\n        const ownResourceServer = resourceServers.find((resourceServer) => {\n          return new URL(resourceServer).hostname === webIdOrigin;\n        });\n        // Usually the user's WebID is also a Resource server for them,\n        // so we pick the expiration time for that. If it doesn't exist,\n        // we just pick the first (and probably only) one:\n        const relevantServer = ownResourceServer ?? resourceServers[0];\n        // If the cookie is valid for fewer than five minutes,\n        // pretend it's not valid anymore already, to avoid small misalignments\n        // resulting in invalid states:\n        if (\n          reference.sessions[relevantServer].expiration - Date.now() >\n          5 * 60 * 1000\n        ) {\n          this.info.isLoggedIn = true;\n          this.info.webId = reference.webId;\n          this.tmpFetchWithCookies = true;\n          return this.info;\n        }\n      }\n    }\n    // end of temporary workaround.\n\n    this.tokenRequestInProgress = true;\n    const sessionInfo = await this.clientAuthentication.handleIncomingRedirect(\n      url,\n      this\n    );\n    if (isLoggedIn(sessionInfo)) {\n      this.setSessionInfo(sessionInfo);\n      const currentUrl = window.localStorage.getItem(KEY_CURRENT_URL);\n      if (currentUrl === null) {\n        // The login event can only be triggered **after** the user has been\n        // redirected from the IdP with access and ID tokens.\n        this.emit(\"login\");\n      } else {\n        // If an URL is stored in local storage, we are being logged in after a\n        // silent authentication, so remove our currently stored URL location\n        // to clean up our state now that we are completing the re-login process.\n        window.localStorage.removeItem(KEY_CURRENT_URL);\n        this.emit(\"sessionRestore\", currentUrl);\n      }\n    } else if (options.restorePreviousSession === true) {\n      // Silent authentication happens after a refresh, which means there are no\n      // OAuth params in the current location IRI. It can only succeed if a session\n      // was previously logged in, in which case its ID will be present with a known\n      // identifier in local storage.\n      // Check if we have a locally stored session ID...\n      const storedSessionId = window.localStorage.getItem(KEY_CURRENT_SESSION);\n      // ...if not, then there is no ID token, and so silent authentication cannot happen, but\n      // if we do have a stored session ID, attempt to re-authenticate now silently.\n      if (storedSessionId !== null) {\n        // TODO: iframe-based authentication being still experimental, it is disabled\n        // by default here. When it settles down, the following could be set to true,\n        // in which case the unresolving promise afterwards would need to be changed.\n        const attemptedSilentAuthentication = await silentlyAuthenticate(\n          storedSessionId,\n          this.clientAuthentication,\n          undefined,\n          this\n        );\n        // At this point, we know that the main window will imminently be redirected.\n        // However, this redirect is asynchronous and there is no way to halt execution\n        // until it happens precisely. That's why the current Promise simply does not\n        // resolve.\n        if (attemptedSilentAuthentication) {\n          return new Promise(() => {});\n        }\n      }\n    }\n    this.tokenRequestInProgress = false;\n    return sessionInfo;\n  };\n\n  /**\n   * Register a callback function to be called when a user completes login.\n   *\n   * The callback is called when {@link handleIncomingRedirect} completes successfully.\n   *\n   * @param callback The function called when a user completes login.\n   */\n  onLogin(callback: () => unknown): void {\n    this.on(\"login\", callback);\n  }\n\n  /**\n   * Register a callback function to be called when a user logs out:\n   *\n   * @param callback The function called when a user completes logout.\n   */\n  onLogout(callback: () => unknown): void {\n    this.on(\"logout\", callback);\n  }\n\n  /**\n   * Register a callback function to be called when a user logs out:\n   *\n   * @param callback The function called when an error occurs.\n   * @since 1.11.0\n   */\n  onError(\n    callback: (\n      error: string | null,\n      errorDescription?: string | null\n    ) => unknown\n  ): void {\n    this.on(EVENTS.ERROR, callback);\n  }\n\n  /**\n   * Register a callback function to be called when a session is restored.\n   *\n   * Note: the callback will be called with the saved value of the 'current URL'\n   * at the time the session was restored.\n   *\n   * @param callback The function called when a user's already logged-in session is restored, e.g., after a silent authentication is completed after a page refresh.\n   */\n  onSessionRestore(callback: (currentUrl: string) => unknown): void {\n    this.on(\"sessionRestore\", callback);\n  }\n\n  /**\n   * Register a callback that runs when the session expires and can no longer\n   * make authenticated requests, but following a user logout.\n   * @param callback The function that runs on session expiration.\n   * @since 1.11.0\n   */\n  onSessionExpiration(callback: () => unknown): void {\n    this.on(EVENTS.SESSION_EXPIRED, callback);\n  }\n\n  private setSessionInfo(\n    sessionInfo: ISessionInfo & { isLoggedIn: true }\n  ): void {\n    this.info.isLoggedIn = sessionInfo.isLoggedIn;\n    this.info.webId = sessionInfo.webId;\n    this.info.sessionId = sessionInfo.sessionId;\n    this.info.expirationDate = sessionInfo.expirationDate;\n    this.on(EVENTS.SESSION_EXTENDED, (expiresIn: number) => {\n      this.info.expirationDate = Date.now() + expiresIn * 1000;\n    });\n  }\n}\n","/*\n * Copyright 2021 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { Session } from \"./Session\";\n\nlet defaultSession: Session;\n\n/**\n * Obtain the {@link Session} used when not explicitly instantiating one yourself.\n *\n * When using the top-level exports {@link fetch}, {@link login}, {@link logout},\n * {@link handleIncomingRedirect}, {@link onLogin} and {@link onLogout}, these apply to an\n * implicitly-instantiated {@link Session}.\n * This function returns a reference to that Session in order to obtain e.g. the current user's\n * WebID.\n * @since 1.3.0\n */\nexport function getDefaultSession(): Session {\n  if (typeof defaultSession === \"undefined\") {\n    defaultSession = new Session();\n  }\n  return defaultSession;\n}\n\n/**\n * This function's signature is equal to `window.fetch`, but if the current user is authenticated\n * (see [[login]] and [[handleIncomingRedirect]]), requests made using it will include that user's\n * credentials. If not, this will behave just like the regular `window.fetch`.\n *\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch}\n * @since 1.3.0\n */\nexport const fetch: Session[\"fetch\"] = (...args) => {\n  const session = getDefaultSession();\n  return session.fetch(...args);\n};\n\n/**\n * Triggers the login process. Note that this method will redirect the user away from your app.\n *\n * @param options Parameter to customize the login behaviour. In particular, two options are mandatory: `options.oidcIssuer`, the user's identity provider, and `options.redirectUrl`, the URL to which the user will be redirected after logging in their identity provider.\n * @returns This method should redirect the user away from the app: it does not return anything. The login process is completed by [[handleIncomingRedirect]].\n * @since 1.3.0\n */\nexport const login: Session[\"login\"] = (...args) => {\n  const session = getDefaultSession();\n  return session.login(...args);\n};\n\n/**\n * Logs the user out of the application. This does not log the user out of their\n * Solid identity provider, and should not redirect the user away.\n *\n * @since 1.3.0\n */\nexport const logout: Session[\"logout\"] = (...args) => {\n  const session = getDefaultSession();\n  return session.logout(...args);\n};\n\n/**\n * Completes the login process by processing the information provided by the Solid identity provider through redirect.\n *\n * @param url The URL of the page handling the redirect, including the query parameters — these contain the information to process the login.\n * @since 1.3.0\n */\nexport const handleIncomingRedirect: Session[\"handleIncomingRedirect\"] = (\n  ...args\n) => {\n  const session = getDefaultSession();\n  return session.handleIncomingRedirect(...args);\n};\n\n/**\n * Register a callback function to be called when a user completes login.\n *\n * The callback is called when {@link handleIncomingRedirect} completes successfully.\n * @since 1.3.0\n *\n * @param callback The function called when a user completes login.\n */\nexport const onLogin: Session[\"onLogin\"] = (...args) => {\n  const session = getDefaultSession();\n  return session.onLogin(...args);\n};\n\n/**\n * Register a callback function to be called when a user logs out:\n *\n * @param callback The function called when a user completes logout.\n * @since 1.3.0\n */\nexport const onLogout: Session[\"onLogout\"] = (...args) => {\n  const session = getDefaultSession();\n  return session.onLogout(...args);\n};\n\n/**\n * Register a callback function to be called when a session is restored:\n *\n * @param callback The function called when a session is restored.\n * @since 1.3.0\n */\nexport const onSessionRestore: Session[\"onSessionRestore\"] = (...args) => {\n  const session = getDefaultSession();\n  return session.onSessionRestore(...args);\n};\n","import {\r\n  getSolidDataset,\r\n  overwriteFile,\r\n  getFile,\r\n} from \"@inrupt/solid-client\";\r\nimport { Session } from \"@inrupt/solid-client-authn-browser\";\r\nimport { deleteFile } from \"@inrupt/solid-client\";\r\n\r\nconst SOLID_IDENTITY_PROVIDER = \"https://solidcommunity.net\";\r\ndocument.getElementById(\r\n  \"solid_identity_provider\"\r\n).innerHTML = `[<a target=\"_blank\" href=\"${SOLID_IDENTITY_PROVIDER}\">${SOLID_IDENTITY_PROVIDER}</a>]`;\r\n\r\n\r\n\r\nconst session = new Session();\r\n\r\nconst buttonLogin = document.getElementById(\"loginButton\");\r\nconst writeForm = document.getElementById(\"writeForm\");\r\nconst readForm = document.getElementById(\"readForm\");\r\nconst deleteForm = document.getElementById(\"deleteForm\");\r\n\r\n// login functionality\r\nasync function login() {\r\n  if (!session.info.isLoggedIn) {\r\n    await session.login({\r\n      oidcIssuer: SOLID_IDENTITY_PROVIDER,\r\n      clientName: \"Basic implementation\",\r\n      redirectUrl: window.location.href\r\n    });\r\n  }\r\n}\r\n\r\n//  Login Redirect\r\nasync function handleRedirectAfterLogin() {\r\n  await session.handleIncomingRedirect(window.location.href);\r\n  if (session.info.isLoggedIn) {\r\n\r\n    document.getElementById(\r\n      \"labelStatus\"\r\n    ).innerHTML = `Your session is logged in with the WebID [<a target=\"_blank\" href=\"${session.info.webId}\">${session.info.webId}</a>].`;\r\n    document.getElementById(\"labelStatus\").setAttribute(\"role\", \"alert\");\r\n   \r\n  }\r\n}\r\n\r\nhandleRedirectAfterLogin();\r\n\r\n// creating a note\r\nasync function createNote() {\r\n  //getting content from the input text field\r\n  const name = document.getElementById(\"noteText\").value;\r\n  //getting content from the note title field\r\n  const noteTitle = document.getElementById(\"note_title\").value;\r\n  //check if user is authenticated\r\n  if (!session.info.isLoggedIn) {\r\n    document.getElementById(\"statusUpd\").textContent = `you need to login to create a note`;\r\n    return;\r\n  }\r\n  //getting current user's webid as a string\r\n  const webID = session.info.webId;\r\n  const profileDocumentUrl = new URL(webID);\r\n  profileDocumentUrl.hash = \"\";\r\n  const currentUser = profileDocumentUrl.host;\r\n\r\n  //appending path where the notes will be stored\r\n  const loc = currentUser + '/public/testfolder/';\r\n  // fetch \r\n  let myProfileDataset = await getSolidDataset(profileDocumentUrl.href, {\r\n    fetch: session.fetch\r\n  });\r\n  //creating full note path\r\n  const fileName = noteTitle + '.txt';\r\n  const finalPath = 'https://' + loc + fileName;\r\n  // creating a note\r\n     const savedFile = await overwriteFile(\r\n    finalPath,\r\n    new Blob([name], { type: \"plain/text\" }),\r\n    { contentType: \"text/plain\", fetch: session.fetch }\r\n  );\r\n  document.getElementById(  \r\n    \"statusUpd\"\r\n  ).textContent = `note was successfuly created`;\r\n}\r\n\r\nasync function readProfile() {\r\n\r\n  if (!session.info.isLoggedIn) {\r\n    document.getElementById(\"statusUpd\").textContent = `you need to login to read a note`;\r\n    return;\r\n  }\r\n  //getting current user's webid as a string\r\n  const fileName = document.getElementById(\"readId\").value;\r\n  const webID = session.info.webId;\r\n  const profileDocumentUrl = new URL(webID);\r\n  profileDocumentUrl.hash = \"\";\r\n  const currentUser = profileDocumentUrl.host;\r\n  //creating full note path\r\n  const finalUrl = 'https://'+ currentUser +'/public/testfolder/' + fileName + '.txt';\r\n  //accessing the note\r\n  const fileBlob = await getFile(finalUrl, { fetch: session.fetch }).catch((error) => {\r\n    document.getElementById(\r\n      \"statusUpd\"\r\n    ).textContent = `the file you want to read does not exist`;\r\n  });  \r\n \r\nconst text = await new Response(fileBlob).text();\r\n \r\ndocument.getElementById(\"output\").innerHTML = text;\r\n \r\n}\r\nfunction delFile(){\r\n  if (!session.info.isLoggedIn) {\r\n    document.getElementById(\"statusUpd\").textContent = `you need to login to delete note`;\r\n    return;\r\n  }\r\n  //getting current user's webid as a string\r\n  const toDel = document.getElementById(\"deleteInput\").value;\r\n  const webID = session.info.webId;\r\n   const profileDocumentUrl = new URL(webID);\r\n  profileDocumentUrl.hash = \"\";\r\n  const currentUser = profileDocumentUrl.host;\r\n\r\n  //appending path where the notes will be stored\r\n  const loc = currentUser + '/public/testfolder/';\r\n  const toDelUpd = 'https://'+loc +toDel+'.txt';\r\n  \r\n  \r\n  \r\n     deleteFile(\r\n      toDelUpd,  \r\n      { fetch: session.fetch } \r\n                              \r\n    ).catch((error) => {\r\n      document.getElementById(\r\n        \"statusUpd\"\r\n      ).textContent = `entered file does not exist`;\r\n    })\r\n}\r\nbuttonLogin.onclick = function () {\r\n  login();\r\n};\r\n\r\nwriteForm.addEventListener(\"submit\", (event) => {\r\n  event.preventDefault();\r\n  createNote();\r\n});\r\n\r\nreadForm.addEventListener(\"submit\", (event) => {\r\n  event.preventDefault();\r\n  readProfile();\r\n});\r\ndeleteForm.addEventListener(\"submit\", (event) => {\r\n  event.preventDefault();\r\n  delFile();\r\n});","module.exports = function loadJSBundle(bundle) {\n  return new Promise(function (resolve, reject) {\n    var script = document.createElement('script');\n    script.async = true;\n    script.type = 'text/javascript';\n    script.charset = 'utf-8';\n    script.src = bundle;\n    script.onerror = function (e) {\n      script.onerror = script.onload = null;\n      reject(e);\n    };\n\n    script.onload = function () {\n      script.onerror = script.onload = null;\n      resolve();\n    };\n\n    document.getElementsByTagName('head')[0].appendChild(script);\n  });\n};\n"]}